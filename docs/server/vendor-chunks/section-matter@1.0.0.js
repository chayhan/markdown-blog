"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/section-matter@1.0.0";
exports.ids = ["vendor-chunks/section-matter@1.0.0"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/section-matter@1.0.0/node_modules/section-matter/index.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/section-matter@1.0.0/node_modules/section-matter/index.js ***!
  \**************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar typeOf = __webpack_require__(/*! kind-of */ \"(rsc)/./node_modules/.pnpm/kind-of@6.0.3/node_modules/kind-of/index.js\");\nvar extend = __webpack_require__(/*! extend-shallow */ \"(rsc)/./node_modules/.pnpm/extend-shallow@2.0.1/node_modules/extend-shallow/index.js\");\n/**\n * Parse sections in `input` with the given `options`.\n *\n * ```js\n * var sections = require('{%= name %}');\n * var result = sections(input, options);\n * // { content: 'Content before sections', sections: [] }\n * ```\n * @param {String|Buffer|Object} `input` If input is an object, it's `content` property must be a string or buffer.\n * @param {Object} options\n * @return {Object} Returns an object with a `content` string and an array of `sections` objects.\n * @api public\n */ module.exports = function(input, options) {\n    if (typeof options === \"function\") {\n        options = {\n            parse: options\n        };\n    }\n    var file = toObject(input);\n    var defaults = {\n        section_delimiter: \"---\",\n        parse: identity\n    };\n    var opts = extend({}, defaults, options);\n    var delim = opts.section_delimiter;\n    var lines = file.content.split(/\\r?\\n/);\n    var sections = null;\n    var section = createSection();\n    var content = [];\n    var stack = [];\n    function initSections(val) {\n        file.content = val;\n        sections = [];\n        content = [];\n    }\n    function closeSection(val) {\n        if (stack.length) {\n            section.key = getKey(stack[0], delim);\n            section.content = val;\n            opts.parse(section, sections);\n            sections.push(section);\n            section = createSection();\n            content = [];\n            stack = [];\n        }\n    }\n    for(var i = 0; i < lines.length; i++){\n        var line = lines[i];\n        var len = stack.length;\n        var ln = line.trim();\n        if (isDelimiter(ln, delim)) {\n            if (ln.length === 3 && i !== 0) {\n                if (len === 0 || len === 2) {\n                    content.push(line);\n                    continue;\n                }\n                stack.push(ln);\n                section.data = content.join(\"\\n\");\n                content = [];\n                continue;\n            }\n            if (sections === null) {\n                initSections(content.join(\"\\n\"));\n            }\n            if (len === 2) {\n                closeSection(content.join(\"\\n\"));\n            }\n            stack.push(ln);\n            continue;\n        }\n        content.push(line);\n    }\n    if (sections === null) {\n        initSections(content.join(\"\\n\"));\n    } else {\n        closeSection(content.join(\"\\n\"));\n    }\n    file.sections = sections;\n    return file;\n};\nfunction isDelimiter(line, delim) {\n    if (line.slice(0, delim.length) !== delim) {\n        return false;\n    }\n    if (line.charAt(delim.length + 1) === delim.slice(-1)) {\n        return false;\n    }\n    return true;\n}\nfunction toObject(input) {\n    if (typeOf(input) !== \"object\") {\n        input = {\n            content: input\n        };\n    }\n    if (typeof input.content !== \"string\" && !isBuffer(input.content)) {\n        throw new TypeError(\"expected a buffer or string\");\n    }\n    input.content = input.content.toString();\n    input.sections = [];\n    return input;\n}\nfunction getKey(val, delim) {\n    return val ? val.slice(delim.length).trim() : \"\";\n}\nfunction createSection() {\n    return {\n        key: \"\",\n        data: \"\",\n        content: \"\"\n    };\n}\nfunction identity(val) {\n    return val;\n}\nfunction isBuffer(val) {\n    if (val && val.constructor && typeof val.constructor.isBuffer === \"function\") {\n        return val.constructor.isBuffer(val);\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/section-matter@1.0.0/node_modules/section-matter/index.js\n");

/***/ })

};
;