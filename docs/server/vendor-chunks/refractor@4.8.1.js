"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/refractor@4.8.1";
exports.ids = ["vendor-chunks/refractor@4.8.1"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abap.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abap.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ abap)\n/* harmony export */ });\n// @ts-nocheck\nabap.displayName = \"abap\";\nabap.aliases = [];\n/** @type {import('../core.js').Syntax} */ function abap(Prism) {\n    Prism.languages.abap = {\n        comment: /^\\*.*/m,\n        string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        \"string-template\": {\n            pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/ \"eol-comment\": {\n            pattern: /(^|\\s)\".*/m,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        keyword: {\n            pattern: /(\\s|\\.|^)(?:\\*-INPUT|\\?TO|ABAP-SOURCE|ABBREVIATED|ABS|ABSTRACT|ACCEPT|ACCEPTING|ACCESSPOLICY|ACCORDING|ACOS|ACTIVATION|ACTUAL|ADD|ADD-CORRESPONDING|ADJACENT|AFTER|ALIAS|ALIASES|ALIGN|ALL|ALLOCATE|ALPHA|ANALYSIS|ANALYZER|AND|ANY|APPEND|APPENDAGE|APPENDING|APPLICATION|ARCHIVE|AREA|ARITHMETIC|AS|ASCENDING|ASIN|ASPECT|ASSERT|ASSIGN|ASSIGNED|ASSIGNING|ASSOCIATION|ASYNCHRONOUS|AT|ATAN|ATTRIBUTES|AUTHORITY|AUTHORITY-CHECK|AVG|BACK|BACKGROUND|BACKUP|BACKWARD|BADI|BASE|BEFORE|BEGIN|BETWEEN|BIG|BINARY|BINDING|BIT|BIT-AND|BIT-NOT|BIT-OR|BIT-XOR|BLACK|BLANK|BLANKS|BLOB|BLOCK|BLOCKS|BLUE|BOUND|BOUNDARIES|BOUNDS|BOXED|BREAK-POINT|BT|BUFFER|BY|BYPASSING|BYTE|BYTE-CA|BYTE-CN|BYTE-CO|BYTE-CS|BYTE-NA|BYTE-NS|BYTE-ORDER|C|CA|CALL|CALLING|CASE|CAST|CASTING|CATCH|CEIL|CENTER|CENTERED|CHAIN|CHAIN-INPUT|CHAIN-REQUEST|CHANGE|CHANGING|CHANNELS|CHAR-TO-HEX|CHARACTER|CHARLEN|CHECK|CHECKBOX|CIRCULAR|CI_|CLASS|CLASS-CODING|CLASS-DATA|CLASS-EVENTS|CLASS-METHODS|CLASS-POOL|CLEANUP|CLEAR|CLIENT|CLOB|CLOCK|CLOSE|CN|CNT|CO|COALESCE|CODE|CODING|COLLECT|COLOR|COLUMN|COLUMNS|COL_BACKGROUND|COL_GROUP|COL_HEADING|COL_KEY|COL_NEGATIVE|COL_NORMAL|COL_POSITIVE|COL_TOTAL|COMMENT|COMMENTS|COMMIT|COMMON|COMMUNICATION|COMPARING|COMPONENT|COMPONENTS|COMPRESSION|COMPUTE|CONCAT|CONCATENATE|COND|CONDENSE|CONDITION|CONNECT|CONNECTION|CONSTANTS|CONTEXT|CONTEXTS|CONTINUE|CONTROL|CONTROLS|CONV|CONVERSION|CONVERT|COPIES|COPY|CORRESPONDING|COS|COSH|COUNT|COUNTRY|COVER|CP|CPI|CREATE|CREATING|CRITICAL|CS|CURRENCY|CURRENCY_CONVERSION|CURRENT|CURSOR|CURSOR-SELECTION|CUSTOMER|CUSTOMER-FUNCTION|DANGEROUS|DATA|DATABASE|DATAINFO|DATASET|DATE|DAYLIGHT|DBMAXLEN|DD\\/MM\\/YY|DD\\/MM\\/YYYY|DDMMYY|DEALLOCATE|DECIMALS|DECIMAL_SHIFT|DECLARATIONS|DEEP|DEFAULT|DEFERRED|DEFINE|DEFINING|DEFINITION|DELETE|DELETING|DEMAND|DEPARTMENT|DESCENDING|DESCRIBE|DESTINATION|DETAIL|DIALOG|DIRECTORY|DISCONNECT|DISPLAY|DISPLAY-MODE|DISTANCE|DISTINCT|DIV|DIVIDE|DIVIDE-CORRESPONDING|DIVISION|DO|DUMMY|DUPLICATE|DUPLICATES|DURATION|DURING|DYNAMIC|DYNPRO|E|EACH|EDIT|EDITOR-CALL|ELSE|ELSEIF|EMPTY|ENABLED|ENABLING|ENCODING|END|END-ENHANCEMENT-SECTION|END-LINES|END-OF-DEFINITION|END-OF-FILE|END-OF-PAGE|END-OF-SELECTION|ENDAT|ENDCASE|ENDCATCH|ENDCHAIN|ENDCLASS|ENDDO|ENDENHANCEMENT|ENDEXEC|ENDFOR|ENDFORM|ENDFUNCTION|ENDIAN|ENDIF|ENDING|ENDINTERFACE|ENDLOOP|ENDMETHOD|ENDMODULE|ENDON|ENDPROVIDE|ENDSELECT|ENDTRY|ENDWHILE|ENGINEERING|ENHANCEMENT|ENHANCEMENT-POINT|ENHANCEMENT-SECTION|ENHANCEMENTS|ENTRIES|ENTRY|ENVIRONMENT|EQ|EQUAL|EQUIV|ERRORMESSAGE|ERRORS|ESCAPE|ESCAPING|EVENT|EVENTS|EXACT|EXCEPT|EXCEPTION|EXCEPTION-TABLE|EXCEPTIONS|EXCLUDE|EXCLUDING|EXEC|EXECUTE|EXISTS|EXIT|EXIT-COMMAND|EXP|EXPAND|EXPANDING|EXPIRATION|EXPLICIT|EXPONENT|EXPORT|EXPORTING|EXTEND|EXTENDED|EXTENSION|EXTRACT|FAIL|FETCH|FIELD|FIELD-GROUPS|FIELD-SYMBOL|FIELD-SYMBOLS|FIELDS|FILE|FILTER|FILTER-TABLE|FILTERS|FINAL|FIND|FIRST|FIRST-LINE|FIXED-POINT|FKEQ|FKGE|FLOOR|FLUSH|FONT|FOR|FORM|FORMAT|FORWARD|FOUND|FRAC|FRAME|FRAMES|FREE|FRIENDS|FROM|FUNCTION|FUNCTION-POOL|FUNCTIONALITY|FURTHER|GAPS|GE|GENERATE|GET|GIVING|GKEQ|GKGE|GLOBAL|GRANT|GREATER|GREEN|GROUP|GROUPS|GT|HANDLE|HANDLER|HARMLESS|HASHED|HAVING|HDB|HEAD-LINES|HEADER|HEADERS|HEADING|HELP-ID|HELP-REQUEST|HIDE|HIGH|HINT|HOLD|HOTSPOT|I|ICON|ID|IDENTIFICATION|IDENTIFIER|IDS|IF|IGNORE|IGNORING|IMMEDIATELY|IMPLEMENTATION|IMPLEMENTATIONS|IMPLEMENTED|IMPLICIT|IMPORT|IMPORTING|IN|INACTIVE|INCL|INCLUDE|INCLUDES|INCLUDING|INCREMENT|INDEX|INDEX-LINE|INFOTYPES|INHERITING|INIT|INITIAL|INITIALIZATION|INNER|INOUT|INPUT|INSERT|INSTANCES|INTENSIFIED|INTERFACE|INTERFACE-POOL|INTERFACES|INTERNAL|INTERVALS|INTO|INVERSE|INVERTED-DATE|IS|ISO|ITERATOR|ITNO|JOB|JOIN|KEEP|KEEPING|KERNEL|KEY|KEYS|KEYWORDS|KIND|LANGUAGE|LAST|LATE|LAYOUT|LE|LEADING|LEAVE|LEFT|LEFT-JUSTIFIED|LEFTPLUS|LEFTSPACE|LEGACY|LENGTH|LESS|LET|LEVEL|LEVELS|LIKE|LINE|LINE-COUNT|LINE-SELECTION|LINE-SIZE|LINEFEED|LINES|LIST|LIST-PROCESSING|LISTBOX|LITTLE|LLANG|LOAD|LOAD-OF-PROGRAM|LOB|LOCAL|LOCALE|LOCATOR|LOG|LOG-POINT|LOG10|LOGFILE|LOGICAL|LONG|LOOP|LOW|LOWER|LPAD|LPI|LT|M|MAIL|MAIN|MAJOR-ID|MAPPING|MARGIN|MARK|MASK|MATCH|MATCHCODE|MAX|MAXIMUM|MEDIUM|MEMBERS|MEMORY|MESH|MESSAGE|MESSAGE-ID|MESSAGES|MESSAGING|METHOD|METHODS|MIN|MINIMUM|MINOR-ID|MM\\/DD\\/YY|MM\\/DD\\/YYYY|MMDDYY|MOD|MODE|MODIF|MODIFIER|MODIFY|MODULE|MOVE|MOVE-CORRESPONDING|MULTIPLY|MULTIPLY-CORRESPONDING|NA|NAME|NAMETAB|NATIVE|NB|NE|NESTED|NESTING|NEW|NEW-LINE|NEW-PAGE|NEW-SECTION|NEXT|NO|NO-DISPLAY|NO-EXTENSION|NO-GAP|NO-GAPS|NO-GROUPING|NO-HEADING|NO-SCROLLING|NO-SIGN|NO-TITLE|NO-TOPOFPAGE|NO-ZERO|NODE|NODES|NON-UNICODE|NON-UNIQUE|NOT|NP|NS|NULL|NUMBER|NUMOFCHAR|O|OBJECT|OBJECTS|OBLIGATORY|OCCURRENCE|OCCURRENCES|OCCURS|OF|OFF|OFFSET|OLE|ON|ONLY|OPEN|OPTION|OPTIONAL|OPTIONS|OR|ORDER|OTHER|OTHERS|OUT|OUTER|OUTPUT|OUTPUT-LENGTH|OVERFLOW|OVERLAY|PACK|PACKAGE|PAD|PADDING|PAGE|PAGES|PARAMETER|PARAMETER-TABLE|PARAMETERS|PART|PARTIALLY|PATTERN|PERCENTAGE|PERFORM|PERFORMING|PERSON|PF|PF-STATUS|PINK|PLACES|POOL|POSITION|POS_HIGH|POS_LOW|PRAGMAS|PRECOMPILED|PREFERRED|PRESERVING|PRIMARY|PRINT|PRINT-CONTROL|PRIORITY|PRIVATE|PROCEDURE|PROCESS|PROGRAM|PROPERTY|PROTECTED|PROVIDE|PUBLIC|PUSHBUTTON|PUT|QUEUE-ONLY|QUICKINFO|RADIOBUTTON|RAISE|RAISING|RANGE|RANGES|RAW|READ|READ-ONLY|READER|RECEIVE|RECEIVED|RECEIVER|RECEIVING|RED|REDEFINITION|REDUCE|REDUCED|REF|REFERENCE|REFRESH|REGEX|REJECT|REMOTE|RENAMING|REPLACE|REPLACEMENT|REPLACING|REPORT|REQUEST|REQUESTED|RESERVE|RESET|RESOLUTION|RESPECTING|RESPONSIBLE|RESULT|RESULTS|RESUMABLE|RESUME|RETRY|RETURN|RETURNCODE|RETURNING|RIGHT|RIGHT-JUSTIFIED|RIGHTPLUS|RIGHTSPACE|RISK|RMC_COMMUNICATION_FAILURE|RMC_INVALID_STATUS|RMC_SYSTEM_FAILURE|ROLE|ROLLBACK|ROUND|ROWS|RTTI|RUN|SAP|SAP-SPOOL|SAVING|SCALE_PRESERVING|SCALE_PRESERVING_SCIENTIFIC|SCAN|SCIENTIFIC|SCIENTIFIC_WITH_LEADING_ZERO|SCREEN|SCROLL|SCROLL-BOUNDARY|SCROLLING|SEARCH|SECONDARY|SECONDS|SECTION|SELECT|SELECT-OPTIONS|SELECTION|SELECTION-SCREEN|SELECTION-SET|SELECTION-SETS|SELECTION-TABLE|SELECTIONS|SELECTOR|SEND|SEPARATE|SEPARATED|SET|SHARED|SHIFT|SHORT|SHORTDUMP-ID|SIGN|SIGN_AS_POSTFIX|SIMPLE|SIN|SINGLE|SINH|SIZE|SKIP|SKIPPING|SMART|SOME|SORT|SORTABLE|SORTED|SOURCE|SPACE|SPECIFIED|SPLIT|SPOOL|SPOTS|SQL|SQLSCRIPT|SQRT|STABLE|STAMP|STANDARD|START-OF-SELECTION|STARTING|STATE|STATEMENT|STATEMENTS|STATIC|STATICS|STATUSINFO|STEP-LOOP|STOP|STRLEN|STRUCTURE|STRUCTURES|STYLE|SUBKEY|SUBMATCHES|SUBMIT|SUBROUTINE|SUBSCREEN|SUBSTRING|SUBTRACT|SUBTRACT-CORRESPONDING|SUFFIX|SUM|SUMMARY|SUMMING|SUPPLIED|SUPPLY|SUPPRESS|SWITCH|SWITCHSTATES|SYMBOL|SYNCPOINTS|SYNTAX|SYNTAX-CHECK|SYNTAX-TRACE|SYSTEM-CALL|SYSTEM-EXCEPTIONS|SYSTEM-EXIT|TAB|TABBED|TABLE|TABLES|TABLEVIEW|TABSTRIP|TAN|TANH|TARGET|TASK|TASKS|TEST|TESTING|TEXT|TEXTPOOL|THEN|THROW|TIME|TIMES|TIMESTAMP|TIMEZONE|TITLE|TITLE-LINES|TITLEBAR|TO|TOKENIZATION|TOKENS|TOP-LINES|TOP-OF-PAGE|TRACE-FILE|TRACE-TABLE|TRAILING|TRANSACTION|TRANSFER|TRANSFORMATION|TRANSLATE|TRANSPORTING|TRMAC|TRUNC|TRUNCATE|TRUNCATION|TRY|TYPE|TYPE-POOL|TYPE-POOLS|TYPES|ULINE|UNASSIGN|UNDER|UNICODE|UNION|UNIQUE|UNIT|UNIT_CONVERSION|UNIX|UNPACK|UNTIL|UNWIND|UP|UPDATE|UPPER|USER|USER-COMMAND|USING|UTF-8|VALID|VALUE|VALUE-REQUEST|VALUES|VARY|VARYING|VERIFICATION-MESSAGE|VERSION|VIA|VIEW|VISIBLE|WAIT|WARNING|WHEN|WHENEVER|WHERE|WHILE|WIDTH|WINDOW|WINDOWS|WITH|WITH-HEADING|WITH-TITLE|WITHOUT|WORD|WORK|WRITE|WRITER|X|XML|XOR|XSD|XSTRLEN|YELLOW|YES|YYMMDD|Z|ZERO|ZONE)(?![\\w-])/i,\n            lookbehind: true\n        },\n        /* Numbers can be only integers. Decimal or Hex appear only as strings */ number: /\\b\\d+\\b/,\n        /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/ operator: {\n            pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n            lookbehind: true\n        },\n        \"string-operator\": {\n            pattern: /(\\s)&&?(?=\\s)/,\n            lookbehind: true,\n            /* The official editor highlights */ alias: \"keyword\"\n        },\n        \"token-operator\": [\n            {\n                /* Special operators used to access structure components, class methods/attributes, etc. */ pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            {\n                /* Special tokens used do delimit string templates */ pattern: /[|{}]/,\n                alias: \"punctuation\"\n            }\n        ],\n        punctuation: /[,.:()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abnf.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abnf.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ abnf)\n/* harmony export */ });\n// @ts-nocheck\nabnf.displayName = \"abnf\";\nabnf.aliases = [];\n/** @type {import('../core.js').Syntax} */ function abnf(Prism) {\n    ;\n    (function(Prism) {\n        var coreRules = \"(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)\";\n        Prism.languages.abnf = {\n            comment: /;.*/,\n            string: {\n                pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n                greedy: true,\n                inside: {\n                    punctuation: /^%[is]/\n                }\n            },\n            range: {\n                pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n                alias: \"number\"\n            },\n            terminal: {\n                pattern: /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n                alias: \"number\"\n            },\n            repetition: {\n                pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            definition: {\n                pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n                lookbehind: true,\n                alias: \"keyword\",\n                inside: {\n                    punctuation: /<|>/\n                }\n            },\n            \"core-rule\": {\n                pattern: RegExp(\"(?:(^|[^<\\\\w-])\" + coreRules + \"|<\" + coreRules + \">)(?![\\\\w-])\", \"i\"),\n                lookbehind: true,\n                alias: [\n                    \"rule\",\n                    \"constant\"\n                ],\n                inside: {\n                    punctuation: /<|>/\n                }\n            },\n            rule: {\n                pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n                lookbehind: true,\n                inside: {\n                    punctuation: /<|>/\n                }\n            },\n            operator: /=\\/?|\\//,\n            punctuation: /[()\\[\\]]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hYm5mLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxZQUNGO1FBQ0ZELE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHO1lBQ3JCTSxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLFNBQVM7Z0JBQ1RDLFFBQVE7Z0JBQ1JDLFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBQyxPQUFPO2dCQUNMSixTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQUMsVUFBVTtnQkFDUk4sU0FDRTtnQkFDRkssT0FBTztZQUNUO1lBQ0FFLFlBQVk7Z0JBQ1ZQLFNBQVM7Z0JBQ1RRLFlBQVk7Z0JBQ1pILE9BQU87WUFDVDtZQUNBSSxZQUFZO2dCQUNWVCxTQUFTO2dCQUNUUSxZQUFZO2dCQUNaSCxPQUFPO2dCQUNQSCxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQSxhQUFhO2dCQUNYSCxTQUFTVSxPQUNQLG9CQUFvQmQsWUFBWSxPQUFPQSxZQUFZLGdCQUNuRDtnQkFFRlksWUFBWTtnQkFDWkgsT0FBTztvQkFBQztvQkFBUTtpQkFBVztnQkFDM0JILFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBUSxNQUFNO2dCQUNKWCxTQUFTO2dCQUNUUSxZQUFZO2dCQUNaTixRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQVMsVUFBVTtZQUNWVCxhQUFhO1FBQ2Y7SUFDRixHQUFHUjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FibmYuanM/NzgwOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYWJuZi5kaXNwbGF5TmFtZSA9ICdhYm5mJ1xuYWJuZi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhYm5mKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGNvcmVSdWxlcyA9XG4gICAgICAnKD86QUxQSEF8QklUfENIQVJ8Q1J8Q1JMRnxDVEx8RElHSVR8RFFVT1RFfEhFWERJR3xIVEFCfExGfExXU1B8T0NURVR8U1B8VkNIQVJ8V1NQKSdcbiAgICBQcmlzbS5sYW5ndWFnZXMuYWJuZiA9IHtcbiAgICAgIGNvbW1lbnQ6IC87LiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC8oPzolW2lzXSk/XCJbXlwiXFxuXFxyXSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9eJVtpc10vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICByYW5nZToge1xuICAgICAgICBwYXR0ZXJuOiAvJSg/OmJbMDFdKy1bMDFdK3xkXFxkKy1cXGQrfHhbQS1GXFxkXSstW0EtRlxcZF0rKS9pLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICB0ZXJtaW5hbDoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8lKD86YlswMV0rKD86XFwuWzAxXSspKnxkXFxkKyg/OlxcLlxcZCspKnx4W0EtRlxcZF0rKD86XFwuW0EtRlxcZF0rKSopL2ksXG4gICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgfSxcbiAgICAgIHJlcGV0aXRpb246IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3LV0pKD86XFxkKlxcKlxcZCp8XFxkKykvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgfSxcbiAgICAgIGRlZmluaXRpb246IHtcbiAgICAgICAgcGF0dGVybjogLyheWyBcXHRdKikoPzpbYS16XVtcXHctXSp8PFtePD5cXHJcXG5dKj4pKD89XFxzKj0pL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAna2V5d29yZCcsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvPHw+L1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ2NvcmUtcnVsZSc6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoPzooXnxbXjxcXFxcdy1dKScgKyBjb3JlUnVsZXMgKyAnfDwnICsgY29yZVJ1bGVzICsgJz4pKD8hW1xcXFx3LV0pJyxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6IFsncnVsZScsICdjb25zdGFudCddLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLzx8Pi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHJ1bGU6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFtePFxcdy1dKVthLXpdW1xcdy1dKnw8W148Plxcclxcbl0qPi9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLzx8Pi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvPVxcLz98XFwvLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxdXS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImFibmYiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNvcmVSdWxlcyIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJyYW5nZSIsImFsaWFzIiwidGVybWluYWwiLCJyZXBldGl0aW9uIiwibG9va2JlaGluZCIsImRlZmluaXRpb24iLCJSZWdFeHAiLCJydWxlIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abnf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/actionscript.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/actionscript.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ actionscript)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\nactionscript.displayName = \"actionscript\";\nactionscript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function actionscript(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.actionscript = Prism.languages.extend(\"javascript\", {\n        keyword: /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n        operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n    });\n    Prism.languages.actionscript[\"class-name\"].alias = \"function\";\n    // doesn't work with AS because AS is too complex\n    delete Prism.languages.actionscript[\"parameter\"];\n    delete Prism.languages.actionscript[\"literal-property\"];\n    if (Prism.languages.markup) {\n        Prism.languages.insertBefore(\"actionscript\", \"string\", {\n            xml: {\n                pattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n                lookbehind: true,\n                inside: Prism.languages.markup\n            }\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hY3Rpb25zY3JpcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ21DO0FBQ2pEQyxhQUFhQyxXQUFXLEdBQUc7QUFDM0JELGFBQWFFLE9BQU8sR0FBRyxFQUFFO0FBRXpCLHdDQUF3QyxHQUN6QixTQUFTRixhQUFhRyxLQUFLO0lBQ3hDQSxNQUFNQyxRQUFRLENBQUNMLHNEQUFtQkE7SUFDbENJLE1BQU1FLFNBQVMsQ0FBQ0wsWUFBWSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxjQUFjO1FBQ2xFQyxTQUNFO1FBQ0ZDLFVBQVU7SUFDWjtJQUNBTCxNQUFNRSxTQUFTLENBQUNMLFlBQVksQ0FBQyxhQUFhLENBQUNTLEtBQUssR0FBRztJQUVuRCxpREFBaUQ7SUFDakQsT0FBT04sTUFBTUUsU0FBUyxDQUFDTCxZQUFZLENBQUMsWUFBWTtJQUNoRCxPQUFPRyxNQUFNRSxTQUFTLENBQUNMLFlBQVksQ0FBQyxtQkFBbUI7SUFDdkQsSUFBSUcsTUFBTUUsU0FBUyxDQUFDSyxNQUFNLEVBQUU7UUFDMUJQLE1BQU1FLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLGdCQUFnQixVQUFVO1lBQ3JEQyxLQUFLO2dCQUNIQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRWixNQUFNRSxTQUFTLENBQUNLLE1BQU07WUFDaEM7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYWN0aW9uc2NyaXB0LmpzPzU5NjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKYXZhc2NyaXB0IGZyb20gJy4vamF2YXNjcmlwdC5qcydcbmFjdGlvbnNjcmlwdC5kaXNwbGF5TmFtZSA9ICdhY3Rpb25zY3JpcHQnXG5hY3Rpb25zY3JpcHQuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWN0aW9uc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckphdmFzY3JpcHQpXG4gIFByaXNtLmxhbmd1YWdlcy5hY3Rpb25zY3JpcHQgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqYXZhc2NyaXB0Jywge1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXN8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxkZWZhdWx0fGRlbGV0ZXxkb3xkeW5hbWljfGVhY2h8ZWxzZXxleHRlbmRzfGZpbmFsfGZpbmFsbHl8Zm9yfGZ1bmN0aW9ufGdldHxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbmNsdWRlfGluc3RhbmNlb2Z8aW50ZXJmYWNlfGludGVybmFsfGlzfG5hbWVzcGFjZXxuYXRpdmV8bmV3fG51bGx8b3ZlcnJpZGV8cGFja2FnZXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHNldHxzdGF0aWN8c3VwZXJ8c3dpdGNofHRoaXN8dGhyb3d8dHJ5fHR5cGVvZnx1c2V8dmFyfHZvaWR8d2hpbGV8d2l0aClcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwrXFwrfC0tfCg/OlsrXFwtKlxcLyVeXXwmJj98XFx8XFx8P3w8PD98Pj4/Pj98WyE9XT0/KT0/fFt+P0BdL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuYWN0aW9uc2NyaXB0WydjbGFzcy1uYW1lJ10uYWxpYXMgPSAnZnVuY3Rpb24nXG5cbiAgLy8gZG9lc24ndCB3b3JrIHdpdGggQVMgYmVjYXVzZSBBUyBpcyB0b28gY29tcGxleFxuICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmFjdGlvbnNjcmlwdFsncGFyYW1ldGVyJ11cbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5hY3Rpb25zY3JpcHRbJ2xpdGVyYWwtcHJvcGVydHknXVxuICBpZiAoUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cCkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2FjdGlvbnNjcmlwdCcsICdzdHJpbmcnLCB7XG4gICAgICB4bWw6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14uXSk8XFwvP1xcdysoPzpcXHMrW15cXHM+XFwvPV0rPShcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDIpW15cXFxcXSkqXFwyKSpcXHMqXFwvPz4vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXBcbiAgICAgIH1cbiAgICB9KVxuICB9XG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YXNjcmlwdCIsImFjdGlvbnNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJhbGlhcyIsIm1hcmt1cCIsImluc2VydEJlZm9yZSIsInhtbCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiaW5zaWRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/actionscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ada.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ada.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ada)\n/* harmony export */ });\n// @ts-nocheck\nada.displayName = \"ada\";\nada.aliases = [];\n/** @type {import('../core.js').Syntax} */ function ada(Prism) {\n    Prism.languages.ada = {\n        comment: /--.*/,\n        string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n        number: [\n            {\n                pattern: /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n            },\n            {\n                pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n            }\n        ],\n        attribute: {\n            pattern: /\\b'\\w+/,\n            alias: \"attr-name\"\n        },\n        keyword: /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|or|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n        punctuation: /\\.\\.?|[,;():]/,\n        char: /'.'/,\n        variable: /\\b[a-z](?:\\w)*\\b/i\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hZGEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxRQUFRO1lBQ047Z0JBQ0VDLFNBQ0U7WUFDSjtZQUNBO2dCQUNFQSxTQUFTO1lBQ1g7U0FDRDtRQUNEQyxXQUFXO1lBQ1RELFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsTUFBTTtRQUNOQyxVQUFVO0lBQ1o7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hZGEuanM/YWI2MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYWRhLmRpc3BsYXlOYW1lID0gJ2FkYSdcbmFkYS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZGEoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFkYSA9IHtcbiAgICBjb21tZW50OiAvLS0uKi8sXG4gICAgc3RyaW5nOiAvXCIoPzpcIlwifFteXCJcXHJcXGZcXG5dKSpcIi8sXG4gICAgbnVtYmVyOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcYlxcZCg/Ol8/XFxkKSojW1xcZEEtRl0oPzpfP1tcXGRBLUZdKSooPzpcXC5bXFxkQS1GXSg/Ol8/W1xcZEEtRl0pKik/Iyg/OkVbKy1dP1xcZCg/Ol8/XFxkKSopPy9pXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiXFxkKD86Xz9cXGQpKig/OlxcLlxcZCg/Ol8/XFxkKSopPyg/OkVbKy1dP1xcZCg/Ol8/XFxkKSopP1xcYi9pXG4gICAgICB9XG4gICAgXSxcbiAgICBhdHRyaWJ1dGU6IHtcbiAgICAgIHBhdHRlcm46IC9cXGInXFx3Ky8sXG4gICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJvcnR8YWJzfGFic3RyYWN0fGFjY2VwdHxhY2Nlc3N8YWxpYXNlZHxhbGx8YW5kfGFycmF5fGF0fGJlZ2lufGJvZHl8Y2FzZXxjb25zdGFudHxkZWNsYXJlfGRlbGF5fGRlbHRhfGRpZ2l0c3xkb3xlbHNlfGVsc2lmfGVuZHxlbnRyeXxleGNlcHRpb258ZXhpdHxmb3J8ZnVuY3Rpb258Z2VuZXJpY3xnb3RvfGlmfGlufGludGVyZmFjZXxpc3xsaW1pdGVkfGxvb3B8bW9kfG5ld3xub3R8bnVsbHxvZnxvcnxvdGhlcnN8b3V0fG92ZXJyaWRpbmd8cGFja2FnZXxwcmFnbWF8cHJpdmF0ZXxwcm9jZWR1cmV8cHJvdGVjdGVkfHJhaXNlfHJhbmdlfHJlY29yZHxyZW18cmVuYW1lc3xyZXF1ZXVlfHJldHVybnxyZXZlcnNlfHNlbGVjdHxzZXBhcmF0ZXxzb21lfHN1YnR5cGV8c3luY2hyb25pemVkfHRhZ2dlZHx0YXNrfHRlcm1pbmF0ZXx0aGVufHR5cGV8dW50aWx8dXNlfHdoZW58d2hpbGV8d2l0aHx4b3IpXFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgb3BlcmF0b3I6IC88Wz0+XT98Pj0/fD0+P3w6PXxcXC89P3xcXCpcXCo/fFsmKy1dLyxcbiAgICBwdW5jdHVhdGlvbjogL1xcLlxcLj98Wyw7KCk6XS8sXG4gICAgY2hhcjogLycuJy8sXG4gICAgdmFyaWFibGU6IC9cXGJbYS16XSg/OlxcdykqXFxiL2lcbiAgfVxufVxuIl0sIm5hbWVzIjpbImFkYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsIm51bWJlciIsInBhdHRlcm4iLCJhdHRyaWJ1dGUiLCJhbGlhcyIsImtleXdvcmQiLCJib29sZWFuIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImNoYXIiLCJ2YXJpYWJsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ada.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/agda.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/agda.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ agda)\n/* harmony export */ });\n// @ts-nocheck\nagda.displayName = \"agda\";\nagda.aliases = [];\n/** @type {import('../core.js').Syntax} */ function agda(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.agda = {\n            comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n            string: {\n                pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n                greedy: true\n            },\n            punctuation: /[(){}⦃⦄.;@]/,\n            \"class-name\": {\n                pattern: /((?:data|record) +)\\S+/,\n                lookbehind: true\n            },\n            function: {\n                pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n                lookbehind: true\n            },\n            operator: {\n                pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n                lookbehind: true\n            },\n            keyword: /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hZ2RhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZkEsTUFBTUMsU0FBUyxDQUFDSixJQUFJLEdBQUc7WUFDckJLLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0FDLGFBQWE7WUFDYixjQUFjO2dCQUNaRixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQUMsVUFBVTtnQkFDUkosU0FBUztnQkFDVEcsWUFBWTtZQUNkO1lBQ0FFLFVBQVU7Z0JBQ1JMLFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtZQUNBRyxTQUNFO1FBQ0o7SUFDRixHQUFHVjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FnZGEuanM/NWU2NCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYWdkYS5kaXNwbGF5TmFtZSA9ICdhZ2RhJ1xuYWdkYS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhZ2RhKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmFnZGEgPSB7XG4gICAgICBjb21tZW50OiAvXFx7LVtcXHNcXFNdKj8oPzotXFx9fCQpfC0tLiovLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXFxcXFxcclxcblwiXSkqXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt94qaD4qaELjtAXS8sXG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLygoPzpkYXRhfHJlY29yZCkgKylcXFMrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopKD8hXFxzKVteOlxcclxcbl0rKD89OikvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXlxccyp8XFxzKSg/Ols9fDriiIDihpLOu1xcXFw/X118LT4pKD89XFxzKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86U2V0fGFic3RyYWN0fGNvbnN0cnVjdG9yfGRhdGF8ZXRhLWVxdWFsaXR5fGZpZWxkfGZvcmFsbHxoaWRpbmd8aW1wb3J0fGlufGluZHVjdGl2ZXxpbmZpeHxpbmZpeGx8aW5maXhyfGluc3RhbmNlfGxldHxtYWNyb3xtb2R1bGV8bXV0dWFsfG5vLWV0YS1lcXVhbGl0eXxvcGVufG92ZXJsYXB8cGF0dGVybnxwb3N0dWxhdGV8cHJpbWl0aXZlfHByaXZhdGV8cHVibGljfHF1b3RlfHF1b3RlQ29udGV4dHxxdW90ZUdvYWx8cXVvdGVUZXJtfHJlY29yZHxyZW5hbWluZ3xyZXdyaXRlfHN5bnRheHx0YWN0aWN8dW5xdW90ZXx1bnF1b3RlRGVjbHx1bnF1b3RlRGVmfHVzaW5nfHZhcmlhYmxlfHdoZXJlfHdpdGgpXFxiL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsiYWdkYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJwdW5jdHVhdGlvbiIsImxvb2tiZWhpbmQiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwia2V5d29yZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/agda.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/al.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/al.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ al)\n/* harmony export */ });\n// @ts-nocheck\nal.displayName = \"al\";\nal.aliases = [];\n/** @type {import('../core.js').Syntax} */ function al(Prism) {\n    // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n    Prism.languages.al = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        string: {\n            pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n            greedy: true\n        },\n        function: {\n            pattern: /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n            lookbehind: true\n        },\n        keyword: [\n            // keywords\n            /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i,\n            // objects and metadata that are used like keywords\n            /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n        ],\n        number: /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n        \"class-name\": /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n        operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n        punctuation: /[()\\[\\]{}:.;,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxHQUFHQyxXQUFXLEdBQUc7QUFDakJELEdBQUdFLE9BQU8sR0FBRyxFQUFFO0FBRWYsd0NBQXdDLEdBQ3pCLFNBQVNGLEdBQUdHLEtBQUs7SUFDOUIsbUZBQW1GO0lBRW5GQSxNQUFNQyxTQUFTLENBQUNKLEVBQUUsR0FBRztRQUNuQkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFVBQVU7WUFDUkYsU0FDRTtZQUNGRyxZQUFZO1FBQ2Q7UUFDQUMsU0FBUztZQUNQLFdBQVc7WUFDWDtZQUNBLG1EQUFtRDtZQUNuRDtTQUNEO1FBQ0RDLFFBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1FBQ1YsY0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FsLmpzPzM5ZWIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmFsLmRpc3BsYXlOYW1lID0gJ2FsJ1xuYWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYWwoUHJpc20pIHtcbiAgLy8gYmFzZWQgb24gaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9BTC9ibG9iL21hc3Rlci9ncmFtbWFyL2Fsc3ludGF4LnRtbGFuZ3VhZ2VcblxuICBQcmlzbS5sYW5ndWFnZXMuYWwgPSB7XG4gICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLycoPzonJ3xbXidcXHJcXG5dKSonKD8hJyl8XCIoPzpcIlwifFteXCJcXHJcXG5dKSpcIig/IVwiKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFxcYig/OmV2ZW50fHByb2NlZHVyZXx0cmlnZ2VyKVxccyt8KD86XnxbXi5dKVxcLlxccyopW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICAvLyBrZXl3b3Jkc1xuICAgICAgL1xcYig/OmFycmF5fGFzc2VydGVycm9yfGJlZ2lufGJyZWFrfGNhc2V8ZG98ZG93bnRvfGVsc2V8ZW5kfGV2ZW50fGV4aXR8Zm9yfGZvcmVhY2h8ZnVuY3Rpb258aWZ8aW1wbGVtZW50c3xpbnxpbmRhdGFzZXR8aW50ZXJmYWNlfGludGVybmFsfGxvY2FsfG9mfHByb2NlZHVyZXxwcm9ncmFtfHByb3RlY3RlZHxyZXBlYXR8cnVub25jbGllbnR8c2VjdXJpdHlmaWx0ZXJpbmd8c3VwcHJlc3NkaXNwb3NlfHRlbXBvcmFyeXx0aGVufHRvfHRyaWdnZXJ8dW50aWx8dmFyfHdoaWxlfHdpdGh8d2l0aGV2ZW50cylcXGIvaSxcbiAgICAgIC8vIG9iamVjdHMgYW5kIG1ldGFkYXRhIHRoYXQgYXJlIHVzZWQgbGlrZSBrZXl3b3Jkc1xuICAgICAgL1xcYig/OmFjdGlvbnxhY3Rpb25zfGFkZGFmdGVyfGFkZGJlZm9yZXxhZGRmaXJzdHxhZGRsYXN0fGFyZWF8YXNzZW1ibHl8Y2hhcnRwYXJ0fGNvZGV1bml0fGNvbHVtbnxjb250cm9sYWRkaW58Y3VlZ3JvdXB8Y3VzdG9taXplc3xkYXRhaXRlbXxkYXRhc2V0fGRvdG5ldHxlbGVtZW50c3xlbnVtfGVudW1leHRlbnNpb258ZXh0ZW5kc3xmaWVsZHxmaWVsZGF0dHJpYnV0ZXxmaWVsZGVsZW1lbnR8ZmllbGRncm91cHxmaWVsZGdyb3Vwc3xmaWVsZHN8ZmlsdGVyfGZpeGVkfGdyaWR8Z3JvdXB8a2V5fGtleXN8bGFiZWx8bGFiZWxzfGxheW91dHxtb2RpZnl8bW92ZWFmdGVyfG1vdmViZWZvcmV8bW92ZWZpcnN0fG1vdmVsYXN0fHBhZ2V8cGFnZWN1c3RvbWl6YXRpb258cGFnZWV4dGVuc2lvbnxwYXJ0fHByb2ZpbGV8cXVlcnl8cmVwZWF0ZXJ8cmVwb3J0fHJlcXVlc3RwYWdlfHNjaGVtYXxzZXBhcmF0b3J8c3lzdGVtcGFydHx0YWJsZXx0YWJsZWVsZW1lbnR8dGFibGVleHRlbnNpb258dGV4dGF0dHJpYnV0ZXx0ZXh0ZWxlbWVudHx0eXBlfHVzZXJjb250cm9sfHZhbHVlfHhtbHBvcnQpXFxiL2lcbiAgICBdLFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPzoweFtcXGRhLWZdK3woPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KSg/OkZ8TEw/fFUoPzpMTD8pPyk/XFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgdmFyaWFibGU6IC9cXGIoPzpDdXJyKD86RmllbGROb3xQYWdlfFJlcG9ydCl8eD9SZWN8UmVxdWVzdE9wdGlvbnNQYWdlKVxcYi8sXG4gICAgJ2NsYXNzLW5hbWUnOlxuICAgICAgL1xcYig/OmF1dG9tYXRpb258YmlnaW50ZWdlcnxiaWd0ZXh0fGJsb2J8Ym9vbGVhbnxieXRlfGNoYXJ8Y2xpZW50dHlwZXxjb2RlfGNvbXBsZXRpb250cmlnZ2VyZXJyb3JsZXZlbHxjb25uZWN0aW9udHlwZXxkYXRhYmFzZXxkYXRhY2xhc3NpZmljYXRpb258ZGF0YXNjb3BlfGRhdGV8ZGF0ZWZvcm11bGF8ZGF0ZXRpbWV8ZGVjaW1hbHxkZWZhdWx0bGF5b3V0fGRpYWxvZ3xkaWN0aW9uYXJ5fGRvdG5ldGFzc2VtYmx5fGRvdG5ldHR5cGVkZWNsYXJhdGlvbnxkdXJhdGlvbnxlcnJvcmluZm98ZXJyb3J0eXBlfGV4ZWN1dGlvbmNvbnRleHR8ZXhlY3V0aW9ubW9kZXxmaWVsZGNsYXNzfGZpZWxkcmVmfGZpZWxkdHlwZXxmaWxlfGZpbHRlcnBhZ2VidWlsZGVyfGd1aWR8aHR0cGNsaWVudHxodHRwY29udGVudHxodHRwaGVhZGVyc3xodHRwcmVxdWVzdG1lc3NhZ2V8aHR0cHJlc3BvbnNlbWVzc2FnZXxpbnN0cmVhbXxpbnRlZ2VyfGpva2VyfGpzb25hcnJheXxqc29ub2JqZWN0fGpzb250b2tlbnxqc29udmFsdWV8a2V5cmVmfGxpc3R8bW9kdWxlZGVwZW5kZW5jeWluZm98bW9kdWxlaW5mb3xub25lfG5vdGlmaWNhdGlvbnxub3RpZmljYXRpb25zY29wZXxvYmplY3R0eXBlfG9wdGlvbnxvdXRzdHJlYW18cGFnZXJlc3VsdHxyZWNvcmR8cmVjb3JkaWR8cmVjb3JkcmVmfHJlcG9ydGZvcm1hdHxzZWN1cml0eWZpbHRlcnxzZXNzaW9uc2V0dGluZ3N8dGFibGVjb25uZWN0aW9udHlwZXx0YWJsZWZpbHRlcnx0ZXN0YWN0aW9ufHRlc3RmaWVsZHx0ZXN0ZmlsdGVyZmllbGR8dGVzdHBhZ2V8dGVzdHBlcm1pc3Npb25zfHRlc3RyZXF1ZXN0cGFnZXx0ZXh0fHRleHRidWlsZGVyfHRleHRjb25zdHx0ZXh0ZW5jb2Rpbmd8dGltZXx0cmFuc2FjdGlvbm1vZGVsfHRyYW5zYWN0aW9udHlwZXx2YXJpYW50fHZlcmJvc2l0eXx2ZXJzaW9ufHZpZXd8dmlld3N8d2Vic2VydmljZWFjdGlvbmNvbnRleHR8d2Vic2VydmljZWFjdGlvbnJlc3VsdGNvZGV8eG1sYXR0cmlidXRlfHhtbGF0dHJpYnV0ZWNvbGxlY3Rpb258eG1sY2RhdGF8eG1sY29tbWVudHx4bWxkZWNsYXJhdGlvbnx4bWxkb2N1bWVudHx4bWxkb2N1bWVudHR5cGV8eG1sZWxlbWVudHx4bWxuYW1lc3BhY2VtYW5hZ2VyfHhtbG5hbWV0YWJsZXx4bWxub2RlfHhtbG5vZGVsaXN0fHhtbHByb2Nlc3NpbmdpbnN0cnVjdGlvbnx4bWxyZWFkb3B0aW9uc3x4bWx0ZXh0fHhtbHdyaXRlb3B0aW9ucylcXGIvaSxcbiAgICBvcGVyYXRvcjogL1xcLlxcLnw6Wz06XXxbLSsqL109P3w8PnxbPD5dPT98PXxcXGIoPzphbmR8ZGl2fG1vZHxub3R8b3J8eG9yKVxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde306LjssXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImFsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImZ1bmN0aW9uIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJudW1iZXIiLCJib29sZWFuIiwidmFyaWFibGUiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/al.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/antlr4.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/antlr4.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ antlr4)\n/* harmony export */ });\n// @ts-nocheck\nantlr4.displayName = \"antlr4\";\nantlr4.aliases = [\n    \"g4\"\n];\n/** @type {import('../core.js').Syntax} */ function antlr4(Prism) {\n    Prism.languages.antlr4 = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        string: {\n            pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n            greedy: true\n        },\n        \"character-class\": {\n            pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n            greedy: true,\n            alias: \"regex\",\n            inside: {\n                range: {\n                    pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n                    lookbehind: true,\n                    alias: \"punctuation\"\n                },\n                escape: /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n                punctuation: /[\\[\\]]/\n            }\n        },\n        action: {\n            pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n            greedy: true,\n            inside: {\n                content: {\n                    // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n                    pattern: /(\\{)[\\s\\S]+(?=\\})/,\n                    lookbehind: true\n                },\n                punctuation: /[{}]/\n            }\n        },\n        command: {\n            pattern: /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n            lookbehind: true,\n            inside: {\n                function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n                punctuation: /[,()]/\n            }\n        },\n        annotation: {\n            pattern: /@\\w+(?:::\\w+)*/,\n            alias: \"keyword\"\n        },\n        label: {\n            pattern: /#[ \\t]*\\w+/,\n            alias: \"punctuation\"\n        },\n        keyword: /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n        definition: [\n            {\n                pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n                alias: [\n                    \"rule\",\n                    \"class-name\"\n                ]\n            },\n            {\n                pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n                alias: [\n                    \"token\",\n                    \"constant\"\n                ]\n            }\n        ],\n        constant: /\\b[A-Z][A-Z_]*\\b/,\n        operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n        punctuation: /[;:()=]/\n    };\n    Prism.languages.g4 = Prism.languages.antlr4;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hbnRscjQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBRXZCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsbUJBQW1CO1lBQ2pCRCxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztZQUNQQyxRQUFRO2dCQUNOQyxPQUFPO29CQUNMSixTQUFTO29CQUNUSyxZQUFZO29CQUNaSCxPQUFPO2dCQUNUO2dCQUNBSSxRQUNFO2dCQUNGQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxRQUFRO1lBQ05SLFNBQVM7WUFDVEMsUUFBUTtZQUNSRSxRQUFRO2dCQUNOTSxTQUFTO29CQUNQLG1GQUFtRjtvQkFDbkZULFNBQVM7b0JBQ1RLLFlBQVk7Z0JBQ2Q7Z0JBQ0FFLGFBQWE7WUFDZjtRQUNGO1FBQ0FHLFNBQVM7WUFDUFYsU0FDRTtZQUNGSyxZQUFZO1lBQ1pGLFFBQVE7Z0JBQ05RLFVBQVU7Z0JBQ1ZKLGFBQWE7WUFDZjtRQUNGO1FBQ0FLLFlBQVk7WUFDVlosU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQVcsT0FBTztZQUNMYixTQUFTO1lBQ1RFLE9BQU87UUFDVDtRQUNBWSxTQUNFO1FBQ0ZDLFlBQVk7WUFDVjtnQkFDRWYsU0FBUztnQkFDVEUsT0FBTztvQkFBQztvQkFBUTtpQkFBYTtZQUMvQjtZQUNBO2dCQUNFRixTQUFTO2dCQUNURSxPQUFPO29CQUFDO29CQUFTO2lCQUFXO1lBQzlCO1NBQ0Q7UUFDRGMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZWLGFBQWE7SUFDZjtJQUNBWCxNQUFNQyxTQUFTLENBQUNxQixFQUFFLEdBQUd0QixNQUFNQyxTQUFTLENBQUNKLE1BQU07QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYW50bHI0LmpzP2YzMDAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmFudGxyNC5kaXNwbGF5TmFtZSA9ICdhbnRscjQnXG5hbnRscjQuYWxpYXNlcyA9IFsnZzQnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFudGxyNChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYW50bHI0ID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/KD86XFwqXFwvfCQpLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXC58W15cXFxcJ1xcclxcbl0pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2hhcmFjdGVyLWNsYXNzJzoge1xuICAgICAgcGF0dGVybjogL1xcWyg/OlxcXFwufFteXFxcXFxcXVxcclxcbl0pKlxcXS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3JlZ2V4JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICByYW5nZToge1xuICAgICAgICAgIHBhdHRlcm46IC8oW15bXXwoPzpefFteXFxcXF0pKD86XFxcXFxcXFwpKlxcXFxcXFspLSg/IVxcXSkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgZXNjYXBlOlxuICAgICAgICAgIC9cXFxcKD86dSg/OlthLWZBLUZcXGRdezR9fFxce1thLWZBLUZcXGRdK1xcfSl8W3BQXVxce1s9XFx3LV0rXFx9fFteXFxyXFxudXBQXSkvLFxuICAgICAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF1dL1xuICAgICAgfVxuICAgIH0sXG4gICAgYWN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvXFx7KD86W157fV18XFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKlxcfSkqXFx9LyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBjb250ZW50OiB7XG4gICAgICAgICAgLy8gdGhpcyBtaWdodCBiZSBDLCBDKyssIFB5dGhvbiwgSmF2YSwgQyMsIG9yIGFueSBvdGhlciBsYW5ndWFnZSBBTlRMUjQgY29tcGlsZXMgdG9cbiAgICAgICAgICBwYXR0ZXJuOiAvKFxceylbXFxzXFxTXSsoPz1cXH0pLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvW3t9XS9cbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbW1hbmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oLT5cXHMqKD8hXFxzKSkoPzpcXHMqKD86LFxccyopP1xcYlthLXpdXFx3Kig/OlxccypcXChbXigpXFxyXFxuXSpcXCkpPykrKD89XFxzKjspL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxccyooPzpbLChdfCQpKS8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWywoKV0vXG4gICAgICB9XG4gICAgfSxcbiAgICBhbm5vdGF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvQFxcdysoPzo6OlxcdyspKi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLyNbIFxcdF0qXFx3Ky8sXG4gICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpjYXRjaHxjaGFubmVsc3xmaW5hbGx5fGZyYWdtZW50fGdyYW1tYXJ8aW1wb3J0fGxleGVyfGxvY2Fsc3xtb2RlfG9wdGlvbnN8cGFyc2VyfHJldHVybnN8dGhyb3dzfHRva2VucylcXGIvLFxuICAgIGRlZmluaXRpb246IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYlthLXpdXFx3Kig/PVxccyo6KS8sXG4gICAgICAgIGFsaWFzOiBbJ3J1bGUnLCAnY2xhc3MtbmFtZSddXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiW0EtWl1cXHcqKD89XFxzKjopLyxcbiAgICAgICAgYWxpYXM6IFsndG9rZW4nLCAnY29uc3RhbnQnXVxuICAgICAgfVxuICAgIF0sXG4gICAgY29uc3RhbnQ6IC9cXGJbQS1aXVtBLVpfXSpcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwuXFwufC0+fFt8fl18WyorP11cXD8/LyxcbiAgICBwdW5jdHVhdGlvbjogL1s7OigpPV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLmc0ID0gUHJpc20ubGFuZ3VhZ2VzLmFudGxyNFxufVxuIl0sIm5hbWVzIjpbImFudGxyNCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsInJhbmdlIiwibG9va2JlaGluZCIsImVzY2FwZSIsInB1bmN0dWF0aW9uIiwiYWN0aW9uIiwiY29udGVudCIsImNvbW1hbmQiLCJmdW5jdGlvbiIsImFubm90YXRpb24iLCJsYWJlbCIsImtleXdvcmQiLCJkZWZpbml0aW9uIiwiY29uc3RhbnQiLCJvcGVyYXRvciIsImc0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/antlr4.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apacheconf.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apacheconf.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ apacheconf)\n/* harmony export */ });\n// @ts-nocheck\napacheconf.displayName = \"apacheconf\";\napacheconf.aliases = [];\n/** @type {import('../core.js').Syntax} */ function apacheconf(Prism) {\n    Prism.languages.apacheconf = {\n        comment: /#.*/,\n        \"directive-inline\": {\n            pattern: /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n            lookbehind: true,\n            alias: \"property\"\n        },\n        \"directive-block\": {\n            pattern: /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n            inside: {\n                \"directive-block\": {\n                    pattern: /^<\\/?\\w+/,\n                    inside: {\n                        punctuation: /^<\\/?/\n                    },\n                    alias: \"tag\"\n                },\n                \"directive-block-parameter\": {\n                    pattern: /.*[^>]/,\n                    inside: {\n                        punctuation: /:/,\n                        string: {\n                            pattern: /(\"|').*\\1/,\n                            inside: {\n                                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n                            }\n                        }\n                    },\n                    alias: \"attr-value\"\n                },\n                punctuation: />/\n            },\n            alias: \"tag\"\n        },\n        \"directive-flags\": {\n            pattern: /\\[(?:[\\w=],?)+\\]/,\n            alias: \"keyword\"\n        },\n        string: {\n            pattern: /(\"|').*\\1/,\n            inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n            }\n        },\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n        regex: /\\^?.*\\$|\\^.*\\$?/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apacheconf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apex.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apex.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ apex)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n/* harmony import */ var _sql_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js\");\n// @ts-nocheck\n\n\napex.displayName = \"apex\";\napex.aliases = [];\n/** @type {import('../core.js').Syntax} */ function apex(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_sql_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        var keywords = /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i;\n        var className = /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(/<keyword>/g, function() {\n            return keywords.source;\n        });\n        /** @param {string} pattern */ function insertClassName(pattern) {\n            return RegExp(pattern.replace(/<CLASS-NAME>/g, function() {\n                return className;\n            }), \"i\");\n        }\n        var classNameInside = {\n            keyword: keywords,\n            punctuation: /[()\\[\\]{};,:.<>]/\n        };\n        Prism.languages.apex = {\n            comment: Prism.languages.clike.comment,\n            string: Prism.languages.clike.string,\n            sql: {\n                pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n                lookbehind: true,\n                greedy: true,\n                alias: \"language-sql\",\n                inside: Prism.languages.sql\n            },\n            annotation: {\n                pattern: /@\\w+\\b/,\n                alias: \"punctuation\"\n            },\n            \"class-name\": [\n                {\n                    pattern: insertClassName(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/.source),\n                    lookbehind: true,\n                    inside: classNameInside\n                },\n                {\n                    // cast\n                    pattern: insertClassName(/(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source),\n                    lookbehind: true,\n                    inside: classNameInside\n                },\n                {\n                    // variable/parameter declaration and return types\n                    pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n                    inside: classNameInside\n                }\n            ],\n            trigger: {\n                pattern: /(\\btrigger\\s+)\\w+\\b/i,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            keyword: keywords,\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n            boolean: /\\b(?:false|true)\\b/i,\n            number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n            operator: /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n            punctuation: /[()\\[\\]{};,.]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGNBQWM7QUFDeUI7QUFDSjtBQUNuQ0UsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTixpREFBY0E7SUFDN0JLLE1BQU1DLFFBQVEsQ0FBQ0wsK0NBQVlBO0lBQ3pCLFVBQVVJLEtBQUs7UUFDZixJQUFJRSxXQUNGO1FBQ0YsSUFBSUMsWUFDRixtSUFBbUlDLE1BQU0sQ0FBQ0MsT0FBTyxDQUMvSSxjQUNBO1lBQ0UsT0FBT0gsU0FBU0UsTUFBTTtRQUN4QjtRQUVKLDRCQUE0QixHQUM1QixTQUFTRSxnQkFBZ0JDLE9BQU87WUFDOUIsT0FBT0MsT0FDTEQsUUFBUUYsT0FBTyxDQUFDLGlCQUFpQjtnQkFDL0IsT0FBT0Y7WUFDVCxJQUNBO1FBRUo7UUFDQSxJQUFJTSxrQkFBa0I7WUFDcEJDLFNBQVNSO1lBQ1RTLGFBQWE7UUFDZjtRQUNBWCxNQUFNWSxTQUFTLENBQUNmLElBQUksR0FBRztZQUNyQmdCLFNBQVNiLE1BQU1ZLFNBQVMsQ0FBQ0UsS0FBSyxDQUFDRCxPQUFPO1lBQ3RDRSxRQUFRZixNQUFNWSxTQUFTLENBQUNFLEtBQUssQ0FBQ0MsTUFBTTtZQUNwQ0MsS0FBSztnQkFDSFQsU0FBUztnQkFDVFUsWUFBWTtnQkFDWkMsUUFBUTtnQkFDUkMsT0FBTztnQkFDUEMsUUFBUXBCLE1BQU1ZLFNBQVMsQ0FBQ0ksR0FBRztZQUM3QjtZQUNBSyxZQUFZO2dCQUNWZCxTQUFTO2dCQUNUWSxPQUFPO1lBQ1Q7WUFDQSxjQUFjO2dCQUNaO29CQUNFWixTQUFTRCxnQkFDUCxtR0FDR0YsTUFBTTtvQkFFWGEsWUFBWTtvQkFDWkcsUUFBUVg7Z0JBQ1Y7Z0JBQ0E7b0JBQ0UsT0FBTztvQkFDUEYsU0FBU0QsZ0JBQ1AsdUNBQXVDRixNQUFNO29CQUUvQ2EsWUFBWTtvQkFDWkcsUUFBUVg7Z0JBQ1Y7Z0JBQ0E7b0JBQ0Usa0RBQWtEO29CQUNsREYsU0FBU0QsZ0JBQWdCLHFDQUFxQ0YsTUFBTTtvQkFDcEVnQixRQUFRWDtnQkFDVjthQUNEO1lBQ0RhLFNBQVM7Z0JBQ1BmLFNBQVM7Z0JBQ1RVLFlBQVk7Z0JBQ1pFLE9BQU87WUFDVDtZQUNBVCxTQUFTUjtZQUNUcUIsVUFBVTtZQUNWQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsVUFDRTtZQUNGZixhQUFhO1FBQ2Y7SUFDRixHQUFHWDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FwZXguanM/MThjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5pbXBvcnQgcmVmcmFjdG9yU3FsIGZyb20gJy4vc3FsLmpzJ1xuYXBleC5kaXNwbGF5TmFtZSA9ICdhcGV4J1xuYXBleC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcGV4KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JTcWwpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGtleXdvcmRzID1cbiAgICAgIC9cXGIoPzooPzphZnRlcnxiZWZvcmUpKD89XFxzK1thLXpdKXxhYnN0cmFjdHxhY3RpdmF0ZXxhbmR8YW55fGFycmF5fGFzfGFzY3xhdXRvbm9tb3VzfGJlZ2lufGJpZ2RlY2ltYWx8YmxvYnxib29sZWFufGJyZWFrfGJ1bGt8Ynl8Ynl0ZXxjYXNlfGNhc3R8Y2F0Y2h8Y2hhcnxjbGFzc3xjb2xsZWN0fGNvbW1pdHxjb25zdHxjb250aW51ZXxjdXJyZW5jeXxkYXRlfGRhdGV0aW1lfGRlY2ltYWx8ZGVmYXVsdHxkZWxldGV8ZGVzY3xkb3xkb3VibGV8ZWxzZXxlbmR8ZW51bXxleGNlcHRpb258ZXhpdHxleHBvcnR8ZXh0ZW5kc3xmaW5hbHxmaW5hbGx5fGZsb2F0fGZvcnxmcm9tfGdldCg/PVxccypbe307XSl8Z2xvYmFsfGdvdG98Z3JvdXB8aGF2aW5nfGhpbnR8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5uZXJ8aW5zZXJ0fGluc3RhbmNlb2Z8aW50fGludGVnZXJ8aW50ZXJmYWNlfGludG98am9pbnxsaWtlfGxpbWl0fGxpc3R8bG9uZ3xsb29wfG1hcHxtZXJnZXxuZXd8bm90fG51bGx8bnVsbHN8bnVtYmVyfG9iamVjdHxvZnxvbnxvcnxvdXRlcnxvdmVycmlkZXxwYWNrYWdlfHBhcmFsbGVsfHByYWdtYXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0cmlldmV8cmV0dXJufHJvbGxiYWNrfHNlbGVjdHxzZXR8c2hvcnR8c09iamVjdHxzb3J0fHN0YXRpY3xzdHJpbmd8c3VwZXJ8c3dpdGNofHN5bmNocm9uaXplZHxzeXN0ZW18dGVzdG1ldGhvZHx0aGVufHRoaXN8dGhyb3d8dGltZXx0cmFuc2FjdGlvbnx0cmFuc2llbnR8dHJpZ2dlcnx0cnl8dW5kZWxldGV8dXBkYXRlfHVwc2VydHx1c2luZ3x2aXJ0dWFsfHZvaWR8d2Vic2VydmljZXx3aGVufHdoZXJlfHdoaWxlfCg/OmluaGVyaXRlZHx3aXRofHdpdGhvdXQpXFxzK3NoYXJpbmcpXFxiL2lcbiAgICB2YXIgY2xhc3NOYW1lID1cbiAgICAgIC9cXGIoPzooPz1bYS16X11cXHcqXFxzKls8XFxbXSl8KD8hPGtleXdvcmQ+KSlbQS1aX11cXHcqKD86XFxzKlxcLlxccypbQS1aX11cXHcqKSpcXGIoPzpcXHMqKD86XFxbXFxzKlxcXXw8KD86W148Pl18PCg/OltePD5dfDxbXjw+XSo+KSo+KSo+KSkqLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgLzxrZXl3b3JkPi9nLFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGtleXdvcmRzLnNvdXJjZVxuICAgICAgICB9XG4gICAgICApXG4gICAgLyoqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuICovXG4gICAgZnVuY3Rpb24gaW5zZXJ0Q2xhc3NOYW1lKHBhdHRlcm4pIHtcbiAgICAgIHJldHVybiBSZWdFeHAoXG4gICAgICAgIHBhdHRlcm4ucmVwbGFjZSgvPENMQVNTLU5BTUU+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gY2xhc3NOYW1lXG4gICAgICAgIH0pLFxuICAgICAgICAnaSdcbiAgICAgIClcbiAgICB9XG4gICAgdmFyIGNsYXNzTmFtZUluc2lkZSA9IHtcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgcHVuY3R1YXRpb246IC9bKClcXFtcXF17fTssOi48Pl0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5hcGV4ID0ge1xuICAgICAgY29tbWVudDogUHJpc20ubGFuZ3VhZ2VzLmNsaWtlLmNvbW1lbnQsXG4gICAgICBzdHJpbmc6IFByaXNtLmxhbmd1YWdlcy5jbGlrZS5zdHJpbmcsXG4gICAgICBzcWw6IHtcbiAgICAgICAgcGF0dGVybjogLygoPzpbPSwoezpdfFxcYnJldHVybilcXHMqKVxcW1teXFxbXFxdXSpcXF0vaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLXNxbCcsXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnNxbFxuICAgICAgfSxcbiAgICAgIGFubm90YXRpb246IHtcbiAgICAgICAgcGF0dGVybjogL0BcXHcrXFxiLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IGluc2VydENsYXNzTmFtZShcbiAgICAgICAgICAgIC8oXFxiKD86Y2xhc3N8ZW51bXxleHRlbmRzfGltcGxlbWVudHN8aW5zdGFuY2VvZnxpbnRlcmZhY2V8bmV3fHRyaWdnZXJcXHMrXFx3K1xccytvbilcXHMrKTxDTEFTUy1OQU1FPi9cbiAgICAgICAgICAgICAgLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNsYXNzTmFtZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gY2FzdFxuICAgICAgICAgIHBhdHRlcm46IGluc2VydENsYXNzTmFtZShcbiAgICAgICAgICAgIC8oXFwoXFxzKik8Q0xBU1MtTkFNRT4oPz1cXHMqXFwpXFxzKltcXHcoXSkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IGNsYXNzTmFtZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gdmFyaWFibGUvcGFyYW1ldGVyIGRlY2xhcmF0aW9uIGFuZCByZXR1cm4gdHlwZXNcbiAgICAgICAgICBwYXR0ZXJuOiBpbnNlcnRDbGFzc05hbWUoLzxDTEFTUy1OQU1FPig/PVxccypcXHcrXFxzKls7PSwoKXs6XSkvLnNvdXJjZSksXG4gICAgICAgICAgaW5zaWRlOiBjbGFzc05hbWVJbnNpZGVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHRyaWdnZXI6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXGJ0cmlnZ2VyXFxzKylcXHcrXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICAgIG51bWJlcjogLyg/OlxcQlxcLlxcZCt8XFxiXFxkKyg/OlxcLlxcZCt8TCk/KVxcYi9pLFxuICAgICAgb3BlcmF0b3I6XG4gICAgICAgIC9bIT1dKD86PT0/KT98XFw/XFwuP3wmJnxcXHxcXHx8LS18XFwrXFwrfFstKyovXiZ8XT0/fDp8PDw/PT98PnsxLDN9PT8vLFxuICAgICAgcHVuY3R1YXRpb246IC9bKClcXFtcXF17fTssLl0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsInJlZnJhY3RvclNxbCIsImFwZXgiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwia2V5d29yZHMiLCJjbGFzc05hbWUiLCJzb3VyY2UiLCJyZXBsYWNlIiwiaW5zZXJ0Q2xhc3NOYW1lIiwicGF0dGVybiIsIlJlZ0V4cCIsImNsYXNzTmFtZUluc2lkZSIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJjbGlrZSIsInN0cmluZyIsInNxbCIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsImFubm90YXRpb24iLCJ0cmlnZ2VyIiwiZnVuY3Rpb24iLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ apl)\n/* harmony export */ });\n// @ts-nocheck\napl.displayName = \"apl\";\napl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function apl(Prism) {\n    Prism.languages.apl = {\n        comment: /(?:⍝|#[! ]).*$/m,\n        string: {\n            pattern: /'(?:[^'\\r\\n]|'')*'/,\n            greedy: true\n        },\n        number: /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n        statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n        \"system-function\": {\n            pattern: /⎕[A-Z]+/i,\n            alias: \"function\"\n        },\n        constant: /[⍬⌾#⎕⍞]/,\n        function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n        \"monadic-operator\": {\n            pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n            alias: \"operator\"\n        },\n        \"dyadic-operator\": {\n            pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n            alias: \"operator\"\n        },\n        assignment: {\n            pattern: /←/,\n            alias: \"keyword\"\n        },\n        punctuation: /[\\[;\\]()◇⋄]/,\n        dfn: {\n            pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n            alias: \"builtin\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcGwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUNFO1FBQ0ZDLFdBQVc7UUFDWCxtQkFBbUI7WUFDakJILFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0FDLFVBQVU7UUFDVkMsVUFBVTtRQUNWLG9CQUFvQjtZQUNsQk4sU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQSxtQkFBbUI7WUFDakJKLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0FHLFlBQVk7WUFDVlAsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQUksYUFBYTtRQUNiQyxLQUFLO1lBQ0hULFNBQVM7WUFDVEksT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcGwuanM/MTE3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYXBsLmRpc3BsYXlOYW1lID0gJ2FwbCdcbmFwbC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFwbCA9IHtcbiAgICBjb21tZW50OiAvKD864o2dfCNbISBdKS4qJC9tLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLycoPzpbXidcXHJcXG5dfCcnKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgbnVtYmVyOlxuICAgICAgL8KvPyg/OlxcZCpcXC4/XFxiXFxkKyg/OmVbK8KvXT9cXGQrKT98wq984oieKSg/OmrCrz8oPzooPzpcXGQrKD86XFwuXFxkKyk/fFxcLlxcZCspKD86ZVsrwq9dP1xcZCspP3zCr3ziiJ4pKT8vaSxcbiAgICBzdGF0ZW1lbnQ6IC86W0EtWl1bYS16XVtBLVphLXpdKlxcYi8sXG4gICAgJ3N5c3RlbS1mdW5jdGlvbic6IHtcbiAgICAgIHBhdHRlcm46IC/ijpVbQS1aXSsvaSxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICBjb25zdGFudDogL1vijazijL4j4o6V4o2eXS8sXG4gICAgZnVuY3Rpb246IC9bLSvDl8O34oyI4oyK4oijfOKNs+KNuD8q4o2f4peLIeKMuTziiaQ9PuKJpeKJoOKJoeKJouKIiuKNt+KIquKIqX7iiKjiiKfijbHijbLijbQs4o2q4oy94oqW4o2J4oaR4oaT4oqC4oqD4oqG4oqH4oy34o2L4o2S4oqk4oql4o2V4o2O4oqj4oqi4o2B4o2C4omI4o2v4oaXwqTihpJdLyxcbiAgICAnbW9uYWRpYy1vcGVyYXRvcic6IHtcbiAgICAgIHBhdHRlcm46IC9bXFxcXFxcL+KMv+KNgMKo4o2o4oy2JuKIpV0vLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgICdkeWFkaWMtb3BlcmF0b3InOiB7XG4gICAgICBwYXR0ZXJuOiAvWy7ijaPijaDijaTiiJjijLhA4oy64o2lXS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgYXNzaWdubWVudDoge1xuICAgICAgcGF0dGVybjogL+KGkC8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFs7XFxdKCnil4fii4RdLyxcbiAgICBkZm46IHtcbiAgICAgIHBhdHRlcm46IC9be33ijbrijbXijbbijbniiIfijas6XS8sXG4gICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiYXBsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsIm51bWJlciIsInN0YXRlbWVudCIsImFsaWFzIiwiY29uc3RhbnQiLCJmdW5jdGlvbiIsImFzc2lnbm1lbnQiLCJwdW5jdHVhdGlvbiIsImRmbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/applescript.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/applescript.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ applescript)\n/* harmony export */ });\n// @ts-nocheck\napplescript.displayName = \"applescript\";\napplescript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function applescript(Prism) {\n    Prism.languages.applescript = {\n        comment: [\n            // Allow one level of nesting\n            /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n            /--.+/,\n            /#.+/\n        ],\n        string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n        operator: [\n            /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n            /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n        ],\n        keyword: /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n        \"class-name\": /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n        punctuation: /[{}():,¬«»《》]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcHBsZXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxZQUFZQyxXQUFXLEdBQUc7QUFDMUJELFlBQVlFLE9BQU8sR0FBRyxFQUFFO0FBRXhCLHdDQUF3QyxHQUN6QixTQUFTRixZQUFZRyxLQUFLO0lBQ3ZDQSxNQUFNQyxTQUFTLENBQUNKLFdBQVcsR0FBRztRQUM1QkssU0FBUztZQUNQLDZCQUE2QjtZQUM3QjtZQUNBO1lBQ0E7U0FDRDtRQUNEQyxRQUFRO1FBQ1JDLFFBQVE7UUFDUkMsVUFBVTtZQUNSO1lBQ0E7U0FDRDtRQUNEQyxTQUNFO1FBQ0YsY0FDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcHBsZXNjcmlwdC5qcz9jMTgwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5hcHBsZXNjcmlwdC5kaXNwbGF5TmFtZSA9ICdhcHBsZXNjcmlwdCdcbmFwcGxlc2NyaXB0LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGFwcGxlc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5hcHBsZXNjcmlwdCA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICAvLyBBbGxvdyBvbmUgbGV2ZWwgb2YgbmVzdGluZ1xuICAgICAgL1xcKFxcKig/OlxcKFxcKig/OlteKl18XFwqKD8hXFwpKSkqXFwqXFwpfCg/IVxcKFxcKilbXFxzXFxTXSkqP1xcKlxcKS8sXG4gICAgICAvLS0uKy8sXG4gICAgICAvIy4rL1xuICAgIF0sXG4gICAgc3RyaW5nOiAvXCIoPzpcXFxcLnxbXlwiXFxcXFxcclxcbl0pKlwiLyxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZS0/XFxkKyk/XFxiL2ksXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9bJj3iiaDiiaTiiaUqK1xcLVxcL8O3Xl18Wzw+XT0/LyxcbiAgICAgIC9cXGIoPzooPzpiZWdpbnxlbmR8c3RhcnQpcz8gd2l0aHwoPzpjb250YWlucz98KD86ZG9lcyBub3R8ZG9lc24ndCkgY29udGFpbil8KD86aXN8aXNuJ3R8aXMgbm90KSAoPzpjb250YWluZWQgYnl8aW4pfCg/Oig/OmlzfGlzbid0fGlzIG5vdCkgKT8oPzpncmVhdGVyfGxlc3MpIHRoYW4oPzogb3IgZXF1YWwpPyg/OiB0byk/fCg/OmNvbWVzfCg/OmRvZXMgbm90fGRvZXNuJ3QpIGNvbWUpICg/OmFmdGVyfGJlZm9yZSl8KD86aXN8aXNuJ3R8aXMgbm90KSBlcXVhbCg/OiB0byk/fCg/Oig/OmRvZXMgbm90fGRvZXNuJ3QpIGVxdWFsfGVxdWFsIHRvfGVxdWFsc3xpcyBub3R8aXNuJ3QpfCg/OmEgKT8oPzpyZWYoPzogdG8pP3xyZWZlcmVuY2UgdG8pfCg/OmFuZHxhc3xkaXZ8bW9kfG5vdHxvcikpXFxiL1xuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYm91dHxhYm92ZXxhZnRlcnxhZ2FpbnN0fGFwYXJ0IGZyb218YXJvdW5kfGFzaWRlIGZyb218YXR8YmFja3xiZWZvcmV8YmVnaW5uaW5nfGJlaGluZHxiZWxvd3xiZW5lYXRofGJlc2lkZXxiZXR3ZWVufGJ1dHxieXxjb25zaWRlcmluZ3xjb250aW51ZXxjb3B5fGRvZXN8ZWlnaHRofGVsc2V8ZW5kfGVxdWFsfGVycm9yfGV2ZXJ5fGV4aXR8ZmFsc2V8ZmlmdGh8Zmlyc3R8Zm9yfGZvdXJ0aHxmcm9tfGZyb250fGdldHxnaXZlbnxnbG9iYWx8aWZ8aWdub3Jpbmd8aW58aW5zdGVhZCBvZnxpbnRvfGlzfGl0fGl0c3xsYXN0fGxvY2FsfG1lfG1pZGRsZXxteXxuaW50aHxvZnxvbnxvbnRvfG91dCBvZnxvdmVyfHByb3B8cHJvcGVydHl8cHV0fHJlcGVhdHxyZXR1cm58cmV0dXJuaW5nfHNlY29uZHxzZXR8c2V2ZW50aHxzaW5jZXxzaXh0aHxzb21lfHRlbGx8dGVudGh8dGhhdHx0aGV8dGhlbnx0aGlyZHx0aHJvdWdofHRocnV8dGltZW91dHx0aW1lc3x0b3x0cmFuc2FjdGlvbnx0cnVlfHRyeXx1bnRpbHx3aGVyZXx3aGlsZXx3aG9zZXx3aXRofHdpdGhvdXQpXFxiLyxcbiAgICAnY2xhc3MtbmFtZSc6XG4gICAgICAvXFxiKD86UE9TSVggZmlsZXxSR0IgY29sb3J8YWxpYXN8YXBwbGljYXRpb258Ym9vbGVhbnxjZW50aW1ldGVyc3xjZW50aW1ldHJlc3xjbGFzc3xjb25zdGFudHxjdWJpYyBjZW50aW1ldGVyc3xjdWJpYyBjZW50aW1ldHJlc3xjdWJpYyBmZWV0fGN1YmljIGluY2hlc3xjdWJpYyBtZXRlcnN8Y3ViaWMgbWV0cmVzfGN1YmljIHlhcmRzfGRhdGV8ZGVncmVlcyBDZWxzaXVzfGRlZ3JlZXMgRmFocmVuaGVpdHxkZWdyZWVzIEtlbHZpbnxmZWV0fGZpbGV8Z2FsbG9uc3xncmFtc3xpbmNoZXN8aW50ZWdlcnxraWxvZ3JhbXN8a2lsb21ldGVyc3xraWxvbWV0cmVzfGxpc3R8bGl0ZXJzfGxpdHJlc3xtZXRlcnN8bWV0cmVzfG1pbGVzfG51bWJlcnxvdW5jZXN8cG91bmRzfHF1YXJ0c3xyZWFsfHJlY29yZHxyZWZlcmVuY2V8c2NyaXB0fHNxdWFyZSBmZWV0fHNxdWFyZSBraWxvbWV0ZXJzfHNxdWFyZSBraWxvbWV0cmVzfHNxdWFyZSBtZXRlcnN8c3F1YXJlIG1ldHJlc3xzcXVhcmUgbWlsZXN8c3F1YXJlIHlhcmRzfHRleHR8eWFyZHMpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fSgpOizCrMKrwrvjgIrjgItdL1xuICB9XG59XG4iXSwibmFtZXMiOlsiYXBwbGVzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJudW1iZXIiLCJvcGVyYXRvciIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/applescript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aql.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aql.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ aql)\n/* harmony export */ });\n// @ts-nocheck\naql.displayName = \"aql\";\naql.aliases = [];\n/** @type {import('../core.js').Syntax} */ function aql(Prism) {\n    Prism.languages.aql = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        property: {\n            pattern: /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n            greedy: true\n        },\n        identifier: {\n            pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n            greedy: true\n        },\n        variable: /@@?\\w+/,\n        keyword: [\n            {\n                pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n                lookbehind: true\n            },\n            /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i,\n            // pseudo keywords get a lookbehind to avoid false positives\n            {\n                pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n                lookbehind: true\n            },\n            {\n                pattern: /\\bOPTIONS(?=\\s*\\{)/i\n            }\n        ],\n        function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n        boolean: /\\b(?:false|true)\\b/i,\n        range: {\n            pattern: /\\.\\./,\n            alias: \"operator\"\n        },\n        number: [\n            /\\b0b[01]+/i,\n            /\\b0x[0-9a-f]+/i,\n            /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n        ],\n        operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n        punctuation: /::|[?.:,;()[\\]{}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsVUFBVTtZQUNSQyxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsWUFBWTtZQUNWSixTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBRyxVQUFVO1FBQ1ZDLFNBQVM7WUFDUDtnQkFDRU4sU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0E7WUFDQSw0REFBNEQ7WUFDNUQ7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUQsU0FBUztZQUNYO1NBQ0Q7UUFDRE8sVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLE9BQU87WUFDTFQsU0FBUztZQUNUVSxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXFsLmpzPzVkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmFxbC5kaXNwbGF5TmFtZSA9ICdhcWwnXG5hcWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXFsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5hcWwgPSB7XG4gICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFt7LF1cXHMqKSg/Oig/IVxcZClcXHcrfChbXCInwrRgXSkoPzooPyFcXDIpW15cXFxcXFxyXFxuXXxcXFxcLikqXFwyKSg/PVxccyo6KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86KD8hXFwxKVteXFxcXFxcclxcbl18XFxcXC4pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGlkZW50aWZpZXI6IHtcbiAgICAgIHBhdHRlcm46IC8oW8K0YF0pKD86KD8hXFwxKVteXFxcXFxcclxcbl18XFxcXC4pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZhcmlhYmxlOiAvQEA/XFx3Ky8sXG4gICAga2V5d29yZDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcYldJVEhcXHMrKUNPVU5UKD89XFxzK0lOVE9cXGIpL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvXFxiKD86QUdHUkVHQVRFfEFMTHxBTkR8QU5ZfEFTQ3xDT0xMRUNUfERFU0N8RElTVElOQ1R8RklMVEVSfEZPUnxHUkFQSHxJTnxJTkJPVU5EfElOU0VSVHxJTlRPfEtfUEFUSFN8S19TSE9SVEVTVF9QQVRIU3xMRVR8TElLRXxMSU1JVHxOT05FfE5PVHxOVUxMfE9SfE9VVEJPVU5EfFJFTU9WRXxSRVBMQUNFfFJFVFVSTnxTSE9SVEVTVF9QQVRIfFNPUlR8VVBEQVRFfFVQU0VSVHxXSU5ET1d8V0lUSClcXGIvaSxcbiAgICAgIC8vIHBzZXVkbyBrZXl3b3JkcyBnZXQgYSBsb29rYmVoaW5kIHRvIGF2b2lkIGZhbHNlIHBvc2l0aXZlc1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXHcuW10pKD86S0VFUHxQUlVORXxTRUFSQ0h8VE8pXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcdy5bXSkoPzpDVVJSRU5UfE5FV3xPTEQpXFxiLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYk9QVElPTlMoPz1cXHMqXFx7KS9pXG4gICAgICB9XG4gICAgXSxcbiAgICBmdW5jdGlvbjogL1xcYig/IVxcZClcXHcrKD89XFxzKlxcKCkvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi9pLFxuICAgIHJhbmdlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwuXFwuLyxcbiAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgfSxcbiAgICBudW1iZXI6IFtcbiAgICAgIC9cXGIwYlswMV0rL2ksXG4gICAgICAvXFxiMHhbMC05YS1mXSsvaSxcbiAgICAgIC8oPzpcXEJcXC5cXGQrfFxcYig/OjB8WzEtOV1cXGQqKSg/OlxcLlxcZCspPykoPzplWystXT9cXGQrKT8vaVxuICAgIF0sXG4gICAgb3BlcmF0b3I6IC9cXCp7Mix9fFs9IV1+fFshPTw+XT0/fCYmfFxcfFxcfHxbLSsqLyVdLyxcbiAgICBwdW5jdHVhdGlvbjogLzo6fFs/LjosOygpW1xcXXt9XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImFxbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInByb3BlcnR5IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJpZGVudGlmaWVyIiwidmFyaWFibGUiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJib29sZWFuIiwicmFuZ2UiLCJhbGlhcyIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arduino.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arduino.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ arduino)\n/* harmony export */ });\n/* harmony import */ var _cpp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cpp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js\");\n// @ts-nocheck\n\narduino.displayName = \"arduino\";\narduino.aliases = [\n    \"ino\"\n];\n/** @type {import('../core.js').Syntax} */ function arduino(Prism) {\n    Prism.register(_cpp_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.arduino = Prism.languages.extend(\"cpp\", {\n        keyword: /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n        constant: /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n        builtin: /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n    });\n    Prism.languages.ino = Prism.languages.arduino;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcmR1aW5vLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNuQ0MsUUFBUUMsV0FBVyxHQUFHO0FBQ3RCRCxRQUFRRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBRXpCLHdDQUF3QyxHQUN6QixTQUFTRixRQUFRRyxLQUFLO0lBQ25DQSxNQUFNQyxRQUFRLENBQUNMLCtDQUFZQTtJQUMzQkksTUFBTUUsU0FBUyxDQUFDTCxPQUFPLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLE9BQU87UUFDdERDLFNBQ0U7UUFDRkMsVUFDRTtRQUNGQyxTQUNFO0lBQ0o7SUFDQU4sTUFBTUUsU0FBUyxDQUFDSyxHQUFHLEdBQUdQLE1BQU1FLFNBQVMsQ0FBQ0wsT0FBTztBQUMvQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcmR1aW5vLmpzP2Q1NzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDcHAgZnJvbSAnLi9jcHAuanMnXG5hcmR1aW5vLmRpc3BsYXlOYW1lID0gJ2FyZHVpbm8nXG5hcmR1aW5vLmFsaWFzZXMgPSBbJ2lubyddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXJkdWlubyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDcHApXG4gIFByaXNtLmxhbmd1YWdlcy5hcmR1aW5vID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY3BwJywge1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86U3RyaW5nfGFycmF5fGJvb2x8Ym9vbGVhbnxicmVha3xieXRlfGNhc2V8Y2F0Y2h8Y29udGludWV8ZGVmYXVsdHxkb3xkb3VibGV8ZWxzZXxmaW5hbGx5fGZvcnxmdW5jdGlvbnxnb3RvfGlmfGlufGluc3RhbmNlb2Z8aW50fGludGVnZXJ8bG9uZ3xsb29wfG5ld3xudWxsfHJldHVybnxzZXR1cHxzdHJpbmd8c3dpdGNofHRocm93fHRyeXx2b2lkfHdoaWxlfHdvcmQpXFxiLyxcbiAgICBjb25zdGFudDpcbiAgICAgIC9cXGIoPzpBTkFMT0dfTUVTU0FHRXxERUZBVUxUfERJR0lUQUxfTUVTU0FHRXxFWFRFUk5BTHxGSVJNQVRBX1NUUklOR3xISUdIfElOUFVUfElOUFVUX1BVTExVUHxJTlRFUk5BTHxJTlRFUk5BTDFWMXxJTlRFUk5BTDJWNTZ8TEVEX0JVSUxUSU58TE9XfE9VVFBVVHxSRVBPUlRfQU5BTE9HfFJFUE9SVF9ESUdJVEFMfFNFVF9QSU5fTU9ERXxTWVNFWF9TVEFSVHxTWVNURU1fUkVTRVQpXFxiLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OkF1ZGlvfEJTU0lEfEJyaWRnZXxDbGllbnR8Q29uc29sZXxFRVBST018RXNwbG9yYXxFc3Bsb3JhVEZUfEV0aGVybmV0fEV0aGVybmV0Q2xpZW50fEV0aGVybmV0U2VydmVyfEV0aGVybmV0VURQfEZpbGV8RmlsZUlPfEZpbGVTeXN0ZW18RmlybWF0YXxHUFJTfEdTTXxHU01CYW5kfEdTTUNsaWVudHxHU01Nb2RlbXxHU01QSU58R1NNU2Nhbm5lcnxHU01TZXJ2ZXJ8R1NNVm9pY2VDYWxsfEdTTV9TTVN8SHR0cENsaWVudHxJUEFkZHJlc3N8SVJyZWFkfEtleWJvYXJkfEtleWJvYXJkQ29udHJvbGxlcnxMaXF1aWRDcnlzdGFsfExpcXVpZENyeXN0YWxfSTJDfE1haWxib3h8TW91c2V8TW91c2VDb250cm9sbGVyfFBJbWFnZXxQcm9jZXNzfFJTU0l8Um9ib3RDb250cm9sfFJvYm90TW90b3J8U0R8U1BJfFNTSUR8U2NoZWR1bGVyfFNlcmlhbHxTZXJ2ZXJ8U2Vydm98U29mdHdhcmVTZXJpYWx8U3RlcHBlcnxTdHJlYW18VEZUfFRhc2t8VVNCSG9zdHxXaUZpfFdpRmlDbGllbnR8V2lGaVNlcnZlcnxXaUZpVURQfFdpcmV8WXVuQ2xpZW50fFl1blNlcnZlcnxhYnN8YWRkUGFyYW1ldGVyfGFuYWxvZ1JlYWR8YW5hbG9nUmVhZFJlc29sdXRpb258YW5hbG9nUmVmZXJlbmNlfGFuYWxvZ1dyaXRlfGFuYWxvZ1dyaXRlUmVzb2x1dGlvbnxhbnN3ZXJDYWxsfGF0dGFjaHxhdHRhY2hHUFJTfGF0dGFjaEludGVycnVwdHxhdHRhY2hlZHxhdXRvc2Nyb2xsfGF2YWlsYWJsZXxiYWNrZ3JvdW5kfGJlZXB8YmVnaW58YmVnaW5QYWNrZXR8YmVnaW5TRHxiZWdpblNNU3xiZWdpblNwZWFrZXJ8YmVnaW5URlR8YmVnaW5UcmFuc21pc3Npb258YmVnaW5Xcml0ZXxiaXR8Yml0Q2xlYXJ8Yml0UmVhZHxiaXRTZXR8Yml0V3JpdGV8Ymxpbmt8YmxpbmtWZXJzaW9ufGJ1ZmZlcnxjaGFuZ2VQSU58Y2hlY2tQSU58Y2hlY2tQVUt8Y2hlY2tSZWd8Y2lyY2xlfGNpdHlOYW1lUmVhZHxjaXR5TmFtZVdyaXRlfGNsZWFyfGNsZWFyU2NyZWVufGNsaWNrfGNsb3NlfGNvbXBhc3NSZWFkfGNvbmZpZ3xjb25uZWN0fGNvbm5lY3RlZHxjb25zdHJhaW58Y29zfGNvdW50cnlOYW1lUmVhZHxjb3VudHJ5TmFtZVdyaXRlfGNyZWF0ZUNoYXJ8Y3Vyc29yfGRlYnVnUHJpbnR8ZGVsYXl8ZGVsYXlNaWNyb3NlY29uZHN8ZGV0YWNofGRldGFjaEludGVycnVwdHxkaWdpdGFsUmVhZHxkaWdpdGFsV3JpdGV8ZGlzY29ubmVjdHxkaXNwbGF5fGRpc3BsYXlMb2dvc3xkcmF3Qk1QfGRyYXdDb21wYXNzfGVuY3J5cHRpb25UeXBlfGVuZHxlbmRQYWNrZXR8ZW5kU01TfGVuZFRyYW5zbWlzc2lvbnxlbmRXcml0ZXxleGlzdHN8ZXhpdFZhbHVlfGZpbGx8ZmluZHxmaW5kVW50aWx8Zmx1c2h8Z2F0ZXdheUlQfGdldHxnZXRBc3luY2hyb25vdXNseXxnZXRCYW5kfGdldEJ1dHRvbnxnZXRDdXJyZW50Q2FycmllcnxnZXRJTUVJfGdldEtleXxnZXRNb2RpZmllcnN8Z2V0T2VtS2V5fGdldFBJTlVzZWR8Z2V0UmVzdWx0fGdldFNpZ25hbFN0cmVuZ3RofGdldFNvY2tldHxnZXRWb2ljZUNhbGxTdGF0dXN8Z2V0WENoYW5nZXxnZXRZQ2hhbmdlfGhhbmdDYWxsfGhlaWdodHxoaWdoQnl0ZXxob21lfGltYWdlfGludGVycnVwdHN8aXNBY3Rpb25Eb25lfGlzRGlyZWN0b3J5fGlzTGlzdGVuaW5nfGlzUElOfGlzUHJlc3NlZHxpc1ZhbGlkfGtleVByZXNzZWR8a2V5UmVsZWFzZWR8a2V5Ym9hcmRSZWFkfGtub2JSZWFkfGxlZnRUb1JpZ2h0fGxpbmV8bGluZUZvbGxvd0NvbmZpZ3xsaXN0ZW58bGlzdGVuT25Mb2NhbGhvc3R8bG9hZEltYWdlfGxvY2FsSVB8bG93Qnl0ZXxtYWNBZGRyZXNzfG1haW50YWlufG1hcHxtYXh8bWVzc2FnZUF2YWlsYWJsZXxtaWNyb3N8bWlsbGlzfG1pbnxta2Rpcnxtb3RvcnNTdG9wfG1vdG9yc1dyaXRlfG1vdXNlRHJhZ2dlZHxtb3VzZU1vdmVkfG1vdXNlUHJlc3NlZHxtb3VzZVJlbGVhc2VkfG1vdmV8bm9BdXRvc2Nyb2xsfG5vQmxpbmt8bm9CdWZmZXJ8bm9DdXJzb3J8bm9EaXNwbGF5fG5vRmlsbHxub0ludGVycnVwdHN8bm9MaXN0ZW5PbkxvY2FsaG9zdHxub1N0cm9rZXxub1RvbmV8b25SZWNlaXZlfG9uUmVxdWVzdHxvcGVufG9wZW5OZXh0RmlsZXxvdmVyZmxvd3xwYXJzZUNvbW1hbmR8cGFyc2VGbG9hdHxwYXJzZUludHxwYXJzZVBhY2tldHxwYXVzZU1vZGV8cGVla3xwaW5Nb2RlfHBsYXlGaWxlfHBsYXlNZWxvZHl8cG9pbnR8cG9pbnRUb3xwb3NpdGlvbnxwb3d8cHJlcGFyZXxwcmVzc3xwcmludHxwcmludEZpcm13YXJlVmVyc2lvbnxwcmludFZlcnNpb258cHJpbnRsbnxwcm9jZXNzfHByb2Nlc3NJbnB1dHxwdWxzZUlufHB1dHxyYW5kb218cmFuZG9tU2VlZHxyZWFkfHJlYWRBY2NlbGVyb21ldGVyfHJlYWRCbHVlfHJlYWRCdXR0b258cmVhZEJ5dGVzfHJlYWRCeXRlc1VudGlsfHJlYWRHcmVlbnxyZWFkSm95c3RpY2tCdXR0b258cmVhZEpveXN0aWNrU3dpdGNofHJlYWRKb3lzdGlja1h8cmVhZEpveXN0aWNrWXxyZWFkTGlnaHRTZW5zb3J8cmVhZE1lc3NhZ2V8cmVhZE1pY3JvcGhvbmV8cmVhZE5ldHdvcmtzfHJlYWRSZWR8cmVhZFNsaWRlcnxyZWFkU3RyaW5nfHJlYWRTdHJpbmdVbnRpbHxyZWFkVGVtcGVyYXR1cmV8cmVhZHl8cmVjdHxyZWxlYXNlfHJlbGVhc2VBbGx8cmVtb3RlSVB8cmVtb3RlTnVtYmVyfHJlbW90ZVBvcnR8cmVtb3ZlfHJlcXVlc3RGcm9tfHJldHJpZXZlQ2FsbGluZ051bWJlcnxyZXdpbmREaXJlY3Rvcnl8cmlnaHRUb0xlZnR8cm1kaXJ8cm9ib3ROYW1lUmVhZHxyb2JvdE5hbWVXcml0ZXxydW58cnVuQXN5bmNocm9ub3VzbHl8cnVuU2hlbGxDb21tYW5kfHJ1blNoZWxsQ29tbWFuZEFzeW5jaHJvbm91c2x5fHJ1bm5pbmd8c2Nhbk5ldHdvcmtzfHNjcm9sbERpc3BsYXlMZWZ0fHNjcm9sbERpc3BsYXlSaWdodHxzZWVrfHNlbmRBbmFsb2d8c2VuZERpZ2l0YWxQb3J0UGFpcnxzZW5kRGlnaXRhbFBvcnRzfHNlbmRTdHJpbmd8c2VuZFN5c2V4fHNlcmlhbEV2ZW50fHNldEJhbmR8c2V0Qml0T3JkZXJ8c2V0Q2xvY2tEaXZpZGVyfHNldEN1cnNvcnxzZXRETlN8c2V0RGF0YU1vZGV8c2V0RmlybXdhcmVWZXJzaW9ufHNldE1vZGV8c2V0UElOVXNlZHxzZXRTcGVlZHxzZXRUZXh0U2l6ZXxzZXRUaW1lb3V0fHNoaWZ0SW58c2hpZnRPdXR8c2h1dGRvd258c2lufHNpemV8c3FydHxzdGFydExvb3B8c3RlcHxzdG9wfHN0cm9rZXxzdWJuZXRNYXNrfHN3aXRjaFBJTnx0YW58dGVtcG9Xcml0ZXx0ZXh0fHRvbmV8dHJhbnNmZXJ8dHVuZVdyaXRlfHR1cm58dXBkYXRlSVJ8dXNlck5hbWVSZWFkfHVzZXJOYW1lV3JpdGV8dm9pY2VDYWxsfHdhaXRDb250aW51ZXx3aWR0aHx3cml0ZXx3cml0ZUJsdWV8d3JpdGVHcmVlbnx3cml0ZUpTT058d3JpdGVNZXNzYWdlfHdyaXRlTWljcm9zZWNvbmRzfHdyaXRlUkdCfHdyaXRlUmVkfHlpZWxkKVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmlubyA9IFByaXNtLmxhbmd1YWdlcy5hcmR1aW5vXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ3BwIiwiYXJkdWlubyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwiY29uc3RhbnQiLCJidWlsdGluIiwiaW5vIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arduino.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arff.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arff.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ arff)\n/* harmony export */ });\n// @ts-nocheck\narff.displayName = \"arff\";\narff.aliases = [];\n/** @type {import('../core.js').Syntax} */ function arff(Prism) {\n    Prism.languages.arff = {\n        comment: /%.*/,\n        string: {\n            pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: /@(?:attribute|data|end|relation)\\b/i,\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        punctuation: /[{},]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcmZmLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FyZmYuanM/M2ZjMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYXJmZi5kaXNwbGF5TmFtZSA9ICdhcmZmJ1xuYXJmZi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcmZmKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5hcmZmID0ge1xuICAgIGNvbW1lbnQ6IC8lLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDogL0AoPzphdHRyaWJ1dGV8ZGF0YXxlbmR8cmVsYXRpb24pXFxiL2ksXG4gICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspP1xcYi8sXG4gICAgcHVuY3R1YXRpb246IC9be30sXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImFyZmYiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm51bWJlciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arff.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/armasm.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/armasm.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ armasm)\n/* harmony export */ });\n// @ts-nocheck\narmasm.displayName = \"armasm\";\narmasm.aliases = [\n    \"arm-asm\"\n];\n/** @type {import('../core.js').Syntax} */ function armasm(Prism) {\n    Prism.languages.armasm = {\n        comment: {\n            pattern: /;.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\r\\n]|\"\")*\"/,\n            greedy: true,\n            inside: {\n                variable: {\n                    pattern: /((?:^|[^$])(?:\\${2})*)\\$\\w+/,\n                    lookbehind: true\n                }\n            }\n        },\n        char: {\n            pattern: /'(?:[^'\\r\\n]{0,4}|'')'/,\n            greedy: true\n        },\n        \"version-symbol\": {\n            pattern: /\\|[\\w@]+\\|/,\n            greedy: true,\n            alias: \"property\"\n        },\n        boolean: /\\b(?:FALSE|TRUE)\\b/,\n        directive: {\n            pattern: /\\b(?:ALIAS|ALIGN|AREA|ARM|ASSERT|ATTR|CN|CODE|CODE16|CODE32|COMMON|CP|DATA|DCB|DCD|DCDO|DCDU|DCFD|DCFDU|DCI|DCQ|DCQU|DCW|DCWU|DN|ELIF|ELSE|END|ENDFUNC|ENDIF|ENDP|ENTRY|EQU|EXPORT|EXPORTAS|EXTERN|FIELD|FILL|FN|FUNCTION|GBLA|GBLL|GBLS|GET|GLOBAL|IF|IMPORT|INCBIN|INCLUDE|INFO|KEEP|LCLA|LCLL|LCLS|LTORG|MACRO|MAP|MEND|MEXIT|NOFP|OPT|PRESERVE8|PROC|QN|READONLY|RELOC|REQUIRE|REQUIRE8|RLIST|ROUT|SETA|SETL|SETS|SN|SPACE|SUBT|THUMB|THUMBX|TTL|WEND|WHILE)\\b/,\n            alias: \"property\"\n        },\n        instruction: {\n            pattern: /((?:^|(?:^|[^\\\\])(?:\\r\\n?|\\n))[ \\t]*(?:(?:[A-Z][A-Z0-9_]*[a-z]\\w*|[a-z]\\w*|\\d+)[ \\t]+)?)\\b[A-Z.]+\\b/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        variable: /\\$\\w+/,\n        number: /(?:\\b[2-9]_\\d+|(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e-?\\d+)?|\\b0(?:[fd]_|x)[0-9a-f]+|&[0-9a-f]+)\\b/i,\n        register: {\n            pattern: /\\b(?:r\\d|lr)\\b/,\n            alias: \"symbol\"\n        },\n        operator: /<>|<<|>>|&&|\\|\\||[=!<>/]=?|[+\\-*%#?&|^]|:[A-Z]+:/,\n        punctuation: /[()[\\],]/\n    };\n    Prism.languages[\"arm-asm\"] = Prism.languages.armasm;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcm1hc20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFVO0FBRTVCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtZQUNSRSxRQUFRO2dCQUNOQyxVQUFVO29CQUNSSixTQUFTO29CQUNUSyxZQUFZO2dCQUNkO1lBQ0Y7UUFDRjtRQUNBQyxNQUFNO1lBQ0pOLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0Esa0JBQWtCO1lBQ2hCRCxTQUFTO1lBQ1RDLFFBQVE7WUFDUk0sT0FBTztRQUNUO1FBQ0FDLFNBQVM7UUFDVEMsV0FBVztZQUNUVCxTQUNFO1lBQ0ZPLE9BQU87UUFDVDtRQUNBRyxhQUFhO1lBQ1hWLFNBQ0U7WUFDRkssWUFBWTtZQUNaRSxPQUFPO1FBQ1Q7UUFDQUgsVUFBVTtRQUNWTyxRQUNFO1FBQ0ZDLFVBQVU7WUFDUlosU0FBUztZQUNUTyxPQUFPO1FBQ1Q7UUFDQU0sVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWpCLE1BQU1DLFNBQVMsQ0FBQyxVQUFVLEdBQUdELE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtBQUNyRCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcm1hc20uanM/ZTg5YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYXJtYXNtLmRpc3BsYXlOYW1lID0gJ2FybWFzbSdcbmFybWFzbS5hbGlhc2VzID0gWydhcm0tYXNtJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcm1hc20oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFybWFzbSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvOy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxyXFxuXXxcIlwiKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCg/Ol58W14kXSkoPzpcXCR7Mn0pKilcXCRcXHcrLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86W14nXFxyXFxuXXswLDR9fCcnKScvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAndmVyc2lvbi1zeW1ib2wnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFx8W1xcd0BdK1xcfC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfFRSVUUpXFxiLyxcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpBTElBU3xBTElHTnxBUkVBfEFSTXxBU1NFUlR8QVRUUnxDTnxDT0RFfENPREUxNnxDT0RFMzJ8Q09NTU9OfENQfERBVEF8RENCfERDRHxEQ0RPfERDRFV8RENGRHxEQ0ZEVXxEQ0l8RENRfERDUVV8RENXfERDV1V8RE58RUxJRnxFTFNFfEVORHxFTkRGVU5DfEVORElGfEVORFB8RU5UUll8RVFVfEVYUE9SVHxFWFBPUlRBU3xFWFRFUk58RklFTER8RklMTHxGTnxGVU5DVElPTnxHQkxBfEdCTEx8R0JMU3xHRVR8R0xPQkFMfElGfElNUE9SVHxJTkNCSU58SU5DTFVERXxJTkZPfEtFRVB8TENMQXxMQ0xMfExDTFN8TFRPUkd8TUFDUk98TUFQfE1FTkR8TUVYSVR8Tk9GUHxPUFR8UFJFU0VSVkU4fFBST0N8UU58UkVBRE9OTFl8UkVMT0N8UkVRVUlSRXxSRVFVSVJFOHxSTElTVHxST1VUfFNFVEF8U0VUTHxTRVRTfFNOfFNQQUNFfFNVQlR8VEhVTUJ8VEhVTUJYfFRUTHxXRU5EfFdISUxFKVxcYi8sXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgaW5zdHJ1Y3Rpb246IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86XnwoPzpefFteXFxcXF0pKD86XFxyXFxuP3xcXG4pKVsgXFx0XSooPzooPzpbQS1aXVtBLVowLTlfXSpbYS16XVxcdyp8W2Etel1cXHcqfFxcZCspWyBcXHRdKyk/KVxcYltBLVouXStcXGIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHZhcmlhYmxlOiAvXFwkXFx3Ky8sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYlsyLTldX1xcZCt8KD86XFxiXFxkKyg/OlxcLlxcZCspP3xcXEJcXC5cXGQrKSg/OmUtP1xcZCspP3xcXGIwKD86W2ZkXV98eClbMC05YS1mXSt8JlswLTlhLWZdKylcXGIvaSxcbiAgICByZWdpc3Rlcjoge1xuICAgICAgcGF0dGVybjogL1xcYig/OnJcXGR8bHIpXFxiLyxcbiAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgIH0sXG4gICAgb3BlcmF0b3I6IC88Pnw8PHw+PnwmJnxcXHxcXHx8Wz0hPD4vXT0/fFsrXFwtKiUjPyZ8Xl18OltBLVpdKzovLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXSxdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlc1snYXJtLWFzbSddID0gUHJpc20ubGFuZ3VhZ2VzLmFybWFzbVxufVxuIl0sIm5hbWVzIjpbImFybWFzbSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJpbnNpZGUiLCJ2YXJpYWJsZSIsImxvb2tiZWhpbmQiLCJjaGFyIiwiYWxpYXMiLCJib29sZWFuIiwiZGlyZWN0aXZlIiwiaW5zdHJ1Y3Rpb24iLCJudW1iZXIiLCJyZWdpc3RlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/armasm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arturo.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arturo.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ arturo)\n/* harmony export */ });\n// @ts-nocheck\narturo.displayName = \"arturo\";\narturo.aliases = [\n    \"art\"\n];\n/** @type {import('../core.js').Syntax} */ function arturo(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} lang\n     * @param {string} pattern\n     */ var createLanguageString = function(lang, pattern) {\n            return {\n                pattern: RegExp(/\\{!/.source + \"(?:\" + (pattern || lang) + \")\" + /$[\\s\\S]*\\}/.source, \"m\"),\n                greedy: true,\n                inside: {\n                    embedded: {\n                        pattern: /(^\\{!\\w+\\b)[\\s\\S]+(?=\\}$)/,\n                        lookbehind: true,\n                        alias: \"language-\" + lang,\n                        inside: Prism.languages[lang]\n                    },\n                    string: /[\\s\\S]+/\n                }\n            };\n        };\n        Prism.languages.arturo = {\n            comment: {\n                pattern: /;.*/,\n                greedy: true\n            },\n            character: {\n                pattern: /`.`/,\n                alias: \"char\",\n                greedy: true\n            },\n            number: {\n                pattern: /\\b\\d+(?:\\.\\d+(?:\\.\\d+(?:-[\\w+-]+)?)?)?\\b/\n            },\n            string: {\n                pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n                greedy: true\n            },\n            regex: {\n                pattern: /\\{\\/.*?\\/\\}/,\n                greedy: true\n            },\n            \"html-string\": createLanguageString(\"html\"),\n            \"css-string\": createLanguageString(\"css\"),\n            \"js-string\": createLanguageString(\"js\"),\n            \"md-string\": createLanguageString(\"md\"),\n            \"sql-string\": createLanguageString(\"sql\"),\n            \"sh-string\": createLanguageString(\"shell\", \"sh\"),\n            multistring: {\n                pattern: /».*|\\{:[\\s\\S]*?:\\}|\\{[\\s\\S]*?\\}|^-{6}$[\\s\\S]*/m,\n                alias: \"string\",\n                greedy: true\n            },\n            label: {\n                pattern: /\\w+\\b\\??:/,\n                alias: \"property\"\n            },\n            literal: {\n                pattern: /'(?:\\w+\\b\\??:?)/,\n                alias: \"constant\"\n            },\n            type: {\n                pattern: /:(?:\\w+\\b\\??:?)/,\n                alias: \"class-name\"\n            },\n            color: /#\\w+/,\n            predicate: {\n                pattern: /\\b(?:all|and|any|ascii|attr|attribute|attributeLabel|binary|block|char|contains|database|date|dictionary|empty|equal|even|every|exists|false|floating|function|greater|greaterOrEqual|if|in|inline|integer|is|key|label|leap|less|lessOrEqual|literal|logical|lower|nand|negative|nor|not|notEqual|null|numeric|odd|or|path|pathLabel|positive|prefix|prime|regex|same|set|some|sorted|standalone|string|subset|suffix|superset|symbol|symbolLiteral|true|try|type|unless|upper|when|whitespace|word|xnor|xor|zero)\\?/,\n                alias: \"keyword\"\n            },\n            \"builtin-function\": {\n                pattern: /\\b(?:abs|acos|acosh|acsec|acsech|actan|actanh|add|after|alert|alias|and|angle|append|arg|args|arity|array|as|asec|asech|asin|asinh|atan|atan2|atanh|attr|attrs|average|before|benchmark|blend|break|call|capitalize|case|ceil|chop|clear|clip|close|color|combine|conj|continue|copy|cos|cosh|crc|csec|csech|ctan|ctanh|cursor|darken|dec|decode|define|delete|desaturate|deviation|dialog|dictionary|difference|digest|digits|div|do|download|drop|dup|e|else|empty|encode|ensure|env|escape|execute|exit|exp|extend|extract|factors|fdiv|filter|first|flatten|floor|fold|from|function|gamma|gcd|get|goto|hash|hypot|if|inc|indent|index|infinity|info|input|insert|inspect|intersection|invert|jaro|join|keys|kurtosis|last|let|levenshtein|lighten|list|ln|log|loop|lower|mail|map|match|max|median|min|mod|module|mul|nand|neg|new|nor|normalize|not|now|null|open|or|outdent|pad|palette|panic|path|pause|permissions|permutate|pi|pop|popup|pow|powerset|powmod|prefix|print|prints|process|product|query|random|range|read|relative|remove|rename|render|repeat|replace|request|return|reverse|round|sample|saturate|script|sec|sech|select|serve|set|shl|shr|shuffle|sin|sinh|size|skewness|slice|sort|spin|split|sqrt|squeeze|stack|strip|sub|suffix|sum|switch|symbols|symlink|sys|take|tan|tanh|terminal|terminate|to|truncate|try|type|unclip|union|unique|unless|until|unzip|upper|values|var|variance|volume|webview|while|with|wordwrap|write|xnor|xor|zip)\\b/,\n                alias: \"keyword\"\n            },\n            sugar: {\n                pattern: /->|=>|\\||::/,\n                alias: \"operator\"\n            },\n            punctuation: /[()[\\],]/,\n            symbol: {\n                pattern: /<:|-:|ø|@|#|\\+|\\||\\*|\\$|---|-|%|\\/|\\.\\.|\\^|~|=|<|>|\\\\/\n            },\n            boolean: {\n                pattern: /\\b(?:false|maybe|true)\\b/\n            }\n        };\n        Prism.languages.art = Prism.languages[\"arturo\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hcnR1cm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBRXhCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLOztJQUNoQyxVQUFVQSxLQUFLO1FBQ2Y7OztLQUdDLEdBQ0QsSUFBSUMsdUJBQXVCLFNBQVVDLElBQUksRUFBRUMsT0FBTztZQUNoRCxPQUFPO2dCQUNMQSxTQUFTQyxPQUNQLE1BQU1DLE1BQU0sR0FBRyxRQUFTRixDQUFBQSxXQUFXRCxJQUFHLElBQUssTUFBTSxhQUFhRyxNQUFNLEVBQ3BFO2dCQUVGQyxRQUFRO2dCQUNSQyxRQUFRO29CQUNOQyxVQUFVO3dCQUNSTCxTQUFTO3dCQUNUTSxZQUFZO3dCQUNaQyxPQUFPLGNBQWNSO3dCQUNyQkssUUFBUVAsTUFBTVcsU0FBUyxDQUFDVCxLQUFLO29CQUMvQjtvQkFDQVUsUUFBUTtnQkFDVjtZQUNGO1FBQ0Y7UUFDQVosTUFBTVcsU0FBUyxDQUFDZCxNQUFNLEdBQUc7WUFDdkJnQixTQUFTO2dCQUNQVixTQUFTO2dCQUNURyxRQUFRO1lBQ1Y7WUFDQVEsV0FBVztnQkFDVFgsU0FBUztnQkFDVE8sT0FBTztnQkFDUEosUUFBUTtZQUNWO1lBQ0FTLFFBQVE7Z0JBQ05aLFNBQVM7WUFDWDtZQUNBUyxRQUFRO2dCQUNOVCxTQUFTO2dCQUNURyxRQUFRO1lBQ1Y7WUFDQVUsT0FBTztnQkFDTGIsU0FBUztnQkFDVEcsUUFBUTtZQUNWO1lBQ0EsZUFBZUwscUJBQXFCO1lBQ3BDLGNBQWNBLHFCQUFxQjtZQUNuQyxhQUFhQSxxQkFBcUI7WUFDbEMsYUFBYUEscUJBQXFCO1lBQ2xDLGNBQWNBLHFCQUFxQjtZQUNuQyxhQUFhQSxxQkFBcUIsU0FBUztZQUMzQ2dCLGFBQWE7Z0JBQ1hkLFNBQVM7Z0JBQ1RPLE9BQU87Z0JBQ1BKLFFBQVE7WUFDVjtZQUNBWSxPQUFPO2dCQUNMZixTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7WUFDQVMsU0FBUztnQkFDUGhCLFNBQVM7Z0JBQ1RPLE9BQU87WUFDVDtZQUNBVSxNQUFNO2dCQUNKakIsU0FBUztnQkFDVE8sT0FBTztZQUNUO1lBQ0FXLE9BQU87WUFDUEMsV0FBVztnQkFDVG5CLFNBQ0U7Z0JBQ0ZPLE9BQU87WUFDVDtZQUNBLG9CQUFvQjtnQkFDbEJQLFNBQ0U7Z0JBQ0ZPLE9BQU87WUFDVDtZQUNBYSxPQUFPO2dCQUNMcEIsU0FBUztnQkFDVE8sT0FBTztZQUNUO1lBQ0FjLGFBQWE7WUFDYkMsUUFBUTtnQkFDTnRCLFNBQVM7WUFDWDtZQUNBdUIsU0FBUztnQkFDUHZCLFNBQVM7WUFDWDtRQUNGO1FBQ0FILE1BQU1XLFNBQVMsQ0FBQ2dCLEdBQUcsR0FBRzNCLE1BQU1XLFNBQVMsQ0FBQyxTQUFTO0lBQ2pELEdBQUdYO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXJ0dXJvLmpzP2RiNzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmFydHVyby5kaXNwbGF5TmFtZSA9ICdhcnR1cm8nXG5hcnR1cm8uYWxpYXNlcyA9IFsnYXJ0J11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhcnR1cm8oUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZ1xuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuXG4gICAgICovXG4gICAgdmFyIGNyZWF0ZUxhbmd1YWdlU3RyaW5nID0gZnVuY3Rpb24gKGxhbmcsIHBhdHRlcm4pIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvXFx7IS8uc291cmNlICsgJyg/OicgKyAocGF0dGVybiB8fCBsYW5nKSArICcpJyArIC8kW1xcc1xcU10qXFx9Ly5zb3VyY2UsXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZW1iZWRkZWQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXlxceyFcXHcrXFxiKVtcXHNcXFNdKyg/PVxcfSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLScgKyBsYW5nLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXNbbGFuZ11cbiAgICAgICAgICB9LFxuICAgICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuYXJ0dXJvID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvOy4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgY2hhcmFjdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9gLmAvLFxuICAgICAgICBhbGlhczogJ2NoYXInLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBudW1iZXI6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYlxcZCsoPzpcXC5cXGQrKD86XFwuXFxkKyg/Oi1bXFx3Ky1dKyk/KT8pP1xcYi9cbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxcXHJcXG5dfFxcXFwuKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHJlZ2V4OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXHtcXC8uKj9cXC9cXH0vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnaHRtbC1zdHJpbmcnOiBjcmVhdGVMYW5ndWFnZVN0cmluZygnaHRtbCcpLFxuICAgICAgJ2Nzcy1zdHJpbmcnOiBjcmVhdGVMYW5ndWFnZVN0cmluZygnY3NzJyksXG4gICAgICAnanMtc3RyaW5nJzogY3JlYXRlTGFuZ3VhZ2VTdHJpbmcoJ2pzJyksXG4gICAgICAnbWQtc3RyaW5nJzogY3JlYXRlTGFuZ3VhZ2VTdHJpbmcoJ21kJyksXG4gICAgICAnc3FsLXN0cmluZyc6IGNyZWF0ZUxhbmd1YWdlU3RyaW5nKCdzcWwnKSxcbiAgICAgICdzaC1zdHJpbmcnOiBjcmVhdGVMYW5ndWFnZVN0cmluZygnc2hlbGwnLCAnc2gnKSxcbiAgICAgIG11bHRpc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC/Cuy4qfFxcezpbXFxzXFxTXSo/OlxcfXxcXHtbXFxzXFxTXSo/XFx9fF4tezZ9JFtcXHNcXFNdKi9tLFxuICAgICAgICBhbGlhczogJ3N0cmluZycsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGxhYmVsOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXHcrXFxiXFw/PzovLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgIGxpdGVyYWw6IHtcbiAgICAgICAgcGF0dGVybjogLycoPzpcXHcrXFxiXFw/Pzo/KS8sXG4gICAgICAgIGFsaWFzOiAnY29uc3RhbnQnXG4gICAgICB9LFxuICAgICAgdHlwZToge1xuICAgICAgICBwYXR0ZXJuOiAvOig/OlxcdytcXGJcXD8/Oj8pLyxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGNvbG9yOiAvI1xcdysvLFxuICAgICAgcHJlZGljYXRlOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcYig/OmFsbHxhbmR8YW55fGFzY2lpfGF0dHJ8YXR0cmlidXRlfGF0dHJpYnV0ZUxhYmVsfGJpbmFyeXxibG9ja3xjaGFyfGNvbnRhaW5zfGRhdGFiYXNlfGRhdGV8ZGljdGlvbmFyeXxlbXB0eXxlcXVhbHxldmVufGV2ZXJ5fGV4aXN0c3xmYWxzZXxmbG9hdGluZ3xmdW5jdGlvbnxncmVhdGVyfGdyZWF0ZXJPckVxdWFsfGlmfGlufGlubGluZXxpbnRlZ2VyfGlzfGtleXxsYWJlbHxsZWFwfGxlc3N8bGVzc09yRXF1YWx8bGl0ZXJhbHxsb2dpY2FsfGxvd2VyfG5hbmR8bmVnYXRpdmV8bm9yfG5vdHxub3RFcXVhbHxudWxsfG51bWVyaWN8b2RkfG9yfHBhdGh8cGF0aExhYmVsfHBvc2l0aXZlfHByZWZpeHxwcmltZXxyZWdleHxzYW1lfHNldHxzb21lfHNvcnRlZHxzdGFuZGFsb25lfHN0cmluZ3xzdWJzZXR8c3VmZml4fHN1cGVyc2V0fHN5bWJvbHxzeW1ib2xMaXRlcmFsfHRydWV8dHJ5fHR5cGV8dW5sZXNzfHVwcGVyfHdoZW58d2hpdGVzcGFjZXx3b3JkfHhub3J8eG9yfHplcm8pXFw/LyxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdidWlsdGluLWZ1bmN0aW9uJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXGIoPzphYnN8YWNvc3xhY29zaHxhY3NlY3xhY3NlY2h8YWN0YW58YWN0YW5ofGFkZHxhZnRlcnxhbGVydHxhbGlhc3xhbmR8YW5nbGV8YXBwZW5kfGFyZ3xhcmdzfGFyaXR5fGFycmF5fGFzfGFzZWN8YXNlY2h8YXNpbnxhc2luaHxhdGFufGF0YW4yfGF0YW5ofGF0dHJ8YXR0cnN8YXZlcmFnZXxiZWZvcmV8YmVuY2htYXJrfGJsZW5kfGJyZWFrfGNhbGx8Y2FwaXRhbGl6ZXxjYXNlfGNlaWx8Y2hvcHxjbGVhcnxjbGlwfGNsb3NlfGNvbG9yfGNvbWJpbmV8Y29uanxjb250aW51ZXxjb3B5fGNvc3xjb3NofGNyY3xjc2VjfGNzZWNofGN0YW58Y3Rhbmh8Y3Vyc29yfGRhcmtlbnxkZWN8ZGVjb2RlfGRlZmluZXxkZWxldGV8ZGVzYXR1cmF0ZXxkZXZpYXRpb258ZGlhbG9nfGRpY3Rpb25hcnl8ZGlmZmVyZW5jZXxkaWdlc3R8ZGlnaXRzfGRpdnxkb3xkb3dubG9hZHxkcm9wfGR1cHxlfGVsc2V8ZW1wdHl8ZW5jb2RlfGVuc3VyZXxlbnZ8ZXNjYXBlfGV4ZWN1dGV8ZXhpdHxleHB8ZXh0ZW5kfGV4dHJhY3R8ZmFjdG9yc3xmZGl2fGZpbHRlcnxmaXJzdHxmbGF0dGVufGZsb29yfGZvbGR8ZnJvbXxmdW5jdGlvbnxnYW1tYXxnY2R8Z2V0fGdvdG98aGFzaHxoeXBvdHxpZnxpbmN8aW5kZW50fGluZGV4fGluZmluaXR5fGluZm98aW5wdXR8aW5zZXJ0fGluc3BlY3R8aW50ZXJzZWN0aW9ufGludmVydHxqYXJvfGpvaW58a2V5c3xrdXJ0b3Npc3xsYXN0fGxldHxsZXZlbnNodGVpbnxsaWdodGVufGxpc3R8bG58bG9nfGxvb3B8bG93ZXJ8bWFpbHxtYXB8bWF0Y2h8bWF4fG1lZGlhbnxtaW58bW9kfG1vZHVsZXxtdWx8bmFuZHxuZWd8bmV3fG5vcnxub3JtYWxpemV8bm90fG5vd3xudWxsfG9wZW58b3J8b3V0ZGVudHxwYWR8cGFsZXR0ZXxwYW5pY3xwYXRofHBhdXNlfHBlcm1pc3Npb25zfHBlcm11dGF0ZXxwaXxwb3B8cG9wdXB8cG93fHBvd2Vyc2V0fHBvd21vZHxwcmVmaXh8cHJpbnR8cHJpbnRzfHByb2Nlc3N8cHJvZHVjdHxxdWVyeXxyYW5kb218cmFuZ2V8cmVhZHxyZWxhdGl2ZXxyZW1vdmV8cmVuYW1lfHJlbmRlcnxyZXBlYXR8cmVwbGFjZXxyZXF1ZXN0fHJldHVybnxyZXZlcnNlfHJvdW5kfHNhbXBsZXxzYXR1cmF0ZXxzY3JpcHR8c2VjfHNlY2h8c2VsZWN0fHNlcnZlfHNldHxzaGx8c2hyfHNodWZmbGV8c2lufHNpbmh8c2l6ZXxza2V3bmVzc3xzbGljZXxzb3J0fHNwaW58c3BsaXR8c3FydHxzcXVlZXplfHN0YWNrfHN0cmlwfHN1YnxzdWZmaXh8c3VtfHN3aXRjaHxzeW1ib2xzfHN5bWxpbmt8c3lzfHRha2V8dGFufHRhbmh8dGVybWluYWx8dGVybWluYXRlfHRvfHRydW5jYXRlfHRyeXx0eXBlfHVuY2xpcHx1bmlvbnx1bmlxdWV8dW5sZXNzfHVudGlsfHVuemlwfHVwcGVyfHZhbHVlc3x2YXJ8dmFyaWFuY2V8dm9sdW1lfHdlYnZpZXd8d2hpbGV8d2l0aHx3b3Jkd3JhcHx3cml0ZXx4bm9yfHhvcnx6aXApXFxiLyxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgIHN1Z2FyOiB7XG4gICAgICAgIHBhdHRlcm46IC8tPnw9PnxcXHx8OjovLFxuICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXSxdLyxcbiAgICAgIHN5bWJvbDoge1xuICAgICAgICBwYXR0ZXJuOiAvPDp8LTp8w7h8QHwjfFxcK3xcXHx8XFwqfFxcJHwtLS18LXwlfFxcL3xcXC5cXC58XFxefH58PXw8fD58XFxcXC9cbiAgICAgIH0sXG4gICAgICBib29sZWFuOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGIoPzpmYWxzZXxtYXliZXx0cnVlKVxcYi9cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmFydCA9IFByaXNtLmxhbmd1YWdlc1snYXJ0dXJvJ11cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsiYXJ0dXJvIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJjcmVhdGVMYW5ndWFnZVN0cmluZyIsImxhbmciLCJwYXR0ZXJuIiwiUmVnRXhwIiwic291cmNlIiwiZ3JlZWR5IiwiaW5zaWRlIiwiZW1iZWRkZWQiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJjb21tZW50IiwiY2hhcmFjdGVyIiwibnVtYmVyIiwicmVnZXgiLCJtdWx0aXN0cmluZyIsImxhYmVsIiwibGl0ZXJhbCIsInR5cGUiLCJjb2xvciIsInByZWRpY2F0ZSIsInN1Z2FyIiwicHVuY3R1YXRpb24iLCJzeW1ib2wiLCJib29sZWFuIiwiYXJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arturo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asciidoc.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asciidoc.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ asciidoc)\n/* harmony export */ });\n// @ts-nocheck\nasciidoc.displayName = \"asciidoc\";\nasciidoc.aliases = [\n    \"adoc\"\n];\n/** @type {import('../core.js').Syntax} */ function asciidoc(Prism) {\n    ;\n    (function(Prism) {\n        var attributes = {\n            pattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n            lookbehind: true,\n            inside: {\n                quoted: {\n                    pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n                    inside: {\n                        punctuation: /^[$`]|[$`]$/\n                    }\n                },\n                interpreted: {\n                    pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n                    inside: {\n                        punctuation: /^'|'$/\n                    }\n                },\n                string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                variable: /\\w+(?==)/,\n                punctuation: /^\\[|\\]$|,/,\n                operator: /=/,\n                // The negative look-ahead prevents blank matches\n                \"attr-value\": /(?!^\\s+$).+/\n            }\n        };\n        var asciidoc = Prism.languages.asciidoc = {\n            \"comment-block\": {\n                pattern: /^(\\/{4,})$[\\s\\S]*?^\\1/m,\n                alias: \"comment\"\n            },\n            table: {\n                pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n                inside: {\n                    specifiers: {\n                        pattern: /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n                        alias: \"attr-value\"\n                    },\n                    punctuation: {\n                        pattern: /(^|[^\\\\])[|!]=*/,\n                        lookbehind: true\n                    }\n                }\n            },\n            \"passthrough-block\": {\n                pattern: /^(\\+{4,})$[\\s\\S]*?^\\1$/m,\n                inside: {\n                    punctuation: /^\\++|\\++$/\n                }\n            },\n            // Literal blocks and listing blocks\n            \"literal-block\": {\n                pattern: /^(-{4,}|\\.{4,})$[\\s\\S]*?^\\1$/m,\n                inside: {\n                    punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/\n                }\n            },\n            // Sidebar blocks, quote blocks, example blocks and open blocks\n            \"other-block\": {\n                pattern: /^(--|\\*{4,}|_{4,}|={4,})$[\\s\\S]*?^\\1$/m,\n                inside: {\n                    punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/\n                }\n            },\n            // list-punctuation and list-label must appear before indented-block\n            \"list-punctuation\": {\n                pattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            \"list-label\": {\n                pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n                lookbehind: true,\n                alias: \"symbol\"\n            },\n            \"indented-block\": {\n                pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n                lookbehind: true\n            },\n            comment: /^\\/\\/.*/m,\n            title: {\n                pattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n                alias: \"important\",\n                inside: {\n                    punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/\n                }\n            },\n            \"attribute-entry\": {\n                pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n                alias: \"tag\"\n            },\n            attributes: attributes,\n            hr: {\n                pattern: /^'{3,}$/m,\n                alias: \"punctuation\"\n            },\n            \"page-break\": {\n                pattern: /^<{3,}$/m,\n                alias: \"punctuation\"\n            },\n            admonition: {\n                pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n                alias: \"keyword\"\n            },\n            callout: [\n                {\n                    pattern: /(^[ \\t]*)<?\\d*>/m,\n                    lookbehind: true,\n                    alias: \"symbol\"\n                },\n                {\n                    pattern: /<\\d+>/,\n                    alias: \"symbol\"\n                }\n            ],\n            macro: {\n                pattern: /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n                inside: {\n                    function: /^[a-z\\d-]+(?=:)/,\n                    punctuation: /^::?/,\n                    attributes: {\n                        pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n                        inside: attributes.inside\n                    }\n                }\n            },\n            inline: {\n                /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/ pattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n                lookbehind: true,\n                inside: {\n                    attributes: attributes,\n                    url: {\n                        pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n                        inside: {\n                            punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n                        }\n                    },\n                    \"attribute-ref\": {\n                        pattern: /^\\{.+\\}$/,\n                        inside: {\n                            variable: {\n                                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                                lookbehind: true\n                            },\n                            operator: /^[=?!#%@$]|!(?=[:}])/,\n                            punctuation: /^\\{|\\}$|::?/\n                        }\n                    },\n                    italic: {\n                        pattern: /^(['_])[\\s\\S]+\\1$/,\n                        inside: {\n                            punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n                        }\n                    },\n                    bold: {\n                        pattern: /^\\*[\\s\\S]+\\*$/,\n                        inside: {\n                            punctuation: /^\\*\\*?|\\*\\*?$/\n                        }\n                    },\n                    punctuation: /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n                }\n            },\n            replacement: {\n                pattern: /\\((?:C|R|TM)\\)/,\n                alias: \"builtin\"\n            },\n            entity: /&#?[\\da-z]{1,8};/i,\n            \"line-continuation\": {\n                pattern: /(^| )\\+$/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            }\n        };\n        // Allow some nesting. There is no recursion though, so cloning should not be needed.\n        function copyFromAsciiDoc(keys) {\n            keys = keys.split(\" \");\n            var o = {};\n            for(var i = 0, l = keys.length; i < l; i++){\n                o[keys[i]] = asciidoc[keys[i]];\n            }\n            return o;\n        }\n        attributes.inside[\"interpreted\"].inside.rest = copyFromAsciiDoc(\"macro inline replacement entity\");\n        asciidoc[\"passthrough-block\"].inside.rest = copyFromAsciiDoc(\"macro\");\n        asciidoc[\"literal-block\"].inside.rest = copyFromAsciiDoc(\"callout\");\n        asciidoc[\"table\"].inside.rest = copyFromAsciiDoc(\"comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation\");\n        asciidoc[\"other-block\"].inside.rest = copyFromAsciiDoc(\"table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation\");\n        asciidoc[\"title\"].inside.rest = copyFromAsciiDoc(\"macro inline replacement entity\");\n        // Plugin to make entity title show the real entity, idea by Roman Komarov\n        Prism.hooks.add(\"wrap\", function(env) {\n            if (env.type === \"entity\") {\n                env.attributes[\"title\"] = env.content.value.replace(/&amp;/, \"&\");\n            }\n        });\n        Prism.languages.adoc = Prism.languages.asciidoc;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asciidoc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asm6502.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asm6502.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ asm6502)\n/* harmony export */ });\n// @ts-nocheck\nasm6502.displayName = \"asm6502\";\nasm6502.aliases = [];\n/** @type {import('../core.js').Syntax} */ function asm6502(Prism) {\n    Prism.languages.asm6502 = {\n        comment: /;.*/,\n        directive: {\n            pattern: /\\.\\w+(?= )/,\n            alias: \"property\"\n        },\n        string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        \"op-code\": {\n            pattern: /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n            alias: \"keyword\"\n        },\n        \"hex-number\": {\n            pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n            alias: \"number\"\n        },\n        \"binary-number\": {\n            pattern: /#?%[01]+\\b/,\n            alias: \"number\"\n        },\n        \"decimal-number\": {\n            pattern: /#?\\b\\d+\\b/,\n            alias: \"number\"\n        },\n        register: {\n            pattern: /\\b[xya]\\b/i,\n            alias: \"variable\"\n        },\n        punctuation: /[(),:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hc202NTAyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1FBQ1RDLFdBQVc7WUFDVEMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtRQUNSLFdBQVc7WUFDVEYsU0FDRTtZQUNGQyxPQUFPO1FBQ1Q7UUFDQSxjQUFjO1lBQ1pELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsaUJBQWlCO1lBQ2ZELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0Esa0JBQWtCO1lBQ2hCRCxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBRSxVQUFVO1lBQ1JILFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FHLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FzbTY1MDIuanM/Njk5MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYXNtNjUwMi5kaXNwbGF5TmFtZSA9ICdhc202NTAyJ1xuYXNtNjUwMi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhc202NTAyKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5hc202NTAyID0ge1xuICAgIGNvbW1lbnQ6IC87LiovLFxuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjogL1xcLlxcdysoPz0gKS8sXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgc3RyaW5nOiAvKFtcIidgXSkoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAnb3AtY29kZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpBREN8QU5EfEFTTHxCQ0N8QkNTfEJFUXxCSVR8Qk1JfEJORXxCUEx8QlJLfEJWQ3xCVlN8Q0xDfENMRHxDTEl8Q0xWfENNUHxDUFh8Q1BZfERFQ3xERVh8REVZfEVPUnxJTkN8SU5YfElOWXxKTVB8SlNSfExEQXxMRFh8TERZfExTUnxOT1B8T1JBfFBIQXxQSFB8UExBfFBMUHxST0x8Uk9SfFJUSXxSVFN8U0JDfFNFQ3xTRUR8U0VJfFNUQXxTVFh8U1RZfFRBWHxUQVl8VFNYfFRYQXxUWFN8VFlBfGFkY3xhbmR8YXNsfGJjY3xiY3N8YmVxfGJpdHxibWl8Ym5lfGJwbHxicmt8YnZjfGJ2c3xjbGN8Y2xkfGNsaXxjbHZ8Y21wfGNweHxjcHl8ZGVjfGRleHxkZXl8ZW9yfGluY3xpbnh8aW55fGptcHxqc3J8bGRhfGxkeHxsZHl8bHNyfG5vcHxvcmF8cGhhfHBocHxwbGF8cGxwfHJvbHxyb3J8cnRpfHJ0c3xzYmN8c2VjfHNlZHxzZWl8c3RhfHN0eHxzdHl8dGF4fHRheXx0c3h8dHhhfHR4c3x0eWEpXFxiLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdoZXgtbnVtYmVyJzoge1xuICAgICAgcGF0dGVybjogLyM/XFwkW1xcZGEtZl17MSw0fVxcYi9pLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICAnYmluYXJ5LW51bWJlcic6IHtcbiAgICAgIHBhdHRlcm46IC8jPyVbMDFdK1xcYi8sXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgICdkZWNpbWFsLW51bWJlcic6IHtcbiAgICAgIHBhdHRlcm46IC8jP1xcYlxcZCtcXGIvLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICByZWdpc3Rlcjoge1xuICAgICAgcGF0dGVybjogL1xcYlt4eWFdXFxiL2ksXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCksOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJhc202NTAyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiZGlyZWN0aXZlIiwicGF0dGVybiIsImFsaWFzIiwic3RyaW5nIiwicmVnaXN0ZXIiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asm6502.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asmatmel.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asmatmel.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ asmatmel)\n/* harmony export */ });\n// @ts-nocheck\nasmatmel.displayName = \"asmatmel\";\nasmatmel.aliases = [];\n/** @type {import('../core.js').Syntax} */ function asmatmel(Prism) {\n    Prism.languages.asmatmel = {\n        comment: {\n            pattern: /;.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n        directive: {\n            pattern: /\\.\\w+(?= )/,\n            alias: \"property\"\n        },\n        \"r-register\": {\n            pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n            alias: \"variable\"\n        },\n        \"op-code\": {\n            pattern: /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n            alias: \"keyword\"\n        },\n        \"hex-number\": {\n            pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n            alias: \"number\"\n        },\n        \"binary-number\": {\n            pattern: /#?%[01]+\\b/,\n            alias: \"number\"\n        },\n        \"decimal-number\": {\n            pattern: /#?\\b\\d+\\b/,\n            alias: \"number\"\n        },\n        register: {\n            pattern: /\\b[acznvshtixy]\\b/i,\n            alias: \"variable\"\n        },\n        operator: />>=?|<<=?|&[&=]?|\\|[\\|=]?|[-+*/%^!=<>?]=?/,\n        punctuation: /[(),:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hc21hdG1lbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRyxFQUFFO0FBRXJCLHdDQUF3QyxHQUN6QixTQUFTRixTQUFTRyxLQUFLO0lBQ3BDQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFVBQVU7UUFDVkMsV0FBVztZQUNUSixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBLGNBQWM7WUFDWkwsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQSxXQUFXO1lBQ1RMLFNBQ0U7WUFDRkssT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaTCxTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBLGlCQUFpQjtZQUNmTCxTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBLGtCQUFrQjtZQUNoQkwsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtZQUNSTixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBRSxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FzbWF0bWVsLmpzP2I1NTciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmFzbWF0bWVsLmRpc3BsYXlOYW1lID0gJ2FzbWF0bWVsJ1xuYXNtYXRtZWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXNtYXRtZWwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmFzbWF0bWVsID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC87LiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ2BdKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjb25zdGFudDogL1xcYig/OlBPUlRbQS1aXXxERFJbQS1aXXwoPzpERHxQKVtBLVpdKD86XFxkfFswLTJdXFxkfDNbMDFdKSlcXGIvLFxuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjogL1xcLlxcdysoPz0gKS8sXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgJ3ItcmVnaXN0ZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxicig/OlxcZHxbMTJdXFxkfDNbMDFdKVxcYi8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgJ29wLWNvZGUnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86QURDfEFERHxBRElXfEFORHxBTkRJfEFTUnxCQ0xSfEJMRHxCUkJDfEJSQlN8QlJDQ3xCUkNTfEJSRUFLfEJSRVF8QlJHRXxCUkhDfEJSSFN8QlJJRHxCUklFfEJSTE98QlJMVHxCUk1JfEJSTkV8QlJQTHxCUlNIfEJSVEN8QlJUU3xCUlZDfEJSVlN8QlNFVHxCU1R8Q0FMTHxDQkl8Q0JSfENMQ3xDTEh8Q0xJfENMTnxDTFJ8Q0xTfENMVHxDTFZ8Q0xafENPTXxDUHxDUEN8Q1BJfENQU0V8REVDfERFU3xFSUNBTEx8RUlKTVB8RUxQTXxFT1J8Rk1VTHxGTVVMU3xGTVVMU1V8SUNBTEx8SUpNUHxJTnxJTkN8Sk1QfExBQ3xMQVN8TEFUfExEfExEW0EtWmEtejAtOV18TFBNfExTTHxMU1J8TU9WfE1PVld8TVVMfE1VTFN8TVVMU1V8TkVHfE5PUHxPUnxPUkl8T1VUfFBPUHxQVVNIfFJDQUxMfFJFVHxSRVRJfFJKTVB8Uk9MfFJPUnxTQkN8U0JDSXxTQkl8U0JJQ3xTQklTfFNCSVd8U0JSfFNCUkN8U0JSU3xTRUN8U0VIfFNFSXxTRU58U0VSfFNFU3xTRVR8U0VWfFNFWnxTTEVFUHxTUE18U1R8U1RbQS1aMC05XXxTVUJ8U1VCSXxTV0FQfFRTVHxXRFJ8WENIfGFkY3xhZGR8YWRpd3xhbmR8YW5kaXxhc3J8YmNscnxibGR8YnJiY3xicmJzfGJyY2N8YnJjc3xicmVha3xicmVxfGJyZ2V8YnJoY3xicmhzfGJyaWR8YnJpZXxicmxvfGJybHR8YnJtaXxicm5lfGJycGx8YnJzaHxicnRjfGJydHN8YnJ2Y3xicnZzfGJzZXR8YnN0fGNhbGx8Y2JpfGNicnxjbGN8Y2xofGNsaXxjbG58Y2xyfGNsc3xjbHR8Y2x2fGNsenxjb218Y3B8Y3BjfGNwaXxjcHNlfGRlY3xkZXN8ZWljYWxsfGVpam1wfGVscG18ZW9yfGZtdWx8Zm11bHN8Zm11bHN1fGljYWxsfGlqbXB8aW58aW5jfGptcHxsYWN8bGFzfGxhdHxsZHxsZFthLXowLTldfGxwbXxsc2x8bHNyfG1vdnxtb3Z3fG11bHxtdWxzfG11bHN1fG5lZ3xub3B8b3J8b3JpfG91dHxwb3B8cHVzaHxyY2FsbHxyZXR8cmV0aXxyam1wfHJvbHxyb3J8c2JjfHNiY2l8c2JpfHNiaWN8c2Jpc3xzYml3fHNicnxzYnJjfHNicnN8c2VjfHNlaHxzZWl8c2VufHNlcnxzZXN8c2V0fHNldnxzZXp8c2xlZXB8c3BtfHN0fHN0W2EtekEtWjAtOV18c3VifHN1Yml8c3dhcHx0c3R8d2RyfHhjaClcXGIvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgJ2hleC1udW1iZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvIz9cXCRbXFxkYS1mXXsyLDR9XFxiL2ksXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgICdiaW5hcnktbnVtYmVyJzoge1xuICAgICAgcGF0dGVybjogLyM/JVswMV0rXFxiLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgJ2RlY2ltYWwtbnVtYmVyJzoge1xuICAgICAgcGF0dGVybjogLyM/XFxiXFxkK1xcYi8sXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgIHJlZ2lzdGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW2Fjem52c2h0aXh5XVxcYi9pLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvPj49P3w8PD0/fCZbJj1dP3xcXHxbXFx8PV0/fFstKyovJV4hPTw+P109Py8sXG4gICAgcHVuY3R1YXRpb246IC9bKCksOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJhc21hdG1lbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJjb25zdGFudCIsImRpcmVjdGl2ZSIsImFsaWFzIiwicmVnaXN0ZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asmatmel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aspnet.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aspnet.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ aspnet)\n/* harmony export */ });\n/* harmony import */ var _csharp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js\");\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\n\naspnet.displayName = \"aspnet\";\naspnet.aliases = [];\n/** @type {import('../core.js').Syntax} */ function aspnet(Prism) {\n    Prism.register(_csharp_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.languages.aspnet = Prism.languages.extend(\"markup\", {\n        \"page-directive\": {\n            pattern: /<%\\s*@.*%>/,\n            alias: \"tag\",\n            inside: {\n                \"page-directive\": {\n                    pattern: /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n                    alias: \"tag\"\n                },\n                rest: Prism.languages.markup.tag.inside\n            }\n        },\n        directive: {\n            pattern: /<%.*%>/,\n            alias: \"tag\",\n            inside: {\n                directive: {\n                    pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n                    alias: \"tag\"\n                },\n                rest: Prism.languages.csharp\n            }\n        }\n    });\n    // Regexp copied from prism-markup, with a negative look-ahead added\n    Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/;\n    // match directives of attribute value foo=\"<% Bar %>\"\n    Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n        directive: Prism.languages.aspnet[\"directive\"]\n    }, Prism.languages.aspnet.tag.inside[\"attr-value\"]);\n    Prism.languages.insertBefore(\"aspnet\", \"comment\", {\n        \"asp-comment\": {\n            pattern: /<%--[\\s\\S]*?--%>/,\n            alias: [\n                \"asp\",\n                \"comment\"\n            ]\n        }\n    });\n    // script runat=\"server\" contains csharp, not javascript\n    Prism.languages.insertBefore(\"aspnet\", Prism.languages.javascript ? \"script\" : \"tag\", {\n        \"asp-script\": {\n            pattern: /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n            lookbehind: true,\n            alias: [\n                \"asp\",\n                \"script\"\n            ],\n            inside: Prism.languages.csharp || {}\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hc3BuZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYztBQUMyQjtBQUNBO0FBQ3pDRSxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNOLGtEQUFlQTtJQUM5QkssTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDOUJJLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxVQUFVO1FBQ3hELGtCQUFrQjtZQUNoQkMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ04sa0JBQWtCO29CQUNoQkYsU0FDRTtvQkFDRkMsT0FBTztnQkFDVDtnQkFDQUUsTUFBTVAsTUFBTUUsU0FBUyxDQUFDTSxNQUFNLENBQUNDLEdBQUcsQ0FBQ0gsTUFBTTtZQUN6QztRQUNGO1FBQ0FJLFdBQVc7WUFDVE4sU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05JLFdBQVc7b0JBQ1ROLFNBQVM7b0JBQ1RDLE9BQU87Z0JBQ1Q7Z0JBQ0FFLE1BQU1QLE1BQU1FLFNBQVMsQ0FBQ1MsTUFBTTtZQUM5QjtRQUNGO0lBQ0Y7SUFDQSxvRUFBb0U7SUFDcEVYLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxDQUFDWSxHQUFHLENBQUNMLE9BQU8sR0FDaEM7SUFFRixzREFBc0Q7SUFDdERKLE1BQU1FLFNBQVMsQ0FBQ1UsWUFBWSxDQUMxQixVQUNBLGVBQ0E7UUFDRUYsV0FBV1YsTUFBTUUsU0FBUyxDQUFDTCxNQUFNLENBQUMsWUFBWTtJQUNoRCxHQUNBRyxNQUFNRSxTQUFTLENBQUNMLE1BQU0sQ0FBQ1ksR0FBRyxDQUFDSCxNQUFNLENBQUMsYUFBYTtJQUVqRE4sTUFBTUUsU0FBUyxDQUFDVSxZQUFZLENBQUMsVUFBVSxXQUFXO1FBQ2hELGVBQWU7WUFDYlIsU0FBUztZQUNUQyxPQUFPO2dCQUFDO2dCQUFPO2FBQVU7UUFDM0I7SUFDRjtJQUVBLHdEQUF3RDtJQUN4REwsTUFBTUUsU0FBUyxDQUFDVSxZQUFZLENBQzFCLFVBQ0FaLE1BQU1FLFNBQVMsQ0FBQ1csVUFBVSxHQUFHLFdBQVcsT0FDeEM7UUFDRSxjQUFjO1lBQ1pULFNBQ0U7WUFDRlUsWUFBWTtZQUNaVCxPQUFPO2dCQUFDO2dCQUFPO2FBQVM7WUFDeEJDLFFBQVFOLE1BQU1FLFNBQVMsQ0FBQ1MsTUFBTSxJQUFJLENBQUM7UUFDckM7SUFDRjtBQUVKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2FzcG5ldC5qcz8wMmQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ3NoYXJwIGZyb20gJy4vY3NoYXJwLmpzJ1xuaW1wb3J0IHJlZnJhY3Rvck1hcmt1cCBmcm9tICcuL21hcmt1cC5qcydcbmFzcG5ldC5kaXNwbGF5TmFtZSA9ICdhc3BuZXQnXG5hc3BuZXQuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXNwbmV0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNzaGFycClcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwKVxuICBQcmlzbS5sYW5ndWFnZXMuYXNwbmV0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnbWFya3VwJywge1xuICAgICdwYWdlLWRpcmVjdGl2ZSc6IHtcbiAgICAgIHBhdHRlcm46IC88JVxccypALiolPi8sXG4gICAgICBhbGlhczogJ3RhZycsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3BhZ2UtZGlyZWN0aXZlJzoge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvPCVcXHMqQFxccyooPzpBc3NlbWJseXxDb250cm9sfEltcGxlbWVudHN8SW1wb3J0fE1hc3Rlcig/OlR5cGUpP3xPdXRwdXRDYWNoZXxQYWdlfFByZXZpb3VzUGFnZVR5cGV8UmVmZXJlbmNlfFJlZ2lzdGVyKT98JT4vaSxcbiAgICAgICAgICBhbGlhczogJ3RhZydcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cC50YWcuaW5zaWRlXG4gICAgICB9XG4gICAgfSxcbiAgICBkaXJlY3RpdmU6IHtcbiAgICAgIHBhdHRlcm46IC88JS4qJT4vLFxuICAgICAgYWxpYXM6ICd0YWcnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICAgIHBhdHRlcm46IC88JVxccyo/WyQ9JSM6XXswLDJ9fCU+LyxcbiAgICAgICAgICBhbGlhczogJ3RhZydcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLmNzaGFycFxuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgLy8gUmVnZXhwIGNvcGllZCBmcm9tIHByaXNtLW1hcmt1cCwgd2l0aCBhIG5lZ2F0aXZlIGxvb2stYWhlYWQgYWRkZWRcbiAgUHJpc20ubGFuZ3VhZ2VzLmFzcG5ldC50YWcucGF0dGVybiA9XG4gICAgLzwoPyElKVxcLz9bXlxccz5cXC9dKyg/OlxccytbXlxccz5cXC89XSsoPzo9KD86KFwifCcpKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKSpcXDF8W15cXHMnXCI+PV0rKSk/KSpcXHMqXFwvPz4vXG5cbiAgLy8gbWF0Y2ggZGlyZWN0aXZlcyBvZiBhdHRyaWJ1dGUgdmFsdWUgZm9vPVwiPCUgQmFyICU+XCJcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZShcbiAgICAnaW5zaWRlJyxcbiAgICAncHVuY3R1YXRpb24nLFxuICAgIHtcbiAgICAgIGRpcmVjdGl2ZTogUHJpc20ubGFuZ3VhZ2VzLmFzcG5ldFsnZGlyZWN0aXZlJ11cbiAgICB9LFxuICAgIFByaXNtLmxhbmd1YWdlcy5hc3BuZXQudGFnLmluc2lkZVsnYXR0ci12YWx1ZSddXG4gIClcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYXNwbmV0JywgJ2NvbW1lbnQnLCB7XG4gICAgJ2FzcC1jb21tZW50Jzoge1xuICAgICAgcGF0dGVybjogLzwlLS1bXFxzXFxTXSo/LS0lPi8sXG4gICAgICBhbGlhczogWydhc3AnLCAnY29tbWVudCddXG4gICAgfVxuICB9KVxuXG4gIC8vIHNjcmlwdCBydW5hdD1cInNlcnZlclwiIGNvbnRhaW5zIGNzaGFycCwgbm90IGphdmFzY3JpcHRcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZShcbiAgICAnYXNwbmV0JyxcbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdCA/ICdzY3JpcHQnIDogJ3RhZycsXG4gICAge1xuICAgICAgJ2FzcC1zY3JpcHQnOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyg8c2NyaXB0KD89LipydW5hdD1bJ1wiXT9zZXJ2ZXJcXGIpW14+XSo+KVtcXHNcXFNdKj8oPz08XFwvc2NyaXB0PikvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6IFsnYXNwJywgJ3NjcmlwdCddLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5jc2hhcnAgfHwge31cbiAgICAgIH1cbiAgICB9XG4gIClcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDc2hhcnAiLCJyZWZyYWN0b3JNYXJrdXAiLCJhc3BuZXQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwicGF0dGVybiIsImFsaWFzIiwiaW5zaWRlIiwicmVzdCIsIm1hcmt1cCIsInRhZyIsImRpcmVjdGl2ZSIsImNzaGFycCIsImluc2VydEJlZm9yZSIsImphdmFzY3JpcHQiLCJsb29rYmVoaW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aspnet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autohotkey.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autohotkey.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ autohotkey)\n/* harmony export */ });\n// @ts-nocheck\nautohotkey.displayName = \"autohotkey\";\nautohotkey.aliases = [];\n/** @type {import('../core.js').Syntax} */ function autohotkey(Prism) {\n    // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n    Prism.languages.autohotkey = {\n        comment: [\n            {\n                pattern: /(^|\\s);.*/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        tag: {\n            // labels\n            pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n            lookbehind: true\n        },\n        string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n        variable: /%\\w+%/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        operator: /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        command: {\n            pattern: /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n            alias: \"selector\"\n        },\n        constant: /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n        builtin: /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n        symbol: /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n        directive: {\n            pattern: /#[a-z]+\\b/i,\n            alias: \"important\"\n        },\n        keyword: /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n        function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n        punctuation: /[{}[\\]():,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autohotkey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autoit.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autoit.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ autoit)\n/* harmony export */ });\n// @ts-nocheck\nautoit.displayName = \"autoit\";\nautoit.aliases = [];\n/** @type {import('../core.js').Syntax} */ function autoit(Prism) {\n    Prism.languages.autoit = {\n        comment: [\n            /;.*/,\n            {\n                // The multi-line comments delimiters can actually be commented out with \";\"\n                pattern: /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n                lookbehind: true\n            }\n        ],\n        url: {\n            pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n            lookbehind: true\n        },\n        string: {\n            pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n            greedy: true,\n            inside: {\n                variable: /([%$@])\\w+\\1/\n            }\n        },\n        directive: {\n            pattern: /(^[\\t ]*)#[\\w-]+/m,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        function: /\\b\\w+(?=\\()/,\n        // Variables and macros\n        variable: /[$@]\\w+/,\n        keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n        number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n        boolean: /\\b(?:False|True)\\b/i,\n        operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n        punctuation: /[\\[\\]().,:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hdXRvaXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUDtZQUNBO2dCQUNFLDRFQUE0RTtnQkFDNUVDLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtTQUNEO1FBQ0RDLEtBQUs7WUFDSEYsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQUUsUUFBUTtZQUNOSCxTQUFTO1lBQ1RJLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQUMsV0FBVztZQUNUUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWk8sT0FBTztRQUNUO1FBQ0FDLFVBQVU7UUFDVix1QkFBdUI7UUFDdkJILFVBQVU7UUFDVkksU0FDRTtRQUNGQyxRQUFRO1FBQ1JDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hdXRvaXQuanM/YTFjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYXV0b2l0LmRpc3BsYXlOYW1lID0gJ2F1dG9pdCdcbmF1dG9pdC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBhdXRvaXQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmF1dG9pdCA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICAvOy4qLyxcbiAgICAgIHtcbiAgICAgICAgLy8gVGhlIG11bHRpLWxpbmUgY29tbWVudHMgZGVsaW1pdGVycyBjYW4gYWN0dWFsbHkgYmUgY29tbWVudGVkIG91dCB3aXRoIFwiO1wiXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyheW1xcdCBdKikjKD86Y29tbWVudHMtc3RhcnR8Y3MpW1xcc1xcU10qP15bIFxcdF0qIyg/OmNlfGNvbW1lbnRzLWVuZCkvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgdXJsOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qI2luY2x1ZGVcXHMrKSg/OjxbXlxcclxcbj5dKz58XCJbXlxcclxcblwiXStcIikvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXDFcXDF8KD8hXFwxKVteXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogLyhbJSRAXSlcXHcrXFwxL1xuICAgICAgfVxuICAgIH0sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKSNbXFx3LV0rL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD89XFwoKS8sXG4gICAgLy8gVmFyaWFibGVzIGFuZCBtYWNyb3NcbiAgICB2YXJpYWJsZTogL1skQF1cXHcrLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkNhc2V8Q29uc3R8Q29udGludWUoPzpDYXNlfExvb3ApfERlZmF1bHR8RGltfERvfEVsc2UoPzpJZik/fEVuZCg/OkZ1bmN8SWZ8U2VsZWN0fFN3aXRjaHxXaXRoKXxFbnVtfEV4aXQoPzpMb29wKT98Rm9yfEZ1bmN8R2xvYmFsfElmfElufExvY2FsfE5leHR8TnVsbHxSZURpbXxTZWxlY3R8U3RhdGljfFN0ZXB8U3dpdGNofFRoZW58VG98VW50aWx8Vm9sYXRpbGV8V0VuZHxXaGlsZXxXaXRoKVxcYi9pLFxuICAgIG51bWJlcjogL1xcYig/OjB4W1xcZGEtZl0rfFxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT8pXFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZhbHNlfFRydWUpXFxiL2ksXG4gICAgb3BlcmF0b3I6IC88Wz0+XT98Wy0rKlxcLz0mPl09P3xbP15dfFxcYig/OkFuZHxOb3R8T3IpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bXFxbXFxdKCkuLDpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsiYXV0b2l0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJ1cmwiLCJzdHJpbmciLCJncmVlZHkiLCJpbnNpZGUiLCJ2YXJpYWJsZSIsImRpcmVjdGl2ZSIsImFsaWFzIiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwibnVtYmVyIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autoit.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avisynth.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avisynth.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ avisynth)\n/* harmony export */ });\n// @ts-nocheck\navisynth.displayName = \"avisynth\";\navisynth.aliases = [\n    \"avs\"\n];\n/** @type {import('../core.js').Syntax} */ function avisynth(Prism) {\n    // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n    ;\n    (function(Prism) {\n        function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n                return replacements[+index];\n            });\n        }\n        function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        var types = /bool|clip|float|int|string|val/.source;\n        var internals = [\n            // bools\n            /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/.source,\n            // control\n            /apply|assert|default|eval|import|nop|select|undefined/.source,\n            // global\n            /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/.source,\n            // conv\n            /hex(?:value)?|value/.source,\n            // numeric\n            /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/.source,\n            // trig\n            /a?sinh?|a?cosh?|a?tan[2h]?/.source,\n            // bit\n            /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/.source,\n            // runtime\n            /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/.source,\n            // script\n            /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/.source,\n            // string\n            /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/.source,\n            // version\n            /isversionorgreater|version(?:number|string)/.source,\n            // helper\n            /buildpixeltype|colorspacenametopixeltype/.source,\n            // avsplus\n            /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n        ].join(\"|\");\n        var properties = [\n            // content\n            /has(?:audio|video)/.source,\n            // resolution\n            /height|width/.source,\n            // framerate\n            /frame(?:count|rate)|framerate(?:denominator|numerator)/.source,\n            // interlacing\n            /getparity|is(?:field|frame)based/.source,\n            // color format\n            /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/.source,\n            // audio\n            /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/.source\n        ].join(\"|\");\n        var filters = [\n            // source\n            /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/.source,\n            // color\n            /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/.source,\n            // overlay\n            /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source,\n            // geometry\n            /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/.source,\n            // pixel\n            /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/.source,\n            // timeline\n            /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/.source,\n            // interlace\n            /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/.source,\n            // audio\n            /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/.source,\n            // conditional\n            /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/.source,\n            // export\n            /imagewriter/.source,\n            // debug\n            /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/.source\n        ].join(\"|\");\n        var allinternals = [\n            internals,\n            properties,\n            filters\n        ].join(\"|\");\n        Prism.languages.avisynth = {\n            comment: [\n                {\n                    // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n                    // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n                    pattern: /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // Matches /* */ block comments\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // Matches # comments\n                    pattern: /(^|[^\\\\$])#.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            // Handle before strings because optional arguments are surrounded by double quotes\n            argument: {\n                pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [\n                    types\n                ], \"i\"),\n                inside: {\n                    keyword: /^\\w+/\n                }\n            },\n            // Optional argument assignment\n            \"argument-label\": {\n                pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n                lookbehind: true,\n                inside: {\n                    \"argument-name\": {\n                        pattern: /^\\w+/,\n                        alias: \"punctuation\"\n                    },\n                    punctuation: /=$/\n                }\n            },\n            string: [\n                {\n                    // triple double-quoted\n                    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n                    greedy: true\n                },\n                {\n                    // single double-quoted\n                    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n                    greedy: true,\n                    inside: {\n                        constant: {\n                            // These *are* case-sensitive!\n                            pattern: /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n                        }\n                    }\n                }\n            ],\n            // The special \"last\" variable that takes the value of the last implicitly returned clip\n            variable: /\\b(?:last)\\b/i,\n            boolean: /\\b(?:false|no|true|yes)\\b/i,\n            keyword: /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n            constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n            // AviSynth's internal functions, filters, and properties\n            \"builtin-function\": {\n                pattern: re(/\\b(?:<<0>>)\\b/.source, [\n                    allinternals\n                ], \"i\"),\n                alias: \"function\"\n            },\n            \"type-cast\": {\n                pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [\n                    types\n                ], \"i\"),\n                alias: \"keyword\"\n            },\n            // External/user-defined filters\n            function: {\n                pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n                lookbehind: true\n            },\n            // Matches a \\ as the first or last character on a line\n            \"line-continuation\": {\n                pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            number: /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n            operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n            punctuation: /[{}\\[\\]();,.]/\n        };\n        Prism.languages.avs = Prism.languages.avisynth;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avisynth.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avro-idl.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avro-idl.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ avroIdl)\n/* harmony export */ });\n// @ts-nocheck\navroIdl.displayName = \"avro-idl\";\navroIdl.aliases = [\n    \"avdl\"\n];\n/** @type {import('../core.js').Syntax} */ function avroIdl(Prism) {\n    // GitHub: https://github.com/apache/avro\n    // Docs: https://avro.apache.org/docs/current/idl.html\n    Prism.languages[\"avro-idl\"] = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        annotation: {\n            pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n            greedy: true,\n            alias: \"function\"\n        },\n        \"function-identifier\": {\n            pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n            greedy: true,\n            alias: \"function\"\n        },\n        identifier: {\n            pattern: /`[^\\r\\n`]+`/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: [\n            {\n                pattern: /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n                lookbehind: true\n            },\n            /-?\\b(?:Infinity|NaN)\\b/\n        ],\n        operator: /=/,\n        punctuation: /[()\\[\\]{}<>.:,;-]/\n    };\n    Prism.languages.avdl = Prism.languages[\"avro-idl\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hdnJvLWlkbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxRQUFRQyxXQUFXLEdBQUc7QUFDdEJELFFBQVFFLE9BQU8sR0FBRztJQUFDO0NBQU87QUFFMUIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkMseUNBQXlDO0lBQ3pDLHNEQUFzRDtJQUV0REEsTUFBTUMsU0FBUyxDQUFDLFdBQVcsR0FBRztRQUM1QkMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEcsWUFBWTtZQUNaRixRQUFRO1FBQ1Y7UUFDQUcsWUFBWTtZQUNWSixTQUFTO1lBQ1RDLFFBQVE7WUFDUkksT0FBTztRQUNUO1FBQ0EsdUJBQXVCO1lBQ3JCTCxTQUFTO1lBQ1RDLFFBQVE7WUFDUkksT0FBTztRQUNUO1FBQ0FDLFlBQVk7WUFDVk4sU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pELFNBQVM7WUFDVEcsWUFBWTtZQUNaRixRQUFRO1FBQ1Y7UUFDQU0sU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTjtnQkFDRVQsU0FDRTtnQkFDRkcsWUFBWTtZQUNkO1lBQ0E7U0FDRDtRQUNETyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtJQUNBZCxNQUFNQyxTQUFTLENBQUNjLElBQUksR0FBR2YsTUFBTUMsU0FBUyxDQUFDLFdBQVc7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYXZyby1pZGwuanM/ZTJkNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYXZyb0lkbC5kaXNwbGF5TmFtZSA9ICdhdnJvLWlkbCdcbmF2cm9JZGwuYWxpYXNlcyA9IFsnYXZkbCddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYXZyb0lkbChQcmlzbSkge1xuICAvLyBHaXRIdWI6IGh0dHBzOi8vZ2l0aHViLmNvbS9hcGFjaGUvYXZyb1xuICAvLyBEb2NzOiBodHRwczovL2F2cm8uYXBhY2hlLm9yZy9kb2NzL2N1cnJlbnQvaWRsLmh0bWxcblxuICBQcmlzbS5sYW5ndWFnZXNbJ2F2cm8taWRsJ10gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVwiKD86W15cXHJcXG5cIlxcXFxdfFxcXFwuKSpcIi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBhbm5vdGF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvQCg/OlskXFx3Li1dfGBbXlxcclxcbmBdK2ApKy8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgJ2Z1bmN0aW9uLWlkZW50aWZpZXInOiB7XG4gICAgICBwYXR0ZXJuOiAvYFteXFxyXFxuYF0rYCg/PVxccypcXCgpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICBpZGVudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvYFteXFxyXFxuYF0rYC8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjogLyhcXGIoPzplbnVtfGVycm9yfHByb3RvY29sfHJlY29yZHx0aHJvd3MpXFxiXFxzKylbJFxcd10rLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXJyYXl8Ym9vbGVhbnxieXRlc3xkYXRlfGRlY2ltYWx8ZG91YmxlfGVudW18ZXJyb3J8ZmFsc2V8Zml4ZWR8ZmxvYXR8aWRsfGltcG9ydHxpbnR8bG9jYWxfdGltZXN0YW1wX21zfGxvbmd8bWFwfG51bGx8b25ld2F5fHByb3RvY29sfHJlY29yZHxzY2hlbWF8c3RyaW5nfHRocm93c3x0aW1lX21zfHRpbWVzdGFtcF9tc3x0cnVlfHVuaW9ufHV1aWR8dm9pZClcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgbnVtYmVyOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteXFx3Ll0pLT8oPzooPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/fDB4KD86W2EtZjAtOV0rKD86XFwuW2EtZjAtOV0qKT98XFwuW2EtZjAtOV0rKSg/OnBbKy1dP1xcZCspPylbZGZsXT8oPyFbXFx3Ll0pL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvLT9cXGIoPzpJbmZpbml0eXxOYU4pXFxiL1xuICAgIF0sXG4gICAgb3BlcmF0b3I6IC89LyxcbiAgICBwdW5jdHVhdGlvbjogL1soKVxcW1xcXXt9PD4uOiw7LV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLmF2ZGwgPSBQcmlzbS5sYW5ndWFnZXNbJ2F2cm8taWRsJ11cbn1cbiJdLCJuYW1lcyI6WyJhdnJvSWRsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImxvb2tiZWhpbmQiLCJhbm5vdGF0aW9uIiwiYWxpYXMiLCJpZGVudGlmaWVyIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImF2ZGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avro-idl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/awk.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/awk.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ awk)\n/* harmony export */ });\n// @ts-nocheck\nawk.displayName = \"awk\";\nawk.aliases = [\n    \"gawk\"\n];\n/** @type {import('../core.js').Syntax} */ function awk(Prism) {\n    Prism.languages.awk = {\n        hashbang: {\n            pattern: /^#!.*/,\n            greedy: true,\n            alias: \"comment\"\n        },\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        regex: {\n            pattern: /((?:^|[^\\w\\s)])\\s*)\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\//,\n            lookbehind: true,\n            greedy: true\n        },\n        variable: /\\$\\w+/,\n        keyword: /\\b(?:BEGIN|BEGINFILE|END|ENDFILE|break|case|continue|default|delete|do|else|exit|for|function|getline|if|in|next|nextfile|printf?|return|switch|while)\\b|@(?:include|load)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[a-fA-F0-9]+)\\b/,\n        operator: /--|\\+\\+|!?~|>&|>>|<<|(?:\\*\\*|[<>!=+\\-*/%^])=?|&&|\\|[|&]|[?:]/,\n        punctuation: /[()[\\]{},;]/\n    };\n    Prism.languages.gawk = Prism.languages.awk;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9hd2suanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBRXRCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxTQUFTLENBQUNKLEdBQUcsR0FBRztRQUNwQkssVUFBVTtZQUNSQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFlBQVk7WUFDWkosUUFBUTtRQUNWO1FBQ0FLLE9BQU87WUFDTE4sU0FBUztZQUNUSyxZQUFZO1lBQ1pKLFFBQVE7UUFDVjtRQUNBTSxVQUFVO1FBQ1ZDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FmLE1BQU1DLFNBQVMsQ0FBQ2UsSUFBSSxHQUFHaEIsTUFBTUMsU0FBUyxDQUFDSixHQUFHO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2F3ay5qcz9lMmU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5hd2suZGlzcGxheU5hbWUgPSAnYXdrJ1xuYXdrLmFsaWFzZXMgPSBbJ2dhd2snXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGF3ayhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYXdrID0ge1xuICAgIGhhc2hiYW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXiMhLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjb21tZW50J1xuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpbXlxcXFxcIlxcclxcbl18XFxcXC4pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHJlZ2V4OiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58W15cXHdcXHMpXSlcXHMqKVxcLyg/OlteXFwvXFxcXFxcclxcbl18XFxcXC4pKlxcLy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICB2YXJpYWJsZTogL1xcJFxcdysvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QkVHSU58QkVHSU5GSUxFfEVORHxFTkRGSUxFfGJyZWFrfGNhc2V8Y29udGludWV8ZGVmYXVsdHxkZWxldGV8ZG98ZWxzZXxleGl0fGZvcnxmdW5jdGlvbnxnZXRsaW5lfGlmfGlufG5leHR8bmV4dGZpbGV8cHJpbnRmP3xyZXR1cm58c3dpdGNofHdoaWxlKVxcYnxAKD86aW5jbHVkZXxsb2FkKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvaSxcbiAgICBudW1iZXI6IC9cXGIoPzpcXGQrKD86XFwuXFxkKyk/KD86ZVsrLV0/XFxkKyk/fDB4W2EtZkEtRjAtOV0rKVxcYi8sXG4gICAgb3BlcmF0b3I6IC8tLXxcXCtcXCt8IT9+fD4mfD4+fDw8fCg/OlxcKlxcKnxbPD4hPStcXC0qLyVeXSk9P3wmJnxcXHxbfCZdfFs/Ol0vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9LDtdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5nYXdrID0gUHJpc20ubGFuZ3VhZ2VzLmF3a1xufVxuIl0sIm5hbWVzIjpbImF3ayIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiaGFzaGJhbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJjb21tZW50Iiwic3RyaW5nIiwibG9va2JlaGluZCIsInJlZ2V4IiwidmFyaWFibGUiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiZ2F3ayJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/awk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bash.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bash.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bash)\n/* harmony export */ });\n// @ts-nocheck\nbash.displayName = \"bash\";\nbash.aliases = [\n    \"sh\",\n    \"shell\"\n];\n/** @type {import('../core.js').Syntax} */ function bash(Prism) {\n    ;\n    (function(Prism) {\n        // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n        // + LC_ALL, RANDOM, REPLY, SECONDS.\n        // + make sure PS1..4 are here as they are not always set,\n        // - some useless things.\n        var envVars = \"\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b\";\n        var commandAfterHeredoc = {\n            pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n            lookbehind: true,\n            alias: \"punctuation\",\n            // this looks reasonably well in all themes\n            inside: null // see below\n        };\n        var insideString = {\n            bash: commandAfterHeredoc,\n            environment: {\n                pattern: RegExp(\"\\\\$\" + envVars),\n                alias: \"constant\"\n            },\n            variable: [\n                // [0]: Arithmetic Environment\n                {\n                    pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n                    greedy: true,\n                    inside: {\n                        // If there is a $ sign at the beginning highlight $(( and )) as variable\n                        variable: [\n                            {\n                                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                                lookbehind: true\n                            },\n                            /^\\$\\(\\(/\n                        ],\n                        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n                        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n                        operator: /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n                        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n                        punctuation: /\\(\\(?|\\)\\)?|,|;/\n                    }\n                },\n                // [1]: Command Substitution\n                {\n                    pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n                    greedy: true,\n                    inside: {\n                        variable: /^\\$\\(|^`|\\)$|`$/\n                    }\n                },\n                // [2]: Brace expansion\n                {\n                    pattern: /\\$\\{[^}]+\\}/,\n                    greedy: true,\n                    inside: {\n                        operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n                        punctuation: /[\\[\\]]/,\n                        environment: {\n                            pattern: RegExp(\"(\\\\{)\" + envVars),\n                            lookbehind: true,\n                            alias: \"constant\"\n                        }\n                    }\n                },\n                /\\$(?:\\w+|[#?*!@$])/\n            ],\n            // Escape sequences from echo and printf's manuals, and escaped quotes.\n            entity: /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n        };\n        Prism.languages.bash = {\n            shebang: {\n                pattern: /^#!\\s*\\/.*/,\n                alias: \"important\"\n            },\n            comment: {\n                pattern: /(^|[^\"{\\\\$])#.*/,\n                lookbehind: true\n            },\n            \"function-name\": [\n                // a) function foo {\n                // b) foo() {\n                // c) function foo() {\n                // but not “foo {”\n                {\n                    // a) and c)\n                    pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n                    lookbehind: true,\n                    alias: \"function\"\n                },\n                {\n                    // b)\n                    pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n                    alias: \"function\"\n                }\n            ],\n            // Highlight variable names as variables in for and select beginnings.\n            \"for-or-select\": {\n                pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n                alias: \"variable\",\n                lookbehind: true\n            },\n            // Highlight variable names as variables in the left-hand part\n            // of assignments (“=” and “+=”).\n            \"assign-left\": {\n                pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?:\\.\\w+)*(?=\\+?=)/,\n                inside: {\n                    environment: {\n                        pattern: RegExp(\"(^|[\\\\s;|&]|[<>]\\\\()\" + envVars),\n                        lookbehind: true,\n                        alias: \"constant\"\n                    }\n                },\n                alias: \"variable\",\n                lookbehind: true\n            },\n            // Highlight parameter names as variables\n            parameter: {\n                pattern: /(^|\\s)-{1,2}(?:\\w+:[+-]?)?\\w+(?:\\.\\w+)*(?=[=\\s]|$)/,\n                alias: \"variable\",\n                lookbehind: true\n            },\n            string: [\n                // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n                {\n                    pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: insideString\n                },\n                // Here-document with quotes around the tag\n                // → No expansion (so no “inside”).\n                {\n                    pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: {\n                        bash: commandAfterHeredoc\n                    }\n                },\n                // “Normal” string\n                {\n                    // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n                    pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: insideString\n                },\n                {\n                    // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n                    pattern: /(^|[^$\\\\])'[^']*'/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n                    pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n                    greedy: true,\n                    inside: {\n                        entity: insideString.entity\n                    }\n                }\n            ],\n            environment: {\n                pattern: RegExp(\"\\\\$?\" + envVars),\n                alias: \"constant\"\n            },\n            variable: insideString.variable,\n            function: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n                lookbehind: true\n            },\n            keyword: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n                lookbehind: true\n            },\n            // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n            builtin: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n                lookbehind: true,\n                // Alias added to make those easier to distinguish from strings.\n                alias: \"class-name\"\n            },\n            boolean: {\n                pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n                lookbehind: true\n            },\n            \"file-descriptor\": {\n                pattern: /\\B&\\d\\b/,\n                alias: \"important\"\n            },\n            operator: {\n                // Lots of redirections here, but not just that.\n                pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n                inside: {\n                    \"file-descriptor\": {\n                        pattern: /^\\d/,\n                        alias: \"important\"\n                    }\n                }\n            },\n            punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n            number: {\n                pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n                lookbehind: true\n            }\n        };\n        commandAfterHeredoc.inside = Prism.languages.bash;\n        /* Patterns in command substitution. */ var toBeCopied = [\n            \"comment\",\n            \"function-name\",\n            \"for-or-select\",\n            \"assign-left\",\n            \"parameter\",\n            \"string\",\n            \"environment\",\n            \"function\",\n            \"keyword\",\n            \"builtin\",\n            \"boolean\",\n            \"file-descriptor\",\n            \"operator\",\n            \"punctuation\",\n            \"number\"\n        ];\n        var inside = insideString.variable[1].inside;\n        for(var i = 0; i < toBeCopied.length; i++){\n            inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n        }\n        Prism.languages.sh = Prism.languages.bash;\n        Prism.languages.shell = Prism.languages.bash;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/basic.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/basic.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ basic)\n/* harmony export */ });\n// @ts-nocheck\nbasic.displayName = \"basic\";\nbasic.aliases = [];\n/** @type {import('../core.js').Syntax} */ function basic(Prism) {\n    Prism.languages.basic = {\n        comment: {\n            pattern: /(?:!|REM\\b).+/i,\n            inside: {\n                keyword: /^REM/i\n            }\n        },\n        string: {\n            pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n            greedy: true\n        },\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        keyword: /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n        function: /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n        operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n        punctuation: /[,;:()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYXNpYy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLFNBQVM7WUFDWDtRQUNGO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNUSSxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtRQUNSSCxTQUNFO1FBQ0ZJLFVBQ0U7UUFDRkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYXNpYy5qcz81ZDA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5iYXNpYy5kaXNwbGF5TmFtZSA9ICdiYXNpYydcbmJhc2ljLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJhc2ljKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5iYXNpYyA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKD86IXxSRU1cXGIpLisvaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvXlJFTS9pXG4gICAgICB9XG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlwiXCJ8WyEjJCUmJygpKixcXC86Ozw9Pj9eXFx3ICtcXC0uXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86RVsrLV0/XFxkKyk/L2ksXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpBU3xCRUVQfEJMT0FEfEJTQVZFfENBTEwoPzogQUJTT0xVVEUpP3xDQVNFfENIQUlOfENIRElSfENMRUFSfENMT1NFfENMU3xDT018Q09NTU9OfENPTlNUfERBVEF8REVDTEFSRXxERUYoPzogRk58IFNFR3xEQkx8SU5UfExOR3xTTkd8U1RSKXxESU18RE98RE9VQkxFfEVMU0V8RUxTRUlGfEVORHxFTlZJUk9OfEVSQVNFfEVSUk9SfEVYSVR8RklFTER8RklMRVN8Rk9SfEZVTkNUSU9OfEdFVHxHT1NVQnxHT1RPfElGfElOUFVUfElOVEVHRVJ8SU9DVEx8S0VZfEtJTEx8TElORSBJTlBVVHxMT0NBVEV8TE9DS3xMT05HfExPT1B8TFNFVHxNS0RJUnxOQU1FfE5FWFR8T0ZGfE9OKD86IENPTXwgRVJST1J8IEtFWXwgVElNRVIpP3xPUEVOfE9QVElPTiBCQVNFfE9VVHxQT0tFfFBVVHxSRUFEfFJFRElNfFJFTXxSRVNUT1JFfFJFU1VNRXxSRVRVUk58Uk1ESVJ8UlNFVHxSVU58U0VMRUNUIENBU0V8U0hBUkVEfFNIRUxMfFNJTkdMRXxTTEVFUHxTVEFUSUN8U1RFUHxTVE9QfFNUUklOR3xTVUJ8U1dBUHxTWVNURU18VEhFTnxUSU1FUnxUT3xUUk9GRnxUUk9OfFRZUEV8VU5MT0NLfFVOVElMfFVTSU5HfFZJRVcgUFJJTlR8V0FJVHxXRU5EfFdISUxFfFdSSVRFKSg/OlxcJHxcXGIpL2ksXG4gICAgZnVuY3Rpb246XG4gICAgICAvXFxiKD86QUJTfEFDQ0VTU3xBQ09TfEFOR0xFfEFSRUF8QVJJVEhNRVRJQ3xBUlJBWXxBU0lOfEFTS3xBVHxBVE58QkFTRXxCRUdJTnxCUkVBS3xDQVVTRXxDRUlMfENIUnxDTElQfENPTExBVEV8Q09MT1J8Q09OfENPU3xDT1NIfENPVHxDU0N8REFURXxEQVRVTXxERUJVR3xERUNJTUFMfERFRnxERUd8REVHUkVFU3xERUxFVEV8REVUfERFVklDRXxESVNQTEFZfERPVHxFTEFQU0VEfEVQU3xFUkFTQUJMRXxFWExJTkV8RVhQfEVYVEVSTkFMfEVYVFlQRXxGSUxFVFlQRXxGSVhFRHxGUHxHT3xHUkFQSHxIQU5ETEVSfElETnxJTUFHRXxJTnxJTlR8SU5URVJOQUx8SVB8SVN8S0VZRUR8TEJPVU5EfExDQVNFfExFRlR8TEVOfExFTkdUSHxMRVR8TElORXxMSU5FU3xMT0d8TE9HMTB8TE9HMnxMVFJJTXxNQVJHSU58TUFUfE1BWHxNQVhOVU18TUlEfE1JTnxNSVNTSU5HfE1PRHxOQVRJVkV8TlVMfE5VTUVSSUN8T0Z8T1BUSU9OfE9SRHxPUkdBTklaQVRJT058T1VUSU58T1VUUFVUfFBJfFBPSU5UfFBPSU5URVJ8UE9JTlRTfFBPU3xQUklOVHxQUk9HUkFNfFBST01QVHxSQUR8UkFESUFOU3xSQU5ET01JWkV8UkVDT1JEfFJFQ1NJWkV8UkVDVFlQRXxSRUxBVElWRXxSRU1BSU5ERVJ8UkVQRUFUfFJFU1R8UkVUUll8UkVXUklURXxSSUdIVHxSTkR8Uk9VTkR8UlRSSU18U0FNRXxTRUN8U0VMRUNUfFNFUVVFTlRJQUx8U0VUfFNFVFRFUnxTR058U0lOfFNJTkh8U0laRXxTS0lQfFNRUnxTVEFOREFSRHxTVEFUVVN8U1RSfFNUUkVBTXxTVFlMRXxUQUJ8VEFOfFRBTkh8VEVNUExBVEV8VEVYVHxUSEVSRXxUSU1FfFRJTUVPVVR8VFJBQ0V8VFJBTlNGT1JNfFRSVU5DQVRFfFVCT1VORHxVQ0FTRXxVU0V8VkFMfFZBUklBQkxFfFZJRVdQT1JUfFdIRU58V0lORE9XfFdJVEh8WkVSfFpPTkVXSURUSCkoPzpcXCR8XFxiKS9pLFxuICAgIG9wZXJhdG9yOiAvPFs9Pl0/fD49P3xbK1xcLSpcXC9ePSZdfFxcYig/OkFORHxFUVZ8SU1QfE5PVHxPUnxYT1IpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bLDs6KCldL1xuICB9XG59XG4iXSwibmFtZXMiOlsiYmFzaWMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiaW5zaWRlIiwia2V5d29yZCIsInN0cmluZyIsImdyZWVkeSIsIm51bWJlciIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/basic.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/batch.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/batch.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ batch)\n/* harmony export */ });\n// @ts-nocheck\nbatch.displayName = \"batch\";\nbatch.aliases = [];\n/** @type {import('../core.js').Syntax} */ function batch(Prism) {\n    ;\n    (function(Prism) {\n        var variable = /%%?[~:\\w]+%?|!\\S+!/;\n        var parameter = {\n            pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n            alias: \"attr-name\",\n            inside: {\n                punctuation: /:/\n            }\n        };\n        var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/;\n        var number = /(?:\\b|-)\\d+\\b/;\n        Prism.languages.batch = {\n            comment: [\n                /^::.*/m,\n                {\n                    pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n                    lookbehind: true\n                }\n            ],\n            label: {\n                pattern: /^:.*/m,\n                alias: \"property\"\n            },\n            command: [\n                {\n                    // FOR command\n                    pattern: /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /\\b(?:do|in)\\b|^for\\b/i,\n                        string: string,\n                        parameter: parameter,\n                        variable: variable,\n                        number: number,\n                        punctuation: /[()',]/\n                    }\n                },\n                {\n                    // IF command\n                    pattern: /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n                        string: string,\n                        parameter: parameter,\n                        variable: variable,\n                        number: number,\n                        operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n                    }\n                },\n                {\n                    // ELSE command\n                    pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^else\\b/i\n                    }\n                },\n                {\n                    // SET command\n                    pattern: /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^set\\b/i,\n                        string: string,\n                        parameter: parameter,\n                        variable: [\n                            variable,\n                            /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/\n                        ],\n                        number: number,\n                        operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n                        punctuation: /[()',]/\n                    }\n                },\n                {\n                    // Other commands\n                    pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^\\w+\\b/,\n                        string: string,\n                        parameter: parameter,\n                        label: {\n                            pattern: /(^\\s*):\\S+/m,\n                            lookbehind: true,\n                            alias: \"property\"\n                        },\n                        variable: variable,\n                        number: number,\n                        operator: /\\^/\n                    }\n                }\n            ],\n            operator: /[&@]/,\n            punctuation: /[()']/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLOztJQUMvQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsV0FBVztRQUNmLElBQUlDLFlBQVk7WUFDZEMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0EsSUFBSUMsU0FBUztRQUNiLElBQUlDLFNBQVM7UUFDYlIsTUFBTVMsU0FBUyxDQUFDWixLQUFLLEdBQUc7WUFDdEJhLFNBQVM7Z0JBQ1A7Z0JBQ0E7b0JBQ0VQLFNBQVM7b0JBQ1RRLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNEQyxPQUFPO2dCQUNMVCxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7WUFDQVMsU0FBUztnQkFDUDtvQkFDRSxjQUFjO29CQUNkVixTQUNFO29CQUNGUSxZQUFZO29CQUNaTixRQUFRO3dCQUNOUyxTQUFTO3dCQUNUUCxRQUFRQTt3QkFDUkwsV0FBV0E7d0JBQ1hELFVBQVVBO3dCQUNWTyxRQUFRQTt3QkFDUkYsYUFBYTtvQkFDZjtnQkFDRjtnQkFDQTtvQkFDRSxhQUFhO29CQUNiSCxTQUNFO29CQUNGUSxZQUFZO29CQUNaTixRQUFRO3dCQUNOUyxTQUNFO3dCQUNGUCxRQUFRQTt3QkFDUkwsV0FBV0E7d0JBQ1hELFVBQVVBO3dCQUNWTyxRQUFRQTt3QkFDUk8sVUFBVTtvQkFDWjtnQkFDRjtnQkFDQTtvQkFDRSxlQUFlO29CQUNmWixTQUFTO29CQUNUUSxZQUFZO29CQUNaTixRQUFRO3dCQUNOUyxTQUFTO29CQUNYO2dCQUNGO2dCQUNBO29CQUNFLGNBQWM7b0JBQ2RYLFNBQ0U7b0JBQ0ZRLFlBQVk7b0JBQ1pOLFFBQVE7d0JBQ05TLFNBQVM7d0JBQ1RQLFFBQVFBO3dCQUNSTCxXQUFXQTt3QkFDWEQsVUFBVTs0QkFBQ0E7NEJBQVU7eUJBQWtDO3dCQUN2RE8sUUFBUUE7d0JBQ1JPLFVBQVU7d0JBQ1ZULGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0UsaUJBQWlCO29CQUNqQkgsU0FDRTtvQkFDRlEsWUFBWTtvQkFDWk4sUUFBUTt3QkFDTlMsU0FBUzt3QkFDVFAsUUFBUUE7d0JBQ1JMLFdBQVdBO3dCQUNYVSxPQUFPOzRCQUNMVCxTQUFTOzRCQUNUUSxZQUFZOzRCQUNaUCxPQUFPO3dCQUNUO3dCQUNBSCxVQUFVQTt3QkFDVk8sUUFBUUE7d0JBQ1JPLFVBQVU7b0JBQ1o7Z0JBQ0Y7YUFDRDtZQUNEQSxVQUFVO1lBQ1ZULGFBQWE7UUFDZjtJQUNGLEdBQUdOO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmF0Y2guanM/ZjM0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYmF0Y2guZGlzcGxheU5hbWUgPSAnYmF0Y2gnXG5iYXRjaC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiYXRjaChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciB2YXJpYWJsZSA9IC8lJT9bfjpcXHddKyU/fCFcXFMrIS9cbiAgICB2YXIgcGFyYW1ldGVyID0ge1xuICAgICAgcGF0dGVybjogL1xcL1thLXo/XSsoPz1bIDpdfCQpOj98LVthLXpdXFxifC0tW2Etei1dK1xcYi9pbSxcbiAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogLzovXG4gICAgICB9XG4gICAgfVxuICAgIHZhciBzdHJpbmcgPSAvXCIoPzpbXFxcXFwiXVwifFteXCJdKSpcIig/IVwiKS9cbiAgICB2YXIgbnVtYmVyID0gLyg/OlxcYnwtKVxcZCtcXGIvXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmJhdGNoID0ge1xuICAgICAgY29tbWVudDogW1xuICAgICAgICAvXjo6LiovbSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oKD86XnxbJihdKVsgXFx0XSopcmVtXFxiKD86W15eJilcXHJcXG5dfFxcXig/OlxcclxcbnxbXFxzXFxTXSkpKi9pbSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBsYWJlbDoge1xuICAgICAgICBwYXR0ZXJuOiAvXjouKi9tLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgIGNvbW1hbmQ6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIEZPUiBjb21tYW5kXG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbJihdKVsgXFx0XSopZm9yKD86IFxcL1thLXo/XSg/OlsgOl0oPzpcIlteXCJdKlwifFteXFxzXCIvXVxcUyopKT8pKiBcXFMrIGluIFxcKFteKV0rXFwpIGRvL2ltLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBrZXl3b3JkOiAvXFxiKD86ZG98aW4pXFxifF5mb3JcXGIvaSxcbiAgICAgICAgICAgIHN0cmluZzogc3RyaW5nLFxuICAgICAgICAgICAgcGFyYW1ldGVyOiBwYXJhbWV0ZXIsXG4gICAgICAgICAgICB2YXJpYWJsZTogdmFyaWFibGUsXG4gICAgICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWygpJyxdL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIElGIGNvbW1hbmRcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLygoPzpefFsmKF0pWyBcXHRdKilpZig/OiBcXC9bYS16P10oPzpbIDpdKD86XCJbXlwiXSpcInxbXlxcc1wiL11cXFMqKSk/KSogKD86bm90ICk/KD86Y21kZXh0dmVyc2lvbiBcXGQrfGRlZmluZWQgXFx3K3xlcnJvcmxldmVsIFxcZCt8ZXhpc3QgXFxTK3woPzpcIlteXCJdKlwifCg/IVwiKSg/Oig/IT09KVxcUykrKT8oPzo9PXwgKD86ZXF1fGdlcXxndHJ8bGVxfGxzc3xuZXEpICkoPzpcIlteXCJdKlwifFteXFxzXCJdXFxTKikpL2ltLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBrZXl3b3JkOlxuICAgICAgICAgICAgICAvXFxiKD86Y21kZXh0dmVyc2lvbnxkZWZpbmVkfGVycm9ybGV2ZWx8ZXhpc3R8bm90KVxcYnxeaWZcXGIvaSxcbiAgICAgICAgICAgIHN0cmluZzogc3RyaW5nLFxuICAgICAgICAgICAgcGFyYW1ldGVyOiBwYXJhbWV0ZXIsXG4gICAgICAgICAgICB2YXJpYWJsZTogdmFyaWFibGUsXG4gICAgICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvXFxefD09fFxcYig/OmVxdXxnZXF8Z3RyfGxlcXxsc3N8bmVxKVxcYi9pXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gRUxTRSBjb21tYW5kXG4gICAgICAgICAgcGF0dGVybjogLygoPzpefFsmKCldKVsgXFx0XSopZWxzZVxcYi9pbSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAga2V5d29yZDogL15lbHNlXFxiL2lcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBTRVQgY29tbWFuZFxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58WyYoXSlbIFxcdF0qKXNldCg/OiBcXC9bYS16XSg/OlsgOl0oPzpcIlteXCJdKlwifFteXFxzXCIvXVxcUyopKT8pKiAoPzpbXl4mKVxcclxcbl18XFxeKD86XFxyXFxufFtcXHNcXFNdKSkqL2ltLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBrZXl3b3JkOiAvXnNldFxcYi9pLFxuICAgICAgICAgICAgc3RyaW5nOiBzdHJpbmcsXG4gICAgICAgICAgICBwYXJhbWV0ZXI6IHBhcmFtZXRlcixcbiAgICAgICAgICAgIHZhcmlhYmxlOiBbdmFyaWFibGUsIC9cXHcrKD89KD86WypcXC8lK1xcLSZefF18PDx8Pj4pPz0pL10sXG4gICAgICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvWypcXC8lK1xcLSZefF09P3w8PD0/fD4+PT98WyF+Xz1dLyxcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWygpJyxdL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIE90aGVyIGNvbW1hbmRzXG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbJihdKVsgXFx0XSpAPylcXHcrXFxiKD86XCIoPzpbXFxcXFwiXVwifFteXCJdKSpcIig/IVwiKXxbXlwiXiYpXFxyXFxuXXxcXF4oPzpcXHJcXG58W1xcc1xcU10pKSovbSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAga2V5d29yZDogL15cXHcrXFxiLyxcbiAgICAgICAgICAgIHN0cmluZzogc3RyaW5nLFxuICAgICAgICAgICAgcGFyYW1ldGVyOiBwYXJhbWV0ZXIsXG4gICAgICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvKF5cXHMqKTpcXFMrL20sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdmFyaWFibGU6IHZhcmlhYmxlLFxuICAgICAgICAgICAgbnVtYmVyOiBudW1iZXIsXG4gICAgICAgICAgICBvcGVyYXRvcjogL1xcXi9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBvcGVyYXRvcjogL1smQF0vLFxuICAgICAgcHVuY3R1YXRpb246IC9bKCknXS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImJhdGNoIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJ2YXJpYWJsZSIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJhbGlhcyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwic3RyaW5nIiwibnVtYmVyIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImxvb2tiZWhpbmQiLCJsYWJlbCIsImNvbW1hbmQiLCJrZXl3b3JkIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/batch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbcode.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbcode.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bbcode)\n/* harmony export */ });\n// @ts-nocheck\nbbcode.displayName = \"bbcode\";\nbbcode.aliases = [\n    \"shortcode\"\n];\n/** @type {import('../core.js').Syntax} */ function bbcode(Prism) {\n    Prism.languages.bbcode = {\n        tag: {\n            pattern: /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n            inside: {\n                tag: {\n                    pattern: /^\\[\\/?[^\\s=\\]]+/,\n                    inside: {\n                        punctuation: /^\\[\\/?/\n                    }\n                },\n                \"attr-value\": {\n                    pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n                    inside: {\n                        punctuation: [\n                            /^=/,\n                            {\n                                pattern: /^(\\s*)[\"']|[\"']$/,\n                                lookbehind: true\n                            }\n                        ]\n                    }\n                },\n                punctuation: /\\]/,\n                \"attr-name\": /[^\\s=\\]]+/\n            }\n        }\n    };\n    Prism.languages.shortcode = Prism.languages.bbcode;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYmNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFZO0FBRTlCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssS0FBSztZQUNIQyxTQUNFO1lBQ0ZDLFFBQVE7Z0JBQ05GLEtBQUs7b0JBQ0hDLFNBQVM7b0JBQ1RDLFFBQVE7d0JBQ05DLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0EsY0FBYztvQkFDWkYsU0FBUztvQkFDVEMsUUFBUTt3QkFDTkMsYUFBYTs0QkFDWDs0QkFDQTtnQ0FDRUYsU0FBUztnQ0FDVEcsWUFBWTs0QkFDZDt5QkFDRDtvQkFDSDtnQkFDRjtnQkFDQUQsYUFBYTtnQkFDYixhQUFhO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FMLE1BQU1DLFNBQVMsQ0FBQ00sU0FBUyxHQUFHUCxNQUFNQyxTQUFTLENBQUNKLE1BQU07QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmJjb2RlLmpzPzRjN2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmJiY29kZS5kaXNwbGF5TmFtZSA9ICdiYmNvZGUnXG5iYmNvZGUuYWxpYXNlcyA9IFsnc2hvcnRjb2RlJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiYmNvZGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJiY29kZSA9IHtcbiAgICB0YWc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXFtcXC8/W15cXHM9XFxdXSsoPzpcXHMqPVxccyooPzpcIlteXCJdKlwifCdbXiddKid8W15cXHMnXCJcXF09XSspKT8oPzpcXHMrW15cXHM9XFxdXStcXHMqPVxccyooPzpcIlteXCJdKlwifCdbXiddKid8W15cXHMnXCJcXF09XSspKSpcXHMqXFxdLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXlxcW1xcLz9bXlxccz1cXF1dKy8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXFtcXC8/L1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgJ2F0dHItdmFsdWUnOiB7XG4gICAgICAgICAgcGF0dGVybjogLz1cXHMqKD86XCJbXlwiXSpcInwnW14nXSonfFteXFxzJ1wiXFxdPV0rKS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogW1xuICAgICAgICAgICAgICAvXj0vLFxuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL14oXFxzKilbXCInXXxbXCInXSQvLFxuICAgICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXF0vLFxuICAgICAgICAnYXR0ci1uYW1lJzogL1teXFxzPVxcXV0rL1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuc2hvcnRjb2RlID0gUHJpc20ubGFuZ3VhZ2VzLmJiY29kZVxufVxuIl0sIm5hbWVzIjpbImJiY29kZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwidGFnIiwicGF0dGVybiIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwibG9va2JlaGluZCIsInNob3J0Y29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbcode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbj.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbj.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bbj)\n/* harmony export */ });\n// @ts-nocheck\nbbj.displayName = \"bbj\";\nbbj.aliases = [];\n/** @type {import('../core.js').Syntax} */ function bbj(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.bbj = {\n            comment: {\n                pattern: /(^|[^\\\\:])rem\\s+.*/i,\n                lookbehind: true,\n                greedy: true\n            },\n            string: {\n                pattern: /(['\"])(?:(?!\\1|\\\\).|\\\\.)*\\1/,\n                greedy: true\n            },\n            number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n            keyword: /\\b(?:abstract|all|argc|begin|bye|callback|case|chn|class|classend|ctl|day|declare|delete|dim|dom|dread|dsz|else|end|endif|err|exitto|extends|fi|field|for|from|gosub|goto|if|implements|interface|interfaceend|iol|iolist|let|list|load|method|methodend|methodret|on|opts|pfx|print|private|process_events|protected|psz|public|read|read_resource|release|remove_callback|repeat|restore|return|rev|seterr|setesc|sqlchn|sqlunt|ssn|start|static|swend|switch|sys|then|tim|unt|until|use|void|wend|where|while)\\b/i,\n            function: /\\b\\w+(?=\\()/,\n            boolean: /\\b(?:BBjAPI\\.TRUE|BBjAPI\\.FALSE)\\b/i,\n            operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:and|not|or|xor)\\b/i,\n            punctuation: /[.,;:()]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYmouanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDN0IsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLEdBQUcsR0FBRztZQUNwQkssU0FBUztnQkFDUEMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0FDLFFBQVE7Z0JBQ05ILFNBQVM7Z0JBQ1RFLFFBQVE7WUFDVjtZQUNBRSxRQUFRO1lBQ1JDLFNBQ0U7WUFDRkMsVUFBVTtZQUNWQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsYUFBYTtRQUNmO0lBQ0YsR0FBR1o7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iYmouanM/ZThmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYmJqLmRpc3BsYXlOYW1lID0gJ2JiaidcbmJiai5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBiYmooUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuYmJqID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pcmVtXFxzKy4qL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFsnXCJdKSg/Oig/IVxcMXxcXFxcKS58XFxcXC4pKlxcMS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG51bWJlcjogLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpFWystXT9cXGQrKT8vaSxcbiAgICAgIGtleXdvcmQ6XG4gICAgICAgIC9cXGIoPzphYnN0cmFjdHxhbGx8YXJnY3xiZWdpbnxieWV8Y2FsbGJhY2t8Y2FzZXxjaG58Y2xhc3N8Y2xhc3NlbmR8Y3RsfGRheXxkZWNsYXJlfGRlbGV0ZXxkaW18ZG9tfGRyZWFkfGRzenxlbHNlfGVuZHxlbmRpZnxlcnJ8ZXhpdHRvfGV4dGVuZHN8Zml8ZmllbGR8Zm9yfGZyb218Z29zdWJ8Z290b3xpZnxpbXBsZW1lbnRzfGludGVyZmFjZXxpbnRlcmZhY2VlbmR8aW9sfGlvbGlzdHxsZXR8bGlzdHxsb2FkfG1ldGhvZHxtZXRob2RlbmR8bWV0aG9kcmV0fG9ufG9wdHN8cGZ4fHByaW50fHByaXZhdGV8cHJvY2Vzc19ldmVudHN8cHJvdGVjdGVkfHBzenxwdWJsaWN8cmVhZHxyZWFkX3Jlc291cmNlfHJlbGVhc2V8cmVtb3ZlX2NhbGxiYWNrfHJlcGVhdHxyZXN0b3JlfHJldHVybnxyZXZ8c2V0ZXJyfHNldGVzY3xzcWxjaG58c3FsdW50fHNzbnxzdGFydHxzdGF0aWN8c3dlbmR8c3dpdGNofHN5c3x0aGVufHRpbXx1bnR8dW50aWx8dXNlfHZvaWR8d2VuZHx3aGVyZXx3aGlsZSlcXGIvaSxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxcKCkvLFxuICAgICAgYm9vbGVhbjogL1xcYig/OkJCakFQSVxcLlRSVUV8QkJqQVBJXFwuRkFMU0UpXFxiL2ksXG4gICAgICBvcGVyYXRvcjogLzxbPT5dP3w+PT98WytcXC0qXFwvXj0mXXxcXGIoPzphbmR8bm90fG9yfHhvcilcXGIvaSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWy4sOzooKV0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJiYmoiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsIm51bWJlciIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbj.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bicep.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bicep.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bicep)\n/* harmony export */ });\n// @ts-nocheck\nbicep.displayName = \"bicep\";\nbicep.aliases = [];\n/** @type {import('../core.js').Syntax} */ function bicep(Prism) {\n    // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n    Prism.languages.bicep = {\n        comment: [\n            {\n                // multiline comments eg /* ASDF */\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                // singleline comments eg // ASDF\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        property: [\n            {\n                pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n                lookbehind: true\n            },\n            {\n                pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: [\n            {\n                pattern: /'''[^'][\\s\\S]*?'''/,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        \"interpolated-string\": {\n            pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n                    inside: {\n                        expression: {\n                            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                            lookbehind: true\n                        },\n                        punctuation: /^\\$\\{|\\}$/\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        datatype: {\n            pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n            lookbehind: true,\n            alias: \"class-name\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n        keyword: /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n        decorator: /@\\w+\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.bicep[\"interpolated-string\"].inside[\"interpolation\"].inside[\"expression\"].inside = Prism.languages.bicep;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iaWNlcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDLDZGQUE2RjtJQUM3RkEsTUFBTUMsU0FBUyxDQUFDSixLQUFLLEdBQUc7UUFDdEJLLFNBQVM7WUFDUDtnQkFDRSxtQ0FBbUM7Z0JBQ25DQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRSxpQ0FBaUM7Z0JBQ2pDRixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7U0FDRDtRQUNEQyxVQUFVO1lBQ1I7Z0JBQ0VILFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7U0FDRDtRQUNERSxRQUFRO1lBQ047Z0JBQ0VKLFNBQVM7Z0JBQ1RFLFFBQVE7WUFDVjtZQUNBO2dCQUNFRixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7U0FDRDtRQUNELHVCQUF1QjtZQUNyQkYsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7WUFDUkcsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYk4sU0FBUztvQkFDVEssUUFBUTt3QkFDTkUsWUFBWTs0QkFDVlAsU0FBUzs0QkFDVEMsWUFBWTt3QkFDZDt3QkFDQU8sYUFBYTtvQkFDZjtnQkFDRjtnQkFDQUosUUFBUTtZQUNWO1FBQ0Y7UUFDQUssVUFBVTtZQUNSVCxTQUFTO1lBQ1RDLFlBQVk7WUFDWlMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7UUFDVCxrSEFBa0g7UUFDbEhDLFNBQ0U7UUFDRkMsV0FBVztRQUNYQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFDRTtRQUNGUixhQUFhO0lBQ2Y7SUFDQVgsTUFBTUMsU0FBUyxDQUFDSixLQUFLLENBQUMsc0JBQXNCLENBQUNXLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQ0EsTUFBTSxDQUN6RSxhQUNELENBQUNBLE1BQU0sR0FBR1IsTUFBTUMsU0FBUyxDQUFDSixLQUFLO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2JpY2VwLmpzPzJkMGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmJpY2VwLmRpc3BsYXlOYW1lID0gJ2JpY2VwJ1xuYmljZXAuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmljZXAoUHJpc20pIHtcbiAgLy8gYmFzZWQgbG9vc2VseSB1cG9uOiBodHRwczovL2dpdGh1Yi5jb20vQXp1cmUvYmljZXAvYmxvYi9tYWluL3NyYy90ZXh0bWF0ZS9iaWNlcC50bWxhbmd1YWdlXG4gIFByaXNtLmxhbmd1YWdlcy5iaWNlcCA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIC8vIG11bHRpbGluZSBjb21tZW50cyBlZyAvKiBBU0RGICovXG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIHNpbmdsZWxpbmUgY29tbWVudHMgZWcgLy8gQVNERlxuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pXFwvXFwvLiovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHByb3BlcnR5OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oW1xcclxcbl1bIFxcdF0qKVthLXpfXVxcdyooPz1bIFxcdF0qOikvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXVsgXFx0XSopJyg/OlxcXFwufFxcJCg/IVxceyl8W14nXFxcXFxcclxcbiRdKSonKD89WyBcXHRdKjopLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLycnJ1teJ11bXFxzXFxTXSo/JycnLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcJ10pJyg/OlxcXFwufFxcJCg/IVxceyl8W14nXFxcXFxcclxcbiRdKSonLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICAnaW50ZXJwb2xhdGVkLXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFwnXSknKD86XFxcXC58XFwkKD86KD8hXFx7KXxcXHtbXnt9XFxyXFxuXSpcXH0pfFteJ1xcXFxcXHJcXG4kXSkqJy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFwkXFx7W157fVxcclxcbl0qXFx9LyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogLyheXFwkXFx7KVtcXHNcXFNdKyg/PVxcfSQpLyxcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcJFxce3xcXH0kL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgZGF0YXR5cGU6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiKD86b3V0cHV0fHBhcmFtKVxcYlsgXFx0XStcXHcrWyBcXHRdKylcXHcrXFxiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9BenVyZS9iaWNlcC9ibG9iLzExNGEzMjUxYjRlNmUzMDA4MmE1ODcyOWYxOWE4Y2M0ZTM3NGZmYTYvc3JjL3RleHRtYXRlL2JpY2VwLnRtbGFuZ3VhZ2UjTDE4NFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86ZXhpc3Rpbmd8Zm9yfGlmfGlufG1vZHVsZXxudWxsfG91dHB1dHxwYXJhbXxyZXNvdXJjZXx0YXJnZXRTY29wZXx2YXIpXFxiLyxcbiAgICBkZWNvcmF0b3I6IC9AXFx3K1xcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89WyBcXHRdKlxcKCkvaSxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86RVsrLV0/XFxkKyk/L2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvLS18XFwrXFwrfFxcKlxcKj0/fD0+fCYmPT98XFx8XFx8PT98WyE9XT09fDw8PT98Pj4+Pz0/fFstKyovJSZ8XiE9PD5dPT98XFwuezN9fFxcP1xcPz0/fFxcP1xcLj98W346XS8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuYmljZXBbJ2ludGVycG9sYXRlZC1zdHJpbmcnXS5pbnNpZGVbJ2ludGVycG9sYXRpb24nXS5pbnNpZGVbXG4gICAgJ2V4cHJlc3Npb24nXG4gIF0uaW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmJpY2VwXG59XG4iXSwibmFtZXMiOlsiYmljZXAiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInByb3BlcnR5Iiwic3RyaW5nIiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiIsImV4cHJlc3Npb24iLCJwdW5jdHVhdGlvbiIsImRhdGF0eXBlIiwiYWxpYXMiLCJib29sZWFuIiwia2V5d29yZCIsImRlY29yYXRvciIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bicep.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/birb.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/birb.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ birb)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nbirb.displayName = \"birb\";\nbirb.aliases = [];\n/** @type {import('../core.js').Syntax} */ function birb(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.birb = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n            greedy: true\n        },\n        \"class-name\": [\n            /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/,\n            // matches variable and function return types (parameters as well).\n            /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n        ],\n        keyword: /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n        operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n        variable: /\\b[a-z_]\\w*\\b/\n    });\n    Prism.languages.insertBefore(\"birb\", \"function\", {\n        metadata: {\n            pattern: /<\\w+>/,\n            greedy: true,\n            alias: \"symbol\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iaXJiLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JEQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaO1lBQ0EsbUVBQW1FO1lBQ25FO1NBQ0Q7UUFDREMsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFVBQVU7SUFDWjtJQUNBVCxNQUFNRSxTQUFTLENBQUNRLFlBQVksQ0FBQyxRQUFRLFlBQVk7UUFDL0NDLFVBQVU7WUFDUk4sU0FBUztZQUNUQyxRQUFRO1lBQ1JNLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvYmlyYi5qcz82Mzg3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmJpcmIuZGlzcGxheU5hbWUgPSAnYmlyYidcbmJpcmIuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmlyYihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmJpcmIgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9yPyhcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxdKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgIC9cXGJbQS1aXSg/OltcXGRfXSpbYS16QS1aXVxcdyopP1xcYi8sXG4gICAgICAvLyBtYXRjaGVzIHZhcmlhYmxlIGFuZCBmdW5jdGlvbiByZXR1cm4gdHlwZXMgKHBhcmFtZXRlcnMgYXMgd2VsbCkuXG4gICAgICAvXFxiKD86W0EtWl1cXHcqfCg/ISg/OnZhcnx2b2lkKVxcYilbYS16XVxcdyopKD89XFxzK1xcdytcXHMqWzssPSgpXSkvXG4gICAgXSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFzc2VydHxicmVha3xjYXNlfGNsYXNzfGNvbnN0fGRlZmF1bHR8ZWxzZXxlbnVtfGZpbmFsfGZvbGxvd3N8Zm9yfGdyYWJ8aWZ8bmVzdHxuZXd8bmV4dHxub1NlZWJ8cmV0dXJufHN0YXRpY3xzd2l0Y2h8dGhyb3d8dmFyfHZvaWR8d2hpbGUpXFxiLyxcbiAgICBvcGVyYXRvcjogL1xcK1xcK3wtLXwmJnxcXHxcXHx8PDw9P3w+Pj0/fH4oPzpcXC89Pyk/fFsrXFwtKlxcLyUmXnw9ITw+XT0/fFxcP3w6LyxcbiAgICB2YXJpYWJsZTogL1xcYlthLXpfXVxcdypcXGIvXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2JpcmInLCAnZnVuY3Rpb24nLCB7XG4gICAgbWV0YWRhdGE6IHtcbiAgICAgIHBhdHRlcm46IC88XFx3Kz4vLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwiYmlyYiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm9wZXJhdG9yIiwidmFyaWFibGUiLCJpbnNlcnRCZWZvcmUiLCJtZXRhZGF0YSIsImFsaWFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/birb.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bison.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bison.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bison)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\nbison.displayName = \"bison\";\nbison.aliases = [];\n/** @type {import('../core.js').Syntax} */ function bison(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.bison = Prism.languages.extend(\"c\", {});\n    Prism.languages.insertBefore(\"bison\", \"comment\", {\n        bison: {\n            // This should match all the beginning of the file\n            // including the prologue(s), the bison declarations and\n            // the grammar rules.\n            pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n            inside: {\n                c: {\n                    // Allow for one level of nested braces\n                    pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n                    inside: {\n                        delimiter: {\n                            pattern: /^%?\\{|%?\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        \"bison-variable\": {\n                            pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n                            alias: \"variable\",\n                            inside: {\n                                punctuation: /<|>/\n                            }\n                        },\n                        rest: Prism.languages.c\n                    }\n                },\n                comment: Prism.languages.c.comment,\n                string: Prism.languages.c.string,\n                property: /\\S+(?=:)/,\n                keyword: /%\\w+/,\n                number: {\n                    pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n                    lookbehind: true\n                },\n                punctuation: /%[%?]|[|:;\\[\\]<>]/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iaXNvbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDaUI7QUFDL0JDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsNkNBQVVBO0lBQ3pCSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQ3JESCxNQUFNRSxTQUFTLENBQUNFLFlBQVksQ0FBQyxTQUFTLFdBQVc7UUFDL0NQLE9BQU87WUFDTCxrREFBa0Q7WUFDbEQsd0RBQXdEO1lBQ3hELHFCQUFxQjtZQUNyQlEsU0FBUztZQUNUQyxRQUFRO2dCQUNOQyxHQUFHO29CQUNELHVDQUF1QztvQkFDdkNGLFNBQVM7b0JBQ1RDLFFBQVE7d0JBQ05FLFdBQVc7NEJBQ1RILFNBQVM7NEJBQ1RJLE9BQU87d0JBQ1Q7d0JBQ0Esa0JBQWtCOzRCQUNoQkosU0FBUzs0QkFDVEksT0FBTzs0QkFDUEgsUUFBUTtnQ0FDTkksYUFBYTs0QkFDZjt3QkFDRjt3QkFDQUMsTUFBTVgsTUFBTUUsU0FBUyxDQUFDSyxDQUFDO29CQUN6QjtnQkFDRjtnQkFDQUssU0FBU1osTUFBTUUsU0FBUyxDQUFDSyxDQUFDLENBQUNLLE9BQU87Z0JBQ2xDQyxRQUFRYixNQUFNRSxTQUFTLENBQUNLLENBQUMsQ0FBQ00sTUFBTTtnQkFDaENDLFVBQVU7Z0JBQ1ZDLFNBQVM7Z0JBQ1RDLFFBQVE7b0JBQ05YLFNBQVM7b0JBQ1RZLFlBQVk7Z0JBQ2Q7Z0JBQ0FQLGFBQWE7WUFDZjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9iaXNvbi5qcz9jNWJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQyBmcm9tICcuL2MuanMnXG5iaXNvbi5kaXNwbGF5TmFtZSA9ICdiaXNvbidcbmJpc29uLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJpc29uKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckMpXG4gIFByaXNtLmxhbmd1YWdlcy5iaXNvbiA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2MnLCB7fSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYmlzb24nLCAnY29tbWVudCcsIHtcbiAgICBiaXNvbjoge1xuICAgICAgLy8gVGhpcyBzaG91bGQgbWF0Y2ggYWxsIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpbGVcbiAgICAgIC8vIGluY2x1ZGluZyB0aGUgcHJvbG9ndWUocyksIHRoZSBiaXNvbiBkZWNsYXJhdGlvbnMgYW5kXG4gICAgICAvLyB0aGUgZ3JhbW1hciBydWxlcy5cbiAgICAgIHBhdHRlcm46IC9eKD86W14lXXwlKD8hJSkpKiUlW1xcc1xcU10qPyUlLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBjOiB7XG4gICAgICAgICAgLy8gQWxsb3cgZm9yIG9uZSBsZXZlbCBvZiBuZXN0ZWQgYnJhY2VzXG4gICAgICAgICAgcGF0dGVybjogLyVcXHtbXFxzXFxTXSo/JVxcfXxcXHsoPzpcXHtbXn1dKlxcfXxbXnt9XSkqXFx9LyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXiU/XFx7fCU/XFx9JC8sXG4gICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgJ2Jpc29uLXZhcmlhYmxlJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvWyRAXSg/OjxbXlxccz5dKz4pP1tcXHckXSsvLFxuICAgICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJyxcbiAgICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICAgcHVuY3R1YXRpb246IC88fD4vXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZXN0OiBQcmlzbS5sYW5ndWFnZXMuY1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgY29tbWVudDogUHJpc20ubGFuZ3VhZ2VzLmMuY29tbWVudCxcbiAgICAgICAgc3RyaW5nOiBQcmlzbS5sYW5ndWFnZXMuYy5zdHJpbmcsXG4gICAgICAgIHByb3BlcnR5OiAvXFxTKyg/PTopLyxcbiAgICAgICAga2V5d29yZDogLyVcXHcrLyxcbiAgICAgICAgbnVtYmVyOiB7XG4gICAgICAgICAgcGF0dGVybjogLyhefFteQF0pXFxiKD86MHhbXFxkYS1mXSt8XFxkKykvaSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvJVslP118W3w6O1xcW1xcXTw+XS9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQyIsImJpc29uIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImluc2VydEJlZm9yZSIsInBhdHRlcm4iLCJpbnNpZGUiLCJjIiwiZGVsaW1pdGVyIiwiYWxpYXMiLCJwdW5jdHVhdGlvbiIsInJlc3QiLCJjb21tZW50Iiwic3RyaW5nIiwicHJvcGVydHkiLCJrZXl3b3JkIiwibnVtYmVyIiwibG9va2JlaGluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bison.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bnf.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bnf.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bnf)\n/* harmony export */ });\n// @ts-nocheck\nbnf.displayName = \"bnf\";\nbnf.aliases = [\n    \"rbnf\"\n];\n/** @type {import('../core.js').Syntax} */ function bnf(Prism) {\n    Prism.languages.bnf = {\n        string: {\n            pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n        },\n        definition: {\n            pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n            alias: [\n                \"rule\",\n                \"keyword\"\n            ],\n            inside: {\n                punctuation: /^<|>$/\n            }\n        },\n        rule: {\n            pattern: /<[^<>\\r\\n\\t]+>/,\n            inside: {\n                punctuation: /^<|>$/\n            }\n        },\n        operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n    };\n    Prism.languages.rbnf = Prism.languages.bnf;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ibmYuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBRXRCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxTQUFTLENBQUNKLEdBQUcsR0FBRztRQUNwQkssUUFBUTtZQUNOQyxTQUFTO1FBQ1g7UUFDQUMsWUFBWTtZQUNWRCxTQUFTO1lBQ1RFLE9BQU87Z0JBQUM7Z0JBQVE7YUFBVTtZQUMxQkMsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsTUFBTTtZQUNKTCxTQUFTO1lBQ1RHLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FFLFVBQVU7SUFDWjtJQUNBVCxNQUFNQyxTQUFTLENBQUNTLElBQUksR0FBR1YsTUFBTUMsU0FBUyxDQUFDSixHQUFHO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2JuZi5qcz9hN2JmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5ibmYuZGlzcGxheU5hbWUgPSAnYm5mJ1xuYm5mLmFsaWFzZXMgPSBbJ3JibmYnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJuZihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYm5mID0ge1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiW15cXHJcXG5cIl0qXCJ8J1teXFxyXFxuJ10qJy9cbiAgICB9LFxuICAgIGRlZmluaXRpb246IHtcbiAgICAgIHBhdHRlcm46IC88W148PlxcclxcblxcdF0rPig/PVxccyo6Oj0pLyxcbiAgICAgIGFsaWFzOiBbJ3J1bGUnLCAna2V5d29yZCddLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXjx8PiQvXG4gICAgICB9XG4gICAgfSxcbiAgICBydWxlOiB7XG4gICAgICBwYXR0ZXJuOiAvPFtePD5cXHJcXG5cXHRdKz4vLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXjx8PiQvXG4gICAgICB9XG4gICAgfSxcbiAgICBvcGVyYXRvcjogLzo6PXxbfCgpW1xcXXt9Kis/XXxcXC57M30vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnJibmYgPSBQcmlzbS5sYW5ndWFnZXMuYm5mXG59XG4iXSwibmFtZXMiOlsiYm5mIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZGVmaW5pdGlvbiIsImFsaWFzIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJydWxlIiwib3BlcmF0b3IiLCJyYm5mIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bnf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bqn.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bqn.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bqn)\n/* harmony export */ });\n// @ts-nocheck\nbqn.displayName = \"bqn\";\nbqn.aliases = [];\n/** @type {import('../core.js').Syntax} */ function bqn(Prism) {\n    Prism.languages.bqn = {\n        shebang: {\n            pattern: /^#![ \\t]*\\/.*/,\n            alias: \"important\",\n            greedy: true\n        },\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        \"string-literal\": {\n            pattern: /\"(?:[^\"]|\"\")*\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        \"character-literal\": {\n            pattern: /'(?:[\\s\\S]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF])'/,\n            greedy: true,\n            alias: \"char\"\n        },\n        function: /•[\\w¯.∞π]+[\\w¯.∞π]*/,\n        \"dot-notation-on-brackets\": {\n            pattern: /\\{(?=.*\\}\\.)|\\}\\./,\n            alias: \"namespace\"\n        },\n        \"special-name\": {\n            pattern: /(?:𝕨|𝕩|𝕗|𝕘|𝕤|𝕣|𝕎|𝕏|𝔽|𝔾|𝕊|_𝕣_|_𝕣)/,\n            alias: \"keyword\"\n        },\n        \"dot-notation-on-name\": {\n            pattern: /[A-Za-z_][\\w¯∞π]*\\./,\n            alias: \"namespace\"\n        },\n        \"word-number-scientific\": {\n            pattern: /\\d+(?:\\.\\d+)?[eE]¯?\\d+/,\n            alias: \"number\"\n        },\n        \"word-name\": {\n            pattern: /[A-Za-z_][\\w¯∞π]*/,\n            alias: \"symbol\"\n        },\n        \"word-number\": {\n            pattern: /[¯∞π]?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+|E[+¯]?\\d+)?|¯|∞|π))?/,\n            alias: \"number\"\n        },\n        \"null-literal\": {\n            pattern: /@/,\n            alias: \"char\"\n        },\n        \"primitive-functions\": {\n            pattern: /[-+×÷⋆√⌊⌈|¬∧∨<>≠=≤≥≡≢⊣⊢⥊∾≍⋈↑↓↕«»⌽⍉/⍋⍒⊏⊑⊐⊒∊⍷⊔!]/,\n            alias: \"operator\"\n        },\n        \"primitive-1-operators\": {\n            pattern: /[`˜˘¨⁼⌜´˝˙]/,\n            alias: \"operator\"\n        },\n        \"primitive-2-operators\": {\n            pattern: /[∘⊸⟜○⌾⎉⚇⍟⊘◶⎊]/,\n            alias: \"operator\"\n        },\n        punctuation: /[←⇐↩(){}⟨⟩[\\]‿·⋄,.;:?]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxPQUFPO1lBQ1BDLFFBQVE7UUFDVjtRQUNBQyxTQUFTO1lBQ1BILFNBQVM7WUFDVEUsUUFBUTtRQUNWO1FBQ0Esa0JBQWtCO1lBQ2hCRixTQUFTO1lBQ1RFLFFBQVE7WUFDUkQsT0FBTztRQUNUO1FBQ0EscUJBQXFCO1lBQ25CRCxTQUFTO1lBQ1RFLFFBQVE7WUFDUkQsT0FBTztRQUNUO1FBQ0FHLFVBQVU7UUFDViw0QkFBNEI7WUFDMUJKLFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsZ0JBQWdCO1lBQ2RELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0Esd0JBQXdCO1lBQ3RCRCxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLDBCQUEwQjtZQUN4QkQsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQSxhQUFhO1lBQ1hELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsZUFBZTtZQUNiRCxTQUNFO1lBQ0ZDLE9BQU87UUFDVDtRQUNBLGdCQUFnQjtZQUNkRCxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLHVCQUF1QjtZQUNyQkQsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQSx5QkFBeUI7WUFDdkJELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EseUJBQXlCO1lBQ3ZCRCxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBSSxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icW4uanM/MjQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYnFuLmRpc3BsYXlOYW1lID0gJ2JxbidcbmJxbi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBicW4oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJxbiA9IHtcbiAgICBzaGViYW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXiMhWyBcXHRdKlxcLy4qLyxcbiAgICAgIGFsaWFzOiAnaW1wb3J0YW50JyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdzdHJpbmctbGl0ZXJhbCc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJdfFwiXCIpKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgJ2NoYXJhY3Rlci1saXRlcmFsJzoge1xuICAgICAgcGF0dGVybjogLycoPzpbXFxzXFxTXXxbXFx1RDgwMC1cXHVEQkZGXVtcXHVEQzAwLVxcdURGRkZdKScvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjaGFyJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IC/igKJbXFx3wq8u4oiez4BdK1tcXHfCry7iiJ7PgF0qLyxcbiAgICAnZG90LW5vdGF0aW9uLW9uLWJyYWNrZXRzJzoge1xuICAgICAgcGF0dGVybjogL1xceyg/PS4qXFx9XFwuKXxcXH1cXC4vLFxuICAgICAgYWxpYXM6ICduYW1lc3BhY2UnXG4gICAgfSxcbiAgICAnc3BlY2lhbC1uYW1lJzoge1xuICAgICAgcGF0dGVybjogLyg/OvCdlah88J2VqXzwnZWXfPCdlZh88J2VpHzwnZWjfPCdlY588J2Vj3zwnZS9fPCdlL588J2Vinxf8J2Vo198X/CdlaMpLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdkb3Qtbm90YXRpb24tb24tbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC9bQS1aYS16X11bXFx3wq/iiJ7PgF0qXFwuLyxcbiAgICAgIGFsaWFzOiAnbmFtZXNwYWNlJ1xuICAgIH0sXG4gICAgJ3dvcmQtbnVtYmVyLXNjaWVudGlmaWMnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxkKyg/OlxcLlxcZCspP1tlRV3Crz9cXGQrLyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgJ3dvcmQtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC9bQS1aYS16X11bXFx3wq/iiJ7PgF0qLyxcbiAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgIH0sXG4gICAgJ3dvcmQtbnVtYmVyJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1vCr+KIns+AXT8oPzpcXGQqXFwuP1xcYlxcZCsoPzplWyvCr10/XFxkK3xFWyvCr10/XFxkKyk/fMKvfOKInnzPgCkoPzpqwq8/KD86KD86XFxkKyg/OlxcLlxcZCspP3xcXC5cXGQrKSg/OmVbK8KvXT9cXGQrfEVbK8KvXT9cXGQrKT98wq984oiefM+AKSk/LyxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgJ251bGwtbGl0ZXJhbCc6IHtcbiAgICAgIHBhdHRlcm46IC9ALyxcbiAgICAgIGFsaWFzOiAnY2hhcidcbiAgICB9LFxuICAgICdwcmltaXRpdmUtZnVuY3Rpb25zJzoge1xuICAgICAgcGF0dGVybjogL1stK8OXw7fii4biiJrijIrijIh8wqziiKfiiKg8PuKJoD3iiaTiiaXiiaHiiaLiiqPiiqLipYriiL7iiY3ii4jihpHihpPihpXCq8K74oy94o2JL+KNi+KNkuKKj+KKkeKKkOKKkuKIiuKNt+KKlCFdLyxcbiAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgfSxcbiAgICAncHJpbWl0aXZlLTEtb3BlcmF0b3JzJzoge1xuICAgICAgcGF0dGVybjogL1tgy5zLmMKo4oG84oycwrTLncuZXS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgJ3ByaW1pdGl2ZS0yLW9wZXJhdG9ycyc6IHtcbiAgICAgIHBhdHRlcm46IC9b4oiY4oq44p+c4peL4oy+4o6J4pqH4o2f4oqY4pe24o6KXS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9b4oaQ4oeQ4oapKCl7feKfqOKfqVtcXF3igL/Ct+KLhCwuOzo/XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImJxbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic2hlYmFuZyIsInBhdHRlcm4iLCJhbGlhcyIsImdyZWVkeSIsImNvbW1lbnQiLCJmdW5jdGlvbiIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bqn.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brainfuck.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brainfuck.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ brainfuck)\n/* harmony export */ });\n// @ts-nocheck\nbrainfuck.displayName = \"brainfuck\";\nbrainfuck.aliases = [];\n/** @type {import('../core.js').Syntax} */ function brainfuck(Prism) {\n    Prism.languages.brainfuck = {\n        pointer: {\n            pattern: /<|>/,\n            alias: \"keyword\"\n        },\n        increment: {\n            pattern: /\\+/,\n            alias: \"inserted\"\n        },\n        decrement: {\n            pattern: /-/,\n            alias: \"deleted\"\n        },\n        branching: {\n            pattern: /\\[|\\]/,\n            alias: \"important\"\n        },\n        operator: /[.,]/,\n        comment: /\\S+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icmFpbmZ1Y2suanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSztJQUNyQ0EsTUFBTUMsU0FBUyxDQUFDSixTQUFTLEdBQUc7UUFDMUJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUMsV0FBVztZQUNURixTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBRSxXQUFXO1lBQ1RILFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FHLFdBQVc7WUFDVEosU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUksVUFBVTtRQUNWQyxTQUFTO0lBQ1g7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icmFpbmZ1Y2suanM/NTJmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYnJhaW5mdWNrLmRpc3BsYXlOYW1lID0gJ2JyYWluZnVjaydcbmJyYWluZnVjay5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBicmFpbmZ1Y2soUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJyYWluZnVjayA9IHtcbiAgICBwb2ludGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvPHw+LyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGluY3JlbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcKy8sXG4gICAgICBhbGlhczogJ2luc2VydGVkJ1xuICAgIH0sXG4gICAgZGVjcmVtZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvLS8sXG4gICAgICBhbGlhczogJ2RlbGV0ZWQnXG4gICAgfSxcbiAgICBicmFuY2hpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cXFt8XFxdLyxcbiAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgIH0sXG4gICAgb3BlcmF0b3I6IC9bLixdLyxcbiAgICBjb21tZW50OiAvXFxTKy9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImJyYWluZnVjayIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwicG9pbnRlciIsInBhdHRlcm4iLCJhbGlhcyIsImluY3JlbWVudCIsImRlY3JlbWVudCIsImJyYW5jaGluZyIsIm9wZXJhdG9yIiwiY29tbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brainfuck.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brightscript.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brightscript.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ brightscript)\n/* harmony export */ });\n// @ts-nocheck\nbrightscript.displayName = \"brightscript\";\nbrightscript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function brightscript(Prism) {\n    Prism.languages.brightscript = {\n        comment: /(?:\\brem|').*/i,\n        \"directive-statement\": {\n            pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n            lookbehind: true,\n            alias: \"property\",\n            inside: {\n                \"error-message\": {\n                    pattern: /(^#error).+/,\n                    lookbehind: true\n                },\n                directive: {\n                    pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n                    alias: \"keyword\"\n                },\n                expression: {\n                    pattern: /[\\s\\S]+/,\n                    inside: null // see below\n                }\n            }\n        },\n        property: {\n            pattern: /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\bAs[\\t ]+)\\w+/i,\n            lookbehind: true\n        },\n        keyword: /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n        number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n        operator: /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n        punctuation: /[.,;()[\\]{}]/,\n        constant: /\\b(?:LINE_NUM)\\b/i\n    };\n    Prism.languages.brightscript[\"directive-statement\"].inside.expression.inside = Prism.languages.brightscript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icmlnaHRzY3JpcHQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsYUFBYUMsV0FBVyxHQUFHO0FBQzNCRCxhQUFhRSxPQUFPLEdBQUcsRUFBRTtBQUV6Qix3Q0FBd0MsR0FDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN4Q0EsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUc7UUFDN0JLLFNBQVM7UUFDVCx1QkFBdUI7WUFDckJDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ04saUJBQWlCO29CQUNmSCxTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBRyxXQUFXO29CQUNUSixTQUFTO29CQUNURSxPQUFPO2dCQUNUO2dCQUNBRyxZQUFZO29CQUNWTCxTQUFTO29CQUNURyxRQUFRLEtBQUssWUFBWTtnQkFDM0I7WUFDRjtRQUNGO1FBRUFHLFVBQVU7WUFDUk4sU0FDRTtZQUNGQyxZQUFZO1lBQ1pNLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05SLFNBQVM7WUFDVE8sUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaUCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBUSxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQ0U7UUFDRkMsYUFBYTtRQUNiQyxVQUFVO0lBQ1o7SUFDQWxCLE1BQU1DLFNBQVMsQ0FBQ0osWUFBWSxDQUFDLHNCQUFzQixDQUFDUyxNQUFNLENBQUNFLFVBQVUsQ0FBQ0YsTUFBTSxHQUMxRU4sTUFBTUMsU0FBUyxDQUFDSixZQUFZO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2JyaWdodHNjcmlwdC5qcz82YjQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5icmlnaHRzY3JpcHQuZGlzcGxheU5hbWUgPSAnYnJpZ2h0c2NyaXB0J1xuYnJpZ2h0c2NyaXB0LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJyaWdodHNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuYnJpZ2h0c2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IC8oPzpcXGJyZW18JykuKi9pLFxuICAgICdkaXJlY3RpdmUtc3RhdGVtZW50Jzoge1xuICAgICAgcGF0dGVybjogLyheW1xcdCBdKikjKD86Y29uc3R8ZWxzZSg/OltcXHQgXStpZik/fGVuZFtcXHQgXStpZnxlcnJvcnxpZikuKi9pbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnZXJyb3ItbWVzc2FnZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF4jZXJyb3IpLisvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgICAgcGF0dGVybjogL14jKD86Y29uc3R8ZWxzZSg/OltcXHQgXStpZik/fGVuZFtcXHQgXStpZnxlcnJvcnxpZikvLFxuICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgfSxcbiAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBwcm9wZXJ0eToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhbXFxyXFxueyxdW1xcdCBdKikoPzooPyFcXGQpXFx3K3xcIig/OlteXCJcXHJcXG5dfFwiXCIpKlwiKD8hXCIpKSg/PVsgXFx0XSo6KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXHJcXG5dfFwiXCIpKlwiKD8hXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcYkFzW1xcdCBdKylcXHcrL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFzfERpbXxFYWNofEVsc2V8RWxzZWlmfEVuZHxFeGl0fEZvcnxGdW5jdGlvbnxHb3RvfElmfElufFByaW50fFJldHVybnxTdGVwfFN0b3B8U3VifFRoZW58VG98V2hpbGUpXFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgZnVuY3Rpb246IC9cXGIoPyFcXGQpXFx3Kyg/PVtcXHQgXSpcXCgpLyxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKyk/KD86W2VkXVsrLV1cXGQrKT98JmhbYS1mXFxkXSspXFxiWyUmISNdPy9pLFxuICAgIG9wZXJhdG9yOlxuICAgICAgLy0tfFxcK1xcK3w+Pj0/fDw8PT98PD58Wy0rKi9cXFxcPD5dPT98WzpePT9dfFxcYig/OmFuZHxtb2R8bm90fG9yKVxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWy4sOygpW1xcXXt9XS8sXG4gICAgY29uc3RhbnQ6IC9cXGIoPzpMSU5FX05VTSlcXGIvaVxuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5icmlnaHRzY3JpcHRbJ2RpcmVjdGl2ZS1zdGF0ZW1lbnQnXS5pbnNpZGUuZXhwcmVzc2lvbi5pbnNpZGUgPVxuICAgIFByaXNtLmxhbmd1YWdlcy5icmlnaHRzY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJicmlnaHRzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwiZGlyZWN0aXZlIiwiZXhwcmVzc2lvbiIsInByb3BlcnR5IiwiZ3JlZWR5Iiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJjb25zdGFudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brightscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bro.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bro.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bro)\n/* harmony export */ });\n// @ts-nocheck\nbro.displayName = \"bro\";\nbro.aliases = [];\n/** @type {import('../core.js').Syntax} */ function bro(Prism) {\n    Prism.languages.bro = {\n        comment: {\n            pattern: /(^|[^\\\\$])#.*/,\n            lookbehind: true,\n            inside: {\n                italic: /\\b(?:FIXME|TODO|XXX)\\b/\n            }\n        },\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        boolean: /\\b[TF]\\b/,\n        function: {\n            pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n            lookbehind: true\n        },\n        builtin: /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n        constant: {\n            pattern: /(\\bconst[ \\t]+)\\w+/i,\n            lookbehind: true\n        },\n        keyword: /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n        operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icm8uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7Z0JBQ05DLFFBQVE7WUFDVjtRQUNGO1FBQ0FDLFFBQVE7WUFDTkosU0FBUztZQUNUSyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztRQUNUQyxVQUFVO1lBQ1JQLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FPLFNBQ0U7UUFDRkMsVUFBVTtZQUNSVCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBUyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9icm8uanM/NDJiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYnJvLmRpc3BsYXlOYW1lID0gJ2JybydcbmJyby5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBicm8oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmJybyA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcJF0pIy4qLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaXRhbGljOiAvXFxiKD86RklYTUV8VE9ET3xYWFgpXFxiL1xuICAgICAgfVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiW1RGXVxcYi8sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiKD86ZXZlbnR8ZnVuY3Rpb258aG9vaylbIFxcdF0rKVxcdysoPzo6OlxcdyspPy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBidWlsdGluOlxuICAgICAgLyg/OkAoPzpsb2FkKD86LSg/OnBsdWdpbnxzaWdzKSk/fHVubG9hZHxwcmVmaXhlc3xpZm4/ZGVmfGVsc2V8KD86ZW5kKT9pZnxESVJ8RklMRU5BTUUpKXwoPzomPyg/OmFkZF9mdW5jfGNyZWF0ZV9leHBpcmV8ZGVmYXVsdHxkZWxldGVfZnVuY3xlbmNyeXB0fGVycm9yX2hhbmRsZXJ8ZXhwaXJlX2Z1bmN8Z3JvdXB8bG9nfG1lcmdlYWJsZXxvcHRpb25hbHxwZXJzaXN0ZW50fHByaW9yaXR5fHJhd19vdXRwdXR8cmVhZF9leHBpcmV8cmVkZWZ8cm90YXRlX2ludGVydmFsfHJvdGF0ZV9zaXplfHN5bmNocm9uaXplZHx0eXBlX2NvbHVtbnx3cml0ZV9leHBpcmUpKS8sXG4gICAgY29uc3RhbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiY29uc3RbIFxcdF0rKVxcdysvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWRkfGFkZHJ8YWxhcm18YW55fGJvb2x8YnJlYWt8Y29uc3R8Y29udGludWV8Y291bnR8ZGVsZXRlfGRvdWJsZXxlbHNlfGVudW18ZXZlbnR8ZXhwb3J0fGZpbGV8Zm9yfGZ1bmN0aW9ufGdsb2JhbHxob29rfGlmfGlufGludHxpbnRlcnZhbHxsb2NhbHxtb2R1bGV8bmV4dHxvZnxvcGFxdWV8cGF0dGVybnxwb3J0fHByaW50fHJlY29yZHxyZXR1cm58c2NoZWR1bGV8c2V0fHN0cmluZ3xzdWJuZXR8dGFibGV8dGltZXx0aW1lb3V0fHVzaW5nfHZlY3Rvcnx3aGVuKVxcYi8sXG4gICAgb3BlcmF0b3I6IC8tLT98XFwrXFwrP3whPT89P3w8PT98Pj0/fD09Pz0/fCYmfFxcfFxcfD98XFw/fFxcKnxcXC98fnxcXF58JS8sXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspPy9pLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJicm8iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsIml0YWxpYyIsInN0cmluZyIsImdyZWVkeSIsImJvb2xlYW4iLCJmdW5jdGlvbiIsImJ1aWx0aW4iLCJjb25zdGFudCIsImtleXdvcmQiLCJvcGVyYXRvciIsIm51bWJlciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bro.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bsl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bsl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ bsl)\n/* harmony export */ });\n// @ts-nocheck\nbsl.displayName = \"bsl\";\nbsl.aliases = [\n    \"oscript\"\n];\n/** @type {import('../core.js').Syntax} */ function bsl(Prism) {\n    /* eslint-disable no-misleading-character-class */ // 1C:Enterprise\n    // https://github.com/Diversus23/\n    //\n    Prism.languages.bsl = {\n        comment: /\\/\\/.*/,\n        string: [\n            // Строки\n            // Strings\n            {\n                pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n                greedy: true\n            },\n            // Дата и время\n            // Date & time\n            {\n                pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n            }\n        ],\n        keyword: [\n            {\n                // RU\n                pattern: /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n                lookbehind: true\n            },\n            {\n                // EN\n                pattern: /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n            }\n        ],\n        number: {\n            pattern: /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n            lookbehind: true\n        },\n        operator: [\n            /[<>+\\-*/]=?|[%=]/,\n            // RU\n            {\n                pattern: /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n                lookbehind: true\n            },\n            // EN\n            {\n                pattern: /\\b(?:and|not|or)\\b/i\n            }\n        ],\n        punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n        directive: [\n            // Теги препроцессора вида &Клиент, &Сервер, ...\n            // Preprocessor tags of the type &Client, &Server, ...\n            {\n                pattern: /^([ \\t]*)&.*/m,\n                lookbehind: true,\n                greedy: true,\n                alias: \"important\"\n            },\n            // Инструкции препроцессора вида:\n            // #Если Сервер Тогда\n            // ...\n            // #КонецЕсли\n            // Preprocessor instructions of the form:\n            // #If Server Then\n            // ...\n            // #EndIf\n            {\n                pattern: /^([ \\t]*)#.*/gm,\n                lookbehind: true,\n                greedy: true,\n                alias: \"important\"\n            }\n        ]\n    };\n    Prism.languages.oscript = Prism.languages[\"bsl\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ic2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFVO0FBRXpCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CLGdEQUFnRCxHQUVoRCxnQkFBZ0I7SUFDaEIsaUNBQWlDO0lBQ2pDLEVBQUU7SUFDRkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOLFNBQVM7WUFDVCxVQUFVO1lBQ1Y7Z0JBQ0VDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBLGVBQWU7WUFDZixjQUFjO1lBQ2Q7Z0JBQ0VELFNBQVM7WUFDWDtTQUNEO1FBQ0RFLFNBQVM7WUFDUDtnQkFDRSxLQUFLO2dCQUNMRixTQUNFO2dCQUNGRyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxLQUFLO2dCQUNMSCxTQUNFO1lBQ0o7U0FDRDtRQUNESSxRQUFRO1lBQ05KLFNBQ0U7WUFDRkcsWUFBWTtRQUNkO1FBQ0FFLFVBQVU7WUFDUjtZQUNBLEtBQUs7WUFDTDtnQkFDRUwsU0FDRTtnQkFDRkcsWUFBWTtZQUNkO1lBQ0EsS0FBSztZQUNMO2dCQUNFSCxTQUFTO1lBQ1g7U0FDRDtRQUNETSxhQUFhO1FBQ2JDLFdBQVc7WUFDVCxnREFBZ0Q7WUFDaEQsc0RBQXNEO1lBQ3REO2dCQUNFUCxTQUFTO2dCQUNURyxZQUFZO2dCQUNaRixRQUFRO2dCQUNSTyxPQUFPO1lBQ1Q7WUFDQSxpQ0FBaUM7WUFDakMscUJBQXFCO1lBQ3JCLE1BQU07WUFDTixhQUFhO1lBQ2IseUNBQXlDO1lBQ3pDLGtCQUFrQjtZQUNsQixNQUFNO1lBQ04sU0FBUztZQUNUO2dCQUNFUixTQUFTO2dCQUNURyxZQUFZO2dCQUNaRixRQUFRO2dCQUNSTyxPQUFPO1lBQ1Q7U0FDRDtJQUNIO0lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ1ksT0FBTyxHQUFHYixNQUFNQyxTQUFTLENBQUMsTUFBTTtBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ic2wuanM/ZTBlNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuYnNsLmRpc3BsYXlOYW1lID0gJ2JzbCdcbmJzbC5hbGlhc2VzID0gWydvc2NyaXB0J11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBic2woUHJpc20pIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tbWlzbGVhZGluZy1jaGFyYWN0ZXItY2xhc3MgKi9cblxuICAvLyAxQzpFbnRlcnByaXNlXG4gIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9EaXZlcnN1czIzL1xuICAvL1xuICBQcmlzbS5sYW5ndWFnZXMuYnNsID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXC8uKi8sXG4gICAgc3RyaW5nOiBbXG4gICAgICAvLyDQodGC0YDQvtC60LhcbiAgICAgIC8vIFN0cmluZ3NcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1wiKD86W15cIl18XCJcIikqXCIoPyFcIikvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAvLyDQlNCw0YLQsCDQuCDQstGA0LXQvNGPXG4gICAgICAvLyBEYXRlICYgdGltZVxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvJyg/OlteJ1xcclxcblxcXFxdfFxcXFwuKSonL1xuICAgICAgfVxuICAgIF0sXG4gICAga2V5d29yZDogW1xuICAgICAge1xuICAgICAgICAvLyBSVVxuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcd1xcdTA0MDAtXFx1MDQ4NFxcdTA0ODctXFx1MDUyZlxcdTFkMmJcXHUxZDc4XFx1MmRlMC1cXHUyZGZmXFx1YTY0MC1cXHVhNjlmXFx1ZmUyZVxcdWZlMmZdKSg/OtC/0L7QutCwfNC00LvRj3zQvdC+0LLRi9C5fNC/0YDQtdGA0LLQsNGC0Yx80L/QvtC/0YvRgtC60LB80LjRgdC60LvRjtGH0LXQvdC40LV80LLRi9C30LLQsNGC0YzQuNGB0LrQu9GO0YfQtdC90LjQtXzQuNC90LDRh9C1fNC60L7QvdC10YbQv9C+0L/Ri9GC0LrQuHzQvdC10L7Qv9GA0LXQtNC10LvQtdC90L580YTRg9C90LrRhtC40Y980L/QtdGA0LXQvHzQstC+0LfQstGA0LDRgnzQutC+0L3QtdGG0YTRg9C90LrRhtC40Lh80LXRgdC70Lh80LjQvdCw0YfQtdC10YHQu9C4fNC/0YDQvtGG0LXQtNGD0YDQsHzQutC+0L3QtdGG0L/RgNC+0YbQtdC00YPRgNGLfNGC0L7Qs9C00LB80LfQvdCw0Yd80Y3QutGB0L/QvtGA0YJ80LrQvtC90LXRhtC10YHQu9C4fNC40Ld80LrQsNC20LTQvtCz0L580LjRgdGC0LjQvdCwfNC70L7QttGMfNC/0L580YbQuNC60Lt80LrQvtC90LXRhtGG0LjQutC70LB80LLRi9C/0L7Qu9C90LjRgtGMKSg/IVtcXHdcXHUwNDAwLVxcdTA0ODRcXHUwNDg3LVxcdTA1MmZcXHUxZDJiXFx1MWQ3OFxcdTJkZTAtXFx1MmRmZlxcdWE2NDAtXFx1YTY5ZlxcdWZlMmVcXHVmZTJmXSkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gRU5cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXFxiKD86YnJlYWt8ZG98ZWFjaHxlbHNlfGVsc2VpZnxlbmRkb3xlbmRmdW5jdGlvbnxlbmRpZnxlbmRwcm9jZWR1cmV8ZW5kdHJ5fGV4Y2VwdHxleGVjdXRlfGV4cG9ydHxmYWxzZXxmb3J8ZnVuY3Rpb258aWZ8aW58bmV3fG51bGx8cHJvY2VkdXJlfHJhaXNlfHJldHVybnx0aGVufHRvfHRydWV8dHJ5fHVuZGVmaW5lZHx2YWx8dmFyfHdoaWxlKVxcYi9pXG4gICAgICB9XG4gICAgXSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXig/PVxcZCl8W15cXHdcXHUwNDAwLVxcdTA0ODRcXHUwNDg3LVxcdTA1MmZcXHUxZDJiXFx1MWQ3OFxcdTJkZTAtXFx1MmRmZlxcdWE2NDAtXFx1YTY5ZlxcdWZlMmVcXHVmZTJmXSkoPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86RVsrLV0/XFxkKyk/L2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgL1s8PitcXC0qL109P3xbJT1dLyxcbiAgICAgIC8vIFJVXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteXFx3XFx1MDQwMC1cXHUwNDg0XFx1MDQ4Ny1cXHUwNTJmXFx1MWQyYlxcdTFkNzhcXHUyZGUwLVxcdTJkZmZcXHVhNjQwLVxcdWE2OWZcXHVmZTJlXFx1ZmUyZl0pKD860Lh80LjQu9C4fNC90LUpKD8hW1xcd1xcdTA0MDAtXFx1MDQ4NFxcdTA0ODctXFx1MDUyZlxcdTFkMmJcXHUxZDc4XFx1MmRlMC1cXHUyZGZmXFx1YTY0MC1cXHVhNjlmXFx1ZmUyZVxcdWZlMmZdKS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gRU5cbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYig/OmFuZHxub3R8b3IpXFxiL2lcbiAgICAgIH1cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvXFwoXFwufFxcLlxcKXxbKClcXFtcXF06OywuXS8sXG4gICAgZGlyZWN0aXZlOiBbXG4gICAgICAvLyDQotC10LPQuCDQv9GA0LXQv9GA0L7RhtC10YHRgdC+0YDQsCDQstC40LTQsCAm0JrQu9C40LXQvdGCLCAm0KHQtdGA0LLQtdGALCAuLi5cbiAgICAgIC8vIFByZXByb2Nlc3NvciB0YWdzIG9mIHRoZSB0eXBlICZDbGllbnQsICZTZXJ2ZXIsIC4uLlxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXihbIFxcdF0qKSYuKi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgfSxcbiAgICAgIC8vINCY0L3RgdGC0YDRg9C60YbQuNC4INC/0YDQtdC/0YDQvtGG0LXRgdGB0L7RgNCwINCy0LjQtNCwOlxuICAgICAgLy8gI9CV0YHQu9C4INCh0LXRgNCy0LXRgCDQotC+0LPQtNCwXG4gICAgICAvLyAuLi5cbiAgICAgIC8vICPQmtC+0L3QtdGG0JXRgdC70LhcbiAgICAgIC8vIFByZXByb2Nlc3NvciBpbnN0cnVjdGlvbnMgb2YgdGhlIGZvcm06XG4gICAgICAvLyAjSWYgU2VydmVyIFRoZW5cbiAgICAgIC8vIC4uLlxuICAgICAgLy8gI0VuZElmXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9eKFsgXFx0XSopIy4qL2dtLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgfVxuICAgIF1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMub3NjcmlwdCA9IFByaXNtLmxhbmd1YWdlc1snYnNsJ11cbn1cbiJdLCJuYW1lcyI6WyJic2wiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwia2V5d29yZCIsImxvb2tiZWhpbmQiLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiZGlyZWN0aXZlIiwiYWxpYXMiLCJvc2NyaXB0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bsl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ c)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nc.displayName = \"c\";\nc.aliases = [];\n/** @type {import('../core.js').Syntax} */ function c(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.c = Prism.languages.extend(\"clike\", {\n        comment: {\n            pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n        },\n        string: {\n            // https://en.cppreference.com/w/c/language/string_literal\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n        operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n    });\n    Prism.languages.insertBefore(\"c\", \"string\", {\n        char: {\n            // https://en.cppreference.com/w/c/language/character_constant\n            pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n            greedy: true\n        }\n    });\n    Prism.languages.insertBefore(\"c\", \"string\", {\n        macro: {\n            // allow for multiline macro definitions\n            // spaces after the # character compile fine with gcc\n            pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\",\n            inside: {\n                string: [\n                    {\n                        // highlight the path of the include statement as a string\n                        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n                        lookbehind: true\n                    },\n                    Prism.languages.c[\"string\"]\n                ],\n                char: Prism.languages.c[\"char\"],\n                comment: Prism.languages.c[\"comment\"],\n                \"macro-name\": [\n                    {\n                        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n                        lookbehind: true\n                    },\n                    {\n                        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n                        lookbehind: true,\n                        alias: \"function\"\n                    }\n                ],\n                // highlight macro directives as keywords\n                directive: {\n                    pattern: /^(#\\s*)[a-z]+/,\n                    lookbehind: true,\n                    alias: \"keyword\"\n                },\n                \"directive-hash\": /^#/,\n                punctuation: /##|\\\\(?=[\\r\\n])/,\n                expression: {\n                    pattern: /\\S[\\s\\S]*/,\n                    inside: Prism.languages.c\n                }\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"c\", \"function\", {\n        // highlight predefined macros as constants\n        constant: /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n    });\n    delete Prism.languages.c[\"boolean\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsRUFBRUMsV0FBVyxHQUFHO0FBQ2hCRCxFQUFFRSxPQUFPLEdBQUcsRUFBRTtBQUVkLHdDQUF3QyxHQUN6QixTQUFTRixFQUFFRyxLQUFLO0lBQzdCQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUM3QkksTUFBTUUsU0FBUyxDQUFDTCxDQUFDLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDbERDLFNBQVM7WUFDUEMsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOLDBEQUEwRDtZQUMxREYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pELFNBQ0U7WUFDRkcsWUFBWTtRQUNkO1FBQ0FDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxRQUNFO1FBQ0ZDLFVBQVU7SUFDWjtJQUNBWixNQUFNRSxTQUFTLENBQUNXLFlBQVksQ0FBQyxLQUFLLFVBQVU7UUFDMUNDLE1BQU07WUFDSiw4REFBOEQ7WUFDOURULFNBQVM7WUFDVEMsUUFBUTtRQUNWO0lBQ0Y7SUFDQU4sTUFBTUUsU0FBUyxDQUFDVyxZQUFZLENBQUMsS0FBSyxVQUFVO1FBQzFDRSxPQUFPO1lBQ0wsd0NBQXdDO1lBQ3hDLHFEQUFxRDtZQUNyRFYsU0FDRTtZQUNGRyxZQUFZO1lBQ1pGLFFBQVE7WUFDUlUsT0FBTztZQUNQQyxRQUFRO2dCQUNOVixRQUFRO29CQUNOO3dCQUNFLDBEQUEwRDt3QkFDMURGLFNBQVM7d0JBQ1RHLFlBQVk7b0JBQ2Q7b0JBQ0FSLE1BQU1FLFNBQVMsQ0FBQ0wsQ0FBQyxDQUFDLFNBQVM7aUJBQzVCO2dCQUNEaUIsTUFBTWQsTUFBTUUsU0FBUyxDQUFDTCxDQUFDLENBQUMsT0FBTztnQkFDL0JPLFNBQVNKLE1BQU1FLFNBQVMsQ0FBQ0wsQ0FBQyxDQUFDLFVBQVU7Z0JBQ3JDLGNBQWM7b0JBQ1o7d0JBQ0VRLFNBQVM7d0JBQ1RHLFlBQVk7b0JBQ2Q7b0JBQ0E7d0JBQ0VILFNBQVM7d0JBQ1RHLFlBQVk7d0JBQ1pRLE9BQU87b0JBQ1Q7aUJBQ0Q7Z0JBQ0QseUNBQXlDO2dCQUN6Q0UsV0FBVztvQkFDVGIsU0FBUztvQkFDVEcsWUFBWTtvQkFDWlEsT0FBTztnQkFDVDtnQkFDQSxrQkFBa0I7Z0JBQ2xCRyxhQUFhO2dCQUNiQyxZQUFZO29CQUNWZixTQUFTO29CQUNUWSxRQUFRakIsTUFBTUUsU0FBUyxDQUFDTCxDQUFDO2dCQUMzQjtZQUNGO1FBQ0Y7SUFDRjtJQUNBRyxNQUFNRSxTQUFTLENBQUNXLFlBQVksQ0FBQyxLQUFLLFlBQVk7UUFDNUMsMkNBQTJDO1FBQzNDUSxVQUNFO0lBQ0o7SUFDQSxPQUFPckIsTUFBTUUsU0FBUyxDQUFDTCxDQUFDLENBQUMsVUFBVTtBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jLmpzPzliMDgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDbGlrZSBmcm9tICcuL2NsaWtlLmpzJ1xuYy5kaXNwbGF5TmFtZSA9ICdjJ1xuYy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5sYW5ndWFnZXMuYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXC9cXC8oPzpbXlxcclxcblxcXFxdfFxcXFwoPzpcXHJcXG4/fFxcbnwoPyFbXFxyXFxuXSkpKSp8XFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgLy8gaHR0cHM6Ly9lbi5jcHByZWZlcmVuY2UuY29tL3cvYy9sYW5ndWFnZS9zdHJpbmdfbGl0ZXJhbFxuICAgICAgcGF0dGVybjogL1wiKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzplbnVtfHN0cnVjdClcXHMrKD86X19hdHRyaWJ1dGVfX1xccypcXChcXChbXFxzXFxTXSo/XFwpXFwpXFxzKik/KVxcdyt8XFxiW2Etel1cXHcqX3RcXGIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpfQWxpZ25hc3xfQWxpZ25vZnxfQXRvbWljfF9Cb29sfF9Db21wbGV4fF9HZW5lcmljfF9JbWFnaW5hcnl8X05vcmV0dXJufF9TdGF0aWNfYXNzZXJ0fF9UaHJlYWRfbG9jYWx8X19hdHRyaWJ1dGVfX3xhc218YXV0b3xicmVha3xjYXNlfGNoYXJ8Y29uc3R8Y29udGludWV8ZGVmYXVsdHxkb3xkb3VibGV8ZWxzZXxlbnVtfGV4dGVybnxmbG9hdHxmb3J8Z290b3xpZnxpbmxpbmV8aW50fGxvbmd8cmVnaXN0ZXJ8cmV0dXJufHNob3J0fHNpZ25lZHxzaXplb2Z8c3RhdGljfHN0cnVjdHxzd2l0Y2h8dHlwZWRlZnx0eXBlb2Z8dW5pb258dW5zaWduZWR8dm9pZHx2b2xhdGlsZXx3aGlsZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYjB4KD86W1xcZGEtZl0rKD86XFwuW1xcZGEtZl0qKT98XFwuW1xcZGEtZl0rKSg/OnBbKy1dP1xcZCspP3woPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KVtmdWxdezAsNH0vaSxcbiAgICBvcGVyYXRvcjogLz4+PT98PDw9P3wtPnwoWy0rJnw6XSlcXDF8Wz86fl18Wy0rKi8lJnxeIT08Pl09Py9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYycsICdzdHJpbmcnLCB7XG4gICAgY2hhcjoge1xuICAgICAgLy8gaHR0cHM6Ly9lbi5jcHByZWZlcmVuY2UuY29tL3cvYy9sYW5ndWFnZS9jaGFyYWN0ZXJfY29uc3RhbnRcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W14nXFxcXFxcclxcbl0pezAsMzJ9Jy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2MnLCAnc3RyaW5nJywge1xuICAgIG1hY3JvOiB7XG4gICAgICAvLyBhbGxvdyBmb3IgbXVsdGlsaW5lIG1hY3JvIGRlZmluaXRpb25zXG4gICAgICAvLyBzcGFjZXMgYWZ0ZXIgdGhlICMgY2hhcmFjdGVyIGNvbXBpbGUgZmluZSB3aXRoIGdjY1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKikjXFxzKlthLXpdKD86W15cXHJcXG5cXFxcL118XFwvKD8hXFwqKXxcXC9cXCooPzpbXipdfFxcKig/IVxcLykpKlxcKlxcL3xcXFxcKD86XFxyXFxufFtcXHNcXFNdKSkqL2ltLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHN0cmluZzogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIC8vIGhpZ2hsaWdodCB0aGUgcGF0aCBvZiB0aGUgaW5jbHVkZSBzdGF0ZW1lbnQgYXMgYSBzdHJpbmdcbiAgICAgICAgICAgIHBhdHRlcm46IC9eKCNcXHMqaW5jbHVkZVxccyopPFtePl0rPi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBQcmlzbS5sYW5ndWFnZXMuY1snc3RyaW5nJ11cbiAgICAgICAgXSxcbiAgICAgICAgY2hhcjogUHJpc20ubGFuZ3VhZ2VzLmNbJ2NoYXInXSxcbiAgICAgICAgY29tbWVudDogUHJpc20ubGFuZ3VhZ2VzLmNbJ2NvbW1lbnQnXSxcbiAgICAgICAgJ21hY3JvLW5hbWUnOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgcGF0dGVybjogLyheI1xccypkZWZpbmVcXHMrKVxcdytcXGIoPyFcXCgpL2ksXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF4jXFxzKmRlZmluZVxccyspXFx3K1xcYig/PVxcKCkvaSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgLy8gaGlnaGxpZ2h0IG1hY3JvIGRpcmVjdGl2ZXMgYXMga2V5d29yZHNcbiAgICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgICAgcGF0dGVybjogL14oI1xccyopW2Etel0rLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgfSxcbiAgICAgICAgJ2RpcmVjdGl2ZS1oYXNoJzogL14jLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC8jI3xcXFxcKD89W1xcclxcbl0pLyxcbiAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9cXFNbXFxzXFxTXSovLFxuICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmNcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnYycsICdmdW5jdGlvbicsIHtcbiAgICAvLyBoaWdobGlnaHQgcHJlZGVmaW5lZCBtYWNyb3MgYXMgY29uc3RhbnRzXG4gICAgY29uc3RhbnQ6XG4gICAgICAvXFxiKD86RU9GfE5VTEx8U0VFS19DVVJ8U0VFS19FTkR8U0VFS19TRVR8X19EQVRFX198X19GSUxFX198X19MSU5FX198X19USU1FU1RBTVBfX3xfX1RJTUVfX3xfX2Z1bmNfX3xzdGRlcnJ8c3RkaW58c3Rkb3V0KVxcYi9cbiAgfSlcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5jWydib29sZWFuJ11cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsImMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJjaGFyIiwibWFjcm8iLCJhbGlhcyIsImluc2lkZSIsImRpcmVjdGl2ZSIsInB1bmN0dWF0aW9uIiwiZXhwcmVzc2lvbiIsImNvbnN0YW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cfscript.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cfscript.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cfscript)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ncfscript.displayName = \"cfscript\";\ncfscript.aliases = [\n    \"cfc\"\n];\n/** @type {import('../core.js').Syntax} */ function cfscript(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    // https://cfdocs.org/script\n    Prism.languages.cfscript = Prism.languages.extend(\"clike\", {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                lookbehind: true,\n                inside: {\n                    annotation: {\n                        pattern: /(?:^|[^.])@[\\w\\.]+/,\n                        alias: \"punctuation\"\n                    }\n                }\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        keyword: /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n        operator: [\n            /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|:/,\n            /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n        ],\n        scope: {\n            pattern: /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n            alias: \"global\"\n        },\n        type: {\n            pattern: /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n            alias: \"builtin\"\n        }\n    });\n    Prism.languages.insertBefore(\"cfscript\", \"keyword\", {\n        // This must be declared before keyword because we use \"function\" inside the lookahead\n        \"function-variable\": {\n            pattern: /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n            alias: \"function\"\n        }\n    });\n    delete Prism.languages.cfscript[\"class-name\"];\n    Prism.languages.cfc = Prism.languages[\"cfscript\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jZnNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHO0lBQUM7Q0FBTTtBQUUxQix3Q0FBd0MsR0FDekIsU0FBU0YsU0FBU0csS0FBSztJQUNwQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0IsNEJBQTRCO0lBQzVCSSxNQUFNRSxTQUFTLENBQUNMLFFBQVEsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUN6REMsU0FBUztZQUNQO2dCQUNFQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO29CQUNOQyxZQUFZO3dCQUNWSCxTQUFTO3dCQUNUSSxPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7WUFDQTtnQkFDRUosU0FBUztnQkFDVEMsWUFBWTtnQkFDWkksUUFBUTtZQUNWO1NBQ0Q7UUFDREMsU0FDRTtRQUNGQyxVQUFVO1lBQ1I7WUFDQTtTQUNEO1FBQ0RDLE9BQU87WUFDTFIsU0FDRTtZQUNGSSxPQUFPO1FBQ1Q7UUFDQUssTUFBTTtZQUNKVCxTQUNFO1lBQ0ZJLE9BQU87UUFDVDtJQUNGO0lBQ0FULE1BQU1FLFNBQVMsQ0FBQ2EsWUFBWSxDQUFDLFlBQVksV0FBVztRQUNsRCxzRkFBc0Y7UUFDdEYscUJBQXFCO1lBQ25CVixTQUNFO1lBQ0ZJLE9BQU87UUFDVDtJQUNGO0lBQ0EsT0FBT1QsTUFBTUUsU0FBUyxDQUFDTCxRQUFRLENBQUMsYUFBYTtJQUM3Q0csTUFBTUUsU0FBUyxDQUFDYyxHQUFHLEdBQUdoQixNQUFNRSxTQUFTLENBQUMsV0FBVztBQUNuRCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jZnNjcmlwdC5qcz83OWEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmNmc2NyaXB0LmRpc3BsYXlOYW1lID0gJ2Nmc2NyaXB0J1xuY2ZzY3JpcHQuYWxpYXNlcyA9IFsnY2ZjJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjZnNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgLy8gaHR0cHM6Ly9jZmRvY3Mub3JnL3NjcmlwdFxuICBQcmlzbS5sYW5ndWFnZXMuY2ZzY3JpcHQgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBhbm5vdGF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKD86XnxbXi5dKUBbXFx3XFwuXSsvLFxuICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxicmVha3xjYXRjaHxjb21wb25lbnR8Y29udGludWV8ZGVmYXVsdHxkb3xlbHNlfGV4dGVuZHN8ZmluYWx8ZmluYWxseXxmb3J8ZnVuY3Rpb258aWZ8aW58aW5jbHVkZXxwYWNrYWdlfHByaXZhdGV8cHJvcGVydHl8cHVibGljfHJlbW90ZXxyZXF1aXJlZHxyZXRocm93fHJldHVybnxzdGF0aWN8c3dpdGNofHRocm93fHRyeXx2YXJ8d2hpbGV8eG1sKVxcYig/IVxccyo9KS8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9cXCtcXCt8LS18JiZ8XFx8XFx8fDo6fD0+fFshPV09PXxbLSsqLyUmfF4hPTw+XT0/fFxcPyg/OlxcLnw6KT98Oi8sXG4gICAgICAvXFxiKD86YW5kfGNvbnRhaW5zfGVxfGVxdWFsfGVxdnxndHxndGV8aW1wfGlzfGx0fGx0ZXxtb2R8bm90fG9yfHhvcilcXGIvXG4gICAgXSxcbiAgICBzY29wZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OmFwcGxpY2F0aW9ufGFyZ3VtZW50c3xjZ2l8Y2xpZW50fGNvb2tpZXxsb2NhbHxzZXNzaW9ufHN1cGVyfHRoaXN8dmFyaWFibGVzKVxcYi8sXG4gICAgICBhbGlhczogJ2dsb2JhbCdcbiAgICB9LFxuICAgIHR5cGU6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzphbnl8YXJyYXl8YmluYXJ5fGJvb2xlYW58ZGF0ZXxndWlkfG51bWVyaWN8cXVlcnl8c3RyaW5nfHN0cnVjdHx1dWlkfHZvaWR8eG1sKVxcYi8sXG4gICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjZnNjcmlwdCcsICdrZXl3b3JkJywge1xuICAgIC8vIFRoaXMgbXVzdCBiZSBkZWNsYXJlZCBiZWZvcmUga2V5d29yZCBiZWNhdXNlIHdlIHVzZSBcImZ1bmN0aW9uXCIgaW5zaWRlIHRoZSBsb29rYWhlYWRcbiAgICAnZnVuY3Rpb24tdmFyaWFibGUnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvW18kYS16QS1aXFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWyRcXHdcXHhBMC1cXHVGRkZGXSkqKD89XFxzKls9Ol1cXHMqKD86XFxiZnVuY3Rpb25cXGJ8KD86XFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCl8KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKilcXHMqPT4pKS8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH1cbiAgfSlcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5jZnNjcmlwdFsnY2xhc3MtbmFtZSddXG4gIFByaXNtLmxhbmd1YWdlcy5jZmMgPSBQcmlzbS5sYW5ndWFnZXNbJ2Nmc2NyaXB0J11cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsImNmc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsImFubm90YXRpb24iLCJhbGlhcyIsImdyZWVkeSIsImtleXdvcmQiLCJvcGVyYXRvciIsInNjb3BlIiwidHlwZSIsImluc2VydEJlZm9yZSIsImNmYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cfscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/chaiscript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/chaiscript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ chaiscript)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n/* harmony import */ var _cpp_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cpp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js\");\n// @ts-nocheck\n\n\nchaiscript.displayName = \"chaiscript\";\nchaiscript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function chaiscript(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_cpp_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.languages.chaiscript = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"class-name\": [\n            {\n                // e.g. class Rectangle { ... }\n                pattern: /(\\bclass\\s+)\\w+/,\n                lookbehind: true\n            },\n            {\n                // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n                pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n                lookbehind: true\n            }\n        ],\n        keyword: /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n        number: [\n            Prism.languages.cpp.number,\n            /\\b(?:Infinity|NaN)\\b/\n        ],\n        operator: />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n    });\n    Prism.languages.insertBefore(\"chaiscript\", \"operator\", {\n        \"parameter-type\": {\n            // e.g. def foo(int x, Vector y) {...}\n            pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n            lookbehind: true,\n            alias: \"class-name\"\n        }\n    });\n    Prism.languages.insertBefore(\"chaiscript\", \"string\", {\n        \"string-interpolation\": {\n            pattern: /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-expression\": {\n                            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                            lookbehind: true,\n                            inside: Prism.languages.chaiscript\n                        },\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"punctuation\"\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaGFpc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGNBQWM7QUFDeUI7QUFDSjtBQUNuQ0UsV0FBV0MsV0FBVyxHQUFHO0FBQ3pCRCxXQUFXRSxPQUFPLEdBQUcsRUFBRTtBQUV2Qix3Q0FBd0MsR0FDekIsU0FBU0YsV0FBV0csS0FBSztJQUN0Q0EsTUFBTUMsUUFBUSxDQUFDTixpREFBY0E7SUFDN0JLLE1BQU1DLFFBQVEsQ0FBQ0wsK0NBQVlBO0lBQzNCSSxNQUFNRSxTQUFTLENBQUNMLFVBQVUsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUMzREMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaO2dCQUNFLCtCQUErQjtnQkFDL0JGLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFLDZEQUE2RDtnQkFDN0RELFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtTQUNEO1FBQ0RFLFNBQ0U7UUFDRkMsUUFBUTtZQUFDVCxNQUFNRSxTQUFTLENBQUNRLEdBQUcsQ0FBQ0QsTUFBTTtZQUFFO1NBQXVCO1FBQzVERSxVQUNFO0lBQ0o7SUFDQVgsTUFBTUUsU0FBUyxDQUFDVSxZQUFZLENBQUMsY0FBYyxZQUFZO1FBQ3JELGtCQUFrQjtZQUNoQixzQ0FBc0M7WUFDdENQLFNBQVM7WUFDVEMsWUFBWTtZQUNaTyxPQUFPO1FBQ1Q7SUFDRjtJQUNBYixNQUFNRSxTQUFTLENBQUNVLFlBQVksQ0FBQyxjQUFjLFVBQVU7UUFDbkQsd0JBQXdCO1lBQ3RCUCxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtZQUNSTyxRQUFRO2dCQUNOQyxlQUFlO29CQUNiVixTQUNFO29CQUNGQyxZQUFZO29CQUNaUSxRQUFRO3dCQUNOLDRCQUE0Qjs0QkFDMUJULFNBQVM7NEJBQ1RDLFlBQVk7NEJBQ1pRLFFBQVFkLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVTt3QkFDcEM7d0JBQ0EsNkJBQTZCOzRCQUMzQlEsU0FBUzs0QkFDVFEsT0FBTzt3QkFDVDtvQkFDRjtnQkFDRjtnQkFDQVQsUUFBUTtZQUNWO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2NoYWlzY3JpcHQuanM/ODZkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5pbXBvcnQgcmVmcmFjdG9yQ3BwIGZyb20gJy4vY3BwLmpzJ1xuY2hhaXNjcmlwdC5kaXNwbGF5TmFtZSA9ICdjaGFpc2NyaXB0J1xuY2hhaXNjcmlwdC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjaGFpc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDcHApXG4gIFByaXNtLmxhbmd1YWdlcy5jaGFpc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSknKD86W14nXFxcXF18XFxcXFtcXHNcXFNdKSonLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAge1xuICAgICAgICAvLyBlLmcuIGNsYXNzIFJlY3RhbmdsZSB7IC4uLiB9XG4gICAgICAgIHBhdHRlcm46IC8oXFxiY2xhc3NcXHMrKVxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBlLmcuIGF0dHIgUmVjdGFuZ2xlOjpoZWlnaHQsIGRlZiBSZWN0YW5nbGU6OmFyZWEoKSB7IC4uLiB9XG4gICAgICAgIHBhdHRlcm46IC8oXFxiKD86YXR0cnxkZWYpXFxzKylcXHcrKD89XFxzKjo6KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXR0cnxhdXRvfGJyZWFrfGNhc2V8Y2F0Y2h8Y2xhc3N8Y29udGludWV8ZGVmfGRlZmF1bHR8ZWxzZXxmaW5hbGx5fGZvcnxmdW58Z2xvYmFsfGlmfHJldHVybnxzd2l0Y2h8dGhpc3x0cnl8dmFyfHdoaWxlKVxcYi8sXG4gICAgbnVtYmVyOiBbUHJpc20ubGFuZ3VhZ2VzLmNwcC5udW1iZXIsIC9cXGIoPzpJbmZpbml0eXxOYU4pXFxiL10sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvPj49P3w8PD0/fFxcfFxcfHwmJnw6Wzo9XT98LS18XFwrXFwrfFs9ITw+K1xcLSovJXwmXl09P3xbP35dfGBbXmBcXHJcXG5dezEsNH1gL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjaGFpc2NyaXB0JywgJ29wZXJhdG9yJywge1xuICAgICdwYXJhbWV0ZXItdHlwZSc6IHtcbiAgICAgIC8vIGUuZy4gZGVmIGZvbyhpbnQgeCwgVmVjdG9yIHkpIHsuLi59XG4gICAgICBwYXR0ZXJuOiAvKFssKF1cXHMqKVxcdysoPz1cXHMrXFx3KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY2hhaXNjcmlwdCcsICdzdHJpbmcnLCB7XG4gICAgJ3N0cmluZy1pbnRlcnBvbGF0aW9uJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFxcXF0pXCIoPzpbXlwiJFxcXFxdfFxcXFxbXFxzXFxTXXxcXCQoPyFcXHspfFxcJFxceyg/Oltee31dfFxceyg/Oltee31dfFxce1tee31dKlxcfSkqXFx9KSpcXH0pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopXFwkXFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKlxcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLWV4cHJlc3Npb24nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcJFxceylbXFxzXFxTXSsoPz1cXH0kKS8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmNoYWlzY3JpcHRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL15cXCRcXHt8XFx9JC8sXG4gICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwicmVmcmFjdG9yQ3BwIiwiY2hhaXNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImtleXdvcmQiLCJudW1iZXIiLCJjcHAiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImFsaWFzIiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/chaiscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cil.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cil.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cil)\n/* harmony export */ });\n// @ts-nocheck\ncil.displayName = \"cil\";\ncil.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cil(Prism) {\n    Prism.languages.cil = {\n        comment: /\\/\\/.*/,\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        directive: {\n            pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n            lookbehind: true,\n            alias: \"class-name\"\n        },\n        // Actually an assembly reference\n        variable: /\\[[\\w\\.]+\\]/,\n        keyword: /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n        function: /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n        punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxXQUFXO1lBQ1RGLFNBQVM7WUFDVEcsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQSxpQ0FBaUM7UUFDakNDLFVBQVU7UUFDVkMsU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaWwuanM/NjI3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuY2lsLmRpc3BsYXlOYW1lID0gJ2NpbCdcbmNpbC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjaWwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmNpbCA9IHtcbiAgICBjb21tZW50OiAvXFwvXFwvLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58XFxXKVxcLlthLXpdKyg/PVxccykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICB9LFxuICAgIC8vIEFjdHVhbGx5IGFuIGFzc2VtYmx5IHJlZmVyZW5jZVxuICAgIHZhcmlhYmxlOiAvXFxbW1xcd1xcLl0rXFxdLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFic3RyYWN0fGFuc2l8YXNzZW1ibHl8YXV0b3xhdXRvY2hhcnxiZWZvcmVmaWVsZGluaXR8Ym9vbHxic3RyfGJ5dmFsc3RyfGNhdGNofGNoYXJ8Y2lsfGNsYXNzfGN1cnJlbmN5fGRhdGV8ZGVjaW1hbHxkZWZhdWx0fGVudW18ZXJyb3J8ZXhwbGljaXR8ZXh0ZW5kc3xleHRlcm58ZmFtYW5kYXNzZW18ZmFtaWx5fGZhbW9yYXNzZW18ZmluYWwoPzpseSk/fGZsb2F0MzJ8ZmxvYXQ2NHxoaWRlYnlzaWd8dT9pbnQoPzo4fDE2fDMyfDY0KT98aWFudHxpZGlzcGF0Y2h8aW1wbGVtZW50c3xpbXBvcnR8aW5pdG9ubHl8aW5zdGFuY2V8aW50ZXJmYWNlfGl1bmtub3dufGxpdGVyYWx8bHBzdHJ8bHBzdHJ1Y3R8bHB0c3RyfGxwd3N0cnxtYW5hZ2VkfG1ldGhvZHxuYXRpdmUoPzpUeXBlKT98bmVzdGVkfG5ld3Nsb3R8b2JqZWN0KD86cmVmKT98cGludm9rZWltcGx8cHJpdmF0ZXxwcml2YXRlc2NvcGV8cHVibGljfHJlcXNlY29ianxydHNwZWNpYWxuYW1lfHJ1bnRpbWV8c2VhbGVkfHNlcXVlbnRpYWx8c2VyaWFsaXphYmxlfHNwZWNpYWxuYW1lfHN0YXRpY3xzdHJpbmd8c3RydWN0fHN5c2NoYXJ8dGJzdHJ8dW5pY29kZXx1bm1hbmFnZWRleHB8dW5zaWduZWR8dmFsdWUoPzp0eXBlKT98dmFyaWFudHx2aXJ0dWFsfHZvaWQpXFxiLyxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzooPzpjb25zdHJhaW5lZHxub3xyZWFkb25seXx0YWlsfHVuYWxpZ25lZHx2b2xhdGlsZSlcXC4pPyg/OmNvbnZcXC4oPzpbaXVdWzEyNDhdP3xvdmZcXC5baXVdWzEyNDhdPyg/OlxcLnVuKT98clxcLnVufHI0fHI4KXxsZGNcXC4oPzppNCg/OlxcLlxcZCt8XFwuW21NXTF8XFwucyk/fGk4fHI0fHI4KXxsZGVsZW0oPzpcXC5baXVdWzEyNDhdP3xcXC5yWzQ4XXxcXC5yZWZ8YSk/fGxkaW5kXFwuKD86W2l1XVsxMjQ4XT98cls0OF18cmVmKXxzdGVsZW1cXC4/KD86aVsxMjQ4XT98cls0OF18cmVmKT98c3RpbmRcXC4oPzppWzEyNDhdP3xyWzQ4XXxyZWYpP3xlbmQoPzpmYXVsdHxmaWx0ZXJ8ZmluYWxseSl8bGRhcmcoPzpcXC5bMC0zc118YSg/OlxcLnMpPyk/fGxkbG9jKD86XFwuXFxkK3xcXC5zKT98c3ViKD86XFwub3ZmKD86XFwudW4pPyk/fG11bCg/OlxcLm92Zig/OlxcLnVuKT8pP3xhZGQoPzpcXC5vdmYoPzpcXC51bik/KT98c3Rsb2MoPzpcXC5bMC0zc10pP3xyZWZhbnkoPzp0eXBlfHZhbCl8Ymx0KD86XFwudW4pPyg/OlxcLnMpP3xibGUoPzpcXC51bik/KD86XFwucyk/fGJndCg/OlxcLnVuKT8oPzpcXC5zKT98YmdlKD86XFwudW4pPyg/OlxcLnMpP3x1bmJveCg/OlxcLmFueSk/fGluaXQoPzpibGt8b2JqKXxjYWxsKD86aXx2aXJ0KT98YnJmYWxzZSg/OlxcLnMpP3xibmVcXC51big/OlxcLnMpP3xsZGxvY2EoPzpcXC5zKT98YnJ6ZXJvKD86XFwucyk/fGJydHJ1ZSg/OlxcLnMpP3xicm51bGwoPzpcXC5zKT98YnJpbnN0KD86XFwucyk/fHN0YXJnKD86XFwucyk/fGxlYXZlKD86XFwucyk/fHNocig/OlxcLnVuKT98cmVtKD86XFwudW4pP3xkaXYoPzpcXC51bik/fGNsdCg/OlxcLnVuKT98YWxpZ25tZW50fGNhc3RjbGFzc3xsZHZpcnRmdG58YmVxKD86XFwucyk/fGNrZmluaXRlfGxkc2ZsZGF8bGR0b2tlbnxsb2NhbGxvY3xta3JlZmFueXxyZXRocm93fGNndFxcLnVufGFyZ2xpc3R8c3dpdGNofHN0c2ZsZHxzaXplb2Z8bmV3b2JqfG5ld2FycnxsZHNmbGR8bGRudWxsfGxkZmxkYXxpc2luc3R8dGhyb3d8c3RvYmp8c3RmbGR8bGRzdHJ8bGRvYmp8bGRsZW58bGRmdG58bGRmbGR8Y3BvYmp8Y3BibGt8YnJlYWt8YnJcXC5zfHhvcnxzaGx8cmV0fHBvcHxub3R8bm9wfG5lZ3xqbXB8ZHVwfGNndHxjZXF8Ym94fGFuZHxvcnxicilcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiLT8oPzoweFswLTlhLWZdK3xcXGQrKSg/OlxcLlswLTlhLWZdKyk/XFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLDo9XXxJTF9bMC05QS1aYS16XSsvXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjaWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiZGlyZWN0aXZlIiwibG9va2JlaGluZCIsImFsaWFzIiwidmFyaWFibGUiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJib29sZWFuIiwibnVtYmVyIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cil.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkc.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkc.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cilkc)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\ncilkc.displayName = \"cilkc\";\ncilkc.aliases = [\n    \"cilk-c\"\n];\n/** @type {import('../core.js').Syntax} */ function cilkc(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.cilkc = Prism.languages.insertBefore(\"c\", \"function\", {\n        \"parallel-keyword\": {\n            pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\n            alias: \"keyword\"\n        }\n    });\n    Prism.languages[\"cilk-c\"] = Prism.languages[\"cilkc\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaWxrYy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDaUI7QUFDL0JDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHO0lBQUM7Q0FBUztBQUUxQix3Q0FBd0MsR0FDekIsU0FBU0YsTUFBTUcsS0FBSztJQUNqQ0EsTUFBTUMsUUFBUSxDQUFDTCw2Q0FBVUE7SUFDekJJLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSyxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLFlBQVksQ0FBQyxLQUFLLFlBQVk7UUFDcEUsb0JBQW9CO1lBQ2xCQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtJQUNGO0lBQ0FMLE1BQU1FLFNBQVMsQ0FBQyxTQUFTLEdBQUdGLE1BQU1FLFNBQVMsQ0FBQyxRQUFRO0FBQ3REIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2NpbGtjLmpzPzU1ZTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDIGZyb20gJy4vYy5qcydcbmNpbGtjLmRpc3BsYXlOYW1lID0gJ2NpbGtjJ1xuY2lsa2MuYWxpYXNlcyA9IFsnY2lsay1jJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjaWxrYyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDKVxuICBQcmlzbS5sYW5ndWFnZXMuY2lsa2MgPSBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjJywgJ2Z1bmN0aW9uJywge1xuICAgICdwYXJhbGxlbC1rZXl3b3JkJzoge1xuICAgICAgcGF0dGVybjogL1xcYmNpbGtfKD86Zm9yfHJlZHVjZXJ8cyg/OmNvcGV8cGF3bnx5bmMpKVxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXNbJ2NpbGstYyddID0gUHJpc20ubGFuZ3VhZ2VzWydjaWxrYyddXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQyIsImNpbGtjIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImluc2VydEJlZm9yZSIsInBhdHRlcm4iLCJhbGlhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkcpp.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkcpp.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cilkcpp)\n/* harmony export */ });\n/* harmony import */ var _cpp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cpp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js\");\n// @ts-nocheck\n\ncilkcpp.displayName = \"cilkcpp\";\ncilkcpp.aliases = [\n    \"cilk\",\n    \"cilk-cpp\"\n];\n/** @type {import('../core.js').Syntax} */ function cilkcpp(Prism) {\n    Prism.register(_cpp_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.cilkcpp = Prism.languages.insertBefore(\"cpp\", \"function\", {\n        \"parallel-keyword\": {\n            pattern: /\\bcilk_(?:for|reducer|s(?:cope|pawn|ync))\\b/,\n            alias: \"keyword\"\n        }\n    });\n    Prism.languages[\"cilk-cpp\"] = Prism.languages[\"cilkcpp\"];\n    Prism.languages[\"cilk\"] = Prism.languages[\"cilkcpp\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jaWxrY3BwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNuQ0MsUUFBUUMsV0FBVyxHQUFHO0FBQ3RCRCxRQUFRRSxPQUFPLEdBQUc7SUFBQztJQUFRO0NBQVc7QUFFdEMsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFFBQVEsQ0FBQ0wsK0NBQVlBO0lBQzNCSSxNQUFNRSxTQUFTLENBQUNMLE9BQU8sR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxZQUFZLENBQUMsT0FBTyxZQUFZO1FBQ3hFLG9CQUFvQjtZQUNsQkMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7SUFDRjtJQUNBTCxNQUFNRSxTQUFTLENBQUMsV0FBVyxHQUFHRixNQUFNRSxTQUFTLENBQUMsVUFBVTtJQUN4REYsTUFBTUUsU0FBUyxDQUFDLE9BQU8sR0FBR0YsTUFBTUUsU0FBUyxDQUFDLFVBQVU7QUFDdEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2lsa2NwcC5qcz82YThhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ3BwIGZyb20gJy4vY3BwLmpzJ1xuY2lsa2NwcC5kaXNwbGF5TmFtZSA9ICdjaWxrY3BwJ1xuY2lsa2NwcC5hbGlhc2VzID0gWydjaWxrJywgJ2NpbGstY3BwJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjaWxrY3BwKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNwcClcbiAgUHJpc20ubGFuZ3VhZ2VzLmNpbGtjcHAgPSBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjcHAnLCAnZnVuY3Rpb24nLCB7XG4gICAgJ3BhcmFsbGVsLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiY2lsa18oPzpmb3J8cmVkdWNlcnxzKD86Y29wZXxwYXdufHluYykpXFxiLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlc1snY2lsay1jcHAnXSA9IFByaXNtLmxhbmd1YWdlc1snY2lsa2NwcCddXG4gIFByaXNtLmxhbmd1YWdlc1snY2lsayddID0gUHJpc20ubGFuZ3VhZ2VzWydjaWxrY3BwJ11cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDcHAiLCJjaWxrY3BwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImluc2VydEJlZm9yZSIsInBhdHRlcm4iLCJhbGlhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkcpp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ clike)\n/* harmony export */ });\n// @ts-nocheck\nclike.displayName = \"clike\";\nclike.aliases = [];\n/** @type {import('../core.js').Syntax} */ function clike(Prism) {\n    Prism.languages.clike = {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n            lookbehind: true,\n            inside: {\n                punctuation: /[.\\\\]/\n            }\n        },\n        keyword: /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: /\\b\\w+(?=\\()/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jbGlrZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQO2dCQUNFQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBLGNBQWM7WUFDWkYsU0FDRTtZQUNGQyxZQUFZO1lBQ1pHLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFBVTtRQUNWTCxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jbGlrZS5qcz9jMDBiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jbGlrZS5kaXNwbGF5TmFtZSA9ICdjbGlrZSdcbmNsaWtlLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsaWtlKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5jbGlrZSA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiKD86Y2xhc3N8ZXh0ZW5kc3xpbXBsZW1lbnRzfGluc3RhbmNlb2Z8aW50ZXJmYWNlfG5ld3x0cmFpdClcXHMrfFxcYmNhdGNoXFxzK1xcKClbXFx3LlxcXFxdKy9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1suXFxcXF0vXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmJyZWFrfGNhdGNofGNvbnRpbnVlfGRvfGVsc2V8ZmluYWxseXxmb3J8ZnVuY3Rpb258aWZ8aW58aW5zdGFuY2VvZnxuZXd8bnVsbHxyZXR1cm58dGhyb3d8dHJ5fHdoaWxlKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlxcdysoPz1cXCgpLyxcbiAgICBudW1iZXI6IC9cXGIweFtcXGRhLWZdK1xcYnwoPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/L2ksXG4gICAgb3BlcmF0b3I6IC9bPD5dPT98WyE9XT0/PT98LS0/fFxcK1xcKz98JiY/fFxcfFxcfD98Wz8qL35eJV0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJjbGlrZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clojure.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clojure.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ clojure)\n/* harmony export */ });\n// @ts-nocheck\nclojure.displayName = \"clojure\";\nclojure.aliases = [];\n/** @type {import('../core.js').Syntax} */ function clojure(Prism) {\n    // Copied from https://github.com/jeluard/prism-clojure\n    Prism.languages.clojure = {\n        comment: {\n            pattern: /;.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n            greedy: true\n        },\n        char: /\\\\\\w+/,\n        symbol: {\n            pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n            lookbehind: true\n        },\n        keyword: {\n            pattern: /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n            lookbehind: true\n        },\n        boolean: /\\b(?:false|nil|true)\\b/,\n        number: {\n            pattern: /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n            lookbehind: true\n        },\n        function: {\n            pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n            lookbehind: true\n        },\n        operator: /[#@^`~]/,\n        punctuation: /[{}\\[\\](),]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jbG9qdXJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkMsdURBQXVEO0lBQ3ZEQSxNQUFNQyxTQUFTLENBQUNKLE9BQU8sR0FBRztRQUN4QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLE1BQU07UUFDTkMsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFlBQVk7UUFDZDtRQUNBQyxTQUFTO1lBQ1BOLFNBQ0U7WUFDRkssWUFBWTtRQUNkO1FBQ0FFLFNBQVM7UUFDVEMsUUFBUTtZQUNOUixTQUNFO1lBQ0ZLLFlBQVk7UUFDZDtRQUNBSSxVQUFVO1lBQ1JULFNBQVM7WUFDVEssWUFBWTtRQUNkO1FBQ0FLLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY2xvanVyZS5qcz81NGQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jbG9qdXJlLmRpc3BsYXlOYW1lID0gJ2Nsb2p1cmUnXG5jbG9qdXJlLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNsb2p1cmUoUHJpc20pIHtcbiAgLy8gQ29waWVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2plbHVhcmQvcHJpc20tY2xvanVyZVxuICBQcmlzbS5sYW5ndWFnZXMuY2xvanVyZSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvOy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXF18XFxcXC4pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjogL1xcXFxcXHcrLyxcbiAgICBzeW1ib2w6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXFxzKClcXFtcXF17fSxdKTo6P1tcXHcqKyE/Jzw+PS8uLV0rLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFwoKSg/Oi18LT58LT4+fFxcLnxcXC5cXC58XFwqfFxcL3xcXCt8PHw8PXw9fD09fD58Pj18YWNjZXNzb3J8YWdlbnR8YWdlbnQtZXJyb3JzfGFnZXR8YWxlbmd0aHxhbGwtbnN8YWx0ZXJ8YW5kfGFwcGVuZC1jaGlsZHxhcHBseXxhcnJheS1tYXB8YXNldHxhc2V0LWJvb2xlYW58YXNldC1ieXRlfGFzZXQtY2hhcnxhc2V0LWRvdWJsZXxhc2V0LWZsb2F0fGFzZXQtaW50fGFzZXQtbG9uZ3xhc2V0LXNob3J0fGFzc2VydHxhc3NvY3xhd2FpdHxhd2FpdC1mb3J8YmVhbnxiaW5kaW5nfGJpdC1hbmR8Yml0LW5vdHxiaXQtb3J8Yml0LXNoaWZ0LWxlZnR8Yml0LXNoaWZ0LXJpZ2h0fGJpdC14b3J8Ym9vbGVhbnxicmFuY2hcXD98YnV0bGFzdHxieXRlfGNhc3R8Y2hhcnxjaGlsZHJlbnxjbGFzc3xjbGVhci1hZ2VudC1lcnJvcnN8Y29tbWVudHxjb21tdXRlfGNvbXB8Y29tcGFyYXRvcnxjb21wbGVtZW50fGNvbmNhdHxjb25kfGNvbmp8Y29uc3xjb25zdGFudGx5fGNvbnN0cnVjdC1wcm94eXxjb250YWluc1xcP3xjb3VudHxjcmVhdGUtbnN8Y3JlYXRlLXN0cnVjdHxjeWNsZXxkZWN8ZGVjbGFyZXxkZWZ8ZGVmLXxkZWZpbmxpbmV8ZGVmaW50ZXJmYWNlfGRlZm1hY3JvfGRlZm1ldGhvZHxkZWZtdWx0aXxkZWZufGRlZm4tfGRlZm9uY2V8ZGVmcHJvamVjdHxkZWZwcm90b2NvbHxkZWZyZWNvcmR8ZGVmc3RydWN0fGRlZnR5cGV8ZGVyZWZ8ZGlmZmVyZW5jZXxkaXNqfGRpc3NvY3xkaXN0aW5jdHxkb3xkb2FsbHxkb2N8ZG9ydW58ZG9zZXF8ZG9zeW5jfGRvdGltZXN8ZG90b3xkb3VibGV8ZG93bnxkcm9wfGRyb3Atd2hpbGV8ZWRpdHxlbmRcXD98ZW5zdXJlfGV2YWx8ZXZlcnlcXD98ZmFsc2VcXD98ZmZpcnN0fGZpbGUtc2VxfGZpbHRlcnxmaW5kfGZpbmQtZG9jfGZpbmQtbnN8ZmluZC12YXJ8Zmlyc3R8ZmxvYXR8Zmx1c2h8Zm58Zm5zZXF8Zm9yfGZyZXN0fGdlbnN5bXxnZXR8Z2V0LXByb3h5LWNsYXNzfGhhc2gtbWFwfGhhc2gtc2V0fGlkZW50aWNhbFxcP3xpZGVudGl0eXxpZnxpZi1sZXR8aWYtbm90fGltcG9ydHxpbi1uc3xpbmN8aW5kZXh8aW5zZXJ0LWNoaWxkfGluc2VydC1sZWZ0fGluc2VydC1yaWdodHxpbnNwZWN0LXRhYmxlfGluc3BlY3QtdHJlZXxpbnN0YW5jZVxcP3xpbnR8aW50ZXJsZWF2ZXxpbnRlcnNlY3Rpb258aW50b3xpbnRvLWFycmF5fGl0ZXJhdGV8am9pbnxrZXl8a2V5c3xrZXl3b3JkfGtleXdvcmRcXD98bGFzdHxsYXp5LWNhdHxsYXp5LWNvbnN8bGVmdHxsZWZ0c3xsZXR8bGluZS1zZXF8bGlzdHxsaXN0XFwqfGxvYWR8bG9hZC1maWxlfGxvY2tpbmd8bG9uZ3xsb29wfG1hY3JvZXhwYW5kfG1hY3JvZXhwYW5kLTF8bWFrZS1hcnJheXxtYWtlLW5vZGV8bWFwfG1hcC1pbnZlcnR8bWFwXFw/fG1hcGNhdHxtYXh8bWF4LWtleXxtZW1mbnxtZXJnZXxtZXJnZS13aXRofG1ldGF8bWlufG1pbi1rZXl8bW9uaXRvci1lbnRlcnxuYW1lfG5hbWVzcGFjZXxuZWdcXD98bmV3fG5ld2xpbmV8bmV4dHxuaWxcXD98bm9kZXxub3R8bm90LWFueVxcP3xub3QtZXZlcnlcXD98bm90PXxuc3xucy1pbXBvcnRzfG5zLWludGVybnN8bnMtbWFwfG5zLW5hbWV8bnMtcHVibGljc3xucy1yZWZlcnN8bnMtcmVzb2x2ZXxucy11bm1hcHxudGh8bnRocmVzdHxvcnxwYXJzZXxwYXJ0aWFsfHBhdGh8cGVla3xwb3B8cG9zXFw/fHByfHByLXN0cnxwcmludHxwcmludC1zdHJ8cHJpbnRsbnxwcmludGxuLXN0cnxwcm58cHJuLXN0cnxwcm9qZWN0fHByb3h5fHByb3h5LW1hcHBpbmdzfHF1b3R8cXVvdGV8cmFuZHxyYW5kLWludHxyYW5nZXxyZS1maW5kfHJlLWdyb3Vwc3xyZS1tYXRjaGVyfHJlLW1hdGNoZXN8cmUtcGF0dGVybnxyZS1zZXF8cmVhZHxyZWFkLWxpbmV8cmVjdXJ8cmVkdWNlfHJlZnxyZWYtc2V0fHJlZmVyfHJlbXxyZW1vdmV8cmVtb3ZlLW1ldGhvZHxyZW1vdmUtbnN8cmVuYW1lfHJlbmFtZS1rZXlzfHJlcGVhdHxyZXBsYWNlfHJlcGxpY2F0ZXxyZXNvbHZlfHJlc3R8cmVzdWx0c2V0LXNlcXxyZXZlcnNlfHJmaXJzdHxyaWdodHxyaWdodHN8cm9vdHxycmVzdHxyc2VxfHNlY29uZHxzZWxlY3R8c2VsZWN0LWtleXN8c2VuZHxzZW5kLW9mZnxzZXF8c2VxLXppcHxzZXFcXD98c2V0fHNldCF8c2hvcnR8c2x1cnB8c29tZXxzb3J0fHNvcnQtYnl8c29ydGVkLW1hcHxzb3J0ZWQtbWFwLWJ5fHNvcnRlZC1zZXR8c3BlY2lhbC1zeW1ib2xcXD98c3BsaXQtYXR8c3BsaXQtd2l0aHxzdHJ8c3RyaW5nXFw/fHN0cnVjdHxzdHJ1Y3QtbWFwfHN1YnN8c3VidmVjfHN5bWJvbHxzeW1ib2xcXD98c3luY3x0YWtlfHRha2UtbnRofHRha2Utd2hpbGV8dGVzdHx0aHJvd3x0aW1lfHRvLWFycmF5fHRvLWFycmF5LTJkfHRyZWUtc2VxfHRydWVcXD98dHJ5fHVuaW9ufHVwfHVwZGF0ZS1wcm94eXx2YWx8dmFsc3x2YXJ8dmFyLWdldHx2YXItc2V0fHZhclxcP3x2ZWN0b3J8dmVjdG9yLXppcHx2ZWN0b3JcXD98d2hlbnx3aGVuLWZpcnN0fHdoZW4tbGV0fHdoZW4tbm90fHdpdGgtbG9jYWwtdmFyc3x3aXRoLW1ldGF8d2l0aC1vcGVufHdpdGgtb3V0LXN0cnx4bWwtc2VxfHhtbC16aXB8emVyb1xcP3x6aXBtYXB8emlwcGVyKSg/PVtcXHMpXXwkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8bmlsfHRydWUpXFxiLyxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXlxcdyRAXSkoPzpcXGQrKD86Wy8uXVxcZCspPyg/OmVbKy1dP1xcZCspP3wweFthLWYwLTldK3xbMS05XVxcZD9yW2EtejAtOV0rKVtsbW5dPyg/IVtcXHckQF0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjogLygoPzpefFteJ10pXFwoKVtcXHcqKyE/Jzw+PS8uLV0rKD89W1xccyldfCQpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvWyNAXmB+XS8sXG4gICAgcHVuY3R1YXRpb246IC9be31cXFtcXF0oKSxdL1xuICB9XG59XG4iXSwibmFtZXMiOlsiY2xvanVyZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJjaGFyIiwic3ltYm9sIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clojure.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cmake.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cmake.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cmake)\n/* harmony export */ });\n// @ts-nocheck\ncmake.displayName = \"cmake\";\ncmake.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cmake(Prism) {\n    Prism.languages.cmake = {\n        comment: /#.*/,\n        string: {\n            pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n                    inside: {\n                        punctuation: /\\$\\{|\\}/,\n                        variable: /\\w+/\n                    }\n                }\n            }\n        },\n        variable: /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_NAME|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE))\\b/,\n        property: /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n        keyword: /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n        boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n        namespace: /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n        operator: /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n        inserted: {\n            pattern: /\\b\\w+::\\w+\\b/,\n            alias: \"class-name\"\n        },\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n        punctuation: /[()>}]|\\$[<{]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cmake.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cobol.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cobol.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cobol)\n/* harmony export */ });\n// @ts-nocheck\ncobol.displayName = \"cobol\";\ncobol.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cobol(Prism) {\n    Prism.languages.cobol = {\n        comment: {\n            pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n            greedy: true\n        },\n        level: {\n            pattern: /(^[ \\t]*)\\d+\\b/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"number\"\n        },\n        \"class-name\": {\n            // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n            pattern: /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n            lookbehind: true,\n            inside: {\n                number: {\n                    pattern: /(\\()\\d+/,\n                    lookbehind: true\n                },\n                punctuation: /[()]/\n            }\n        },\n        keyword: {\n            pattern: /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n            lookbehind: true\n        },\n        boolean: {\n            pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n            lookbehind: true\n        },\n        number: {\n            pattern: /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n            lookbehind: true\n        },\n        operator: [\n            /<>|[<>]=?|[=+*/&]/,\n            {\n                pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n                lookbehind: true\n            }\n        ],\n        punctuation: /[.:,()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cobol.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coffeescript.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coffeescript.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ coffeescript)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\ncoffeescript.displayName = \"coffeescript\";\ncoffeescript.aliases = [\n    \"coffee\"\n];\n/** @type {import('../core.js').Syntax} */ function coffeescript(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        // Ignore comments starting with { to privilege string interpolation highlighting\n        var comment = /#(?!\\{).+/;\n        var interpolation = {\n            pattern: /#\\{[^}]+\\}/,\n            alias: \"variable\"\n        };\n        Prism.languages.coffeescript = Prism.languages.extend(\"javascript\", {\n            comment: comment,\n            string: [\n                // Strings are multiline\n                {\n                    pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n                    greedy: true\n                },\n                {\n                    // Strings are multiline\n                    pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation\n                    }\n                }\n            ],\n            keyword: /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n            \"class-member\": {\n                pattern: /@(?!\\d)\\w+/,\n                alias: \"variable\"\n            }\n        });\n        Prism.languages.insertBefore(\"coffeescript\", \"comment\", {\n            \"multiline-comment\": {\n                pattern: /###[\\s\\S]+?###/,\n                alias: \"comment\"\n            },\n            // Block regexp can contain comments and interpolation\n            \"block-regex\": {\n                pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n                alias: \"regex\",\n                inside: {\n                    comment: comment,\n                    interpolation: interpolation\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"coffeescript\", \"string\", {\n            \"inline-javascript\": {\n                pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n                inside: {\n                    delimiter: {\n                        pattern: /^`|`$/,\n                        alias: \"punctuation\"\n                    },\n                    script: {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"language-javascript\",\n                        inside: Prism.languages.javascript\n                    }\n                }\n            },\n            // Block strings\n            \"multiline-string\": [\n                {\n                    pattern: /'''[\\s\\S]*?'''/,\n                    greedy: true,\n                    alias: \"string\"\n                },\n                {\n                    pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        interpolation: interpolation\n                    }\n                }\n            ]\n        });\n        Prism.languages.insertBefore(\"coffeescript\", \"keyword\", {\n            // Object property\n            property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n        });\n        delete Prism.languages.coffeescript[\"template-string\"];\n        Prism.languages.coffee = Prism.languages.coffeescript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jb2ZmZWVzY3JpcHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ21DO0FBQ2pEQyxhQUFhQyxXQUFXLEdBQUc7QUFDM0JELGFBQWFFLE9BQU8sR0FBRztJQUFDO0NBQVM7QUFFakMsd0NBQXdDLEdBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7SUFDeENBLE1BQU1DLFFBQVEsQ0FBQ0wsc0RBQW1CQTtJQUNoQyxVQUFVSSxLQUFLO1FBQ2YsaUZBQWlGO1FBQ2pGLElBQUlFLFVBQVU7UUFDZCxJQUFJQyxnQkFBZ0I7WUFDbEJDLFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FMLE1BQU1NLFNBQVMsQ0FBQ1QsWUFBWSxHQUFHRyxNQUFNTSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxjQUFjO1lBQ2xFTCxTQUFTQTtZQUNUTSxRQUFRO2dCQUNOLHdCQUF3QjtnQkFDeEI7b0JBQ0VKLFNBQVM7b0JBQ1RLLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0Usd0JBQXdCO29CQUN4QkwsU0FBUztvQkFDVEssUUFBUTtvQkFDUkMsUUFBUTt3QkFDTlAsZUFBZUE7b0JBQ2pCO2dCQUNGO2FBQ0Q7WUFDRFEsU0FDRTtZQUNGLGdCQUFnQjtnQkFDZFAsU0FBUztnQkFDVEMsT0FBTztZQUNUO1FBQ0Y7UUFDQUwsTUFBTU0sU0FBUyxDQUFDTSxZQUFZLENBQUMsZ0JBQWdCLFdBQVc7WUFDdEQscUJBQXFCO2dCQUNuQlIsU0FBUztnQkFDVEMsT0FBTztZQUNUO1lBQ0Esc0RBQXNEO1lBQ3RELGVBQWU7Z0JBQ2JELFNBQVM7Z0JBQ1RDLE9BQU87Z0JBQ1BLLFFBQVE7b0JBQ05SLFNBQVNBO29CQUNUQyxlQUFlQTtnQkFDakI7WUFDRjtRQUNGO1FBQ0FILE1BQU1NLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLGdCQUFnQixVQUFVO1lBQ3JELHFCQUFxQjtnQkFDbkJSLFNBQVM7Z0JBQ1RNLFFBQVE7b0JBQ05HLFdBQVc7d0JBQ1RULFNBQVM7d0JBQ1RDLE9BQU87b0JBQ1Q7b0JBQ0FTLFFBQVE7d0JBQ05WLFNBQVM7d0JBQ1RDLE9BQU87d0JBQ1BLLFFBQVFWLE1BQU1NLFNBQVMsQ0FBQ1MsVUFBVTtvQkFDcEM7Z0JBQ0Y7WUFDRjtZQUNBLGdCQUFnQjtZQUNoQixvQkFBb0I7Z0JBQ2xCO29CQUNFWCxTQUFTO29CQUNUSyxRQUFRO29CQUNSSixPQUFPO2dCQUNUO2dCQUNBO29CQUNFRCxTQUFTO29CQUNUSyxRQUFRO29CQUNSSixPQUFPO29CQUNQSyxRQUFRO3dCQUNOUCxlQUFlQTtvQkFDakI7Z0JBQ0Y7YUFDRDtRQUNIO1FBQ0FILE1BQU1NLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLGdCQUFnQixXQUFXO1lBQ3RELGtCQUFrQjtZQUNsQkksVUFBVTtRQUNaO1FBQ0EsT0FBT2hCLE1BQU1NLFNBQVMsQ0FBQ1QsWUFBWSxDQUFDLGtCQUFrQjtRQUN0REcsTUFBTU0sU0FBUyxDQUFDVyxNQUFNLEdBQUdqQixNQUFNTSxTQUFTLENBQUNULFlBQVk7SUFDdkQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jb2ZmZWVzY3JpcHQuanM/MDY3MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckphdmFzY3JpcHQgZnJvbSAnLi9qYXZhc2NyaXB0LmpzJ1xuY29mZmVlc2NyaXB0LmRpc3BsYXlOYW1lID0gJ2NvZmZlZXNjcmlwdCdcbmNvZmZlZXNjcmlwdC5hbGlhc2VzID0gWydjb2ZmZWUnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvZmZlZXNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhc2NyaXB0KVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8vIElnbm9yZSBjb21tZW50cyBzdGFydGluZyB3aXRoIHsgdG8gcHJpdmlsZWdlIHN0cmluZyBpbnRlcnBvbGF0aW9uIGhpZ2hsaWdodGluZ1xuICAgIHZhciBjb21tZW50ID0gLyMoPyFcXHspLisvXG4gICAgdmFyIGludGVycG9sYXRpb24gPSB7XG4gICAgICBwYXR0ZXJuOiAvI1xce1tefV0rXFx9LyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5jb2ZmZWVzY3JpcHQgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqYXZhc2NyaXB0Jywge1xuICAgICAgY29tbWVudDogY29tbWVudCxcbiAgICAgIHN0cmluZzogW1xuICAgICAgICAvLyBTdHJpbmdzIGFyZSBtdWx0aWxpbmVcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8nKD86XFxcXFtcXHNcXFNdfFteXFxcXCddKSonLyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIFN0cmluZ3MgYXJlIG11bHRpbGluZVxuICAgICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiLyxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBpbnRlcnBvbGF0aW9uOiBpbnRlcnBvbGF0aW9uXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFuZHxicmVha3xieXxjYXRjaHxjbGFzc3xjb250aW51ZXxkZWJ1Z2dlcnxkZWxldGV8ZG98ZWFjaHxlbHNlfGV4dGVuZHxleHRlbmRzfGZhbHNlfGZpbmFsbHl8Zm9yfGlmfGlufGluc3RhbmNlb2Z8aXN8aXNudHxsZXR8bG9vcHxuYW1lc3BhY2V8bmV3fG5vfG5vdHxudWxsfG9mfG9mZnxvbnxvcnxvd258cmV0dXJufHN1cGVyfHN3aXRjaHx0aGVufHRoaXN8dGhyb3d8dHJ1ZXx0cnl8dHlwZW9mfHVuZGVmaW5lZHx1bmxlc3N8dW50aWx8d2hlbnx3aGlsZXx3aW5kb3d8d2l0aHx5ZXN8eWllbGQpXFxiLyxcbiAgICAgICdjbGFzcy1tZW1iZXInOiB7XG4gICAgICAgIHBhdHRlcm46IC9AKD8hXFxkKVxcdysvLFxuICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY29mZmVlc2NyaXB0JywgJ2NvbW1lbnQnLCB7XG4gICAgICAnbXVsdGlsaW5lLWNvbW1lbnQnOiB7XG4gICAgICAgIHBhdHRlcm46IC8jIyNbXFxzXFxTXSs/IyMjLyxcbiAgICAgICAgYWxpYXM6ICdjb21tZW50J1xuICAgICAgfSxcbiAgICAgIC8vIEJsb2NrIHJlZ2V4cCBjYW4gY29udGFpbiBjb21tZW50cyBhbmQgaW50ZXJwb2xhdGlvblxuICAgICAgJ2Jsb2NrLXJlZ2V4Jzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvezN9W1xcc1xcU10qP1xcL3szfS8sXG4gICAgICAgIGFsaWFzOiAncmVnZXgnLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBjb21tZW50OiBjb21tZW50LFxuICAgICAgICAgIGludGVycG9sYXRpb246IGludGVycG9sYXRpb25cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY29mZmVlc2NyaXB0JywgJ3N0cmluZycsIHtcbiAgICAgICdpbmxpbmUtamF2YXNjcmlwdCc6IHtcbiAgICAgICAgcGF0dGVybjogL2AoPzpcXFxcW1xcc1xcU118W15cXFxcYF0pKmAvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eYHxgJC8sXG4gICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc2NyaXB0OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtamF2YXNjcmlwdCcsXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gQmxvY2sgc3RyaW5nc1xuICAgICAgJ211bHRpbGluZS1zdHJpbmcnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvJycnW1xcc1xcU10qPycnJy8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogL1wiXCJcIltcXHNcXFNdKj9cIlwiXCIvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3N0cmluZycsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBpbnRlcnBvbGF0aW9uOiBpbnRlcnBvbGF0aW9uXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdjb2ZmZWVzY3JpcHQnLCAna2V5d29yZCcsIHtcbiAgICAgIC8vIE9iamVjdCBwcm9wZXJ0eVxuICAgICAgcHJvcGVydHk6IC8oPyFcXGQpXFx3Kyg/PVxccyo6KD8hOikpL1xuICAgIH0pXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5jb2ZmZWVzY3JpcHRbJ3RlbXBsYXRlLXN0cmluZyddXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmNvZmZlZSA9IFByaXNtLmxhbmd1YWdlcy5jb2ZmZWVzY3JpcHRcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YXNjcmlwdCIsImNvZmZlZXNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJjb21tZW50IiwiaW50ZXJwb2xhdGlvbiIsInBhdHRlcm4iLCJhbGlhcyIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsImdyZWVkeSIsImluc2lkZSIsImtleXdvcmQiLCJpbnNlcnRCZWZvcmUiLCJkZWxpbWl0ZXIiLCJzY3JpcHQiLCJqYXZhc2NyaXB0IiwicHJvcGVydHkiLCJjb2ZmZWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coffeescript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/concurnas.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/concurnas.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ concurnas)\n/* harmony export */ });\n// @ts-nocheck\nconcurnas.displayName = \"concurnas\";\nconcurnas.aliases = [\n    \"conc\"\n];\n/** @type {import('../core.js').Syntax} */ function concurnas(Prism) {\n    Prism.languages.concurnas = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        langext: {\n            pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n            greedy: true,\n            inside: {\n                \"class-name\": /^\\w+/,\n                string: {\n                    pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n                    lookbehind: true\n                },\n                punctuation: /\\|\\|/\n            }\n        },\n        function: {\n            pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n        punctuation: /[{}[\\];(),.:]/,\n        operator: /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n        annotation: {\n            pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n            alias: \"builtin\"\n        }\n    };\n    Prism.languages.insertBefore(\"concurnas\", \"langext\", {\n        \"regex-literal\": {\n            pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: Prism.languages.concurnas\n                },\n                regex: /[\\s\\S]+/\n            }\n        },\n        \"string-literal\": {\n            pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: Prism.languages.concurnas\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.conc = Prism.languages.concurnas;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jb25jdXJuYXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBRTVCLHdDQUF3QyxHQUN6QixTQUFTRixVQUFVRyxLQUFLO0lBQ3JDQSxNQUFNQyxTQUFTLENBQUNKLFNBQVMsR0FBRztRQUMxQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNURSxRQUFRO1lBQ1JFLFFBQVE7Z0JBQ04sY0FBYztnQkFDZEMsUUFBUTtvQkFDTkwsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQUssYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsVUFBVTtZQUNSUCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBTyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFDRTtRQUNGSixhQUFhO1FBQ2JLLFVBQ0U7UUFDRkMsWUFBWTtZQUNWWixTQUFTO1lBQ1RhLE9BQU87UUFDVDtJQUNGO0lBQ0FoQixNQUFNQyxTQUFTLENBQUNnQixZQUFZLENBQUMsYUFBYSxXQUFXO1FBQ25ELGlCQUFpQjtZQUNmZCxTQUFTO1lBQ1RFLFFBQVE7WUFDUkUsUUFBUTtnQkFDTlcsZUFBZTtvQkFDYmYsU0FDRTtvQkFDRkMsWUFBWTtvQkFDWkcsUUFBUVAsTUFBTUMsU0FBUyxDQUFDSixTQUFTO2dCQUNuQztnQkFDQXNCLE9BQU87WUFDVDtRQUNGO1FBQ0Esa0JBQWtCO1lBQ2hCaEIsU0FBUztZQUNURSxRQUFRO1lBQ1JFLFFBQVE7Z0JBQ05XLGVBQWU7b0JBQ2JmLFNBQ0U7b0JBQ0ZDLFlBQVk7b0JBQ1pHLFFBQVFQLE1BQU1DLFNBQVMsQ0FBQ0osU0FBUztnQkFDbkM7Z0JBQ0FXLFFBQVE7WUFDVjtRQUNGO0lBQ0Y7SUFDQVIsTUFBTUMsU0FBUyxDQUFDbUIsSUFBSSxHQUFHcEIsTUFBTUMsU0FBUyxDQUFDSixTQUFTO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2NvbmN1cm5hcy5qcz8yYjkzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jb25jdXJuYXMuZGlzcGxheU5hbWUgPSAnY29uY3VybmFzJ1xuY29uY3VybmFzLmFsaWFzZXMgPSBbJ2NvbmMnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbmN1cm5hcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuY29uY3VybmFzID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCl8XFwvXFwvLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGxhbmdleHQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJcXHcrXFxzKlxcfFxcfFtcXHNcXFNdKz9cXHxcXHwvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdjbGFzcy1uYW1lJzogL15cXHcrLyxcbiAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgcGF0dGVybjogLyheXFxzKlxcfFxcfClbXFxzXFxTXSsoPz1cXHxcXHwkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBwdW5jdHVhdGlvbjogL1xcfFxcfC9cbiAgICAgIH1cbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58XFxzKWRlZlsgXFx0XSspW2EtekEtWl9dXFx3Kig/PVxccypcXCgpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YWN0b3J8YWxzb3xhbm5vdGF0aW9ufGFzc2VydHxhc3luY3xhd2FpdHxib29sfGJvb2xlYW58YnJlYWt8Ynl0ZXxjYXNlfGNhdGNofGNoYW5nZWR8Y2hhcnxjbGFzc3xjbG9zZWR8Y29uc3RhbnR8Y29udGludWV8ZGVmfGRlZmF1bHR8ZGVsfGRvdWJsZXxlbGlmfGVsc2V8ZW51bXxldmVyeXxleHRlbmRzfGZhbHNlfGZpbmFsbHl8ZmxvYXR8Zm9yfGZyb218Z2xvYmFsfGdwdWRlZnxncHVrZXJuZWx8aWZ8aW1wb3J0fGlufGluaXR8aW5qZWN0fGludHxsYW1iZGF8bG9jYWx8bG9uZ3xsb29wfG1hdGNofG5ld3xub2RlZmF1bHR8bnVsbHxvZnxvbmNoYW5nZXxvcGVufG91dHxvdmVycmlkZXxwYWNrYWdlfHBhcmZvcnxwYXJmb3JzeW5jfHBvc3R8cHJlfHByaXZhdGV8cHJvdGVjdGVkfHByb3ZpZGV8cHJvdmlkZXJ8cHVibGljfHJldHVybnxzaGFyZWR8c2hvcnR8c2luZ2xlfHNpemVfdHxzaXplb2Z8c3VwZXJ8c3luY3x0aGlzfHRocm93fHRyYWl0fHRyYW5zfHRyYW5zaWVudHx0cnVlfHRyeXx0eXBlZGVmfHVuY2hlY2tlZHx1c2luZ3x2YWx8dmFyfHZvaWR8d2hpbGV8d2l0aClcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYjBiWzAxXVswMV9dKkw/XFxifFxcYjB4KD86W1xcZGEtZl9dKlxcLik/W1xcZGEtZl9wKy1dK1xcYnwoPzpcXGJcXGRbXFxkX10qKD86XFwuW1xcZF9dKik/fFxcQlxcLlxcZFtcXGRfXSopKD86ZVsrLV0/XFxkW1xcZF9dKik/W2RmbHNdPy9pLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vLFxuICAgIG9wZXJhdG9yOlxuICAgICAgLzw9PXw+PT18PT58LT58PC18PD58Jj09fCY8PnxcXD86P3xcXC5cXD98XFwrXFwrfC0tfFstKyovPTw+XT0/fFshXn5dfFxcYig/OmFuZHxhc3xiYW5kfGJvcnxieG9yfGNvbXB8aXN8aXNub3R8bW9kfG9yKVxcYj0/LyxcbiAgICBhbm5vdGF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvQCg/Olxcdys6KT8oPzpcXHcrfFxcW1teXFxdXStcXF0pPy8sXG4gICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgfVxuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2NvbmN1cm5hcycsICdsYW5nZXh0Jywge1xuICAgICdyZWdleC1saXRlcmFsJzoge1xuICAgICAgcGF0dGVybjogL1xcYnIoXCJ8JykoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKilcXHsoPzpbXnt9XXxcXHsoPzpbXnt9XXxcXHtbXn1dKlxcfSkqXFx9KStcXH0vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuY29uY3VybmFzXG4gICAgICAgIH0sXG4gICAgICAgIHJlZ2V4OiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3N0cmluZy1saXRlcmFsJzoge1xuICAgICAgcGF0dGVybjogLyg/OlxcQnxcXGJzKShcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVxceyg/Oltee31dfFxceyg/Oltee31dfFxce1tefV0qXFx9KSpcXH0pK1xcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5jb25jdXJuYXNcbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmNvbmMgPSBQcmlzbS5sYW5ndWFnZXMuY29uY3VybmFzXG59XG4iXSwibmFtZXMiOlsiY29uY3VybmFzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJsYW5nZXh0IiwiaW5zaWRlIiwic3RyaW5nIiwicHVuY3R1YXRpb24iLCJmdW5jdGlvbiIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJhbm5vdGF0aW9uIiwiYWxpYXMiLCJpbnNlcnRCZWZvcmUiLCJpbnRlcnBvbGF0aW9uIiwicmVnZXgiLCJjb25jIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/concurnas.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cooklang.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cooklang.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cooklang)\n/* harmony export */ });\n// @ts-nocheck\ncooklang.displayName = \"cooklang\";\ncooklang.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cooklang(Prism) {\n    ;\n    (function(Prism) {\n        // see https://github.com/cooklang/spec/blob/main/EBNF.md\n        var single_token_suffix = /(?:(?!\\s)[\\d$+<=a-zA-Z\\x80-\\uFFFF])+/.source;\n        var multi_token_infix = /[^{}@#]+/.source;\n        var multi_token_suffix = /\\{[^}#@]*\\}/.source;\n        var multi_token = multi_token_infix + multi_token_suffix;\n        var timer_units = /(?:h|hours|hrs|m|min|minutes)/.source;\n        var amount_group_impl = {\n            pattern: /\\{[^{}]*\\}/,\n            inside: {\n                amount: {\n                    pattern: /([\\{|])[^{}|*%]+/,\n                    lookbehind: true,\n                    alias: \"number\"\n                },\n                unit: {\n                    pattern: /(%)[^}]+/,\n                    lookbehind: true,\n                    alias: \"symbol\"\n                },\n                \"servings-scaler\": {\n                    pattern: /\\*/,\n                    alias: \"operator\"\n                },\n                \"servings-alternative-separator\": {\n                    pattern: /\\|/,\n                    alias: \"operator\"\n                },\n                \"unit-separator\": {\n                    pattern: /(?:%|(\\*)%)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                punctuation: /[{}]/\n            }\n        };\n        Prism.languages.cooklang = {\n            comment: {\n                // [- comment -]\n                // -- comment\n                pattern: /\\[-[\\s\\S]*?-\\]|--.*/,\n                greedy: true\n            },\n            meta: {\n                // >> key: value\n                pattern: />>.*:.*/,\n                inside: {\n                    property: {\n                        // key:\n                        pattern: /(>>\\s*)[^\\s:](?:[^:]*[^\\s:])?/,\n                        lookbehind: true\n                    }\n                }\n            },\n            \"cookware-group\": {\n                // #...{...}, #...\n                pattern: new RegExp(\"#(?:\" + multi_token + \"|\" + single_token_suffix + \")\"),\n                inside: {\n                    cookware: {\n                        pattern: new RegExp(\"(^#)(?:\" + multi_token_infix + \")\"),\n                        lookbehind: true,\n                        alias: \"variable\"\n                    },\n                    \"cookware-keyword\": {\n                        pattern: /^#/,\n                        alias: \"keyword\"\n                    },\n                    \"quantity-group\": {\n                        pattern: new RegExp(/\\{[^{}@#]*\\}/),\n                        inside: {\n                            quantity: {\n                                pattern: new RegExp(/(^\\{)/.source + multi_token_infix),\n                                lookbehind: true,\n                                alias: \"number\"\n                            },\n                            punctuation: /[{}]/\n                        }\n                    }\n                }\n            },\n            \"ingredient-group\": {\n                // @...{...}, @...\n                pattern: new RegExp(\"@(?:\" + multi_token + \"|\" + single_token_suffix + \")\"),\n                inside: {\n                    ingredient: {\n                        pattern: new RegExp(\"(^@)(?:\" + multi_token_infix + \")\"),\n                        lookbehind: true,\n                        alias: \"variable\"\n                    },\n                    \"ingredient-keyword\": {\n                        pattern: /^@/,\n                        alias: \"keyword\"\n                    },\n                    \"amount-group\": amount_group_impl\n                }\n            },\n            \"timer-group\": {\n                // ~timer{...}\n                // eslint-disable-next-line regexp/sort-alternatives\n                pattern: /~(?!\\s)[^@#~{}]*\\{[^{}]*\\}/,\n                inside: {\n                    timer: {\n                        pattern: /(^~)[^{]+/,\n                        lookbehind: true,\n                        alias: \"variable\"\n                    },\n                    \"duration-group\": {\n                        // {...}\n                        pattern: /\\{[^{}]*\\}/,\n                        inside: {\n                            punctuation: /[{}]/,\n                            unit: {\n                                pattern: new RegExp(/(%\\s*)/.source + timer_units + /\\b/.source),\n                                lookbehind: true,\n                                alias: \"symbol\"\n                            },\n                            operator: /%/,\n                            duration: {\n                                pattern: /\\d+/,\n                                alias: \"number\"\n                            }\n                        }\n                    },\n                    \"timer-keyword\": {\n                        pattern: /^~/,\n                        alias: \"keyword\"\n                    }\n                }\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cooklang.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coq.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coq.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ coq)\n/* harmony export */ });\n// @ts-nocheck\ncoq.displayName = \"coq\";\ncoq.aliases = [];\n/** @type {import('../core.js').Syntax} */ function coq(Prism) {\n    ;\n    (function(Prism) {\n        // https://github.com/coq/coq\n        var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source;\n        for(var i = 0; i < 2; i++){\n            commentSource = commentSource.replace(/<self>/g, function() {\n                return commentSource;\n            });\n        }\n        commentSource = commentSource.replace(/<self>/g, \"[]\");\n        Prism.languages.coq = {\n            comment: RegExp(commentSource),\n            string: {\n                pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n                greedy: true\n            },\n            attribute: [\n                {\n                    pattern: RegExp(/#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(/<comment>/g, function() {\n                        return commentSource;\n                    })),\n                    greedy: true,\n                    alias: \"attr-name\",\n                    inside: {\n                        comment: RegExp(commentSource),\n                        string: {\n                            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n                            greedy: true\n                        },\n                        operator: /=/,\n                        punctuation: /^#\\[|\\]$|[,()]/\n                    }\n                },\n                {\n                    pattern: /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n                    alias: \"attr-name\"\n                }\n            ],\n            keyword: /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n            number: /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n            punct: {\n                pattern: /@\\{|\\{\\||\\[=|:>/,\n                alias: \"punctuation\"\n            },\n            operator: /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n            punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jb3EuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDN0IsVUFBVUEsS0FBSztRQUNmLDZCQUE2QjtRQUU3QixJQUFJQyxnQkFBZ0IsOENBQThDQyxNQUFNO1FBQ3hFLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJLEdBQUdBLElBQUs7WUFDMUJGLGdCQUFnQkEsY0FBY0csT0FBTyxDQUFDLFdBQVc7Z0JBQy9DLE9BQU9IO1lBQ1Q7UUFDRjtRQUNBQSxnQkFBZ0JBLGNBQWNHLE9BQU8sQ0FBQyxXQUFXO1FBQ2pESixNQUFNSyxTQUFTLENBQUNSLEdBQUcsR0FBRztZQUNwQlMsU0FBU0MsT0FBT047WUFDaEJPLFFBQVE7Z0JBQ05DLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBQyxXQUFXO2dCQUNUO29CQUNFRixTQUFTRixPQUNQLDZEQUE2REwsTUFBTSxDQUFDRSxPQUFPLENBQ3pFLGNBQ0E7d0JBQ0UsT0FBT0g7b0JBQ1Q7b0JBR0pTLFFBQVE7b0JBQ1JFLE9BQU87b0JBQ1BDLFFBQVE7d0JBQ05QLFNBQVNDLE9BQU9OO3dCQUNoQk8sUUFBUTs0QkFDTkMsU0FBUzs0QkFDVEMsUUFBUTt3QkFDVjt3QkFDQUksVUFBVTt3QkFDVkMsYUFBYTtvQkFDZjtnQkFDRjtnQkFDQTtvQkFDRU4sU0FDRTtvQkFDRkcsT0FBTztnQkFDVDthQUNEO1lBQ0RJLFNBQ0U7WUFDRkMsUUFDRTtZQUNGQyxPQUFPO2dCQUNMVCxTQUFTO2dCQUNURyxPQUFPO1lBQ1Q7WUFDQUUsVUFDRTtZQUNGQyxhQUFhO1FBQ2Y7SUFDRixHQUFHZjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2NvcS5qcz9kMjFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jb3EuZGlzcGxheU5hbWUgPSAnY29xJ1xuY29xLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvcShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3EvY29xXG5cbiAgICB2YXIgY29tbWVudFNvdXJjZSA9IC9cXChcXCooPzpbXigqXXxcXCgoPyFcXCopfFxcKig/IVxcKSl8PHNlbGY+KSpcXCpcXCkvLnNvdXJjZVxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMjsgaSsrKSB7XG4gICAgICBjb21tZW50U291cmNlID0gY29tbWVudFNvdXJjZS5yZXBsYWNlKC88c2VsZj4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gY29tbWVudFNvdXJjZVxuICAgICAgfSlcbiAgICB9XG4gICAgY29tbWVudFNvdXJjZSA9IGNvbW1lbnRTb3VyY2UucmVwbGFjZSgvPHNlbGY+L2csICdbXScpXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmNvcSA9IHtcbiAgICAgIGNvbW1lbnQ6IFJlZ0V4cChjb21tZW50U291cmNlKSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGF0dHJpYnV0ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgLyNcXFsoPzpbXlxcW1xcXShcIl18XCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKXxcXCgoPyFcXCopfDxjb21tZW50PikqXFxdLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgICAgLzxjb21tZW50Pi9nLFxuICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbW1lbnRTb3VyY2VcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGNvbW1lbnQ6IFJlZ0V4cChjb21tZW50U291cmNlKSxcbiAgICAgICAgICAgIHN0cmluZzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL14jXFxbfFxcXSR8WywoKV0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXGIoPzpDdW11bGF0aXZlfEdsb2JhbHxMb2NhbHxNb25vbW9ycGhpY3xOb25DdW11bGF0aXZlfFBvbHltb3JwaGljfFByaXZhdGV8UHJvZ3JhbSlcXGIvLFxuICAgICAgICAgIGFsaWFzOiAnYXR0ci1uYW1lJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OkFib3J0fEFib3V0fEFkZHxBZG1pdHxBZG1pdHRlZHxBbGx8QXJndW1lbnRzfEFzfEFzc3VtcHRpb25zfEF4aW9tfEF4aW9tc3xCYWNrfEJhY2tUb3xCYWNrdHJhY2V8QmluT3B8QmluT3BTcGVjfEJpblJlbHxCaW5kfEJsYWNrbGlzdHxDYW5vbmljYWx8Q2FzZXxDZHxDaGVja3xDbGFzc3xDbGFzc2VzfENsb3NlfENvRml4cG9pbnR8Q29JbmR1Y3RpdmV8Q29lcmNpb258Q29lcmNpb25zfENvbGxlY3Rpb258Q29tYmluZWR8Q29tcHV0ZXxDb25qZWN0dXJlfENvbmplY3R1cmVzfENvbnN0YW50fENvbnN0YW50c3xDb25zdHJhaW50fENvbnN0cnVjdG9yc3xDb250ZXh0fENvcm9sbGFyeXxDcmVhdGV8Q3N0T3B8Q3VzdG9tfEN1dHxEZWJ1Z3xEZWNsYXJlfERlZmluZWR8RGVmaW5pdGlvbnxEZWxpbWl0fERlcGVuZGVuY2llc3xEZXBlbmRlbnR8RGVyaXZlfERpZmZzfERyb3B8RWxpbWluYXRpb258RW5kfEVudHJ5fEVxdWFsaXR5fEV2YWx8RXhhbXBsZXxFeGlzdGVudGlhbHxFeGlzdGVudGlhbHN8RXhpc3Rpbmd8RXhwb3J0fEV4dGVybnxFeHRyYWN0aW9ufEZhY3R8RmFpbHxGaWVsZHxGaWxlfEZpcnN0b3JkZXJ8Rml4cG9pbnR8RmxhZ3N8Rm9jdXN8RnJvbXxGdW5jbGFzc3xGdW5jdGlvbnxGdW5jdGlvbmFsfEdDfEdlbmVyYWxpemFibGV8R29hbHxHcmFifEdyYW1tYXJ8R3JhcGh8R3VhcmRlZHxIYXNrZWxsfEhlYXB8SGlkZXxIaW50fEhpbnREYnxIaW50c3xIeXBvdGhlc2VzfEh5cG90aGVzaXN8SUZ8SWRlbnRpdHl8SW1tZWRpYXRlfEltcGxpY2l0fEltcGxpY2l0c3xJbXBvcnR8SW5jbHVkZXxJbmR1Y3Rpb258SW5kdWN0aXZlfEluZml4fEluZm98SW5pdGlhbHxJbmpUeXB8SW5saW5lfEluc3BlY3R8SW5zdGFuY2V8SW5zdGFuY2VzfEludHJvfEludHJvc3xJbnZlcnNpb258SW52ZXJzaW9uX2NsZWFyfEpTT058TGFuZ3VhZ2V8TGVmdHxMZW1tYXxMZXR8TGlhfExpYnJhcmllc3xMaWJyYXJ5fExvYWR8TG9hZFBhdGh8TG9jYXRlfEx0YWN8THRhYzJ8TUx8TWF0Y2h8TWV0aG9kfE1pbmltYWxpdHl8TW9kdWxlfE1vZHVsZXN8TW9ycGhpc218TmV4dHxOb0lubGluZXxOb3RhdGlvbnxOdW1iZXJ8T0NhbWx8T2JsaWdhdGlvbnxPYmxpZ2F0aW9uc3xPcGFxdWV8T3BlbnxPcHRpbWl6ZXxQYXJhbWV0ZXJ8UGFyYW1ldGVyc3xQYXJhbWV0cmljfFBhdGh8UGF0aHN8UHJlbmV4fFByZXRlcm18UHJpbWl0aXZlfFByaW50fFByb2ZpbGV8UHJvamVjdGlvbnN8UHJvb2Z8UHJvcHxQcm9wQmluT3B8UHJvcE9wfFByb3BVT3B8UHJvcGVydHl8UHJvcG9zaXRpb258UHdkfFFlZHxRdWl0fFJlY3xSZWNvcmR8UmVjdXJzaXZlfFJlZGlyZWN0fFJlZHVjdGlvbnxSZWdpc3RlcnxSZWxhdGlvbnxSZW1hcmt8UmVtb3ZlfFJlcXVpcmV8UmVzZXJ2ZWR8UmVzZXR8UmVzb2x2ZXxSZXN0YXJ0fFJld3JpdGV8UmlnaHR8UmluZ3xSaW5nc3xTUHJvcHxTYXR1cmF0ZXxTYXZlfFNjaGVtZXxTY29wZXxTY29wZXN8U2VhcmNofFNlYXJjaEhlYWR8U2VhcmNoUGF0dGVybnxTZWFyY2hSZXdyaXRlfFNlY3Rpb258U2VwYXJhdGV8U2V0fFNldG9pZHxTaG93fFNpZ25hdHVyZXN8U29sdmV8U29sdmVyfFNvcnR8U29ydGNsYXNzfFNvcnRlZHxTcGVjfFN0ZXB8U3RyYXRlZ2llc3xTdHJhdGVneXxTdHJpbmd8U3RydWN0dXJlfFN1YkNsYXNzfFN1YmdyYXBofFN1Y2hUaGF0fFRhY3RpY3xUZXJtfFRlc3RDb21waWxlfFRoZW9yZW18VGltZXxUaW1lb3V0fFRvfFRyYW5zcGFyZW50fFR5cGV8VHlwZWNsYXNzZXN8VHlwZXN8VHlwaW5nfFVuT3B8VW5PcFNwZWN8VW5kZWxpbWl0fFVuZG98VW5mb2N1c3xVbmZvY3VzZWR8VW5mb2xkfFVuaXZlcnNlfFVuaXZlcnNlc3xVbnNoZWx2ZXxWYXJpYWJsZXxWYXJpYWJsZXN8VmFyaWFudHxWZXJib3NlfFZpZXd8VmlzaWJpbGl0eXxaaWZ5fF98YXBwbHl8YXN8YXR8Ynl8Y29maXh8ZWxzZXxlbmR8ZXhpc3RzfGV4aXN0czJ8Zml4fGZvcnxmb3JhbGx8ZnVufGlmfGlufGxldHxtYXRjaHxtZWFzdXJlfG1vdmV8cmVtb3ZlZHxyZXR1cm58c3RydWN0fHRoZW58dXNpbmd8d2Z8d2hlcmV8d2l0aClcXGIvLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiKD86MHhbYS1mMC05XVthLWYwLTlfXSooPzpcXC5bYS1mMC05X10rKT8oPzpwWystXT9cXGRbXFxkX10qKT98XFxkW1xcZF9dKig/OlxcLltcXGRfXSspPyg/OmVbKy1dP1xcZFtcXGRfXSopPylcXGIvaSxcbiAgICAgIHB1bmN0OiB7XG4gICAgICAgIHBhdHRlcm46IC9AXFx7fFxce1xcfHxcXFs9fDo+LyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjpcbiAgICAgICAgL1xcL1xcXFx8XFxcXFxcL3xcXC57MiwzfXw6ezEsMn09fFxcKlxcKnxbLT1dPnw8KD86LT4/fFsrOj0+XXw8Oil8Pig/Oj18LT4pfFxcfFstfF0/fFstISUmKisvPD0+P0BefiddLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvXFwuXFwofGBcXCh8QFxce3xgXFx7fFxce1xcfHxcXFs9fDo+fFs6Liw7KCl7fVxcW1xcXV0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJjb3EiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNvbW1lbnRTb3VyY2UiLCJzb3VyY2UiLCJpIiwicmVwbGFjZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJSZWdFeHAiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYXR0cmlidXRlIiwiYWxpYXMiLCJpbnNpZGUiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsIm51bWJlciIsInB1bmN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coq.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cpp)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\ncpp.displayName = \"cpp\";\ncpp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cpp(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n        var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function() {\n            return keyword.source;\n        });\n        Prism.languages.cpp = Prism.languages.extend(\"c\", {\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function() {\n                        return keyword.source;\n                    })),\n                    lookbehind: true\n                },\n                // This is intended to capture the class name of method implementations like:\n                //   void foo::bar() const {}\n                // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n                // it starts with an uppercase letter. This approximation should give decent results.\n                /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/,\n                // This will capture the class name before destructors like:\n                //   Foo::~Foo() {}\n                /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i,\n                // This also intends to capture the class name of method implementations but here the class has template\n                // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n                /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n            ],\n            keyword: keyword,\n            number: {\n                pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n                greedy: true\n            },\n            operator: />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n            boolean: /\\b(?:false|true)\\b/\n        });\n        Prism.languages.insertBefore(\"cpp\", \"string\", {\n            module: {\n                // https://en.cppreference.com/w/cpp/language/modules\n                pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + \"(?:\" + // header-name\n                /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + \"|\" + // module name or partition or both\n                /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function() {\n                    return modName;\n                }) + \")\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    string: /^[<\"][\\s\\S]+/,\n                    operator: /:/,\n                    punctuation: /\\./\n                }\n            },\n            \"raw-string\": {\n                pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n                alias: \"string\",\n                greedy: true\n            }\n        });\n        Prism.languages.insertBefore(\"cpp\", \"keyword\", {\n            \"generic-function\": {\n                pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n                inside: {\n                    function: /^\\w+/,\n                    generic: {\n                        pattern: /<[\\s\\S]+/,\n                        alias: \"class-name\",\n                        inside: Prism.languages.cpp\n                    }\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"cpp\", \"operator\", {\n            \"double-colon\": {\n                pattern: /::/,\n                alias: \"punctuation\"\n            }\n        });\n        Prism.languages.insertBefore(\"cpp\", \"class-name\", {\n            // the base clause is an optional list of parent classes\n            // https://en.cppreference.com/w/cpp/language/class\n            \"base-clause\": {\n                pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n                lookbehind: true,\n                greedy: true,\n                inside: Prism.languages.extend(\"cpp\", {})\n            }\n        });\n        Prism.languages.insertBefore(\"inside\", \"double-colon\", {\n            // All untokenized words that are not namespaces should be class names\n            \"class-name\": /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n        }, Prism.languages.cpp[\"base-clause\"]);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/crystal.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/crystal.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ crystal)\n/* harmony export */ });\n/* harmony import */ var _ruby_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ruby.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js\");\n// @ts-nocheck\n\ncrystal.displayName = \"crystal\";\ncrystal.aliases = [];\n/** @type {import('../core.js').Syntax} */ function crystal(Prism) {\n    Prism.register(_ruby_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.crystal = Prism.languages.extend(\"ruby\", {\n            keyword: [\n                /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n                {\n                    pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n                    lookbehind: true\n                }\n            ],\n            number: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n            operator: [\n                /->/,\n                Prism.languages.ruby.operator\n            ],\n            punctuation: /[(){}[\\].,;\\\\]/\n        });\n        Prism.languages.insertBefore(\"crystal\", \"string-literal\", {\n            attribute: {\n                pattern: /@\\[.*?\\]/,\n                inside: {\n                    delimiter: {\n                        pattern: /^@\\[|\\]$/,\n                        alias: \"punctuation\"\n                    },\n                    attribute: {\n                        pattern: /^(\\s*)\\w+/,\n                        lookbehind: true,\n                        alias: \"class-name\"\n                    },\n                    args: {\n                        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                        inside: Prism.languages.crystal\n                    }\n                }\n            },\n            expansion: {\n                pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n                inside: {\n                    content: {\n                        pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n                        lookbehind: true,\n                        inside: Prism.languages.crystal\n                    },\n                    delimiter: {\n                        pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n                        alias: \"operator\"\n                    }\n                }\n            },\n            char: {\n                pattern: /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n                greedy: true\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jcnlzdGFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN1QjtBQUNyQ0MsUUFBUUMsV0FBVyxHQUFHO0FBQ3RCRCxRQUFRRSxPQUFPLEdBQUcsRUFBRTtBQUVwQix3Q0FBd0MsR0FDekIsU0FBU0YsUUFBUUcsS0FBSztJQUNuQ0EsTUFBTUMsUUFBUSxDQUFDTCxnREFBYUE7SUFDMUIsVUFBVUksS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLE9BQU8sR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsUUFBUTtZQUN2REMsU0FBUztnQkFDUDtnQkFDQTtvQkFDRUMsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDthQUNEO1lBQ0RDLFFBQ0U7WUFDRkMsVUFBVTtnQkFBQztnQkFBTVIsTUFBTUUsU0FBUyxDQUFDTyxJQUFJLENBQUNELFFBQVE7YUFBQztZQUMvQ0UsYUFBYTtRQUNmO1FBQ0FWLE1BQU1FLFNBQVMsQ0FBQ1MsWUFBWSxDQUFDLFdBQVcsa0JBQWtCO1lBQ3hEQyxXQUFXO2dCQUNUUCxTQUFTO2dCQUNUUSxRQUFRO29CQUNOQyxXQUFXO3dCQUNUVCxTQUFTO3dCQUNUVSxPQUFPO29CQUNUO29CQUNBSCxXQUFXO3dCQUNUUCxTQUFTO3dCQUNUQyxZQUFZO3dCQUNaUyxPQUFPO29CQUNUO29CQUNBQyxNQUFNO3dCQUNKWCxTQUFTO3dCQUNUUSxRQUFRYixNQUFNRSxTQUFTLENBQUNMLE9BQU87b0JBQ2pDO2dCQUNGO1lBQ0Y7WUFDQW9CLFdBQVc7Z0JBQ1RaLFNBQVM7Z0JBQ1RRLFFBQVE7b0JBQ05LLFNBQVM7d0JBQ1BiLFNBQVM7d0JBQ1RDLFlBQVk7d0JBQ1pPLFFBQVFiLE1BQU1FLFNBQVMsQ0FBQ0wsT0FBTztvQkFDakM7b0JBQ0FpQixXQUFXO3dCQUNUVCxTQUFTO3dCQUNUVSxPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7WUFDQUksTUFBTTtnQkFDSmQsU0FDRTtnQkFDRmUsUUFBUTtZQUNWO1FBQ0Y7SUFDRixHQUFHcEI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jcnlzdGFsLmpzPzA3YzIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JSdWJ5IGZyb20gJy4vcnVieS5qcydcbmNyeXN0YWwuZGlzcGxheU5hbWUgPSAnY3J5c3RhbCdcbmNyeXN0YWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3J5c3RhbChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JSdWJ5KVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5jcnlzdGFsID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgncnVieScsIHtcbiAgICAgIGtleXdvcmQ6IFtcbiAgICAgICAgL1xcYig/Ol9fRElSX198X19FTkRfTElORV9ffF9fRklMRV9ffF9fTElORV9ffGFic3RyYWN0fGFsaWFzfGFubm90YXRpb258YXN8YXNtfGJlZ2lufGJyZWFrfGNhc2V8Y2xhc3N8ZGVmfGRvfGVsc2V8ZWxzaWZ8ZW5kfGVuc3VyZXxlbnVtfGV4dGVuZHxmb3J8ZnVufGlmfGlmZGVmfGluY2x1ZGV8aW5zdGFuY2Vfc2l6ZW9mfGxpYnxtYWNyb3xtb2R1bGV8bmV4dHxvZnxvdXR8cG9pbnRlcm9mfHByaXZhdGV8cHJvdGVjdGVkfHB0cnxyZXF1aXJlfHJlc2N1ZXxyZXR1cm58c2VsZWN0fHNlbGZ8c2l6ZW9mfHN0cnVjdHxzdXBlcnx0aGVufHR5cGV8dHlwZW9mfHVuZGVmfHVuaW5pdGlhbGl6ZWR8dW5pb258dW5sZXNzfHVudGlsfHdoZW58d2hpbGV8d2l0aHx5aWVsZClcXGIvLFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhcXC5cXHMqKSg/OmlzX2F8cmVzcG9uZHNfdG8pXFw/LyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBudW1iZXI6XG4gICAgICAgIC9cXGIoPzowYlswMV9dKlswMV18MG9bMC03X10qWzAtN118MHhbXFxkYS1mQS1GX10qW1xcZGEtZkEtRl18KD86XFxkKD86W1xcZF9dKlxcZCk/KSg/OlxcLltcXGRfXSpcXGQpPyg/OltlRV1bKy1dP1tcXGRfXSpcXGQpPykoPzpfKD86W3VpZl0oPzo4fDE2fDMyfDY0KSk/KT9cXGIvLFxuICAgICAgb3BlcmF0b3I6IFsvLT4vLCBQcmlzbS5sYW5ndWFnZXMucnVieS5vcGVyYXRvcl0sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9W1xcXS4sO1xcXFxdL1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnY3J5c3RhbCcsICdzdHJpbmctbGl0ZXJhbCcsIHtcbiAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICBwYXR0ZXJuOiAvQFxcWy4qP1xcXS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICAgICAgcGF0dGVybjogL15AXFxbfFxcXSQvLFxuICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICAgICAgcGF0dGVybjogL14oXFxzKilcXHcrLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBhcmdzOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFxTKD86W1xcc1xcU10qXFxTKT8vLFxuICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuY3J5c3RhbFxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGV4cGFuc2lvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx7KD86XFx7Lio/XFx9fCUuKj8lKVxcfS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eKFxcey4pW1xcc1xcU10rKD89LlxcfSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5jcnlzdGFsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eXFx7W1xceyVdfFtcXH0lXVxcfSQvLFxuICAgICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBjaGFyOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLycoPzpbXlxcXFxcXHJcXG5dezEsMn18XFxcXCg/Oi58dSg/OltBLUZhLWYwLTldezEsNH18XFx7W0EtRmEtZjAtOV17MSw2fVxcfSkpKScvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JSdWJ5IiwiY3J5c3RhbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJudW1iZXIiLCJvcGVyYXRvciIsInJ1YnkiLCJwdW5jdHVhdGlvbiIsImluc2VydEJlZm9yZSIsImF0dHJpYnV0ZSIsImluc2lkZSIsImRlbGltaXRlciIsImFsaWFzIiwiYXJncyIsImV4cGFuc2lvbiIsImNvbnRlbnQiLCJjaGFyIiwiZ3JlZWR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/crystal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ csharp)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ncsharp.displayName = \"csharp\";\ncsharp.aliases = [\n    \"cs\",\n    \"dotnet\"\n];\n/** @type {import('../core.js').Syntax} */ function csharp(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */ function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n                return \"(?:\" + replacements[+index] + \")\";\n            });\n        }\n        /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */ function nested(pattern, depthLog2) {\n            for(var i = 0; i < depthLog2; i++){\n                pattern = pattern.replace(/<<self>>/g, function() {\n                    return \"(?:\" + pattern + \")\";\n                });\n            }\n            return pattern.replace(/<<self>>/g, \"[^\\\\s\\\\S]\");\n        }\n        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n        var keywordKinds = {\n            // keywords which represent a return or variable type\n            type: \"bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void\",\n            // keywords which are used to declare a type\n            typeDeclaration: \"class enum interface record struct\",\n            // contextual keywords\n            // (\"var\" and \"dynamic\" are missing because they are used like types)\n            contextual: \"add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)\",\n            // all other keywords\n            other: \"abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield\"\n        };\n        // keywords\n        function keywordsToPattern(words) {\n            return \"\\\\b(?:\" + words.trim().replace(/ /g, \"|\") + \")\\\\b\";\n        }\n        var typeDeclarationKeywords = keywordsToPattern(keywordKinds.typeDeclaration);\n        var keywords = RegExp(keywordsToPattern(keywordKinds.type + \" \" + keywordKinds.typeDeclaration + \" \" + keywordKinds.contextual + \" \" + keywordKinds.other));\n        var nonTypeKeywords = keywordsToPattern(keywordKinds.typeDeclaration + \" \" + keywordKinds.contextual + \" \" + keywordKinds.other);\n        var nonContextualKeywords = keywordsToPattern(keywordKinds.type + \" \" + keywordKinds.typeDeclaration + \" \" + keywordKinds.other);\n        // types\n        var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n        ;\n        var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2);\n        var name = /@?\\b[A-Za-z_]\\w*\\b/.source;\n        var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [\n            name,\n            generic\n        ]);\n        var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n            nonTypeKeywords,\n            genericName\n        ]);\n        var array = /\\[\\s*(?:,\\s*)*\\]/.source;\n        var typeExpressionWithoutTuple = replace(/<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source, [\n            identifier,\n            array\n        ]);\n        var tupleElement = replace(/[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source, [\n            generic,\n            nestedRound,\n            array\n        ]);\n        var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [\n            tupleElement\n        ]);\n        var typeExpression = replace(/(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source, [\n            tuple,\n            identifier,\n            array\n        ]);\n        var typeInside = {\n            keyword: keywords,\n            punctuation: /[<>()?,.:[\\]]/\n        };\n        // strings & characters\n        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n        // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n        var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n        ;\n        var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source;\n        var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source;\n        Prism.languages.csharp = Prism.languages.extend(\"clike\", {\n            string: [\n                {\n                    pattern: re(/(^|[^$\\\\])<<0>>/.source, [\n                        verbatimString\n                    ]),\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: re(/(^|[^@$\\\\])<<0>>/.source, [\n                        regularString\n                    ]),\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"class-name\": [\n                {\n                    // Using static\n                    // using static System.Math;\n                    pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n                        identifier\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Using alias (type)\n                    // using Project = PC.MyCompany.Project;\n                    pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n                        name,\n                        typeExpression\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Using alias (alias)\n                    // using Project = PC.MyCompany.Project;\n                    pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [\n                        name\n                    ]),\n                    lookbehind: true\n                },\n                {\n                    // Type declarations\n                    // class Foo<A, B>\n                    // interface Foo<out A, B>\n                    pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n                        typeDeclarationKeywords,\n                        genericName\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Single catch exception declaration\n                    // catch(Foo)\n                    // (things like catch(Foo e) is covered by variable declaration)\n                    pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [\n                        identifier\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Name of the type parameter of generic constraints\n                    // where Foo : class\n                    pattern: re(/(\\bwhere\\s+)<<0>>/.source, [\n                        name\n                    ]),\n                    lookbehind: true\n                },\n                {\n                    // Casts and checks via as and is.\n                    // as Foo<A>, is Bar<B>\n                    // (things like if(a is Foo b) is covered by variable declaration)\n                    pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n                        typeExpressionWithoutTuple\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // Variable, field and parameter declaration\n                    // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n                    pattern: re(/\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/.source, [\n                        typeExpression,\n                        nonContextualKeywords,\n                        name\n                    ]),\n                    inside: typeInside\n                }\n            ],\n            keyword: keywords,\n            // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n            number: /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n            operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n            punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n        });\n        Prism.languages.insertBefore(\"csharp\", \"number\", {\n            range: {\n                pattern: /\\.\\./,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.insertBefore(\"csharp\", \"punctuation\", {\n            \"named-parameter\": {\n                pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [\n                    name\n                ]),\n                lookbehind: true,\n                alias: \"punctuation\"\n            }\n        });\n        Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n            namespace: {\n                // namespace Foo.Bar {}\n                // using Foo.Bar;\n                pattern: re(/(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source, [\n                    name\n                ]),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            \"type-expression\": {\n                // default(Foo), typeof(Foo<Bar>), sizeof(int)\n                pattern: re(/(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/.source, [\n                    nestedRound\n                ]),\n                lookbehind: true,\n                alias: \"class-name\",\n                inside: typeInside\n            },\n            \"return-type\": {\n                // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n                // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n                // int Foo => 0; int Foo { get; set } = 0;\n                pattern: re(/<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source, [\n                    typeExpression,\n                    identifier\n                ]),\n                inside: typeInside,\n                alias: \"class-name\"\n            },\n            \"constructor-invocation\": {\n                // new List<Foo<Bar[]>> { }\n                pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [\n                    typeExpression\n                ]),\n                lookbehind: true,\n                inside: typeInside,\n                alias: \"class-name\"\n            },\n            /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/ \"generic-method\": {\n                // foo<Bar>()\n                pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [\n                    name,\n                    generic\n                ]),\n                inside: {\n                    function: re(/^<<0>>/.source, [\n                        name\n                    ]),\n                    generic: {\n                        pattern: RegExp(generic),\n                        alias: \"class-name\",\n                        inside: typeInside\n                    }\n                }\n            },\n            \"type-list\": {\n                // The list of types inherited or of generic constraints\n                // class Foo<F> : Bar, IList<FooBar>\n                // where F : Bar, IList<int>\n                pattern: re(/\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/.source, [\n                    typeDeclarationKeywords,\n                    genericName,\n                    name,\n                    typeExpression,\n                    keywords.source,\n                    nestedRound,\n                    /\\bnew\\s*\\(\\s*\\)/.source\n                ]),\n                lookbehind: true,\n                inside: {\n                    \"record-arguments\": {\n                        pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n                            genericName,\n                            nestedRound\n                        ]),\n                        lookbehind: true,\n                        greedy: true,\n                        inside: Prism.languages.csharp\n                    },\n                    keyword: keywords,\n                    \"class-name\": {\n                        pattern: RegExp(typeExpression),\n                        greedy: true,\n                        inside: typeInside\n                    },\n                    punctuation: /[,()]/\n                }\n            },\n            preprocessor: {\n                pattern: /(^[\\t ]*)#.*/m,\n                lookbehind: true,\n                alias: \"property\",\n                inside: {\n                    // highlight preprocessor directives as keywords\n                    directive: {\n                        pattern: /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n                        lookbehind: true,\n                        alias: \"keyword\"\n                    }\n                }\n            }\n        });\n        // attributes\n        var regularStringOrCharacter = regularString + \"|\" + character;\n        var regularStringCharacterOrComment = replace(/\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source, [\n            regularStringOrCharacter\n        ]);\n        var roundExpression = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n            regularStringCharacterOrComment\n        ]), 2);\n        // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n        var attrTarget = /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/.source;\n        var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n            identifier,\n            roundExpression\n        ]);\n        Prism.languages.insertBefore(\"csharp\", \"class-name\", {\n            attribute: {\n                // Attributes\n                // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n                pattern: re(/((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/.source, [\n                    attrTarget,\n                    attr\n                ]),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    target: {\n                        pattern: re(/^<<0>>(?=\\s*:)/.source, [\n                            attrTarget\n                        ]),\n                        alias: \"keyword\"\n                    },\n                    \"attribute-arguments\": {\n                        pattern: re(/\\(<<0>>*\\)/.source, [\n                            roundExpression\n                        ]),\n                        inside: Prism.languages.csharp\n                    },\n                    \"class-name\": {\n                        pattern: RegExp(identifier),\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    punctuation: /[:,]/\n                }\n            }\n        });\n        // string interpolation\n        var formatString = /:[^}\\r\\n]+/.source;\n        // multi line\n        var mInterpolationRound = nested(replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n            regularStringCharacterOrComment\n        ]), 2);\n        var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n            mInterpolationRound,\n            formatString\n        ]);\n        // single line\n        var sInterpolationRound = nested(replace(/[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/.source, [\n            regularStringOrCharacter\n        ]), 2);\n        var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n            sInterpolationRound,\n            formatString\n        ]);\n        function createInterpolationInside(interpolation, interpolationRound) {\n            return {\n                interpolation: {\n                    pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [\n                        interpolation\n                    ]),\n                    lookbehind: true,\n                    inside: {\n                        \"format-string\": {\n                            pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                                interpolationRound,\n                                formatString\n                            ]),\n                            lookbehind: true,\n                            inside: {\n                                punctuation: /^:/\n                            }\n                        },\n                        punctuation: /^\\{|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            alias: \"language-csharp\",\n                            inside: Prism.languages.csharp\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            };\n        }\n        Prism.languages.insertBefore(\"csharp\", \"string\", {\n            \"interpolation-string\": [\n                {\n                    pattern: re(/(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source, [\n                        mInterpolation\n                    ]),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n                },\n                {\n                    pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n                        sInterpolation\n                    ]),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n                }\n            ],\n            char: {\n                pattern: RegExp(character),\n                greedy: true\n            }\n        });\n        Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cshtml.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cshtml.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cshtml)\n/* harmony export */ });\n/* harmony import */ var _csharp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js\");\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\n\ncshtml.displayName = \"cshtml\";\ncshtml.aliases = [\n    \"razor\"\n];\n/** @type {import('../core.js').Syntax} */ function cshtml(Prism) {\n    Prism.register(_csharp_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//.source;\n        var stringLike = /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source + \"|\" + /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source;\n        /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */ function nested(pattern, depthLog2) {\n            for(var i = 0; i < depthLog2; i++){\n                pattern = pattern.replace(/<self>/g, function() {\n                    return \"(?:\" + pattern + \")\";\n                });\n            }\n            return pattern.replace(/<self>/g, \"[^\\\\s\\\\S]\").replace(/<str>/g, \"(?:\" + stringLike + \")\").replace(/<comment>/g, \"(?:\" + commentLike + \")\");\n        }\n        var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2);\n        var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 1);\n        var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2);\n        var angle = nested(/<(?:[^<>'\"@/]|<comment>|<self>)*>/.source, 1);\n        var inlineCs = /@/.source + /(?:await\\b\\s*)?/.source + \"(?:\" + /(?!await\\b)\\w+\\b/.source + \"|\" + round + \")\" + \"(?:\" + /[?!]?\\.\\w+\\b/.source + \"|\" + \"(?:\" + angle + \")?\" + round + \"|\" + square + \")*\" + /(?![?!\\.(\\[]|<(?!\\/))/.source;\n        // Note about the above bracket patterns:\n        // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n        // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n        // messes up the bracket and string counting implemented by the above patterns.\n        //\n        // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n        // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n        // complexity of an HTML expression.\n        //\n        // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n        // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n        var tagAttrInlineCs = /@(?![\\w()])/.source + \"|\" + inlineCs;\n        var tagAttrValue = \"(?:\" + /\"[^\"@]*\"|'[^'@]*'|[^\\s'\"@>=]+(?=[\\s>])/.source + \"|\" + \"[\\\"'][^\\\"'@]*(?:(?:\" + tagAttrInlineCs + \")[^\\\"'@]*)+[\\\"']\" + \")\";\n        var tagAttrs = /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*<tagAttrValue>|(?=[\\s/>])))+)?/.source.replace(/<tagAttrValue>/, tagAttrValue);\n        var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source;\n        var tagRegion = /\\B@?/.source + \"(?:\" + /<([a-zA-Z][\\w:]*)/.source + tagAttrs + /\\s*>/.source + \"(?:\" + (/[^<]/.source + \"|\" + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source + tagContent + \"|\" + // nested start tag\n        nested(// eslint-disable-next-line regexp/strict\n        /<\\1/.source + tagAttrs + /\\s*>/.source + \"(?:\" + (/[^<]/.source + \"|\" + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source + tagContent + \"|\" + \"<self>\") + \")*\" + // eslint-disable-next-line regexp/strict\n        /<\\/\\1\\s*>/.source, 2)) + \")*\" + // eslint-disable-next-line regexp/strict\n        /<\\/\\1\\s*>/.source + \"|\" + /</.source + tagContent + \")\";\n        // Now for the actual language definition(s):\n        //\n        // Razor as a language has 2 parts:\n        //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n        //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n        //\n        // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n        // other. However, only CSHTML will be exported via `Prism.languages`.\n        Prism.languages.cshtml = Prism.languages.extend(\"markup\", {});\n        var csharpWithHtml = Prism.languages.insertBefore(\"csharp\", \"string\", {\n            html: {\n                pattern: RegExp(tagRegion),\n                greedy: true,\n                inside: Prism.languages.cshtml\n            }\n        }, {\n            csharp: Prism.languages.extend(\"csharp\", {})\n        });\n        var cs = {\n            pattern: /\\S[\\s\\S]*/,\n            alias: \"language-csharp\",\n            inside: csharpWithHtml\n        };\n        var inlineValue = {\n            pattern: RegExp(/(^|[^@])/.source + inlineCs),\n            lookbehind: true,\n            greedy: true,\n            alias: \"variable\",\n            inside: {\n                keyword: /^@/,\n                csharp: cs\n            }\n        };\n        Prism.languages.cshtml.tag.pattern = RegExp(/<\\/?/.source + tagContent);\n        Prism.languages.cshtml.tag.inside[\"attr-value\"].pattern = RegExp(/=\\s*/.source + tagAttrValue);\n        Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n            value: inlineValue\n        }, Prism.languages.cshtml.tag.inside[\"attr-value\"]);\n        Prism.languages.insertBefore(\"cshtml\", \"prolog\", {\n            \"razor-comment\": {\n                pattern: /@\\*[\\s\\S]*?\\*@/,\n                greedy: true,\n                alias: \"comment\"\n            },\n            block: {\n                pattern: RegExp(/(^|[^@])@/.source + \"(?:\" + [\n                    // @{ ... }\n                    curly,\n                    // @code{ ... }\n                    /(?:code|functions)\\s*/.source + curly,\n                    // @for (...) { ... }\n                    /(?:for|foreach|lock|switch|using|while)\\s*/.source + round + /\\s*/.source + curly,\n                    // @do { ... } while (...);\n                    /do\\s*/.source + curly + /\\s*while\\s*/.source + round + /(?:\\s*;)?/.source,\n                    // @try { ... } catch (...) { ... } finally { ... }\n                    /try\\s*/.source + curly + /\\s*catch\\s*/.source + round + /\\s*/.source + curly + /\\s*finally\\s*/.source + curly,\n                    // @if (...) {...} else if (...) {...} else {...}\n                    /if\\s*/.source + round + /\\s*/.source + curly + \"(?:\" + /\\s*else/.source + \"(?:\" + /\\s+if\\s*/.source + round + \")?\" + /\\s*/.source + curly + \")*\",\n                    // @helper Ident(params) { ... }\n                    /helper\\s+\\w+\\s*/.source + round + /\\s*/.source + curly\n                ].join(\"|\") + \")\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^@\\w*/,\n                    csharp: cs\n                }\n            },\n            directive: {\n                pattern: /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^@\\w+/,\n                    csharp: cs\n                }\n            },\n            value: inlineValue,\n            \"delegate-operator\": {\n                pattern: /(^|[^@])@(?=<)/,\n                lookbehind: true,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.razor = Prism.languages.cshtml;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cshtml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csp.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csp.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ csp)\n/* harmony export */ });\n// @ts-nocheck\ncsp.displayName = \"csp\";\ncsp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function csp(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} source\n     * @returns {RegExp}\n     */ function value(source) {\n            return RegExp(/([ \\t])/.source + \"(?:\" + source + \")\" + /(?=[\\s;]|$)/.source, \"i\");\n        }\n        Prism.languages.csp = {\n            directive: {\n                pattern: /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n                lookbehind: true,\n                alias: \"property\"\n            },\n            scheme: {\n                pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n                lookbehind: true\n            },\n            none: {\n                pattern: value(/'none'/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            nonce: {\n                pattern: value(/'nonce-[-+/\\w=]+'/.source),\n                lookbehind: true,\n                alias: \"number\"\n            },\n            hash: {\n                pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n                lookbehind: true,\n                alias: \"number\"\n            },\n            host: {\n                pattern: value(/[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source + \"|\" + /\\*[^\\s;,']*/.source + \"|\" + /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source),\n                lookbehind: true,\n                alias: \"url\",\n                inside: {\n                    important: /\\*/\n                }\n            },\n            keyword: [\n                {\n                    pattern: value(/'unsafe-[a-z-]+'/.source),\n                    lookbehind: true,\n                    alias: \"unsafe\"\n                },\n                {\n                    pattern: value(/'[a-z-]+'/.source),\n                    lookbehind: true,\n                    alias: \"safe\"\n                }\n            ],\n            punctuation: /;/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jc3AuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSzs7SUFZN0IsVUFBVUEsS0FBSztRQUNmOzs7S0FHQyxHQUNELFNBQVNDLE1BQU1DLE1BQU07WUFDbkIsT0FBT0MsT0FDTCxVQUFVRCxNQUFNLEdBQUcsUUFBUUEsU0FBUyxNQUFNLGNBQWNBLE1BQU0sRUFDOUQ7UUFFSjtRQUNBRixNQUFNSSxTQUFTLENBQUNQLEdBQUcsR0FBRztZQUNwQlEsV0FBVztnQkFDVEMsU0FDRTtnQkFDRkMsWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FDLFFBQVE7Z0JBQ05ILFNBQVNMLE1BQU0scUJBQXFCQyxNQUFNO2dCQUMxQ0ssWUFBWTtZQUNkO1lBQ0FHLE1BQU07Z0JBQ0pKLFNBQVNMLE1BQU0sU0FBU0MsTUFBTTtnQkFDOUJLLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBRyxPQUFPO2dCQUNMTCxTQUFTTCxNQUFNLG9CQUFvQkMsTUFBTTtnQkFDekNLLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBSSxNQUFNO2dCQUNKTixTQUFTTCxNQUFNLGlDQUFpQ0MsTUFBTTtnQkFDdERLLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBSyxNQUFNO2dCQUNKUCxTQUFTTCxNQUNQLGtDQUFrQ0MsTUFBTSxHQUN0QyxNQUNBLGNBQWNBLE1BQU0sR0FDcEIsTUFDQSwwREFBMERBLE1BQU07Z0JBRXBFSyxZQUFZO2dCQUNaQyxPQUFPO2dCQUNQTSxRQUFRO29CQUNOQyxXQUFXO2dCQUNiO1lBQ0Y7WUFDQUMsU0FBUztnQkFDUDtvQkFDRVYsU0FBU0wsTUFBTSxtQkFBbUJDLE1BQU07b0JBQ3hDSyxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2dCQUNBO29CQUNFRixTQUFTTCxNQUFNLFlBQVlDLE1BQU07b0JBQ2pDSyxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2FBQ0Q7WUFDRFMsYUFBYTtRQUNmO0lBQ0YsR0FBR2pCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvY3NwLmpzP2JjOWEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmNzcC5kaXNwbGF5TmFtZSA9ICdjc3AnXG5jc3AuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3NwKFByaXNtKSB7XG4gIC8qKlxuICAgKiBPcmlnaW5hbCBieSBTY290dCBIZWxtZS5cbiAgICpcbiAgICogUmVmZXJlbmNlOiBodHRwczovL3Njb3R0aGVsbWUuY28udWsvY3NwLWNoZWF0LXNoZWV0L1xuICAgKlxuICAgKiBTdXBwb3J0cyB0aGUgZm9sbG93aW5nOlxuICAgKiAgLSBodHRwczovL3d3dy53My5vcmcvVFIvQ1NQMS9cbiAgICogIC0gaHR0cHM6Ly93d3cudzMub3JnL1RSL0NTUDIvXG4gICAqICAtIGh0dHBzOi8vd3d3LnczLm9yZy9UUi9DU1AzL1xuICAgKi9cblxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBzb3VyY2VcbiAgICAgKiBAcmV0dXJucyB7UmVnRXhwfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHZhbHVlKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFJlZ0V4cChcbiAgICAgICAgLyhbIFxcdF0pLy5zb3VyY2UgKyAnKD86JyArIHNvdXJjZSArICcpJyArIC8oPz1bXFxzO118JCkvLnNvdXJjZSxcbiAgICAgICAgJ2knXG4gICAgICApXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5jc3AgPSB7XG4gICAgICBkaXJlY3RpdmU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W1xccztdKSg/OmJhc2UtdXJpfGJsb2NrLWFsbC1taXhlZC1jb250ZW50fCg/OmNoaWxkfGNvbm5lY3R8ZGVmYXVsdHxmb250fGZyYW1lfGltZ3xtYW5pZmVzdHxtZWRpYXxvYmplY3R8cHJlZmV0Y2h8c2NyaXB0fHN0eWxlfHdvcmtlciktc3JjfGRpc293bi1vcGVuZXJ8Zm9ybS1hY3Rpb258ZnJhbWUtKD86YW5jZXN0b3JzfG9wdGlvbnMpfGlucHV0LXByb3RlY3Rpb24oPzotKD86Y2xpcHxzZWxlY3RvcnMpKT98bmF2aWdhdGUtdG98cGx1Z2luLXR5cGVzfHBvbGljeS11cml8cmVmZXJyZXJ8cmVmbGVjdGVkLXhzc3xyZXBvcnQtKD86dG98dXJpKXxyZXF1aXJlLXNyaS1mb3J8c2FuZGJveHwoPzpzY3JpcHR8c3R5bGUpLXNyYy0oPzphdHRyfGVsZW0pfHVwZ3JhZGUtaW5zZWN1cmUtcmVxdWVzdHMpKD89W1xccztdfCQpL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgICB9LFxuICAgICAgc2NoZW1lOiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKC9bYS16XVthLXowLTkuKy1dKjovLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBub25lOiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKC8nbm9uZScvLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgIH0sXG4gICAgICBub25jZToge1xuICAgICAgICBwYXR0ZXJuOiB2YWx1ZSgvJ25vbmNlLVstKy9cXHc9XSsnLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBoYXNoOiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKC8nc2hhKD86MjU2fDM4NHw1MTIpLVstKy9cXHc9XSsnLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBob3N0OiB7XG4gICAgICAgIHBhdHRlcm46IHZhbHVlKFxuICAgICAgICAgIC9bYS16XVthLXowLTkuKy1dKjpcXC9cXC9bXlxcczssJ10qLy5zb3VyY2UgK1xuICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgIC9cXCpbXlxcczssJ10qLy5zb3VyY2UgK1xuICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgIC9bYS16MC05LV0rKD86XFwuW2EtejAtOS1dKykrKD86OltcXGQqXSspPyg/OlxcL1teXFxzOywnXSopPy8uc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAndXJsJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgaW1wb3J0YW50OiAvXFwqL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogdmFsdWUoLyd1bnNhZmUtW2Etei1dKycvLnNvdXJjZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3Vuc2FmZSdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IHZhbHVlKC8nW2Etei1dKycvLnNvdXJjZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3NhZmUnXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBwdW5jdHVhdGlvbjogLzsvXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJjc3AiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInZhbHVlIiwic291cmNlIiwiUmVnRXhwIiwibGFuZ3VhZ2VzIiwiZGlyZWN0aXZlIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInNjaGVtZSIsIm5vbmUiLCJub25jZSIsImhhc2giLCJob3N0IiwiaW5zaWRlIiwiaW1wb3J0YW50Iiwia2V5d29yZCIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css-extras.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css-extras.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cssExtras)\n/* harmony export */ });\n/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\");\n// @ts-nocheck\n\ncssExtras.displayName = \"css-extras\";\ncssExtras.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cssExtras(Prism) {\n    Prism.register(_css_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        var selectorInside;\n        Prism.languages.css.selector = {\n            pattern: Prism.languages.css.selector.pattern,\n            lookbehind: true,\n            inside: selectorInside = {\n                \"pseudo-element\": /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n                \"pseudo-class\": /:[-\\w]+/,\n                class: /\\.[-\\w]+/,\n                id: /#[-\\w]+/,\n                attribute: {\n                    pattern: RegExp(\"\\\\[(?:[^[\\\\]\\\"']|\" + string.source + \")*\\\\]\"),\n                    greedy: true,\n                    inside: {\n                        punctuation: /^\\[|\\]$/,\n                        \"case-sensitivity\": {\n                            pattern: /(\\s)[si]$/i,\n                            lookbehind: true,\n                            alias: \"keyword\"\n                        },\n                        namespace: {\n                            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n                            lookbehind: true,\n                            inside: {\n                                punctuation: /\\|$/\n                            }\n                        },\n                        \"attr-name\": {\n                            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n                            lookbehind: true\n                        },\n                        \"attr-value\": [\n                            string,\n                            {\n                                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                                lookbehind: true\n                            }\n                        ],\n                        operator: /[|~*^$]?=/\n                    }\n                },\n                \"n-th\": [\n                    {\n                        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n                        lookbehind: true,\n                        inside: {\n                            number: /[\\dn]+/,\n                            operator: /[+-]/\n                        }\n                    },\n                    {\n                        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n                        lookbehind: true\n                    }\n                ],\n                combinator: />|\\+|~|\\|\\|/,\n                // the `tag` token has been existed and removed.\n                // because we can't find a perfect tokenize to match it.\n                // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n                punctuation: /[(),]/\n            }\n        };\n        Prism.languages.css[\"atrule\"].inside[\"selector-function-argument\"].inside = selectorInside;\n        Prism.languages.insertBefore(\"css\", \"property\", {\n            variable: {\n                pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n                lookbehind: true\n            }\n        });\n        var unit = {\n            pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n            lookbehind: true\n        };\n        // 123 -123 .123 -.123 12.3 -12.3\n        var number = {\n            pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n            lookbehind: true\n        };\n        Prism.languages.insertBefore(\"css\", \"function\", {\n            operator: {\n                pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n                lookbehind: true\n            },\n            // CAREFUL!\n            // Previewers and Inline color use hexcode and color.\n            hexcode: {\n                pattern: /\\B#[\\da-f]{3,8}\\b/i,\n                alias: \"color\"\n            },\n            color: [\n                {\n                    pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|RebeccaPurple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n                    inside: {\n                        unit: unit,\n                        number: number,\n                        function: /[\\w-]+(?=\\()/,\n                        punctuation: /[(),]/\n                    }\n                }\n            ],\n            // it's important that there is no boundary assertion after the hex digits\n            entity: /\\\\[\\da-f]{1,8}/i,\n            unit: unit,\n            number: number\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css-extras.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ css)\n/* harmony export */ });\n// @ts-nocheck\ncss.displayName = \"css\";\ncss.aliases = [];\n/** @type {import('../core.js').Syntax} */ function css(Prism) {\n    ;\n    (function(Prism) {\n        var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n        Prism.languages.css = {\n            comment: /\\/\\*[\\s\\S]*?\\*\\//,\n            atrule: {\n                pattern: RegExp(\"@[\\\\w-](?:\" + /[^;{\\s\"']|\\s+(?!\\s)/.source + \"|\" + string.source + \")*?\" + /(?:;|(?=\\s*\\{))/.source),\n                inside: {\n                    rule: /^@[\\w-]+/,\n                    \"selector-function-argument\": {\n                        pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n                        lookbehind: true,\n                        alias: \"selector\"\n                    },\n                    keyword: {\n                        pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n                        lookbehind: true\n                    }\n                }\n            },\n            url: {\n                // https://drafts.csswg.org/css-values-3/#urls\n                pattern: RegExp(\"\\\\burl\\\\((?:\" + string.source + \"|\" + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + \")\\\\)\", \"i\"),\n                greedy: true,\n                inside: {\n                    function: /^url/i,\n                    punctuation: /^\\(|\\)$/,\n                    string: {\n                        pattern: RegExp(\"^\" + string.source + \"$\"),\n                        alias: \"url\"\n                    }\n                }\n            },\n            selector: {\n                pattern: RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\" + string.source + \")*(?=\\\\s*\\\\{)\"),\n                lookbehind: true\n            },\n            string: {\n                pattern: string,\n                greedy: true\n            },\n            property: {\n                pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n                lookbehind: true\n            },\n            important: /!important\\b/i,\n            function: {\n                pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n                lookbehind: true\n            },\n            punctuation: /[(){};:,]/\n        };\n        Prism.languages.css[\"atrule\"].inside.rest = Prism.languages.css;\n        var markup = Prism.languages.markup;\n        if (markup) {\n            markup.tag.addInlined(\"style\", \"css\");\n            markup.tag.addAttribute(\"style\", \"css\");\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jc3MuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDN0IsVUFBVUEsS0FBSztRQUNmLElBQUlDLFNBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxHQUFHLEdBQUc7WUFDcEJNLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsU0FBU0MsT0FDUCxlQUNFLHNCQUFzQkMsTUFBTSxHQUM1QixNQUNBTixPQUFPTSxNQUFNLEdBQ2IsUUFDQSxrQkFBa0JBLE1BQU07Z0JBRTVCQyxRQUFRO29CQUNOQyxNQUFNO29CQUNOLDhCQUE4Qjt3QkFDNUJKLFNBQ0U7d0JBQ0ZLLFlBQVk7d0JBQ1pDLE9BQU87b0JBQ1Q7b0JBQ0FDLFNBQVM7d0JBQ1BQLFNBQVM7d0JBQ1RLLFlBQVk7b0JBQ2Q7Z0JBRUY7WUFDRjtZQUVBRyxLQUFLO2dCQUNILDhDQUE4QztnQkFDOUNSLFNBQVNDLE9BQ1AsaUJBQ0VMLE9BQU9NLE1BQU0sR0FDYixNQUNBLDhCQUE4QkEsTUFBTSxHQUNwQyxRQUNGO2dCQUVGTyxRQUFRO2dCQUNSTixRQUFRO29CQUNOTyxVQUFVO29CQUNWQyxhQUFhO29CQUNiZixRQUFRO3dCQUNOSSxTQUFTQyxPQUFPLE1BQU1MLE9BQU9NLE1BQU0sR0FBRzt3QkFDdENJLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtZQUNBTSxVQUFVO2dCQUNSWixTQUFTQyxPQUNQLHVEQUNFTCxPQUFPTSxNQUFNLEdBQ2I7Z0JBRUpHLFlBQVk7WUFDZDtZQUNBVCxRQUFRO2dCQUNOSSxTQUFTSjtnQkFDVGEsUUFBUTtZQUNWO1lBQ0FJLFVBQVU7Z0JBQ1JiLFNBQ0U7Z0JBQ0ZLLFlBQVk7WUFDZDtZQUNBUyxXQUFXO1lBQ1hKLFVBQVU7Z0JBQ1JWLFNBQVM7Z0JBQ1RLLFlBQVk7WUFDZDtZQUNBTSxhQUFhO1FBQ2Y7UUFDQWhCLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDLFNBQVMsQ0FBQ1csTUFBTSxDQUFDWSxJQUFJLEdBQUdwQixNQUFNRSxTQUFTLENBQUNMLEdBQUc7UUFDL0QsSUFBSXdCLFNBQVNyQixNQUFNRSxTQUFTLENBQUNtQixNQUFNO1FBQ25DLElBQUlBLFFBQVE7WUFDVkEsT0FBT0MsR0FBRyxDQUFDQyxVQUFVLENBQUMsU0FBUztZQUMvQkYsT0FBT0MsR0FBRyxDQUFDRSxZQUFZLENBQUMsU0FBUztRQUNuQztJQUNGLEdBQUd4QjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2Nzcy5qcz81NmRlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jc3MuZGlzcGxheU5hbWUgPSAnY3NzJ1xuY3NzLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNzcyhQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBzdHJpbmcgPVxuICAgICAgLyg/OlwiKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cIlxcXFxcXHJcXG5dKSpcInwnKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W14nXFxcXFxcclxcbl0pKicpL1xuICAgIFByaXNtLmxhbmd1YWdlcy5jc3MgPSB7XG4gICAgICBjb21tZW50OiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICBhdHJ1bGU6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICdAW1xcXFx3LV0oPzonICtcbiAgICAgICAgICAgIC9bXjt7XFxzXCInXXxcXHMrKD8hXFxzKS8uc291cmNlICtcbiAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICBzdHJpbmcuc291cmNlICtcbiAgICAgICAgICAgICcpKj8nICtcbiAgICAgICAgICAgIC8oPzo7fCg/PVxccypcXHspKS8uc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHJ1bGU6IC9eQFtcXHctXSsvLFxuICAgICAgICAgICdzZWxlY3Rvci1mdW5jdGlvbi1hcmd1bWVudCc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAgIC8oXFxic2VsZWN0b3JcXHMqXFwoXFxzKig/IVtcXHMpXSkpKD86W14oKVxcc118XFxzKyg/IVtcXHMpXSl8XFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCkpKyg/PVxccypcXCkpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ3NlbGVjdG9yJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAga2V5d29yZDoge1xuICAgICAgICAgICAgcGF0dGVybjogLyhefFteXFx3LV0pKD86YW5kfG5vdHxvbmx5fG9yKSg/IVtcXHctXSkvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLyBTZWUgcmVzdCBiZWxvd1xuICAgICAgICB9XG4gICAgICB9LFxuXG4gICAgICB1cmw6IHtcbiAgICAgICAgLy8gaHR0cHM6Ly9kcmFmdHMuY3Nzd2cub3JnL2Nzcy12YWx1ZXMtMy8jdXJsc1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJ1xcXFxidXJsXFxcXCgoPzonICtcbiAgICAgICAgICAgIHN0cmluZy5zb3VyY2UgK1xuICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgIC8oPzpbXlxcXFxcXHJcXG4oKVwiJ118XFxcXFtcXHNcXFNdKSovLnNvdXJjZSArXG4gICAgICAgICAgICAnKVxcXFwpJyxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBmdW5jdGlvbjogL151cmwvaSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXCh8XFwpJC8sXG4gICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoJ14nICsgc3RyaW5nLnNvdXJjZSArICckJyksXG4gICAgICAgICAgICBhbGlhczogJ3VybCdcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzZWxlY3Rvcjoge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJyhefFt7fVxcXFxzXSlbXnt9XFxcXHNdKD86W157fTtcIlxcJ1xcXFxzXXxcXFxccysoPyFbXFxcXHN7XSl8JyArXG4gICAgICAgICAgICBzdHJpbmcuc291cmNlICtcbiAgICAgICAgICAgICcpKig/PVxcXFxzKlxcXFx7KSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiBzdHJpbmcsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHByb3BlcnR5OiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteLVxcd1xceEEwLVxcdUZGRkZdKSg/IVxccylbLV9hLXpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbLVxcd1xceEEwLVxcdUZGRkZdKSooPz1cXHMqOikvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGltcG9ydGFudDogLyFpbXBvcnRhbnRcXGIvaSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXi1hLXowLTldKVstYS16MC05XSsoPz1cXCgpL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9OzosXS9cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmNzc1snYXRydWxlJ10uaW5zaWRlLnJlc3QgPSBQcmlzbS5sYW5ndWFnZXMuY3NzXG4gICAgdmFyIG1hcmt1cCA9IFByaXNtLmxhbmd1YWdlcy5tYXJrdXBcbiAgICBpZiAobWFya3VwKSB7XG4gICAgICBtYXJrdXAudGFnLmFkZElubGluZWQoJ3N0eWxlJywgJ2NzcycpXG4gICAgICBtYXJrdXAudGFnLmFkZEF0dHJpYnV0ZSgnc3R5bGUnLCAnY3NzJylcbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImNzcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwic3RyaW5nIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImF0cnVsZSIsInBhdHRlcm4iLCJSZWdFeHAiLCJzb3VyY2UiLCJpbnNpZGUiLCJydWxlIiwibG9va2JlaGluZCIsImFsaWFzIiwia2V5d29yZCIsInVybCIsImdyZWVkeSIsImZ1bmN0aW9uIiwicHVuY3R1YXRpb24iLCJzZWxlY3RvciIsInByb3BlcnR5IiwiaW1wb3J0YW50IiwicmVzdCIsIm1hcmt1cCIsInRhZyIsImFkZElubGluZWQiLCJhZGRBdHRyaWJ1dGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csv.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csv.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ csv)\n/* harmony export */ });\n// @ts-nocheck\ncsv.displayName = \"csv\";\ncsv.aliases = [];\n/** @type {import('../core.js').Syntax} */ function csv(Prism) {\n    // https://tools.ietf.org/html/rfc4180\n    Prism.languages.csv = {\n        value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n        punctuation: /,/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jc3YuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQixzQ0FBc0M7SUFFdENBLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxHQUFHO1FBQ3BCSyxPQUFPO1FBQ1BDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2Nzdi5qcz9mNzllIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jc3YuZGlzcGxheU5hbWUgPSAnY3N2J1xuY3N2LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNzdihQcmlzbSkge1xuICAvLyBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNDE4MFxuXG4gIFByaXNtLmxhbmd1YWdlcy5jc3YgPSB7XG4gICAgdmFsdWU6IC9bXlxcclxcbixcIl0rfFwiKD86W15cIl18XCJcIikqXCIoPyFcIikvLFxuICAgIHB1bmN0dWF0aW9uOiAvLC9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImNzdiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwidmFsdWUiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csv.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cue.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cue.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cue)\n/* harmony export */ });\n// @ts-nocheck\ncue.displayName = \"cue\";\ncue.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cue(Prism) {\n    ;\n    (function(Prism) {\n        // https://cuelang.org/docs/references/spec/\n        // eslint-disable-next-line regexp/strict\n        var stringEscape = /\\\\(?:(?!\\2)|\\2(?:[^()\\r\\n]|\\([^()]*\\)))/.source;\n        // eslint-disable-next-line regexp/strict\n        var stringTypes = /\"\"\"(?:[^\\\\\"]|\"(?!\"\"\\2)|<esc>)*\"\"\"/.source + // eslint-disable-next-line regexp/strict\n        \"|\" + /'''(?:[^\\\\']|'(?!''\\2)|<esc>)*'''/.source + // eslint-disable-next-line regexp/strict\n        \"|\" + /\"(?:[^\\\\\\r\\n\"]|\"(?!\\2)|<esc>)*\"/.source + // eslint-disable-next-line regexp/strict\n        \"|\" + /'(?:[^\\\\\\r\\n']|'(?!\\2)|<esc>)*'/.source;\n        var stringLiteral = \"(?:\" + stringTypes.replace(/<esc>/g, stringEscape) + \")\";\n        Prism.languages.cue = {\n            comment: {\n                pattern: /\\/\\/.*/,\n                greedy: true\n            },\n            \"string-literal\": {\n                // eslint-disable-next-line regexp/strict\n                pattern: RegExp(/(^|[^#\"'\\\\])(#*)/.source + stringLiteral + /(?![\"'])\\2/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    // I'm using dirty hack here. We have to know the number hashes at the start of the string somehow,\n                    // but we can't look back. So instead, we will use a lookahead, go to the end of the string, and\n                    // capture the hashes at the end of the string.\n                    escape: {\n                        pattern: /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1(?:U[a-fA-F0-9]{1,8}|u[a-fA-F0-9]{1,4}|x[a-fA-F0-9]{1,2}|\\d{2,3}|[^(])/,\n                        greedy: true,\n                        alias: \"string\"\n                    },\n                    interpolation: {\n                        pattern: /(?=[\\s\\S]*[\"'](#*)$)\\\\\\1\\([^()]*\\)/,\n                        greedy: true,\n                        inside: {\n                            punctuation: /^\\\\#*\\(|\\)$/,\n                            expression: {\n                                pattern: /[\\s\\S]+/,\n                                inside: null\n                            }\n                        }\n                    },\n                    string: /[\\s\\S]+/\n                }\n            },\n            keyword: {\n                pattern: /(^|[^\\w$])(?:for|if|import|in|let|null|package)(?![\\w$])/,\n                lookbehind: true\n            },\n            boolean: {\n                pattern: /(^|[^\\w$])(?:false|true)(?![\\w$])/,\n                lookbehind: true\n            },\n            builtin: {\n                pattern: /(^|[^\\w$])(?:bool|bytes|float|float(?:32|64)|u?int(?:8|16|32|64|128)?|number|rune|string)(?![\\w$])/,\n                lookbehind: true\n            },\n            attribute: {\n                pattern: /@[\\w$]+(?=\\s*\\()/,\n                alias: \"function\"\n            },\n            function: {\n                pattern: /(^|[^\\w$])[a-z_$][\\w$]*(?=\\s*\\()/i,\n                lookbehind: true\n            },\n            number: {\n                pattern: /(^|[^\\w$.])(?:0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|0[xX][0-9A-Fa-f]+(?:_[0-9A-Fa-f]+)*|(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[eE][+-]?\\d+(?:_\\d+)*)?(?:[KMGTP]i?)?)(?![\\w$])/,\n                lookbehind: true\n            },\n            operator: /\\.{3}|_\\|_|&&?|\\|\\|?|[=!]~|[<>=!]=?|[+\\-*/?]/,\n            punctuation: /[()[\\]{},.:]/\n        };\n        Prism.languages.cue[\"string-literal\"].inside.interpolation.inside.expression.inside = Prism.languages.cue;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jdWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDN0IsVUFBVUEsS0FBSztRQUNmLDRDQUE0QztRQUU1Qyx5Q0FBeUM7UUFDekMsSUFBSUMsZUFBZSwwQ0FBMENDLE1BQU07UUFDbkUseUNBQXlDO1FBQ3pDLElBQUlDLGNBQ0Ysb0NBQW9DRCxNQUFNLEdBQzFDLHlDQUF5QztRQUN6QyxNQUNBLG9DQUFvQ0EsTUFBTSxHQUMxQyx5Q0FBeUM7UUFDekMsTUFDQSxrQ0FBa0NBLE1BQU0sR0FDeEMseUNBQXlDO1FBQ3pDLE1BQ0Esa0NBQWtDQSxNQUFNO1FBQzFDLElBQUlFLGdCQUNGLFFBQVFELFlBQVlFLE9BQU8sQ0FBQyxVQUFVSixnQkFBZ0I7UUFDeERELE1BQU1NLFNBQVMsQ0FBQ1QsR0FBRyxHQUFHO1lBQ3BCVSxTQUFTO2dCQUNQQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQSxrQkFBa0I7Z0JBQ2hCLHlDQUF5QztnQkFDekNELFNBQVNFLE9BQ1AsbUJBQW1CUixNQUFNLEdBQUdFLGdCQUFnQixhQUFhRixNQUFNO2dCQUVqRVMsWUFBWTtnQkFDWkYsUUFBUTtnQkFDUkcsUUFBUTtvQkFDTixtR0FBbUc7b0JBQ25HLGdHQUFnRztvQkFDaEcsK0NBQStDO29CQUMvQ0MsUUFBUTt3QkFDTkwsU0FDRTt3QkFDRkMsUUFBUTt3QkFDUkssT0FBTztvQkFDVDtvQkFDQUMsZUFBZTt3QkFDYlAsU0FBUzt3QkFDVEMsUUFBUTt3QkFDUkcsUUFBUTs0QkFDTkksYUFBYTs0QkFDYkMsWUFBWTtnQ0FDVlQsU0FBUztnQ0FDVEksUUFBUTs0QkFDVjt3QkFDRjtvQkFDRjtvQkFDQU0sUUFBUTtnQkFDVjtZQUNGO1lBQ0FDLFNBQVM7Z0JBQ1BYLFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtZQUNBUyxTQUFTO2dCQUNQWixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQVUsU0FBUztnQkFDUGIsU0FDRTtnQkFDRkcsWUFBWTtZQUNkO1lBQ0FXLFdBQVc7Z0JBQ1RkLFNBQVM7Z0JBQ1RNLE9BQU87WUFDVDtZQUNBUyxVQUFVO2dCQUNSZixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQWEsUUFBUTtnQkFDTmhCLFNBQ0U7Z0JBQ0ZHLFlBQVk7WUFDZDtZQUNBYyxVQUFVO1lBQ1ZULGFBQWE7UUFDZjtRQUNBaEIsTUFBTU0sU0FBUyxDQUFDVCxHQUFHLENBQ2pCLGlCQUNELENBQUNlLE1BQU0sQ0FBQ0csYUFBYSxDQUFDSCxNQUFNLENBQUNLLFVBQVUsQ0FBQ0wsTUFBTSxHQUFHWixNQUFNTSxTQUFTLENBQUNULEdBQUc7SUFDdkUsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jdWUuanM/MzM3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuY3VlLmRpc3BsYXlOYW1lID0gJ2N1ZSdcbmN1ZS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjdWUoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvLyBodHRwczovL2N1ZWxhbmcub3JnL2RvY3MvcmVmZXJlbmNlcy9zcGVjL1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9zdHJpY3RcbiAgICB2YXIgc3RyaW5nRXNjYXBlID0gL1xcXFwoPzooPyFcXDIpfFxcMig/OlteKClcXHJcXG5dfFxcKFteKCldKlxcKSkpLy5zb3VyY2VcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVnZXhwL3N0cmljdFxuICAgIHZhciBzdHJpbmdUeXBlcyA9XG4gICAgICAvXCJcIlwiKD86W15cXFxcXCJdfFwiKD8hXCJcIlxcMil8PGVzYz4pKlwiXCJcIi8uc291cmNlICtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvc3RyaWN0XG4gICAgICAnfCcgK1xuICAgICAgLycnJyg/OlteXFxcXCddfCcoPyEnJ1xcMil8PGVzYz4pKicnJy8uc291cmNlICtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvc3RyaWN0XG4gICAgICAnfCcgK1xuICAgICAgL1wiKD86W15cXFxcXFxyXFxuXCJdfFwiKD8hXFwyKXw8ZXNjPikqXCIvLnNvdXJjZSArXG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVnZXhwL3N0cmljdFxuICAgICAgJ3wnICtcbiAgICAgIC8nKD86W15cXFxcXFxyXFxuJ118Jyg/IVxcMil8PGVzYz4pKicvLnNvdXJjZVxuICAgIHZhciBzdHJpbmdMaXRlcmFsID1cbiAgICAgICcoPzonICsgc3RyaW5nVHlwZXMucmVwbGFjZSgvPGVzYz4vZywgc3RyaW5nRXNjYXBlKSArICcpJ1xuICAgIFByaXNtLmxhbmd1YWdlcy5jdWUgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC9cXC8uKi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdzdHJpbmctbGl0ZXJhbCc6IHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9zdHJpY3RcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8oXnxbXiNcIidcXFxcXSkoIyopLy5zb3VyY2UgKyBzdHJpbmdMaXRlcmFsICsgLyg/IVtcIiddKVxcMi8uc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgLy8gSSdtIHVzaW5nIGRpcnR5IGhhY2sgaGVyZS4gV2UgaGF2ZSB0byBrbm93IHRoZSBudW1iZXIgaGFzaGVzIGF0IHRoZSBzdGFydCBvZiB0aGUgc3RyaW5nIHNvbWVob3csXG4gICAgICAgICAgLy8gYnV0IHdlIGNhbid0IGxvb2sgYmFjay4gU28gaW5zdGVhZCwgd2Ugd2lsbCB1c2UgYSBsb29rYWhlYWQsIGdvIHRvIHRoZSBlbmQgb2YgdGhlIHN0cmluZywgYW5kXG4gICAgICAgICAgLy8gY2FwdHVyZSB0aGUgaGFzaGVzIGF0IHRoZSBlbmQgb2YgdGhlIHN0cmluZy5cbiAgICAgICAgICBlc2NhcGU6IHtcbiAgICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAgIC8oPz1bXFxzXFxTXSpbXCInXSgjKikkKVxcXFxcXDEoPzpVW2EtZkEtRjAtOV17MSw4fXx1W2EtZkEtRjAtOV17MSw0fXx4W2EtZkEtRjAtOV17MSwyfXxcXGR7MiwzfXxbXihdKS8sXG4gICAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ3N0cmluZydcbiAgICAgICAgICB9LFxuICAgICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oPz1bXFxzXFxTXSpbXCInXSgjKikkKVxcXFxcXDFcXChbXigpXSpcXCkvLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcXFwjKlxcKHxcXCkkLyxcbiAgICAgICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICAgIGluc2lkZTogbnVsbFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcdyRdKSg/OmZvcnxpZnxpbXBvcnR8aW58bGV0fG51bGx8cGFja2FnZSkoPyFbXFx3JF0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGJvb2xlYW46IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3JF0pKD86ZmFsc2V8dHJ1ZSkoPyFbXFx3JF0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGJ1aWx0aW46IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15cXHckXSkoPzpib29sfGJ5dGVzfGZsb2F0fGZsb2F0KD86MzJ8NjQpfHU/aW50KD86OHwxNnwzMnw2NHwxMjgpP3xudW1iZXJ8cnVuZXxzdHJpbmcpKD8hW1xcdyRdKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBhdHRyaWJ1dGU6IHtcbiAgICAgICAgcGF0dGVybjogL0BbXFx3JF0rKD89XFxzKlxcKCkvLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcdyRdKVthLXpfJF1bXFx3JF0qKD89XFxzKlxcKCkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG51bWJlcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcdyQuXSkoPzowYlswMV0rKD86X1swMV0rKSp8MG9bMC03XSsoPzpfWzAtN10rKSp8MFt4WF1bMC05QS1GYS1mXSsoPzpfWzAtOUEtRmEtZl0rKSp8KD86XFxkKyg/Ol9cXGQrKSooPzpcXC4oPzpcXGQrKD86X1xcZCspKik/KT98XFwuXFxkKyg/Ol9cXGQrKSopKD86W2VFXVsrLV0/XFxkKyg/Ol9cXGQrKSopPyg/OltLTUdUUF1pPyk/KSg/IVtcXHckXSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgb3BlcmF0b3I6IC9cXC57M318X1xcfF98JiY/fFxcfFxcfD98Wz0hXX58Wzw+PSFdPT98WytcXC0qLz9dLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9LC46XS9cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmN1ZVtcbiAgICAgICdzdHJpbmctbGl0ZXJhbCdcbiAgICBdLmluc2lkZS5pbnRlcnBvbGF0aW9uLmluc2lkZS5leHByZXNzaW9uLmluc2lkZSA9IFByaXNtLmxhbmd1YWdlcy5jdWVcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsiY3VlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJzdHJpbmdFc2NhcGUiLCJzb3VyY2UiLCJzdHJpbmdUeXBlcyIsInN0cmluZ0xpdGVyYWwiLCJyZXBsYWNlIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwiZXNjYXBlIiwiYWxpYXMiLCJpbnRlcnBvbGF0aW9uIiwicHVuY3R1YXRpb24iLCJleHByZXNzaW9uIiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJidWlsdGluIiwiYXR0cmlidXRlIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cue.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cypher.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cypher.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ cypher)\n/* harmony export */ });\n// @ts-nocheck\ncypher.displayName = \"cypher\";\ncypher.aliases = [];\n/** @type {import('../core.js').Syntax} */ function cypher(Prism) {\n    Prism.languages.cypher = {\n        // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n        comment: /\\/\\/.*/,\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n            lookbehind: true,\n            greedy: true\n        },\n        relationship: {\n            pattern: /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        identifier: {\n            pattern: /`(?:[^`\\\\\\r\\n])*`/,\n            greedy: true\n        },\n        variable: /\\$\\w+/,\n        // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n        keyword: /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n        function: /\\b\\w+\\b(?=\\s*\\()/,\n        boolean: /\\b(?:false|null|true)\\b/i,\n        number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n        // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n        operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n        punctuation: /[()[\\]{},;.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9jeXBoZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkIsZ0VBQWdFO1FBQ2hFSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pELFNBQVM7WUFDVEUsWUFBWTtZQUNaRCxRQUFRO1FBQ1Y7UUFDQUUsY0FBYztZQUNaSCxTQUNFO1lBQ0ZFLFlBQVk7WUFDWkQsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUMsWUFBWTtZQUNWTCxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSyxVQUFVO1FBQ1YsZ0VBQWdFO1FBQ2hFQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxRQUFRO1FBQ1IsaUVBQWlFO1FBQ2pFQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2N5cGhlci5qcz85OGMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5jeXBoZXIuZGlzcGxheU5hbWUgPSAnY3lwaGVyJ1xuY3lwaGVyLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGN5cGhlcihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuY3lwaGVyID0ge1xuICAgIC8vIGh0dHBzOi8vbmVvNGouY29tL2RvY3MvY3lwaGVyLW1hbnVhbC9jdXJyZW50L3N5bnRheC9jb21tZW50cy9cbiAgICBjb21tZW50OiAvXFwvXFwvLiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxcXHJcXG5dfFxcXFwuKSpcInwnKD86W14nXFxcXFxcclxcbl18XFxcXC4pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC8oOlxccyopKD86XFx3K3xgKD86W15gXFxcXFxcclxcbl0pKmApKD89XFxzKlt7KTpdKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICByZWxhdGlvbnNoaXA6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oLVxcW1xccyooPzpcXHcrXFxzKnxgKD86W15gXFxcXFxcclxcbl0pKmBcXHMqKT86XFxzKnxcXHxcXHMqOlxccyopKD86XFx3K3xgKD86W15gXFxcXFxcclxcbl0pKmApLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgaWRlbnRpZmllcjoge1xuICAgICAgcGF0dGVybjogL2AoPzpbXmBcXFxcXFxyXFxuXSkqYC8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZhcmlhYmxlOiAvXFwkXFx3Ky8sXG4gICAgLy8gaHR0cHM6Ly9uZW80ai5jb20vZG9jcy9jeXBoZXItbWFudWFsL2N1cnJlbnQvc3ludGF4L3Jlc2VydmVkL1xuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QUREfEFMTHxBTkR8QVN8QVNDfEFTQ0VORElOR3xBU1NFUlR8Qll8Q0FMTHxDQVNFfENPTU1JVHxDT05TVFJBSU5UfENPTlRBSU5TfENSRUFURXxDU1Z8REVMRVRFfERFU0N8REVTQ0VORElOR3xERVRBQ0h8RElTVElOQ1R8RE98RFJPUHxFTFNFfEVORHxFTkRTfEVYSVNUU3xGT1J8Rk9SRUFDSHxJTnxJTkRFWHxJU3xKT0lOfEtFWXxMSU1JVHxMT0FEfE1BTkRBVE9SWXxNQVRDSHxNRVJHRXxOT0RFfE5PVHxPRnxPTnxPUFRJT05BTHxPUnxPUkRFUig/PVxccytCWSl8UEVSSU9ESUN8UkVNT1ZFfFJFUVVJUkV8UkVUVVJOfFNDQUxBUnxTQ0FOfFNFVHxTS0lQfFNUQVJUfFNUQVJUU3xUSEVOfFVOSU9OfFVOSVFVRXxVTldJTkR8VVNJTkd8V0hFTnxXSEVSRXxXSVRIfFhPUnxZSUVMRClcXGIvaSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdytcXGIoPz1cXHMqXFwoKS8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvaSxcbiAgICBudW1iZXI6IC9cXGIoPzoweFtcXGRhLWZBLUZdK3xcXGQrKD86XFwuXFxkKyk/KD86W2VFXVsrLV0/XFxkKyk/KVxcYi8sXG4gICAgLy8gaHR0cHM6Ly9uZW80ai5jb20vZG9jcy9jeXBoZXItbWFudWFsL2N1cnJlbnQvc3ludGF4L29wZXJhdG9ycy9cbiAgICBvcGVyYXRvcjogLzp8PC0tP3wtLT8+P3w8Pnw9fj98Wzw+XT0/fFsrKi8lXnxdfFxcLlxcLlxcLj8vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9LDsuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImN5cGhlciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJsb29rYmVoaW5kIiwicmVsYXRpb25zaGlwIiwiYWxpYXMiLCJpZGVudGlmaWVyIiwidmFyaWFibGUiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cypher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/d.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/d.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ d)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nd.displayName = \"d\";\nd.aliases = [];\n/** @type {import('../core.js').Syntax} */ function d(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.d = Prism.languages.extend(\"clike\", {\n        comment: [\n            {\n                // Shebang\n                pattern: /^\\s*#!.+/,\n                greedy: true\n            },\n            {\n                pattern: RegExp(/(^|[^\\\\])/.source + \"(?:\" + [\n                    // /+ comment +/\n                    // Allow one level of nesting\n                    /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source,\n                    // // comment\n                    /\\/\\/.*/.source,\n                    // /* comment */\n                    /\\/\\*[\\s\\S]*?\\*\\//.source\n                ].join(\"|\") + \")\"),\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: [\n            {\n                pattern: RegExp([\n                    // r\"\", x\"\"\n                    /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source,\n                    // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n                    /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source,\n                    // q\"IDENT\n                    // ...\n                    // IDENT\"\n                    /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source,\n                    // q\"//\", q\"||\", etc.\n                    // eslint-disable-next-line regexp/strict\n                    /\\bq\"(.)[\\s\\S]*?\\2\"/.source,\n                    // eslint-disable-next-line regexp/strict\n                    /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n                ].join(\"|\"), \"m\"),\n                greedy: true\n            },\n            {\n                pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n                greedy: true,\n                alias: \"token-string\"\n            }\n        ],\n        // In order: $, keywords and special tokens, globally defined symbols\n        keyword: /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n        number: [\n            // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n            // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n            /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n            {\n                pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n                lookbehind: true\n            }\n        ],\n        operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n    });\n    Prism.languages.insertBefore(\"d\", \"string\", {\n        // Characters\n        // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n        char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n    });\n    Prism.languages.insertBefore(\"d\", \"keyword\", {\n        property: /\\B@\\w*/\n    });\n    Prism.languages.insertBefore(\"d\", \"function\", {\n        register: {\n            // Iasm registers\n            pattern: /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n            alias: \"variable\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsRUFBRUMsV0FBVyxHQUFHO0FBQ2hCRCxFQUFFRSxPQUFPLEdBQUcsRUFBRTtBQUVkLHdDQUF3QyxHQUN6QixTQUFTRixFQUFFRyxLQUFLO0lBQzdCQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUM3QkksTUFBTUUsU0FBUyxDQUFDTCxDQUFDLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDbERDLFNBQVM7WUFDUDtnQkFDRSxVQUFVO2dCQUNWQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUQsU0FBU0UsT0FDUCxZQUFZQyxNQUFNLEdBQ2hCLFFBQ0E7b0JBQ0UsZ0JBQWdCO29CQUNoQiw2QkFBNkI7b0JBQzdCLDBEQUEwREEsTUFBTTtvQkFDaEUsYUFBYTtvQkFDYixTQUFTQSxNQUFNO29CQUNmLGdCQUFnQjtvQkFDaEIsbUJBQW1CQSxNQUFNO2lCQUMxQixDQUFDQyxJQUFJLENBQUMsT0FDUDtnQkFFSkMsWUFBWTtnQkFDWkosUUFBUTtZQUNWO1NBQ0Q7UUFDREssUUFBUTtZQUNOO2dCQUNFTixTQUFTRSxPQUNQO29CQUNFLFdBQVc7b0JBQ1gscUNBQXFDQyxNQUFNO29CQUMzQyw2QkFBNkI7b0JBQzdCLDZEQUE2REEsTUFBTTtvQkFDbkUsVUFBVTtvQkFDVixNQUFNO29CQUNOLFNBQVM7b0JBQ1QsK0JBQStCQSxNQUFNO29CQUNyQyxxQkFBcUI7b0JBQ3JCLHlDQUF5QztvQkFDekMscUJBQXFCQSxNQUFNO29CQUMzQix5Q0FBeUM7b0JBQ3pDLDBDQUEwQ0EsTUFBTTtpQkFDakQsQ0FBQ0MsSUFBSSxDQUFDLE1BQ1A7Z0JBRUZILFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxRQUFRO2dCQUNSTSxPQUFPO1lBQ1Q7U0FDRDtRQUNELHFFQUFxRTtRQUNyRUMsU0FDRTtRQUNGQyxRQUFRO1lBQ04sZ0dBQWdHO1lBQ2hHLHFGQUFxRjtZQUNyRjtZQUNBO2dCQUNFVCxTQUNFO2dCQUNGSyxZQUFZO1lBQ2Q7U0FDRDtRQUNESyxVQUNFO0lBQ0o7SUFDQWYsTUFBTUUsU0FBUyxDQUFDYyxZQUFZLENBQUMsS0FBSyxVQUFVO1FBQzFDLGFBQWE7UUFDYixtRUFBbUU7UUFDbkVDLE1BQU07SUFDUjtJQUNBakIsTUFBTUUsU0FBUyxDQUFDYyxZQUFZLENBQUMsS0FBSyxXQUFXO1FBQzNDRSxVQUFVO0lBQ1o7SUFDQWxCLE1BQU1FLFNBQVMsQ0FBQ2MsWUFBWSxDQUFDLEtBQUssWUFBWTtRQUM1Q2YsVUFBVTtZQUNSLGlCQUFpQjtZQUNqQkksU0FDRTtZQUNGTyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2QuanM/ZTdhMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5kLmRpc3BsYXlOYW1lID0gJ2QnXG5kLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGQoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIFByaXNtLmxhbmd1YWdlcy5kID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgY29tbWVudDogW1xuICAgICAge1xuICAgICAgICAvLyBTaGViYW5nXG4gICAgICAgIHBhdHRlcm46IC9eXFxzKiMhLisvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKF58W15cXFxcXSkvLnNvdXJjZSArXG4gICAgICAgICAgICAnKD86JyArXG4gICAgICAgICAgICBbXG4gICAgICAgICAgICAgIC8vIC8rIGNvbW1lbnQgKy9cbiAgICAgICAgICAgICAgLy8gQWxsb3cgb25lIGxldmVsIG9mIG5lc3RpbmdcbiAgICAgICAgICAgICAgL1xcL1xcKyg/OlxcL1xcKyg/OlteK118XFwrKD8hXFwvKSkqXFwrXFwvfCg/IVxcL1xcKylbXFxzXFxTXSkqP1xcK1xcLy8uc291cmNlLFxuICAgICAgICAgICAgICAvLyAvLyBjb21tZW50XG4gICAgICAgICAgICAgIC9cXC9cXC8uKi8uc291cmNlLFxuICAgICAgICAgICAgICAvLyAvKiBjb21tZW50ICovXG4gICAgICAgICAgICAgIC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvLy5zb3VyY2VcbiAgICAgICAgICAgIF0uam9pbignfCcpICtcbiAgICAgICAgICAgICcpJ1xuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgW1xuICAgICAgICAgICAgLy8gclwiXCIsIHhcIlwiXG4gICAgICAgICAgICAvXFxiW3J4XVwiKD86XFxcXFtcXHNcXFNdfFteXFxcXFwiXSkqXCJbY3dkXT8vLnNvdXJjZSxcbiAgICAgICAgICAgIC8vIHFcIltdXCIsIHFcIigpXCIsIHFcIjw+XCIsIHFcInt9XCJcbiAgICAgICAgICAgIC9cXGJxXCIoPzpcXFtbXFxzXFxTXSo/XFxdfFxcKFtcXHNcXFNdKj9cXCl8PFtcXHNcXFNdKj8+fFxce1tcXHNcXFNdKj9cXH0pXCIvLnNvdXJjZSxcbiAgICAgICAgICAgIC8vIHFcIklERU5UXG4gICAgICAgICAgICAvLyAuLi5cbiAgICAgICAgICAgIC8vIElERU5UXCJcbiAgICAgICAgICAgIC9cXGJxXCIoKD8hXFxkKVxcdyspJFtcXHNcXFNdKj9eXFwxXCIvLnNvdXJjZSxcbiAgICAgICAgICAgIC8vIHFcIi8vXCIsIHFcInx8XCIsIGV0Yy5cbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvc3RyaWN0XG4gICAgICAgICAgICAvXFxicVwiKC4pW1xcc1xcU10qP1xcMlwiLy5zb3VyY2UsXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVnZXhwL3N0cmljdFxuICAgICAgICAgICAgLyhbXCJgXSkoPzpcXFxcW1xcc1xcU118KD8hXFwzKVteXFxcXF0pKlxcM1tjd2RdPy8uc291cmNlXG4gICAgICAgICAgXS5qb2luKCd8JyksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcYnFcXHsoPzpcXHtbXnt9XSpcXH18W157fV0pKlxcfS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICd0b2tlbi1zdHJpbmcnXG4gICAgICB9XG4gICAgXSxcbiAgICAvLyBJbiBvcmRlcjogJCwga2V5d29yZHMgYW5kIHNwZWNpYWwgdG9rZW5zLCBnbG9iYWxseSBkZWZpbmVkIHN5bWJvbHNcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcJHxcXGIoPzpfXyg/Oig/OkRBVEV8RU9GfEZJTEV8RlVOQ1RJT058TElORXxNT0RVTEV8UFJFVFRZX0ZVTkNUSU9OfFRJTUVTVEFNUHxUSU1FfFZFTkRPUnxWRVJTSU9OKV9ffGdzaGFyZWR8cGFyYW1ldGVyc3x0cmFpdHN8dmVjdG9yKXxhYnN0cmFjdHxhbGlhc3xhbGlnbnxhc218YXNzZXJ0fGF1dG98Ym9keXxib29sfGJyZWFrfGJ5dGV8Y2FzZXxjYXN0fGNhdGNofGNkb3VibGV8Y2VudHxjZmxvYXR8Y2hhcnxjbGFzc3xjb25zdHxjb250aW51ZXxjcmVhbHxkY2hhcnxkZWJ1Z3xkZWZhdWx0fGRlbGVnYXRlfGRlbGV0ZXxkZXByZWNhdGVkfGRvfGRvdWJsZXxkc3RyaW5nfGVsc2V8ZW51bXxleHBvcnR8ZXh0ZXJufGZhbHNlfGZpbmFsfGZpbmFsbHl8ZmxvYXR8Zm9yfGZvcmVhY2h8Zm9yZWFjaF9yZXZlcnNlfGZ1bmN0aW9ufGdvdG98aWRvdWJsZXxpZnxpZmxvYXR8aW1tdXRhYmxlfGltcG9ydHxpbm91dHxpbnR8aW50ZXJmYWNlfGludmFyaWFudHxpcmVhbHxsYXp5fGxvbmd8bWFjcm98bWl4aW58bW9kdWxlfG5ld3xub3Rocm93fG51bGx8b3V0fG92ZXJyaWRlfHBhY2thZ2V8cHJhZ21hfHByaXZhdGV8cHJvdGVjdGVkfHB0cmRpZmZfdHxwdWJsaWN8cHVyZXxyZWFsfHJlZnxyZXR1cm58c2NvcGV8c2hhcmVkfHNob3J0fHNpemVfdHxzdGF0aWN8c3RyaW5nfHN0cnVjdHxzdXBlcnxzd2l0Y2h8c3luY2hyb25pemVkfHRlbXBsYXRlfHRoaXN8dGhyb3d8dHJ1ZXx0cnl8dHlwZWRlZnx0eXBlaWR8dHlwZW9mfHVieXRlfHVjZW50fHVpbnR8dWxvbmd8dW5pb258dW5pdHRlc3R8dXNob3J0fHZlcnNpb258dm9pZHx2b2xhdGlsZXx3Y2hhcnx3aGlsZXx3aXRofHdzdHJpbmcpXFxiLyxcbiAgICBudW1iZXI6IFtcbiAgICAgIC8vIFRoZSBsb29rYmVoaW5kIGFuZCB0aGUgbmVnYXRpdmUgbG9vay1haGVhZCB0cnkgdG8gcHJldmVudCBiYWQgaGlnaGxpZ2h0aW5nIG9mIHRoZSAuLiBvcGVyYXRvclxuICAgICAgLy8gSGV4YWRlY2ltYWwgbnVtYmVycyBtdXN0IGJlIGhhbmRsZWQgc2VwYXJhdGVseSB0byBhdm9pZCBwcm9ibGVtcyB3aXRoIGV4cG9uZW50IFwiZVwiXG4gICAgICAvXFxiMHhcXC4/W2EtZlxcZF9dKyg/Oig/IVxcLlxcLilcXC5bYS1mXFxkX10qKT8oPzpwWystXT9bYS1mXFxkX10rKT9bdWxmaV17MCw0fS9pLFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oKD86XFwuXFwuKT8pKD86XFxiMGJcXC4/fFxcYnxcXC4pXFxkW1xcZF9dKig/Oig/IVxcLlxcLilcXC5bXFxkX10qKT8oPzplWystXT9cXGRbXFxkX10qKT9bdWxmaV17MCw0fS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXHxbfD1dP3wmWyY9XT98XFwrWys9XT98LVstPV0/fFxcLj9cXC5cXC58PVs+PV0/fCEoPzppW25zXVxcYnw8Pj89P3w+PT98PSk/fFxcYmlbbnNdXFxifCg/OjxbPD5dP3w+Pj8+P3xcXF5cXF58WypcXC8lXn5dKT0/L1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdkJywgJ3N0cmluZycsIHtcbiAgICAvLyBDaGFyYWN0ZXJzXG4gICAgLy8gJ2EnLCAnXFxcXCcsICdcXG4nLCAnXFx4RkYnLCAnXFwzNzcnLCAnXFx1RkZGRicsICdcXFUwMDEwRkZGRicsICdcXHF1b3QnXG4gICAgY2hhcjogLycoPzpcXFxcKD86XFxXfFxcdyspfFteXFxcXF0pJy9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZCcsICdrZXl3b3JkJywge1xuICAgIHByb3BlcnR5OiAvXFxCQFxcdyovXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2QnLCAnZnVuY3Rpb24nLCB7XG4gICAgcmVnaXN0ZXI6IHtcbiAgICAgIC8vIElhc20gcmVnaXN0ZXJzXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86W0FCQ0RdW0xIWF18RT8oPzpCUHxESXxTSXxTUCl8W0JTXVBMfFtFQ1NER0ZdU3xDUlswMjM0XXxbRFNdSUx8RFJbMDEyMzY3XXxFW0FCQ0RdWHxYP01NWzAtN118Uig/OjFbMC01XXxbODldKVtCV0RdP3xSW0FCQ0RdWHxSW0JTXVB8UltEU11JfFRSWzMtN118WE1NKD86MVswLTVdfFs4OV0pfFlNTSg/OjFbMC01XXxcXGQpKVxcYnxcXGJTVCg/OlxcKFswLTddXFwpfFxcYikvLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJkIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiUmVnRXhwIiwic291cmNlIiwiam9pbiIsImxvb2tiZWhpbmQiLCJzdHJpbmciLCJhbGlhcyIsImtleXdvcmQiLCJudW1iZXIiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImNoYXIiLCJwcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/d.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dart.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dart.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dart)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ndart.displayName = \"dart\";\ndart.aliases = [];\n/** @type {import('../core.js').Syntax} */ function dart(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var keywords = [\n            /\\b(?:async|sync|yield)\\*/,\n            /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n        ];\n        // Handles named imports, such as http.Client\n        var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n        // based on the dart naming conventions\n        var className = {\n            pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n            lookbehind: true,\n            inside: {\n                namespace: {\n                    pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                }\n            }\n        };\n        Prism.languages.dart = Prism.languages.extend(\"clike\", {\n            \"class-name\": [\n                className,\n                {\n                    // variables and parameters\n                    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n                    pattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\n                    lookbehind: true,\n                    inside: className.inside\n                }\n            ],\n            keyword: keywords,\n            operator: /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n        });\n        Prism.languages.insertBefore(\"dart\", \"string\", {\n            \"string-literal\": {\n                pattern: /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /^\\$\\{?|\\}$/,\n                            expression: {\n                                pattern: /[\\s\\S]+/,\n                                inside: Prism.languages.dart\n                            }\n                        }\n                    },\n                    string: /[\\s\\S]+/\n                }\n            },\n            string: undefined\n        });\n        Prism.languages.insertBefore(\"dart\", \"class-name\", {\n            metadata: {\n                pattern: /@\\w+/,\n                alias: \"function\"\n            }\n        });\n        Prism.languages.insertBefore(\"dart\", \"class-name\", {\n            generics: {\n                pattern: /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n                inside: {\n                    \"class-name\": className,\n                    keyword: keywords,\n                    punctuation: /[<>(),.:]/,\n                    operator: /[?&|]/\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kYXJ0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDM0IsVUFBVUksS0FBSztRQUNmLElBQUlFLFdBQVc7WUFDYjtZQUNBO1NBQ0Q7UUFFRCw2Q0FBNkM7UUFDN0MsSUFBSUMsZ0JBQWdCLHVEQUNqQkMsTUFBTTtRQUVULHVDQUF1QztRQUN2QyxJQUFJQyxZQUFZO1lBQ2RDLFNBQVNDLE9BQU9KLGdCQUFnQixnQ0FBZ0NDLE1BQU07WUFDdEVJLFlBQVk7WUFDWkMsUUFBUTtnQkFDTkMsV0FBVztvQkFDVEosU0FBUztvQkFDVEcsUUFBUTt3QkFDTkUsYUFBYTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQVgsTUFBTVksU0FBUyxDQUFDZixJQUFJLEdBQUdHLE1BQU1ZLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7WUFDckQsY0FBYztnQkFDWlI7Z0JBQ0E7b0JBQ0UsMkJBQTJCO29CQUMzQix3SEFBd0g7b0JBQ3hIQyxTQUFTQyxPQUNQSixnQkFBZ0IsK0JBQStCQyxNQUFNO29CQUV2REksWUFBWTtvQkFDWkMsUUFBUUosVUFBVUksTUFBTTtnQkFDMUI7YUFDRDtZQUNESyxTQUFTWjtZQUNUYSxVQUNFO1FBQ0o7UUFDQWYsTUFBTVksU0FBUyxDQUFDSSxZQUFZLENBQUMsUUFBUSxVQUFVO1lBQzdDLGtCQUFrQjtnQkFDaEJWLFNBQ0U7Z0JBQ0ZXLFFBQVE7Z0JBQ1JSLFFBQVE7b0JBQ05TLGVBQWU7d0JBQ2JaLFNBQ0U7d0JBQ0ZFLFlBQVk7d0JBQ1pDLFFBQVE7NEJBQ05FLGFBQWE7NEJBQ2JRLFlBQVk7Z0NBQ1ZiLFNBQVM7Z0NBQ1RHLFFBQVFULE1BQU1ZLFNBQVMsQ0FBQ2YsSUFBSTs0QkFDOUI7d0JBQ0Y7b0JBQ0Y7b0JBQ0F1QixRQUFRO2dCQUNWO1lBQ0Y7WUFDQUEsUUFBUUM7UUFDVjtRQUNBckIsTUFBTVksU0FBUyxDQUFDSSxZQUFZLENBQUMsUUFBUSxjQUFjO1lBQ2pETSxVQUFVO2dCQUNSaEIsU0FBUztnQkFDVGlCLE9BQU87WUFDVDtRQUNGO1FBQ0F2QixNQUFNWSxTQUFTLENBQUNJLFlBQVksQ0FBQyxRQUFRLGNBQWM7WUFDakRRLFVBQVU7Z0JBQ1JsQixTQUNFO2dCQUNGRyxRQUFRO29CQUNOLGNBQWNKO29CQUNkUyxTQUFTWjtvQkFDVFMsYUFBYTtvQkFDYkksVUFBVTtnQkFDWjtZQUNGO1FBQ0Y7SUFDRixHQUFHZjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2RhcnQuanM/ZjUwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5kYXJ0LmRpc3BsYXlOYW1lID0gJ2RhcnQnXG5kYXJ0LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRhcnQoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGtleXdvcmRzID0gW1xuICAgICAgL1xcYig/OmFzeW5jfHN5bmN8eWllbGQpXFwqLyxcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhc3NlcnR8YXN5bmN8YXdhaXR8YnJlYWt8Y2FzZXxjYXRjaHxjbGFzc3xjb25zdHxjb250aW51ZXxjb3ZhcmlhbnR8ZGVmYXVsdHxkZWZlcnJlZHxkb3xkeW5hbWljfGVsc2V8ZW51bXxleHBvcnR8ZXh0ZW5kc3xleHRlbnNpb258ZXh0ZXJuYWx8ZmFjdG9yeXxmaW5hbHxmaW5hbGx5fGZvcnxnZXR8aGlkZXxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbnRlcmZhY2V8bGlicmFyeXxtaXhpbnxuZXd8bnVsbHxvbnxvcGVyYXRvcnxwYXJ0fHJldGhyb3d8cmV0dXJufHNldHxzaG93fHN0YXRpY3xzdXBlcnxzd2l0Y2h8c3luY3x0aGlzfHRocm93fHRyeXx0eXBlZGVmfHZhcnx2b2lkfHdoaWxlfHdpdGh8eWllbGQpXFxiL1xuICAgIF1cblxuICAgIC8vIEhhbmRsZXMgbmFtZWQgaW1wb3J0cywgc3VjaCBhcyBodHRwLkNsaWVudFxuICAgIHZhciBwYWNrYWdlUHJlZml4ID0gLyhefFteXFx3Ll0pKD86W2Etel1cXHcqXFxzKlxcLlxccyopKig/OltBLVpdXFx3KlxccypcXC5cXHMqKSovXG4gICAgICAuc291cmNlXG5cbiAgICAvLyBiYXNlZCBvbiB0aGUgZGFydCBuYW1pbmcgY29udmVudGlvbnNcbiAgICB2YXIgY2xhc3NOYW1lID0ge1xuICAgICAgcGF0dGVybjogUmVnRXhwKHBhY2thZ2VQcmVmaXggKyAvW0EtWl0oPzpbXFxkX0EtWl0qW2Etel1cXHcqKT9cXGIvLnNvdXJjZSksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIG5hbWVzcGFjZToge1xuICAgICAgICAgIHBhdHRlcm46IC9eW2Etel1cXHcqKD86XFxzKlxcLlxccypbYS16XVxcdyopKig/OlxccypcXC4pPy8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmRhcnQgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIHtcbiAgICAgICAgICAvLyB2YXJpYWJsZXMgYW5kIHBhcmFtZXRlcnNcbiAgICAgICAgICAvLyB0aGlzIHRvIHN1cHBvcnQgY2xhc3MgbmFtZXMgKG9yIGdlbmVyaWMgcGFyYW1ldGVycykgd2hpY2ggZG8gbm90IGNvbnRhaW4gYSBsb3dlciBjYXNlIGxldHRlciAoYWxzbyB3b3JrcyBmb3IgbWV0aG9kcylcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICBwYWNrYWdlUHJlZml4ICsgL1tBLVpdXFx3Kig/PVxccytcXHcrXFxzKls7LD0oKV0pLy5zb3VyY2VcbiAgICAgICAgICApLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBjbGFzc05hbWUuaW5zaWRlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIG9wZXJhdG9yOlxuICAgICAgICAvXFxiaXMhfFxcYig/OmFzfGlzKVxcYnxcXCtcXCt8LS18JiZ8XFx8XFx8fDw8PT98Pj49P3x+KD86XFwvPT8pP3xbK1xcLSpcXC8lJl58PSE8Pl09P3xcXD8vXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdkYXJ0JywgJ3N0cmluZycsIHtcbiAgICAgICdzdHJpbmctbGl0ZXJhbCc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvcj8oPzooXCJcIlwifCcnJylbXFxzXFxTXSo/XFwxfChbXCInXSkoPzpcXFxcLnwoPyFcXDIpW15cXFxcXFxyXFxuXSkqXFwyKD8hXFwyKSkvLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAgIC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKilcXCQoPzpcXHcrfFxceyg/Oltee31dfFxce1tee31dKlxcfSkqXFx9KS8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcJFxcez98XFx9JC8sXG4gICAgICAgICAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5kYXJ0XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHN0cmluZzogdW5kZWZpbmVkXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdkYXJ0JywgJ2NsYXNzLW5hbWUnLCB7XG4gICAgICBtZXRhZGF0YToge1xuICAgICAgICBwYXR0ZXJuOiAvQFxcdysvLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZGFydCcsICdjbGFzcy1uYW1lJywge1xuICAgICAgZ2VuZXJpY3M6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvPCg/OltcXHdcXHMsLiY/XXw8KD86W1xcd1xccywuJj9dfDwoPzpbXFx3XFxzLC4mP118PFtcXHdcXHMsLiY/XSo+KSo+KSo+KSo+LyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgJ2NsYXNzLW5hbWUnOiBjbGFzc05hbWUsXG4gICAgICAgICAga2V5d29yZDoga2V5d29yZHMsXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bPD4oKSwuOl0vLFxuICAgICAgICAgIG9wZXJhdG9yOiAvWz8mfF0vXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsImRhcnQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwia2V5d29yZHMiLCJwYWNrYWdlUHJlZml4Iiwic291cmNlIiwiY2xhc3NOYW1lIiwicGF0dGVybiIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJuYW1lc3BhY2UiLCJwdW5jdHVhdGlvbiIsImxhbmd1YWdlcyIsImV4dGVuZCIsImtleXdvcmQiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImdyZWVkeSIsImludGVycG9sYXRpb24iLCJleHByZXNzaW9uIiwic3RyaW5nIiwidW5kZWZpbmVkIiwibWV0YWRhdGEiLCJhbGlhcyIsImdlbmVyaWNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dart.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dataweave.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dataweave.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dataweave)\n/* harmony export */ });\n// @ts-nocheck\ndataweave.displayName = \"dataweave\";\ndataweave.aliases = [];\n/** @type {import('../core.js').Syntax} */ function dataweave(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.dataweave = {\n            url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n            property: {\n                pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n                greedy: true\n            },\n            string: {\n                pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                greedy: true\n            },\n            \"mime-type\": /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n            date: {\n                pattern: /\\|[\\w:+-]+\\|/,\n                greedy: true\n            },\n            comment: [\n                {\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            regex: {\n                pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n                greedy: true\n            },\n            keyword: /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n            function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n            number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n            punctuation: /[{}[\\];(),.:@]/,\n            operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n            boolean: /\\b(?:false|true)\\b/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kYXRhd2VhdmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSzs7SUFDbkMsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLFNBQVMsR0FBRztZQUMxQkssS0FBSztZQUNMQyxVQUFVO2dCQUNSQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUMsUUFBUTtnQkFDTkYsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0EsYUFDRTtZQUNGRSxNQUFNO2dCQUNKSCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUcsU0FBUztnQkFDUDtvQkFDRUosU0FBUztvQkFDVEssWUFBWTtvQkFDWkosUUFBUTtnQkFDVjtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEssWUFBWTtvQkFDWkosUUFBUTtnQkFDVjthQUNEO1lBQ0RLLE9BQU87Z0JBQ0xOLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBTSxTQUNFO1lBQ0ZDLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxhQUFhO1lBQ2JDLFVBQVU7WUFDVkMsU0FBUztRQUNYO0lBQ0YsR0FBR2hCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGF0YXdlYXZlLmpzP2RjYjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmRhdGF3ZWF2ZS5kaXNwbGF5TmFtZSA9ICdkYXRhd2VhdmUnXG5kYXRhd2VhdmUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGF0YXdlYXZlKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmRhdGF3ZWF2ZSA9IHtcbiAgICAgIHVybDogL1xcYltBLVphLXpdKzpcXC9cXC9bXFx3LzouPz0mLV0rfFxcYnVybjpbXFx3Oi4/PSYtXSsvLFxuICAgICAgcHJvcGVydHk6IHtcbiAgICAgICAgcGF0dGVybjogLyg/OlxcYlxcdysjKT8oPzpcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCJ8XFxiXFx3KykoPz1cXHMqWzpAXSkvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogLyhbXCInYF0pKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKSpcXDEvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnbWltZS10eXBlJzpcbiAgICAgICAgL1xcYig/OmFwcGxpY2F0aW9ufGF1ZGlvfGltYWdlfG11bHRpcGFydHx0ZXh0fHZpZGVvKVxcL1tcXHcrLV0rLyxcbiAgICAgIGRhdGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcfFtcXHc6Ky1dK1xcfC8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOl0pXFwvXFwvLiovLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICByZWdleDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvKD86W15cXFxcXFwvXFxyXFxuXXxcXFxcW15cXHJcXG5dKStcXC8vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86YW5kfGFzfGF0fGNhc2V8ZG98ZWxzZXxmdW58aWZ8aW5wdXR8aXN8bWF0Y2h8bm90fG5zfG51bGx8b3J8b3V0cHV0fHR5cGV8dW5sZXNzfHVwZGF0ZXx1c2luZ3x2YXIpXFxiLyxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW0EtWl9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBudW1iZXI6IC8tP1xcYlxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT9cXGIvaSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOkBdLyxcbiAgICAgIG9wZXJhdG9yOiAvPDx8Pj58LT58Wzw+fj1dPT98IT18LS0/LT98XFwrXFwrP3whfFxcPy8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJkYXRhd2VhdmUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInVybCIsInByb3BlcnR5IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImRhdGUiLCJjb21tZW50IiwibG9va2JlaGluZCIsInJlZ2V4Iiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwicHVuY3R1YXRpb24iLCJvcGVyYXRvciIsImJvb2xlYW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dataweave.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dax.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dax.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dax)\n/* harmony export */ });\n// @ts-nocheck\ndax.displayName = \"dax\";\ndax.aliases = [];\n/** @type {import('../core.js').Syntax} */ function dax(Prism) {\n    Prism.languages.dax = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n            lookbehind: true\n        },\n        \"data-field\": {\n            pattern: /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n            alias: \"symbol\"\n        },\n        measure: {\n            pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n            alias: \"constant\"\n        },\n        string: {\n            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        function: /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n        keyword: /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n        boolean: {\n            pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n            alias: \"constant\"\n        },\n        number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n        operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n        punctuation: /[;\\[\\](){}`,.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kYXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQSxjQUFjO1lBQ1pELFNBQ0U7WUFDRkUsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQUUsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFFBQVE7UUFDVjtRQUNBQyxVQUNFO1FBQ0ZDLFNBQ0U7UUFDRkMsU0FBUztZQUNQUixTQUFTO1lBQ1RFLE9BQU87UUFDVDtRQUNBTyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGF4LmpzPzMwMTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmRheC5kaXNwbGF5TmFtZSA9ICdkYXgnXG5kYXguYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZGF4KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5kYXggPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qP1xcKlxcL3woPzotLXxcXC9cXC8pLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgICdkYXRhLWZpZWxkJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLycoPzpbXiddfCcnKSonKD8hJykoPzpcXFtbIFxcd1xceEEwLVxcdUZGRkZdK1xcXSk/fFxcdytcXFtbIFxcd1xceEEwLVxcdUZGRkZdK1xcXS8sXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIG1lYXN1cmU6IHtcbiAgICAgIHBhdHRlcm46IC9cXFtbIFxcd1xceEEwLVxcdUZGRkZdK1xcXS8sXG4gICAgICBhbGlhczogJ2NvbnN0YW50J1xuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOlxuICAgICAgL1xcYig/OkFCU3xBQ09TfEFDT1NIfEFDT1R8QUNPVEh8QUREQ09MVU1OU3xBRERNSVNTSU5HSVRFTVN8QUxMfEFMTENST1NTRklMVEVSRUR8QUxMRVhDRVBUfEFMTE5PQkxBTktST1d8QUxMU0VMRUNURUR8QU5EfEFQUFJPWElNQVRFRElTVElOQ1RDT1VOVHxBU0lOfEFTSU5IfEFUQU58QVRBTkh8QVZFUkFHRXxBVkVSQUdFQXxBVkVSQUdFWHxCRVRBXFwuRElTVHxCRVRBXFwuSU5WfEJMQU5LfENBTENVTEFURXxDQUxDVUxBVEVUQUJMRXxDQUxFTkRBUnxDQUxFTkRBUkFVVE98Q0VJTElOR3xDSElTUVxcLkRJU1R8Q0hJU1FcXC5ESVNUXFwuUlR8Q0hJU1FcXC5JTlZ8Q0hJU1FcXC5JTlZcXC5SVHxDTE9TSU5HQkFMQU5DRU1PTlRIfENMT1NJTkdCQUxBTkNFUVVBUlRFUnxDTE9TSU5HQkFMQU5DRVlFQVJ8Q09BTEVTQ0V8Q09NQklOfENPTUJJTkF8Q09NQklORVZBTFVFU3xDT05DQVRFTkFURXxDT05DQVRFTkFURVh8Q09ORklERU5DRVxcLk5PUk18Q09ORklERU5DRVxcLlR8Q09OVEFJTlN8Q09OVEFJTlNST1d8Q09OVEFJTlNTVFJJTkd8Q09OVEFJTlNTVFJJTkdFWEFDVHxDT05WRVJUfENPU3xDT1NIfENPVHxDT1RIfENPVU5UfENPVU5UQXxDT1VOVEFYfENPVU5UQkxBTkt8Q09VTlRST1dTfENPVU5UWHxDUk9TU0ZJTFRFUnxDUk9TU0pPSU58Q1VSUkVOQ1l8Q1VSUkVOVEdST1VQfENVU1RPTURBVEF8REFUQVRBQkxFfERBVEV8REFURUFERHxEQVRFRElGRnxEQVRFU0JFVFdFRU58REFURVNJTlBFUklPRHxEQVRFU01URHxEQVRFU1FURHxEQVRFU1lURHxEQVRFVkFMVUV8REFZfERFR1JFRVN8REVUQUlMUk9XU3xESVNUSU5DVHxESVNUSU5DVENPVU5UfERJU1RJTkNUQ09VTlROT0JMQU5LfERJVklERXxFQVJMSUVSfEVBUkxJRVNUfEVEQVRFfEVORE9GTU9OVEh8RU5ET0ZRVUFSVEVSfEVORE9GWUVBUnxFT01PTlRIfEVSUk9SfEVWRU58RVhBQ1R8RVhDRVBUfEVYUHxFWFBPTlxcLkRJU1R8RkFDVHxGQUxTRXxGSUxURVJ8RklMVEVSU3xGSU5EfEZJUlNUREFURXxGSVJTVE5PTkJMQU5LfEZJUlNUTk9OQkxBTktWQUxVRXxGSVhFRHxGTE9PUnxGT1JNQVR8R0NEfEdFTkVSQVRFfEdFTkVSQVRFQUxMfEdFTkVSQVRFU0VSSUVTfEdFT01FQU58R0VPTUVBTlh8R1JPVVBCWXxIQVNPTkVGSUxURVJ8SEFTT05FVkFMVUV8SE9VUnxJRnxJRlxcLkVBR0VSfElGRVJST1J8SUdOT1JFfElOVHxJTlRFUlNFQ1R8SVNCTEFOS3xJU0NST1NTRklMVEVSRUR8SVNFTVBUWXxJU0VSUk9SfElTRVZFTnxJU0ZJTFRFUkVEfElTSU5TQ09QRXxJU0xPR0lDQUx8SVNOT05URVhUfElTTlVNQkVSfElTT1xcLkNFSUxJTkd8SVNPRER8SVNPTk9SQUZURVJ8SVNTRUxFQ1RFRE1FQVNVUkV8SVNTVUJUT1RBTHxJU1RFWFR8S0VFUEZJTFRFUlN8S0VZV09SRE1BVENIfExBU1REQVRFfExBU1ROT05CTEFOS3xMQVNUTk9OQkxBTktWQUxVRXxMQ018TEVGVHxMRU58TE58TE9HfExPRzEwfExPT0tVUFZBTFVFfExPV0VSfE1BWHxNQVhBfE1BWFh8TUVESUFOfE1FRElBTlh8TUlEfE1JTnxNSU5BfE1JTlVURXxNSU5YfE1PRHxNT05USHxNUk9VTkR8TkFUVVJBTElOTkVSSk9JTnxOQVRVUkFMTEVGVE9VVEVSSk9JTnxORVhUREFZfE5FWFRNT05USHxORVhUUVVBUlRFUnxORVhUWUVBUnxOT05WSVNVQUx8Tk9STVxcLkRJU1R8Tk9STVxcLklOVnxOT1JNXFwuU1xcLkRJU1R8Tk9STVxcLlNcXC5JTlZ8Tk9UfE5PV3xPRER8T1BFTklOR0JBTEFOQ0VNT05USHxPUEVOSU5HQkFMQU5DRVFVQVJURVJ8T1BFTklOR0JBTEFOQ0VZRUFSfE9SfFBBUkFMTEVMUEVSSU9EfFBBVEh8UEFUSENPTlRBSU5TfFBBVEhJVEVNfFBBVEhJVEVNUkVWRVJTRXxQQVRITEVOR1RIfFBFUkNFTlRJTEVcXC5FWEN8UEVSQ0VOVElMRVxcLklOQ3xQRVJDRU5USUxFWFxcLkVYQ3xQRVJDRU5USUxFWFxcLklOQ3xQRVJNVVR8UEl8UE9JU1NPTlxcLkRJU1R8UE9XRVJ8UFJFVklPVVNEQVl8UFJFVklPVVNNT05USHxQUkVWSU9VU1FVQVJURVJ8UFJFVklPVVNZRUFSfFBST0RVQ1R8UFJPRFVDVFh8UVVBUlRFUnxRVU9USUVOVHxSQURJQU5TfFJBTkR8UkFOREJFVFdFRU58UkFOS1xcLkVRfFJBTktYfFJFTEFURUR8UkVMQVRFRFRBQkxFfFJFTU9WRUZJTFRFUlN8UkVQTEFDRXxSRVBUfFJJR0hUfFJPTExVUHxST0xMVVBBRERJU1NVQlRPVEFMfFJPTExVUEdST1VQfFJPTExVUElTU1VCVE9UQUx8Uk9VTkR8Uk9VTkRET1dOfFJPVU5EVVB8Uk9XfFNBTUVQRVJJT0RMQVNUWUVBUnxTQU1QTEV8U0VBUkNIfFNFQ09ORHxTRUxFQ1RDT0xVTU5TfFNFTEVDVEVETUVBU1VSRXxTRUxFQ1RFRE1FQVNVUkVGT1JNQVRTVFJJTkd8U0VMRUNURURNRUFTVVJFTkFNRXxTRUxFQ1RFRFZBTFVFfFNJR058U0lOfFNJTkh8U1FSVHxTUVJUUEl8U1RBUlRPRk1PTlRIfFNUQVJUT0ZRVUFSVEVSfFNUQVJUT0ZZRUFSfFNUREVWXFwuUHxTVERFVlxcLlN8U1RERVZYXFwuUHxTVERFVlhcXC5TfFNVQlNUSVRVVEV8U1VCU1RJVFVURVdJVEhJTkRFWHxTVU18U1VNTUFSSVpFfFNVTU1BUklaRUNPTFVNTlN8U1VNWHxTV0lUQ0h8VFxcLkRJU1R8VFxcLkRJU1RcXC4yVHxUXFwuRElTVFxcLlJUfFRcXC5JTlZ8VFxcLklOVlxcLjJUfFRBTnxUQU5IfFRJTUV8VElNRVZBTFVFfFRPREFZfFRPUE58VE9QTlBFUkxFVkVMfFRPUE5TS0lQfFRPVEFMTVREfFRPVEFMUVREfFRPVEFMWVREfFRSRUFUQVN8VFJJTXxUUlVFfFRSVU5DfFVOSUNIQVJ8VU5JQ09ERXxVTklPTnxVUFBFUnxVU0VSRUxBVElPTlNISVB8VVNFUk5BTUV8VVNFUk9CSkVDVElEfFVTRVJQUklOQ0lQQUxOQU1FfFVUQ05PV3xVVENUT0RBWXxWQUxVRXxWQUxVRVN8VkFSXFwuUHxWQVJcXC5TfFZBUlhcXC5QfFZBUlhcXC5TfFdFRUtEQVl8V0VFS05VTXxYSVJSfFhOUFZ8WUVBUnxZRUFSRlJBQykoPz1cXHMqXFwoKS9pLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86REVGSU5FfEVWQUxVQVRFfE1FQVNVUkV8T1JERVJcXHMrQll8UkVUVVJOfFZBUnxTVEFSVFxccytBVHxBU0N8REVTQylcXGIvaSxcbiAgICBib29sZWFuOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86RkFMU0V8TlVMTHxUUlVFKVxcYi9pLFxuICAgICAgYWxpYXM6ICdjb25zdGFudCdcbiAgICB9LFxuICAgIG51bWJlcjogL1xcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkK1xcYi8sXG4gICAgb3BlcmF0b3I6IC86PXxbLSsqXFwvPV5dfCYmP3xcXHxcXHx8PCg/Oj0+P3w8fD4pP3w+Wz49XT98XFxiKD86SU58Tk9UKVxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWztcXFtcXF0oKXt9YCwuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImRheCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJtZWFzdXJlIiwic3RyaW5nIiwiZ3JlZWR5IiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dax.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dhall.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dhall.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dhall)\n/* harmony export */ });\n// @ts-nocheck\ndhall.displayName = \"dhall\";\ndhall.aliases = [];\n/** @type {import('../core.js').Syntax} */ function dhall(Prism) {\n    // ABNF grammar:\n    // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n    Prism.languages.dhall = {\n        // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n        // The multi-line pattern is essentially this:\n        //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n        comment: /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{[^{}]*\\}/,\n                    inside: {\n                        expression: {\n                            pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n                            lookbehind: true,\n                            alias: \"language-dhall\",\n                            inside: null // see blow\n                        },\n                        punctuation: /\\$\\{|\\}/\n                    }\n                }\n            }\n        },\n        label: {\n            pattern: /`[^`]*`/,\n            greedy: true\n        },\n        url: {\n            // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n            pattern: /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n            greedy: true\n        },\n        env: {\n            // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n            pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n            greedy: true,\n            inside: {\n                function: /^env/,\n                operator: /^:/,\n                variable: /[\\s\\S]+/\n            }\n        },\n        hash: {\n            // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n            pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n            inside: {\n                function: /sha256/,\n                operator: /:/,\n                number: /[\\da-fA-F]{64}/\n            }\n        },\n        // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n        keyword: /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n        builtin: /\\b(?:None|Some)\\b/,\n        boolean: /\\b(?:False|True)\\b/,\n        number: /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n        operator: /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n        punctuation: /\\.\\.|[{}\\[\\](),./]/,\n        // we'll just assume that every capital word left is a type name\n        \"class-name\": /\\b[A-Z]\\w*\\b/\n    };\n    Prism.languages.dhall.string.inside.interpolation.inside.expression.inside = Prism.languages.dhall;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kaGFsbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDLGdCQUFnQjtJQUNoQiwyRUFBMkU7SUFFM0VBLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxHQUFHO1FBQ3RCLDhEQUE4RDtRQUM5RCw4Q0FBOEM7UUFDOUMsNENBQTRDO1FBQzVDSyxTQUNFO1FBQ0ZDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05DLGVBQWU7b0JBQ2JILFNBQVM7b0JBQ1RFLFFBQVE7d0JBQ05FLFlBQVk7NEJBQ1ZKLFNBQVM7NEJBQ1RLLFlBQVk7NEJBQ1pDLE9BQU87NEJBQ1BKLFFBQVEsS0FBSyxXQUFXO3dCQUMxQjt3QkFFQUssYUFBYTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUMsT0FBTztZQUNMUixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBUSxLQUFLO1lBQ0gsa0hBQWtIO1lBQ2xIVCxTQUNFO1lBQ0ZDLFFBQVE7UUFDVjtRQUNBUyxLQUFLO1lBQ0gsa0hBQWtIO1lBQ2xIVixTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsUUFBUTtnQkFDTlMsVUFBVTtnQkFDVkMsVUFBVTtnQkFDVkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQUMsTUFBTTtZQUNKLGtIQUFrSDtZQUNsSGQsU0FBUztZQUNURSxRQUFRO2dCQUNOUyxVQUFVO2dCQUNWQyxVQUFVO2dCQUNWRyxRQUFRO1lBQ1Y7UUFDRjtRQUNBLGtIQUFrSDtRQUNsSEMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEgsUUFDRTtRQUNGSCxVQUNFO1FBQ0ZMLGFBQWE7UUFDYixnRUFBZ0U7UUFDaEUsY0FBYztJQUNoQjtJQUNBWCxNQUFNQyxTQUFTLENBQUNKLEtBQUssQ0FBQ00sTUFBTSxDQUFDRyxNQUFNLENBQUNDLGFBQWEsQ0FBQ0QsTUFBTSxDQUFDRSxVQUFVLENBQUNGLE1BQU0sR0FDeEVOLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kaGFsbC5qcz9kNGNjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5kaGFsbC5kaXNwbGF5TmFtZSA9ICdkaGFsbCdcbmRoYWxsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRoYWxsKFByaXNtKSB7XG4gIC8vIEFCTkYgZ3JhbW1hcjpcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RoYWxsLWxhbmcvZGhhbGwtbGFuZy9ibG9iL21hc3Rlci9zdGFuZGFyZC9kaGFsbC5hYm5mXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLmRoYWxsID0ge1xuICAgIC8vIE11bHRpLWxpbmUgY29tbWVudHMgY2FuIGJlIG5lc3RlZC4gRS5nLiB7LSBmb28gey0gYmFyIC19IC19XG4gICAgLy8gVGhlIG11bHRpLWxpbmUgcGF0dGVybiBpcyBlc3NlbnRpYWxseSB0aGlzOlxuICAgIC8vICAgXFx7LSg/OlteLXtdfC0oPyFcXH0pfFxceyg/IS0pfDxTRUxGPikqLVxcfVxuICAgIGNvbW1lbnQ6XG4gICAgICAvLS0uKnxcXHstKD86W14te118LSg/IVxcfSl8XFx7KD8hLSl8XFx7LSg/OlteLXtdfC0oPyFcXH0pfFxceyg/IS0pKSotXFx9KSotXFx9LyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8JycoPzpbXiddfCcoPyEnKXwnJyd8JydcXCRcXHspKicnKD8hJ3xcXCQpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcJFxce1tee31dKlxcfS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcJFxceylbXFxzXFxTXSsoPz1cXH0kKS8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtZGhhbGwnLFxuICAgICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJsb3dcbiAgICAgICAgICAgIH0sXG5cbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwkXFx7fFxcfS9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGxhYmVsOiB7XG4gICAgICBwYXR0ZXJuOiAvYFteYF0qYC8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHVybDoge1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RoYWxsLWxhbmcvZGhhbGwtbGFuZy9ibG9iLzVmZGU4ZWYxYmVhZDZmYjRlOTk5ZDNjMWZmZTcwNDRjZDAxOWQ2M2Evc3RhbmRhcmQvZGhhbGwuYWJuZiNMNTk2XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiaHR0cHM/OlxcL1xcL1tcXHcuOiUhJCYnKis7PUB+LV0rKD86XFwvW1xcdy46JSEkJicqKzs9QH4tXSopKig/OlxcP1svP1xcdy46JSEkJicqKzs9QH4tXSopPy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGVudjoge1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2RoYWxsLWxhbmcvZGhhbGwtbGFuZy9ibG9iLzVmZGU4ZWYxYmVhZDZmYjRlOTk5ZDNjMWZmZTcwNDRjZDAxOWQ2M2Evc3RhbmRhcmQvZGhhbGwuYWJuZiNMNjYxXG4gICAgICBwYXR0ZXJuOiAvXFxiZW52Oig/Oig/IVxcZClcXHcrfFwiKD86W15cIlxcXFw9XXxcXFxcLikqXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBmdW5jdGlvbjogL15lbnYvLFxuICAgICAgICBvcGVyYXRvcjogL146LyxcbiAgICAgICAgdmFyaWFibGU6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfSxcbiAgICBoYXNoOiB7XG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZGhhbGwtbGFuZy9kaGFsbC1sYW5nL2Jsb2IvNWZkZThlZjFiZWFkNmZiNGU5OTlkM2MxZmZlNzA0NGNkMDE5ZDYzYS9zdGFuZGFyZC9kaGFsbC5hYm5mI0w3MjVcbiAgICAgIHBhdHRlcm46IC9cXGJzaGEyNTY6W1xcZGEtZkEtRl17NjR9XFxiLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBmdW5jdGlvbjogL3NoYTI1Ni8sXG4gICAgICAgIG9wZXJhdG9yOiAvOi8sXG4gICAgICAgIG51bWJlcjogL1tcXGRhLWZBLUZdezY0fS9cbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9kaGFsbC1sYW5nL2RoYWxsLWxhbmcvYmxvYi81ZmRlOGVmMWJlYWQ2ZmI0ZTk5OWQzYzFmZmU3MDQ0Y2QwMTlkNjNhL3N0YW5kYXJkL2RoYWxsLmFibmYjTDM1OVxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXN8YXNzZXJ0fGVsc2V8Zm9yYWxsfGlmfGlufGxldHxtZXJnZXxtaXNzaW5nfHRoZW58dG9NYXB8dXNpbmd8d2l0aClcXGJ8XFx1MjIwMC8sXG4gICAgYnVpbHRpbjogL1xcYig/Ok5vbmV8U29tZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGYWxzZXxUcnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYk5hTlxcYnwtP1xcYkluZmluaXR5XFxifFsrLV0/XFxiKD86MHhbXFxkYS1mQS1GXSt8XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspPylcXGIvLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcL1xcXFx8XFwvXFwvXFxcXFxcXFx8JiZ8XFx8XFx8fD09PXxbIT1dPXxcXC9cXC98LT58XFwrXFwrfDo6fFsrKiNAPTo/PD58XFxcXFxcdTIyMjdcXHUyYTUzXFx1MjI2MVxcdTJhZmRcXHUwM2JiXFx1MjE5Ml0vLFxuICAgIHB1bmN0dWF0aW9uOiAvXFwuXFwufFt7fVxcW1xcXSgpLC4vXS8sXG4gICAgLy8gd2UnbGwganVzdCBhc3N1bWUgdGhhdCBldmVyeSBjYXBpdGFsIHdvcmQgbGVmdCBpcyBhIHR5cGUgbmFtZVxuICAgICdjbGFzcy1uYW1lJzogL1xcYltBLVpdXFx3KlxcYi9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuZGhhbGwuc3RyaW5nLmluc2lkZS5pbnRlcnBvbGF0aW9uLmluc2lkZS5leHByZXNzaW9uLmluc2lkZSA9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmRoYWxsXG59XG4iXSwibmFtZXMiOlsiZGhhbGwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiIsImV4cHJlc3Npb24iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJwdW5jdHVhdGlvbiIsImxhYmVsIiwidXJsIiwiZW52IiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsInZhcmlhYmxlIiwiaGFzaCIsIm51bWJlciIsImtleXdvcmQiLCJidWlsdGluIiwiYm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dhall.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/diff.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/diff.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ diff)\n/* harmony export */ });\n// @ts-nocheck\ndiff.displayName = \"diff\";\ndiff.aliases = [];\n/** @type {import('../core.js').Syntax} */ function diff(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.diff = {\n            coord: [\n                // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n                /^(?:\\*{3}|-{3}|\\+{3}).*$/m,\n                // Match \"@@ ... @@\" coord lines in unified diff.\n                /^@@.*@@$/m,\n                // Match coord lines in normal diff (starts with a number).\n                /^\\d.*$/m\n            ]\n        };\n        /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */ var PREFIXES = {\n            \"deleted-sign\": \"-\",\n            \"deleted-arrow\": \"<\",\n            \"inserted-sign\": \"+\",\n            \"inserted-arrow\": \">\",\n            unchanged: \" \",\n            diff: \"!\"\n        };\n        // add a token for each prefix\n        Object.keys(PREFIXES).forEach(function(name) {\n            var prefix = PREFIXES[name];\n            var alias = [];\n            if (!/^\\w+$/.test(name)) {\n                // \"deleted-sign\" -> \"deleted\"\n                alias.push(/\\w+/.exec(name)[0]);\n            }\n            if (name === \"diff\") {\n                alias.push(\"bold\");\n            }\n            Prism.languages.diff[name] = {\n                pattern: RegExp(\"^(?:[\" + prefix + \"].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+\", \"m\"),\n                alias: alias,\n                inside: {\n                    line: {\n                        pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n                        lookbehind: true\n                    },\n                    prefix: {\n                        pattern: /[\\s\\S]/,\n                        alias: /\\w+/.exec(name)[0]\n                    }\n                }\n            };\n        });\n        // make prefixes available to Diff plugin\n        Object.defineProperty(Prism.languages.diff, \"PREFIXES\", {\n            value: PREFIXES\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kaWZmLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZkEsTUFBTUMsU0FBUyxDQUFDSixJQUFJLEdBQUc7WUFDckJLLE9BQU87Z0JBQ0wsc0VBQXNFO2dCQUN0RTtnQkFDQSxpREFBaUQ7Z0JBQ2pEO2dCQUNBLDJEQUEyRDtnQkFDM0Q7YUFDRDtRQUdIO1FBRUE7Ozs7S0FJQyxHQUNELElBQUlDLFdBQVc7WUFDYixnQkFBZ0I7WUFDaEIsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQixrQkFBa0I7WUFDbEJDLFdBQVc7WUFDWFAsTUFBTTtRQUNSO1FBRUEsOEJBQThCO1FBQzlCUSxPQUFPQyxJQUFJLENBQUNILFVBQVVJLE9BQU8sQ0FBQyxTQUFVQyxJQUFJO1lBQzFDLElBQUlDLFNBQVNOLFFBQVEsQ0FBQ0ssS0FBSztZQUMzQixJQUFJRSxRQUFRLEVBQUU7WUFDZCxJQUFJLENBQUMsUUFBUUMsSUFBSSxDQUFDSCxPQUFPO2dCQUN2Qiw4QkFBOEI7Z0JBQzlCRSxNQUFNRSxJQUFJLENBQUMsTUFBTUMsSUFBSSxDQUFDTCxLQUFLLENBQUMsRUFBRTtZQUNoQztZQUNBLElBQUlBLFNBQVMsUUFBUTtnQkFDbkJFLE1BQU1FLElBQUksQ0FBQztZQUNiO1lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxDQUFDVyxLQUFLLEdBQUc7Z0JBQzNCTSxTQUFTQyxPQUNQLFVBQVVOLFNBQVMsa0NBQ25CO2dCQUVGQyxPQUFPQTtnQkFDUE0sUUFBUTtvQkFDTkMsTUFBTTt3QkFDSkgsU0FBUzt3QkFDVEksWUFBWTtvQkFDZDtvQkFDQVQsUUFBUTt3QkFDTkssU0FBUzt3QkFDVEosT0FBTyxNQUFNRyxJQUFJLENBQUNMLEtBQUssQ0FBQyxFQUFFO29CQUM1QjtnQkFDRjtZQUNGO1FBQ0Y7UUFFQSx5Q0FBeUM7UUFDekNILE9BQU9jLGNBQWMsQ0FBQ25CLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxFQUFFLFlBQVk7WUFDdER1QixPQUFPakI7UUFDVDtJQUNGLEdBQUdIO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZGlmZi5qcz9mYjE5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5kaWZmLmRpc3BsYXlOYW1lID0gJ2RpZmYnXG5kaWZmLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRpZmYoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuZGlmZiA9IHtcbiAgICAgIGNvb3JkOiBbXG4gICAgICAgIC8vIE1hdGNoIGFsbCBraW5kcyBvZiBjb29yZCBsaW5lcyAocHJlZml4ZWQgYnkgXCIrKytcIiwgXCItLS1cIiBvciBcIioqKlwiKS5cbiAgICAgICAgL14oPzpcXCp7M318LXszfXxcXCt7M30pLiokL20sXG4gICAgICAgIC8vIE1hdGNoIFwiQEAgLi4uIEBAXCIgY29vcmQgbGluZXMgaW4gdW5pZmllZCBkaWZmLlxuICAgICAgICAvXkBALipAQCQvbSxcbiAgICAgICAgLy8gTWF0Y2ggY29vcmQgbGluZXMgaW4gbm9ybWFsIGRpZmYgKHN0YXJ0cyB3aXRoIGEgbnVtYmVyKS5cbiAgICAgICAgL15cXGQuKiQvbVxuICAgICAgXVxuXG4gICAgICAvLyBkZWxldGVkLCBpbnNlcnRlZCwgdW5jaGFuZ2VkLCBkaWZmXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQSBtYXAgZnJvbSB0aGUgbmFtZSBvZiBhIGJsb2NrIHRvIGl0cyBsaW5lIHByZWZpeC5cbiAgICAgKlxuICAgICAqIEB0eXBlIHtPYmplY3Q8c3RyaW5nLCBzdHJpbmc+fVxuICAgICAqL1xuICAgIHZhciBQUkVGSVhFUyA9IHtcbiAgICAgICdkZWxldGVkLXNpZ24nOiAnLScsXG4gICAgICAnZGVsZXRlZC1hcnJvdyc6ICc8JyxcbiAgICAgICdpbnNlcnRlZC1zaWduJzogJysnLFxuICAgICAgJ2luc2VydGVkLWFycm93JzogJz4nLFxuICAgICAgdW5jaGFuZ2VkOiAnICcsXG4gICAgICBkaWZmOiAnISdcbiAgICB9XG5cbiAgICAvLyBhZGQgYSB0b2tlbiBmb3IgZWFjaCBwcmVmaXhcbiAgICBPYmplY3Qua2V5cyhQUkVGSVhFUykuZm9yRWFjaChmdW5jdGlvbiAobmFtZSkge1xuICAgICAgdmFyIHByZWZpeCA9IFBSRUZJWEVTW25hbWVdXG4gICAgICB2YXIgYWxpYXMgPSBbXVxuICAgICAgaWYgKCEvXlxcdyskLy50ZXN0KG5hbWUpKSB7XG4gICAgICAgIC8vIFwiZGVsZXRlZC1zaWduXCIgLT4gXCJkZWxldGVkXCJcbiAgICAgICAgYWxpYXMucHVzaCgvXFx3Ky8uZXhlYyhuYW1lKVswXSlcbiAgICAgIH1cbiAgICAgIGlmIChuYW1lID09PSAnZGlmZicpIHtcbiAgICAgICAgYWxpYXMucHVzaCgnYm9sZCcpXG4gICAgICB9XG4gICAgICBQcmlzbS5sYW5ndWFnZXMuZGlmZltuYW1lXSA9IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICdeKD86WycgKyBwcmVmaXggKyAnXS4qKD86XFxyXFxuP3xcXG58KD8hW1xcXFxzXFxcXFNdKSkpKycsXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGFsaWFzOiBhbGlhcyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgbGluZToge1xuICAgICAgICAgICAgcGF0dGVybjogLyguKSg/PVtcXHNcXFNdKS4qKD86XFxyXFxuP3xcXG4pPy8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwcmVmaXg6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXS8sXG4gICAgICAgICAgICBhbGlhczogL1xcdysvLmV4ZWMobmFtZSlbMF1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuXG4gICAgLy8gbWFrZSBwcmVmaXhlcyBhdmFpbGFibGUgdG8gRGlmZiBwbHVnaW5cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoUHJpc20ubGFuZ3VhZ2VzLmRpZmYsICdQUkVGSVhFUycsIHtcbiAgICAgIHZhbHVlOiBQUkVGSVhFU1xuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImRpZmYiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvb3JkIiwiUFJFRklYRVMiLCJ1bmNoYW5nZWQiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsIm5hbWUiLCJwcmVmaXgiLCJhbGlhcyIsInRlc3QiLCJwdXNoIiwiZXhlYyIsInBhdHRlcm4iLCJSZWdFeHAiLCJpbnNpZGUiLCJsaW5lIiwibG9va2JlaGluZCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/diff.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/django.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/django.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ django)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\ndjango.displayName = \"django\";\ndjango.aliases = [\n    \"jinja2\"\n];\n/** @type {import('../core.js').Syntax} */ function django(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.django = {\n            comment: /^\\{#[\\s\\S]*?#\\}$/,\n            tag: {\n                pattern: /(^\\{%[+-]?\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            delimiter: {\n                pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n                alias: \"punctuation\"\n            },\n            string: {\n                pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                greedy: true\n            },\n            filter: {\n                pattern: /(\\|)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            test: {\n                pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n            keyword: /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n            operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n            number: /\\b\\d+(?:\\.\\d+)?\\b/,\n            boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n            variable: /\\b\\w+\\b/,\n            punctuation: /[{}[\\](),.:;]/\n        };\n        var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g;\n        var markupTemplating = Prism.languages[\"markup-templating\"];\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            markupTemplating.buildPlaceholders(env, \"django\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            markupTemplating.tokenizePlaceholders(env, \"django\");\n        });\n        // Add an Jinja2 alias\n        Prism.languages.jinja2 = Prism.languages.django;\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            markupTemplating.buildPlaceholders(env, \"jinja2\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            markupTemplating.tokenizePlaceholders(env, \"jinja2\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kamFuZ28uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ2dEO0FBQzlEQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRztJQUFDO0NBQVM7QUFFM0Isd0NBQXdDLEdBQ3pCLFNBQVNGLE9BQU9HLEtBQUs7SUFDbENBLE1BQU1DLFFBQVEsQ0FBQ0wsNkRBQXlCQTtJQUl0QyxVQUFVSSxLQUFLO1FBQ2ZBLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxHQUFHO1lBQ3ZCTSxTQUFTO1lBQ1RDLEtBQUs7Z0JBQ0hDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBQyxXQUFXO2dCQUNUSCxTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7WUFDQUUsUUFBUTtnQkFDTkosU0FBUztnQkFDVEssUUFBUTtZQUNWO1lBQ0FDLFFBQVE7Z0JBQ05OLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBSyxNQUFNO2dCQUNKUCxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQU0sVUFBVTtZQUNWQyxTQUNFO1lBQ0ZDLFVBQVU7WUFDVkMsUUFBUTtZQUNSQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVkMsYUFBYTtRQUNmO1FBQ0EsSUFBSWQsVUFBVTtRQUNkLElBQUllLG1CQUFtQnBCLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0I7UUFDM0RGLE1BQU1xQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5Q0gsaUJBQWlCSSxpQkFBaUIsQ0FBQ0QsS0FBSyxVQUFVbEI7UUFDcEQ7UUFDQUwsTUFBTXFCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDSCxpQkFBaUJLLG9CQUFvQixDQUFDRixLQUFLO1FBQzdDO1FBRUEsc0JBQXNCO1FBQ3RCdkIsTUFBTUUsU0FBUyxDQUFDd0IsTUFBTSxHQUFHMUIsTUFBTUUsU0FBUyxDQUFDTCxNQUFNO1FBQy9DRyxNQUFNcUIsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUNILGlCQUFpQkksaUJBQWlCLENBQUNELEtBQUssVUFBVWxCO1FBQ3BEO1FBQ0FMLE1BQU1xQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsU0FBVUMsR0FBRztZQUM3Q0gsaUJBQWlCSyxvQkFBb0IsQ0FBQ0YsS0FBSztRQUM3QztJQUNGLEdBQUd2QjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2RqYW5nby5qcz80NjA2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyBmcm9tICcuL21hcmt1cC10ZW1wbGF0aW5nLmpzJ1xuZGphbmdvLmRpc3BsYXlOYW1lID0gJ2RqYW5nbydcbmRqYW5nby5hbGlhc2VzID0gWydqaW5qYTInXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRqYW5nbyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICAvLyBEamFuZ28vSmluamEyIHN5bnRheCBkZWZpbml0aW9uIGZvciBQcmlzbS5qcyA8aHR0cDovL3ByaXNtanMuY29tPiBzeW50YXggaGlnaGxpZ2h0ZXIuXG4gIC8vIE1vc3RseSBpdCB3b3JrcyBPSyBidXQgY2FuIHBhaW50IGNvZGUgaW5jb3JyZWN0bHkgb24gY29tcGxleCBodG1sL3RlbXBsYXRlIHRhZyBjb21iaW5hdGlvbnMuXG5cbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuZGphbmdvID0ge1xuICAgICAgY29tbWVudDogL15cXHsjW1xcc1xcU10qPyNcXH0kLyxcbiAgICAgIHRhZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKF5cXHslWystXT9cXHMqKVxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9LFxuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFx7W3slXVsrLV0/fFsrLV0/W30lXVxcfSQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGZpbHRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcfClcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICB0ZXN0OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiaXNcXHMrKD86bm90XFxzKyk/KSg/IW5vdFxcYilcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdysoPz1cXHMqXFwoKS9pLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFuZHxhc3xieXxlbHNlfGZvcnxpZnxpbXBvcnR8aW58aXN8bG9vcHxub3R8b3J8cmVjdXJzaXZlfHdpdGh8d2l0aG91dClcXGIvLFxuICAgICAgb3BlcmF0b3I6IC9bLSslPV09P3whPXxcXCpcXCo/PT98XFwvXFwvPz0/fDxbPD0+XT98Pls9Pl0/fFsmfF5+XS8sXG4gICAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKyk/XFxiLyxcbiAgICAgIGJvb2xlYW46IC9bRmZdYWxzZXxbTm5db25lfFtUdF1ydWUvLFxuICAgICAgdmFyaWFibGU6IC9cXGJcXHcrXFxiLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXSgpLC46O10vXG4gICAgfVxuICAgIHZhciBwYXR0ZXJuID0gL1xce1xce1tcXHNcXFNdKj9cXH1cXH18XFx7JVtcXHNcXFNdKj8lXFx9fFxceyNbXFxzXFxTXSo/I1xcfS9nXG4gICAgdmFyIG1hcmt1cFRlbXBsYXRpbmcgPSBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ11cbiAgICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIG1hcmt1cFRlbXBsYXRpbmcuYnVpbGRQbGFjZWhvbGRlcnMoZW52LCAnZGphbmdvJywgcGF0dGVybilcbiAgICB9KVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBtYXJrdXBUZW1wbGF0aW5nLnRva2VuaXplUGxhY2Vob2xkZXJzKGVudiwgJ2RqYW5nbycpXG4gICAgfSlcblxuICAgIC8vIEFkZCBhbiBKaW5qYTIgYWxpYXNcbiAgICBQcmlzbS5sYW5ndWFnZXMuamluamEyID0gUHJpc20ubGFuZ3VhZ2VzLmRqYW5nb1xuICAgIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgbWFya3VwVGVtcGxhdGluZy5idWlsZFBsYWNlaG9sZGVycyhlbnYsICdqaW5qYTInLCBwYXR0ZXJuKVxuICAgIH0pXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIG1hcmt1cFRlbXBsYXRpbmcudG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAnamluamEyJylcbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwiZGphbmdvIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJ0YWciLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiZGVsaW1pdGVyIiwic3RyaW5nIiwiZ3JlZWR5IiwiZmlsdGVyIiwidGVzdCIsImZ1bmN0aW9uIiwia2V5d29yZCIsIm9wZXJhdG9yIiwibnVtYmVyIiwiYm9vbGVhbiIsInZhcmlhYmxlIiwicHVuY3R1YXRpb24iLCJtYXJrdXBUZW1wbGF0aW5nIiwiaG9va3MiLCJhZGQiLCJlbnYiLCJidWlsZFBsYWNlaG9sZGVycyIsInRva2VuaXplUGxhY2Vob2xkZXJzIiwiamluamEyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/django.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dns-zone-file.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dns-zone-file.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dnsZoneFile)\n/* harmony export */ });\n// @ts-nocheck\ndnsZoneFile.displayName = \"dns-zone-file\";\ndnsZoneFile.aliases = [\n    \"dns-zone\"\n];\n/** @type {import('../core.js').Syntax} */ function dnsZoneFile(Prism) {\n    Prism.languages[\"dns-zone-file\"] = {\n        comment: /;.*/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        variable: [\n            {\n                pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|\\s)@(?=\\s|$)/,\n                lookbehind: true\n            }\n        ],\n        keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n        class: {\n            // https://tools.ietf.org/html/rfc1035#page-13\n            pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        type: {\n            // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n            pattern: /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        punctuation: /[()]/\n    };\n    Prism.languages[\"dns-zone\"] = Prism.languages[\"dns-zone-file\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kbnMtem9uZS1maWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFlBQVlDLFdBQVcsR0FBRztBQUMxQkQsWUFBWUUsT0FBTyxHQUFHO0lBQUM7Q0FBVztBQUVsQyx3Q0FBd0MsR0FDekIsU0FBU0YsWUFBWUcsS0FBSztJQUN2Q0EsTUFBTUMsU0FBUyxDQUFDLGdCQUFnQixHQUFHO1FBQ2pDQyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtZQUNSO2dCQUNFRixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUgsU0FBUztnQkFDVEcsWUFBWTtZQUNkO1NBQ0Q7UUFDREMsU0FBUztRQUNUQyxPQUFPO1lBQ0wsOENBQThDO1lBQzlDTCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkcsT0FBTztRQUNUO1FBQ0FDLE1BQU07WUFDSix5REFBeUQ7WUFDekRQLFNBQ0U7WUFDRkcsWUFBWTtZQUNaRyxPQUFPO1FBQ1Q7UUFDQUUsYUFBYTtJQUNmO0lBQ0FaLE1BQU1DLFNBQVMsQ0FBQyxXQUFXLEdBQUdELE1BQU1DLFNBQVMsQ0FBQyxnQkFBZ0I7QUFDaEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG5zLXpvbmUtZmlsZS5qcz9hNDJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5kbnNab25lRmlsZS5kaXNwbGF5TmFtZSA9ICdkbnMtem9uZS1maWxlJ1xuZG5zWm9uZUZpbGUuYWxpYXNlcyA9IFsnZG5zLXpvbmUnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRuc1pvbmVGaWxlKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlc1snZG5zLXpvbmUtZmlsZSddID0ge1xuICAgIGNvbW1lbnQ6IC87LiovLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZhcmlhYmxlOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXlxcJE9SSUdJTlsgXFx0XSspXFxTKy9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKUAoPz1cXHN8JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBrZXl3b3JkOiAvXlxcJCg/OklOQ0xVREV8T1JJR0lOfFRUTCkoPz1cXHN8JCkvbSxcbiAgICBjbGFzczoge1xuICAgICAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzEwMzUjcGFnZS0xM1xuICAgICAgcGF0dGVybjogLyhefFxccykoPzpDSHxDU3xIU3xJTikoPz1cXHN8JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHR5cGU6IHtcbiAgICAgIC8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpc3Rfb2ZfRE5TX3JlY29yZF90eXBlc1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFxccykoPzpBfEE2fEFBQUF8QUZTREJ8QVBMfEFUTUF8Q0FBfENETlNLRVl8Q0RTfENFUlR8Q05BTUV8REhDSUR8RExWfEROQU1FfEROU0tFWXxEU3xFSUR8R0lEfEdQT1N8SElORk98SElQfElQU0VDS0VZfElTRE58S0VZfEtYfExPQ3xNQUlMQXxNQUlMQnxNQnxNRHxNRnxNR3xNSU5GT3xNUnxNWHxOQVBUUnxOQnxOQlNUQVR8TklNTE9DfE5JTkZPfE5TfE5TQVB8TlNBUC1QVFJ8TlNFQ3xOU0VDM3xOU0VDM1BBUkFNfE5VTEx8TlhUfE9QRU5QR1BLRVl8UFRSfFBYfFJLRVl8UlB8UlJTSUd8UlR8U0lHfFNJTkt8U01JTUVBfFNPQXxTUEZ8U1JWfFNTSEZQfFRBfFRLRVl8VExTQXxUU0lHfFRYVHxVSUR8VUlORk98VU5TUEVDfFVSSXxXS1N8WDI1KSg/PVxcc3wkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCldL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlc1snZG5zLXpvbmUnXSA9IFByaXNtLmxhbmd1YWdlc1snZG5zLXpvbmUtZmlsZSddXG59XG4iXSwibmFtZXMiOlsiZG5zWm9uZUZpbGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwidmFyaWFibGUiLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImNsYXNzIiwiYWxpYXMiLCJ0eXBlIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dns-zone-file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/docker.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/docker.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ docker)\n/* harmony export */ });\n// @ts-nocheck\ndocker.displayName = \"docker\";\ndocker.aliases = [\n    \"dockerfile\"\n];\n/** @type {import('../core.js').Syntax} */ function docker(Prism) {\n    ;\n    (function(Prism) {\n        // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n        // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n        var spaceAfterBackSlash = /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source;\n        // At least one space, comment, or line break\n        var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(/<SP_BS>/g, function() {\n            return spaceAfterBackSlash;\n        });\n        var string = /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/.source;\n        var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(/<STR>/g, function() {\n            return string;\n        });\n        var stringRule = {\n            pattern: RegExp(string),\n            greedy: true\n        };\n        var commentRule = {\n            pattern: /(^[ \\t]*)#.*/m,\n            lookbehind: true,\n            greedy: true\n        };\n        /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */ function re(source, flags) {\n            source = source.replace(/<OPT>/g, function() {\n                return option;\n            }).replace(/<SP>/g, function() {\n                return space;\n            });\n            return RegExp(source, flags);\n        }\n        Prism.languages.docker = {\n            instruction: {\n                pattern: /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    options: {\n                        pattern: re(/(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source, \"i\"),\n                        lookbehind: true,\n                        greedy: true,\n                        inside: {\n                            property: {\n                                pattern: /(^|\\s)--[\\w-]+/,\n                                lookbehind: true\n                            },\n                            string: [\n                                stringRule,\n                                {\n                                    pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                                    lookbehind: true\n                                }\n                            ],\n                            operator: /\\\\$/m,\n                            punctuation: /=/\n                        }\n                    },\n                    keyword: [\n                        {\n                            // https://docs.docker.com/engine/reference/builder/#healthcheck\n                            pattern: re(/(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/.source, \"i\"),\n                            lookbehind: true,\n                            greedy: true\n                        },\n                        {\n                            // https://docs.docker.com/engine/reference/builder/#from\n                            pattern: re(/(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/.source, \"i\"),\n                            lookbehind: true,\n                            greedy: true\n                        },\n                        {\n                            // https://docs.docker.com/engine/reference/builder/#onbuild\n                            pattern: re(/(^ONBUILD<SP>)\\w+/.source, \"i\"),\n                            lookbehind: true,\n                            greedy: true\n                        },\n                        {\n                            pattern: /^\\w+/,\n                            greedy: true\n                        }\n                    ],\n                    comment: commentRule,\n                    string: stringRule,\n                    variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n                    operator: /\\\\$/m\n                }\n            },\n            comment: commentRule\n        };\n        Prism.languages.dockerfile = Prism.languages.docker;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/docker.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dot.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dot.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dot)\n/* harmony export */ });\n// @ts-nocheck\ndot.displayName = \"dot\";\ndot.aliases = [\n    \"gv\"\n];\n/** @type {import('../core.js').Syntax} */ function dot(Prism) {\n    // https://www.graphviz.org/doc/info/lang.html\n    ;\n    (function(Prism) {\n        var ID = \"(?:\" + [\n            // an identifier\n            /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source,\n            // a number\n            /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source,\n            // a double-quoted string\n            /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source,\n            // HTML-like string\n            /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/.source\n        ].join(\"|\") + \")\";\n        var IDInside = {\n            markup: {\n                pattern: /(^<)[\\s\\S]+(?=>$)/,\n                lookbehind: true,\n                alias: [\n                    \"language-markup\",\n                    \"language-html\",\n                    \"language-xml\"\n                ],\n                inside: Prism.languages.markup\n            }\n        };\n        /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */ function withID(source, flags) {\n            return RegExp(source.replace(/<ID>/g, function() {\n                return ID;\n            }), flags);\n        }\n        Prism.languages.dot = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n                greedy: true\n            },\n            \"graph-name\": {\n                pattern: withID(/(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source, \"i\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"class-name\",\n                inside: IDInside\n            },\n            \"attr-value\": {\n                pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            \"attr-name\": {\n                pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n            \"compass-point\": {\n                pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n                lookbehind: true,\n                alias: \"builtin\"\n            },\n            node: {\n                pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: IDInside\n            },\n            operator: /[=:]|-[->]/,\n            punctuation: /[\\[\\]{};,]/\n        };\n        Prism.languages.gv = Prism.languages.dot;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9kb3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBRXBCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CLDhDQUE4Qzs7SUFFNUMsVUFBVUEsS0FBSztRQUNmLElBQUlDLEtBQ0YsUUFDQTtZQUNFLGdCQUFnQjtZQUNoQix1Q0FBdUNDLE1BQU07WUFDN0MsV0FBVztZQUNYLDRCQUE0QkEsTUFBTTtZQUNsQyx5QkFBeUI7WUFDekIsZ0NBQWdDQSxNQUFNO1lBQ3RDLG1CQUFtQjtZQUNuQiwrRUFDR0EsTUFBTTtTQUNWLENBQUNDLElBQUksQ0FBQyxPQUNQO1FBQ0YsSUFBSUMsV0FBVztZQUNiQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxPQUFPO29CQUFDO29CQUFtQjtvQkFBaUI7aUJBQWU7Z0JBQzNEQyxRQUFRVCxNQUFNVSxTQUFTLENBQUNMLE1BQU07WUFDaEM7UUFDRjtRQUVBOzs7O0tBSUMsR0FDRCxTQUFTTSxPQUFPVCxNQUFNLEVBQUVVLEtBQUs7WUFDM0IsT0FBT0MsT0FDTFgsT0FBT1ksT0FBTyxDQUFDLFNBQVM7Z0JBQ3RCLE9BQU9iO1lBQ1QsSUFDQVc7UUFFSjtRQUNBWixNQUFNVSxTQUFTLENBQUNiLEdBQUcsR0FBRztZQUNwQmtCLFNBQVM7Z0JBQ1BULFNBQVM7Z0JBQ1RVLFFBQVE7WUFDVjtZQUNBLGNBQWM7Z0JBQ1pWLFNBQVNLLE9BQ1AsK0NBQStDVCxNQUFNLEVBQ3JEO2dCQUVGSyxZQUFZO2dCQUNaUyxRQUFRO2dCQUNSUixPQUFPO2dCQUNQQyxRQUFRTDtZQUNWO1lBQ0EsY0FBYztnQkFDWkUsU0FBU0ssT0FBTyxvQkFBb0JULE1BQU07Z0JBQzFDSyxZQUFZO2dCQUNaUyxRQUFRO2dCQUNSUCxRQUFRTDtZQUNWO1lBQ0EsYUFBYTtnQkFDWEUsU0FBU0ssT0FBTyxxQ0FBcUNULE1BQU07Z0JBQzNESyxZQUFZO2dCQUNaUyxRQUFRO2dCQUNSUCxRQUFRTDtZQUNWO1lBQ0FhLFNBQVM7WUFDVCxpQkFBaUI7Z0JBQ2ZYLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLE9BQU87WUFDVDtZQUNBVSxNQUFNO2dCQUNKWixTQUFTSyxPQUFPLCtCQUErQlQsTUFBTTtnQkFDckRLLFlBQVk7Z0JBQ1pTLFFBQVE7Z0JBQ1JQLFFBQVFMO1lBQ1Y7WUFDQWUsVUFBVTtZQUNWQyxhQUFhO1FBQ2Y7UUFDQXBCLE1BQU1VLFNBQVMsQ0FBQ1csRUFBRSxHQUFHckIsTUFBTVUsU0FBUyxDQUFDYixHQUFHO0lBQzFDLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZG90LmpzP2FiZjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmRvdC5kaXNwbGF5TmFtZSA9ICdkb3QnXG5kb3QuYWxpYXNlcyA9IFsnZ3YnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGRvdChQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5ncmFwaHZpei5vcmcvZG9jL2luZm8vbGFuZy5odG1sXG5cbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgSUQgPVxuICAgICAgJyg/OicgK1xuICAgICAgW1xuICAgICAgICAvLyBhbiBpZGVudGlmaWVyXG4gICAgICAgIC9bYS16QS1aX1xceDgwLVxcdUZGRkZdW1xcd1xceDgwLVxcdUZGRkZdKi8uc291cmNlLFxuICAgICAgICAvLyBhIG51bWJlclxuICAgICAgICAvLT8oPzpcXC5cXGQrfFxcZCsoPzpcXC5cXGQqKT8pLy5zb3VyY2UsXG4gICAgICAgIC8vIGEgZG91YmxlLXF1b3RlZCBzdHJpbmdcbiAgICAgICAgL1wiW15cIlxcXFxdKig/OlxcXFxbXFxzXFxTXVteXCJcXFxcXSopKlwiLy5zb3VyY2UsXG4gICAgICAgIC8vIEhUTUwtbGlrZSBzdHJpbmdcbiAgICAgICAgLzwoPzpbXjw+XXwoPyE8IS0tKTwoPzpbXjw+XCInXXxcIlteXCJdKlwifCdbXiddKicpKz58PCEtLSg/OlteLV18LSg/IS0+KSkqLS0+KSo+L1xuICAgICAgICAgIC5zb3VyY2VcbiAgICAgIF0uam9pbignfCcpICtcbiAgICAgICcpJ1xuICAgIHZhciBJREluc2lkZSA9IHtcbiAgICAgIG1hcmt1cDoge1xuICAgICAgICBwYXR0ZXJuOiAvKF48KVtcXHNcXFNdKyg/PT4kKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiBbJ2xhbmd1YWdlLW1hcmt1cCcsICdsYW5ndWFnZS1odG1sJywgJ2xhbmd1YWdlLXhtbCddLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXBcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGZsYWdzXG4gICAgICogQHJldHVybnMge1JlZ0V4cH1cbiAgICAgKi9cbiAgICBmdW5jdGlvbiB3aXRoSUQoc291cmNlLCBmbGFncykge1xuICAgICAgcmV0dXJuIFJlZ0V4cChcbiAgICAgICAgc291cmNlLnJlcGxhY2UoLzxJRD4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHJldHVybiBJRFxuICAgICAgICB9KSxcbiAgICAgICAgZmxhZ3NcbiAgICAgIClcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmRvdCA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC98XiMuKi9tLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnZ3JhcGgtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogd2l0aElEKFxuICAgICAgICAgIC8oXFxiKD86ZGlncmFwaHxncmFwaHxzdWJncmFwaClbIFxcdFxcclxcbl0rKTxJRD4vLnNvdXJjZSxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAgJ2F0dHItdmFsdWUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRCgvKD1bIFxcdFxcclxcbl0qKTxJRD4vLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBJREluc2lkZVxuICAgICAgfSxcbiAgICAgICdhdHRyLW5hbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdpdGhJRCgvKFtcXFs7LCBcXHRcXHJcXG5dKTxJRD4oPz1bIFxcdFxcclxcbl0qPSkvLnNvdXJjZSksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBJREluc2lkZVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IC9cXGIoPzpkaWdyYXBofGVkZ2V8Z3JhcGh8bm9kZXxzdHJpY3R8c3ViZ3JhcGgpXFxiL2ksXG4gICAgICAnY29tcGFzcy1wb2ludCc6IHtcbiAgICAgICAgcGF0dGVybjogLyg6WyBcXHRcXHJcXG5dKikoPzpbZXdjX118W25zXVtld10/KSg/IVtcXHdcXHg4MC1cXHVGRkZGXSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgICB9LFxuICAgICAgbm9kZToge1xuICAgICAgICBwYXR0ZXJuOiB3aXRoSUQoLyhefFteLS5cXHdcXHg4MC1cXHVGRkZGXFxcXF0pPElEPi8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IElESW5zaWRlXG4gICAgICB9LFxuICAgICAgb3BlcmF0b3I6IC9bPTpdfC1bLT5dLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXXt9OyxdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuZ3YgPSBQcmlzbS5sYW5ndWFnZXMuZG90XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImRvdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiSUQiLCJzb3VyY2UiLCJqb2luIiwiSURJbnNpZGUiLCJtYXJrdXAiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwibGFuZ3VhZ2VzIiwid2l0aElEIiwiZmxhZ3MiLCJSZWdFeHAiLCJyZXBsYWNlIiwiY29tbWVudCIsImdyZWVkeSIsImtleXdvcmQiLCJub2RlIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImd2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dot.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ebnf.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ebnf.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ebnf)\n/* harmony export */ });\n// @ts-nocheck\nebnf.displayName = \"ebnf\";\nebnf.aliases = [];\n/** @type {import('../core.js').Syntax} */ function ebnf(Prism) {\n    Prism.languages.ebnf = {\n        comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n            greedy: true\n        },\n        special: {\n            pattern: /\\?[^?\\r\\n]*\\?/,\n            greedy: true,\n            alias: \"class-name\"\n        },\n        definition: {\n            pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n            lookbehind: true,\n            alias: [\n                \"rule\",\n                \"keyword\"\n            ]\n        },\n        rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n        punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n        operator: /[-=|*/!]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lYm5mLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FBUztZQUNQRixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsT0FBTztRQUNUO1FBQ0FDLFlBQVk7WUFDVkosU0FBUztZQUNUSyxZQUFZO1lBQ1pGLE9BQU87Z0JBQUM7Z0JBQVE7YUFBVTtRQUM1QjtRQUNBRyxNQUFNO1FBQ05DLGFBQWE7UUFDYkMsVUFBVTtJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWJuZi5qcz8zMzBlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5lYm5mLmRpc3BsYXlOYW1lID0gJ2VibmYnXG5lYm5mLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVibmYoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmVibmYgPSB7XG4gICAgY29tbWVudDogL1xcKFxcKltcXHNcXFNdKj9cXCpcXCkvLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiW15cIlxcclxcbl0qXCJ8J1teJ1xcclxcbl0qJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHNwZWNpYWw6IHtcbiAgICAgIHBhdHRlcm46IC9cXD9bXj9cXHJcXG5dKlxcPy8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvXihbXFx0IF0qKVthLXpdXFx3Kig/OlsgXFx0XStbYS16XVxcdyopKig/PVxccyo9KS9pbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogWydydWxlJywgJ2tleXdvcmQnXVxuICAgIH0sXG4gICAgcnVsZTogL1xcYlthLXpdXFx3Kig/OlsgXFx0XStbYS16XVxcdyopKlxcYi9pLFxuICAgIHB1bmN0dWF0aW9uOiAvXFwoWzovXXxbOi9dXFwpfFsuLDsoKVtcXF17fV0vLFxuICAgIG9wZXJhdG9yOiAvWy09fCovIV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJlYm5mIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsInNwZWNpYWwiLCJhbGlhcyIsImRlZmluaXRpb24iLCJsb29rYmVoaW5kIiwicnVsZSIsInB1bmN0dWF0aW9uIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ebnf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/editorconfig.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/editorconfig.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ editorconfig)\n/* harmony export */ });\n// @ts-nocheck\neditorconfig.displayName = \"editorconfig\";\neditorconfig.aliases = [];\n/** @type {import('../core.js').Syntax} */ function editorconfig(Prism) {\n    Prism.languages.editorconfig = {\n        // https://editorconfig-specification.readthedocs.io\n        comment: /[;#].*/,\n        section: {\n            pattern: /(^[ \\t]*)\\[.+\\]/m,\n            lookbehind: true,\n            alias: \"selector\",\n            inside: {\n                regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n                // Escape special characters with '\\\\'\n                operator: /[!?]|\\.\\.|\\*{1,2}/,\n                punctuation: /[\\[\\]{},]/\n            }\n        },\n        key: {\n            pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        value: {\n            pattern: /=.*/,\n            alias: \"attr-value\",\n            inside: {\n                punctuation: /^=/\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lZGl0b3Jjb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsYUFBYUMsV0FBVyxHQUFHO0FBQzNCRCxhQUFhRSxPQUFPLEdBQUcsRUFBRTtBQUV6Qix3Q0FBd0MsR0FDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN4Q0EsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUc7UUFDN0Isb0RBQW9EO1FBQ3BESyxTQUFTO1FBQ1RDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLE9BQU87WUFDUEMsUUFBUTtnQkFDTkMsT0FBTztnQkFDUCxzQ0FBc0M7Z0JBQ3RDQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxLQUFLO1lBQ0hQLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQU0sT0FBTztZQUNMUixTQUFTO1lBQ1RFLE9BQU87WUFDUEMsUUFBUTtnQkFDTkcsYUFBYTtZQUNmO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VkaXRvcmNvbmZpZy5qcz9kMWY1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5lZGl0b3Jjb25maWcuZGlzcGxheU5hbWUgPSAnZWRpdG9yY29uZmlnJ1xuZWRpdG9yY29uZmlnLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVkaXRvcmNvbmZpZyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZWRpdG9yY29uZmlnID0ge1xuICAgIC8vIGh0dHBzOi8vZWRpdG9yY29uZmlnLXNwZWNpZmljYXRpb24ucmVhZHRoZWRvY3MuaW9cbiAgICBjb21tZW50OiAvWzsjXS4qLyxcbiAgICBzZWN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcdF0qKVxcWy4rXFxdL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzZWxlY3RvcicsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcmVnZXg6IC9cXFxcXFxcXFtcXFtcXF17fSwhPy4qXS8sXG4gICAgICAgIC8vIEVzY2FwZSBzcGVjaWFsIGNoYXJhY3RlcnMgd2l0aCAnXFxcXCdcbiAgICAgICAgb3BlcmF0b3I6IC9bIT9dfFxcLlxcLnxcXCp7MSwyfS8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXXt9LF0vXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXk6IHtcbiAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopW15cXHM9XSsoPz1bIFxcdF0qPSkvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICB9LFxuICAgIHZhbHVlOiB7XG4gICAgICBwYXR0ZXJuOiAvPS4qLyxcbiAgICAgIGFsaWFzOiAnYXR0ci12YWx1ZScsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9ePS9cbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJlZGl0b3Jjb25maWciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzZWN0aW9uIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImluc2lkZSIsInJlZ2V4Iiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImtleSIsInZhbHVlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/editorconfig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/eiffel.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/eiffel.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ eiffel)\n/* harmony export */ });\n// @ts-nocheck\neiffel.displayName = \"eiffel\";\neiffel.aliases = [];\n/** @type {import('../core.js').Syntax} */ function eiffel(Prism) {\n    Prism.languages.eiffel = {\n        comment: /--.*/,\n        string: [\n            // Aligned-verbatim-strings\n            {\n                pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n                greedy: true\n            },\n            // Non-aligned-verbatim-strings\n            {\n                pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n                greedy: true\n            },\n            // Single-line string\n            {\n                pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n                greedy: true\n            }\n        ],\n        // normal char | special char | char code\n        char: /'(?:%.|[^%'\\r\\n])+'/,\n        keyword: /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n        boolean: /\\b(?:False|True)\\b/i,\n        // Convention: class-names are always all upper-case characters\n        \"class-name\": /\\b[A-Z][\\dA-Z_]*\\b/,\n        number: [\n            // hexa | octal | bin\n            /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,\n            // Decimal\n            /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n        ],\n        punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n        operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9laWZmZWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOLDJCQUEyQjtZQUMzQjtnQkFDRUMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0EsK0JBQStCO1lBQy9CO2dCQUNFRCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQSxxQkFBcUI7WUFDckI7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtTQUNEO1FBQ0QseUNBQXlDO1FBQ3pDQyxNQUFNO1FBQ05DLFNBQ0U7UUFDRkMsU0FBUztRQUNULCtEQUErRDtRQUMvRCxjQUFjO1FBQ2RDLFFBQVE7WUFDTixxQkFBcUI7WUFDckI7WUFDQSxVQUFVO1lBQ1Y7U0FDRDtRQUNEQyxhQUFhO1FBQ2JDLFVBQVU7SUFDWjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VpZmZlbC5qcz9hZGY5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5laWZmZWwuZGlzcGxheU5hbWUgPSAnZWlmZmVsJ1xuZWlmZmVsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVpZmZlbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZWlmZmVsID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qLyxcbiAgICBzdHJpbmc6IFtcbiAgICAgIC8vIEFsaWduZWQtdmVyYmF0aW0tc3RyaW5nc1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoW15bXSopXFxbW1xcc1xcU10qP1xcXVxcMVwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gTm9uLWFsaWduZWQtdmVyYmF0aW0tc3RyaW5nc1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoW157XSopXFx7W1xcc1xcU10qP1xcfVxcMVwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gU2luZ2xlLWxpbmUgc3RyaW5nXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OiUoPzooPyFcXG4pXFxzKSpcXG5cXHMqJXwlXFxTfFteJVwiXFxyXFxuXSkqXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIC8vIG5vcm1hbCBjaGFyIHwgc3BlY2lhbCBjaGFyIHwgY2hhciBjb2RlXG4gICAgY2hhcjogLycoPzolLnxbXiUnXFxyXFxuXSkrJy8sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphY3Jvc3N8YWdlbnR8YWxpYXN8YWxsfGFuZHxhc3xhc3NpZ258YXR0YWNoZWR8YXR0cmlidXRlfGNoZWNrfGNsYXNzfGNvbnZlcnR8Y3JlYXRlfEN1cnJlbnR8ZGVidWd8ZGVmZXJyZWR8ZGV0YWNoYWJsZXxkb3xlbHNlfGVsc2VpZnxlbmR8ZW5zdXJlfGV4cGFuZGVkfGV4cG9ydHxleHRlcm5hbHxmZWF0dXJlfGZyb218ZnJvemVufGlmfGltcGxpZXN8aW5oZXJpdHxpbnNwZWN0fGludmFyaWFudHxsaWtlfGxvY2FsfGxvb3B8bm90fG5vdGV8b2Jzb2xldGV8b2xkfG9uY2V8b3J8UHJlY3Vyc29yfHJlZGVmaW5lfHJlbmFtZXxyZXF1aXJlfHJlc2N1ZXxSZXN1bHR8cmV0cnl8c2VsZWN0fHNlcGFyYXRlfHNvbWV8dGhlbnx1bmRlZmluZXx1bnRpbHx2YXJpYW50fFZvaWR8d2hlbnx4b3IpXFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZhbHNlfFRydWUpXFxiL2ksXG4gICAgLy8gQ29udmVudGlvbjogY2xhc3MtbmFtZXMgYXJlIGFsd2F5cyBhbGwgdXBwZXItY2FzZSBjaGFyYWN0ZXJzXG4gICAgJ2NsYXNzLW5hbWUnOiAvXFxiW0EtWl1bXFxkQS1aX10qXFxiLyxcbiAgICBudW1iZXI6IFtcbiAgICAgIC8vIGhleGEgfCBvY3RhbCB8IGJpblxuICAgICAgL1xcYjBbeGNiXVtcXGRhLWZdKD86XypbXFxkYS1mXSkqXFxiL2ksXG4gICAgICAvLyBEZWNpbWFsXG4gICAgICAvKD86XFxiXFxkKD86XypcXGQpKik/XFwuKD86KD86XFxkKD86XypcXGQpKik/ZVsrLV0/KT9cXGQoPzpfKlxcZCkqXFxifFxcYlxcZCg/Ol8qXFxkKSpcXGJcXC4/L2lcbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvOj18PDx8Pj58XFwoXFx8fFxcfFxcKXwtPnxcXC4oPz1cXHcpfFt7fVtcXF07KCksOj9dLyxcbiAgICBvcGVyYXRvcjogL1xcXFxcXFxcfFxcfFxcLlxcLlxcfHxcXC5cXC58XFwvW35cXC89XT98Wz48XT0/fFstKypePX5dL1xuICB9XG59XG4iXSwibmFtZXMiOlsiZWlmZmVsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImNoYXIiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsInB1bmN0dWF0aW9uIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/eiffel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ejs.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ejs.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ejs)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\n\nejs.displayName = \"ejs\";\nejs.aliases = [\n    \"eta\"\n];\n/** @type {import('../core.js').Syntax} */ function ejs(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.ejs = {\n            delimiter: {\n                pattern: /^<%[-_=]?|[-_]?%>$/,\n                alias: \"punctuation\"\n            },\n            comment: /^#[\\s\\S]*/,\n            \"language-javascript\": {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.javascript\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"ejs\", ejsPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"ejs\");\n        });\n        Prism.languages.eta = Prism.languages.ejs;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYztBQUNtQztBQUNhO0FBQzlERSxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRztJQUFDO0NBQU07QUFFckIsd0NBQXdDLEdBQ3pCLFNBQVNGLElBQUlHLEtBQUs7SUFDL0JBLE1BQU1DLFFBQVEsQ0FBQ04sc0RBQW1CQTtJQUNsQ0ssTUFBTUMsUUFBUSxDQUFDTCw2REFBeUJBO0lBQ3RDLFVBQVVJLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxHQUFHLEdBQUc7WUFDcEJNLFdBQVc7Z0JBQ1RDLFNBQVM7Z0JBQ1RDLE9BQU87WUFDVDtZQUNBQyxTQUFTO1lBQ1QsdUJBQXVCO2dCQUNyQkYsU0FBUztnQkFDVEcsUUFBUVAsTUFBTUUsU0FBUyxDQUFDTSxVQUFVO1lBQ3BDO1FBQ0Y7UUFDQVIsTUFBTVMsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUMsSUFBSUMsYUFBYTtZQUNqQlosTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDVyxpQkFBaUIsQ0FDcERGLEtBQ0EsT0FDQUM7UUFFSjtRQUNBWixNQUFNUyxLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsU0FBVUMsR0FBRztZQUM3Q1gsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDWSxvQkFBb0IsQ0FBQ0gsS0FBSztRQUNqRTtRQUNBWCxNQUFNRSxTQUFTLENBQUNhLEdBQUcsR0FBR2YsTUFBTUUsU0FBUyxDQUFDTCxHQUFHO0lBQzNDLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWpzLmpzPzY3N2IiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKYXZhc2NyaXB0IGZyb20gJy4vamF2YXNjcmlwdC5qcydcbmltcG9ydCByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIGZyb20gJy4vbWFya3VwLXRlbXBsYXRpbmcuanMnXG5lanMuZGlzcGxheU5hbWUgPSAnZWpzJ1xuZWpzLmFsaWFzZXMgPSBbJ2V0YSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZWpzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckphdmFzY3JpcHQpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmVqcyA9IHtcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXjwlWy1fPV0/fFstX10/JT4kLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBjb21tZW50OiAvXiNbXFxzXFxTXSovLFxuICAgICAgJ2xhbmd1YWdlLWphdmFzY3JpcHQnOiB7XG4gICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgdmFyIGVqc1BhdHRlcm4gPSAvPCUoPyElKVtcXHNcXFNdKz8lPi9nXG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10uYnVpbGRQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ2VqcycsXG4gICAgICAgIGVqc1BhdHRlcm5cbiAgICAgIClcbiAgICB9KVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAnZWpzJylcbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5ldGEgPSBQcmlzbS5sYW5ndWFnZXMuZWpzXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckphdmFzY3JpcHQiLCJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwiZWpzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImRlbGltaXRlciIsInBhdHRlcm4iLCJhbGlhcyIsImNvbW1lbnQiLCJpbnNpZGUiLCJqYXZhc2NyaXB0IiwiaG9va3MiLCJhZGQiLCJlbnYiLCJlanNQYXR0ZXJuIiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyIsImV0YSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ejs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elixir.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elixir.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ elixir)\n/* harmony export */ });\n// @ts-nocheck\nelixir.displayName = \"elixir\";\nelixir.aliases = [];\n/** @type {import('../core.js').Syntax} */ function elixir(Prism) {\n    Prism.languages.elixir = {\n        doc: {\n            pattern: /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n            inside: {\n                attribute: /^@\\w+/,\n                string: /['\"][\\s\\S]+/\n            }\n        },\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n        regex: {\n            pattern: /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n            greedy: true\n        },\n        string: [\n            {\n                // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n                pattern: /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n                greedy: true,\n                inside: {\n                }\n            },\n            {\n                pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n                greedy: true,\n                inside: {\n                }\n            },\n            {\n                // Multi-line strings are allowed\n                pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                greedy: true,\n                inside: {\n                }\n            }\n        ],\n        atom: {\n            // Look-behind prevents bad highlighting of the :: operator\n            pattern: /(^|[^:]):\\w+/,\n            lookbehind: true,\n            alias: \"symbol\"\n        },\n        module: {\n            pattern: /\\b[A-Z]\\w*\\b/,\n            alias: \"class-name\"\n        },\n        // Look-ahead prevents bad highlighting of the :: operator\n        \"attr-name\": /\\b\\w+\\??:(?!:)/,\n        argument: {\n            // Look-behind prevents bad highlighting of the && operator\n            pattern: /(^|[^&])&\\d+/,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        attribute: {\n            pattern: /@\\w+/,\n            alias: \"variable\"\n        },\n        function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n        number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n        keyword: /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n        boolean: /\\b(?:false|nil|true)\\b/,\n        operator: [\n            /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n            {\n                // We don't want to match <<\n                pattern: /([^<])<(?!<)/,\n                lookbehind: true\n            },\n            {\n                // We don't want to match >>\n                pattern: /([^>])>(?!>)/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /<<|>>|[.,%\\[\\]{}()]/\n    };\n    Prism.languages.elixir.string.forEach(function(o) {\n        o.inside = {\n            interpolation: {\n                pattern: /#\\{[^}]+\\}/,\n                inside: {\n                    delimiter: {\n                        pattern: /^#\\{|\\}$/,\n                        alias: \"punctuation\"\n                    },\n                    rest: Prism.languages.elixir\n                }\n            }\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lbGl4aXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLEtBQUs7WUFDSEMsU0FDRTtZQUNGQyxRQUFRO2dCQUNOQyxXQUFXO2dCQUNYQyxRQUFRO1lBQ1Y7UUFDRjtRQUNBQyxTQUFTO1lBQ1BKLFNBQVM7WUFDVEssUUFBUTtRQUNWO1FBQ0EsNkhBQTZIO1FBQzdIQyxPQUFPO1lBQ0xOLFNBQ0U7WUFDRkssUUFBUTtRQUNWO1FBQ0FGLFFBQVE7WUFDTjtnQkFDRSx1SkFBdUo7Z0JBQ3ZKSCxTQUNFO2dCQUNGSyxRQUFRO2dCQUNSSixRQUFRO2dCQUVSO1lBQ0Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEssUUFBUTtnQkFDUkosUUFBUTtnQkFFUjtZQUNGO1lBQ0E7Z0JBQ0UsaUNBQWlDO2dCQUNqQ0QsU0FBUztnQkFDVEssUUFBUTtnQkFDUkosUUFBUTtnQkFFUjtZQUNGO1NBQ0Q7UUFDRE0sTUFBTTtZQUNKLDJEQUEyRDtZQUMzRFAsU0FBUztZQUNUUSxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05WLFNBQVM7WUFDVFMsT0FBTztRQUNUO1FBQ0EsMERBQTBEO1FBQzFELGFBQWE7UUFDYkUsVUFBVTtZQUNSLDJEQUEyRDtZQUMzRFgsU0FBUztZQUNUUSxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBUCxXQUFXO1lBQ1RGLFNBQVM7WUFDVFMsT0FBTztRQUNUO1FBQ0FHLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtZQUNSO1lBQ0E7Z0JBQ0UsNEJBQTRCO2dCQUM1QmhCLFNBQVM7Z0JBQ1RRLFlBQVk7WUFDZDtZQUNBO2dCQUNFLDRCQUE0QjtnQkFDNUJSLFNBQVM7Z0JBQ1RRLFlBQVk7WUFDZDtTQUNEO1FBQ0RTLGFBQWE7SUFDZjtJQUNBcEIsTUFBTUMsU0FBUyxDQUFDSixNQUFNLENBQUNTLE1BQU0sQ0FBQ2UsT0FBTyxDQUFDLFNBQVVDLENBQUM7UUFDL0NBLEVBQUVsQixNQUFNLEdBQUc7WUFDVG1CLGVBQWU7Z0JBQ2JwQixTQUFTO2dCQUNUQyxRQUFRO29CQUNOb0IsV0FBVzt3QkFDVHJCLFNBQVM7d0JBQ1RTLE9BQU87b0JBQ1Q7b0JBQ0FhLE1BQU16QixNQUFNQyxTQUFTLENBQUNKLE1BQU07Z0JBQzlCO1lBQ0Y7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZWxpeGlyLmpzPzQ0MmUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmVsaXhpci5kaXNwbGF5TmFtZSA9ICdlbGl4aXInXG5lbGl4aXIuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZWxpeGlyKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5lbGl4aXIgPSB7XG4gICAgZG9jOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvQCg/OmRvY3xtb2R1bGVkb2MpXFxzKyg/OihcIlwiXCJ8JycnKVtcXHNcXFNdKj9cXDF8KFwifCcpKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwyKVteXFxcXFxcclxcbl0pKlxcMikvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGF0dHJpYnV0ZTogL15AXFx3Ky8sXG4gICAgICAgIHN0cmluZzogL1snXCJdW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIC8vIH5yXCJcIlwiZm9vXCJcIlwiIChtdWx0aS1saW5lKSwgfnInJydmb28nJycgKG11bHRpLWxpbmUpLCB+ci9mb28vLCB+cnxmb298LCB+clwiZm9vXCIsIH5yJ2ZvbycsIH5yKGZvbyksIH5yW2Zvb10sIH5ye2Zvb30sIH5yPGZvbz5cbiAgICByZWdleDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL35bclJdKD86KFwiXCJcInwnJycpKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdKStcXDF8KFtcXC98XCInXSkoPzpcXFxcLnwoPyFcXDIpW15cXFxcXFxyXFxuXSkrXFwyfFxcKCg/OlxcXFwufFteXFxcXClcXHJcXG5dKStcXCl8XFxbKD86XFxcXC58W15cXFxcXFxdXFxyXFxuXSkrXFxdfFxceyg/OlxcXFwufFteXFxcXH1cXHJcXG5dKStcXH18PCg/OlxcXFwufFteXFxcXD5cXHJcXG5dKSs+KVt1aXNteGZyXSovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gfnNcIlwiXCJmb29cIlwiXCIgKG11bHRpLWxpbmUpLCB+cycnJ2ZvbycnJyAobXVsdGktbGluZSksIH5zL2Zvby8sIH5zfGZvb3wsIH5zXCJmb29cIiwgfnMnZm9vJywgfnMoZm9vKSwgfnNbZm9vXSwgfnN7Zm9vfSAod2l0aCBpbnRlcnBvbGF0aW9uIGNhcmUpLCB+czxmb28+XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL35bY0NzU3dXXSg/OihcIlwiXCJ8JycnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkrXFwxfChbXFwvfFwiJ10pKD86XFxcXC58KD8hXFwyKVteXFxcXFxcclxcbl0pK1xcMnxcXCgoPzpcXFxcLnxbXlxcXFwpXFxyXFxuXSkrXFwpfFxcWyg/OlxcXFwufFteXFxcXFxcXVxcclxcbl0pK1xcXXxcXHsoPzpcXFxcLnwjXFx7W159XStcXH18Iyg/IVxceyl8W14jXFxcXH1cXHJcXG5dKStcXH18PCg/OlxcXFwufFteXFxcXD5cXHJcXG5dKSs+KVtjc2FdPy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgLy8gU2VlIGludGVycG9sYXRpb24gYmVsb3dcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcIlwiXCJ8JycnKVtcXHNcXFNdKj9cXDEvLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIC8vIFNlZSBpbnRlcnBvbGF0aW9uIGJlbG93XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIE11bHRpLWxpbmUgc3RyaW5ncyBhcmUgYWxsb3dlZFxuICAgICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgLy8gU2VlIGludGVycG9sYXRpb24gYmVsb3dcbiAgICAgICAgfVxuICAgICAgfVxuICAgIF0sXG4gICAgYXRvbToge1xuICAgICAgLy8gTG9vay1iZWhpbmQgcHJldmVudHMgYmFkIGhpZ2hsaWdodGluZyBvZiB0aGUgOjogb3BlcmF0b3JcbiAgICAgIHBhdHRlcm46IC8oXnxbXjpdKTpcXHcrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIG1vZHVsZToge1xuICAgICAgcGF0dGVybjogL1xcYltBLVpdXFx3KlxcYi8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICAvLyBMb29rLWFoZWFkIHByZXZlbnRzIGJhZCBoaWdobGlnaHRpbmcgb2YgdGhlIDo6IG9wZXJhdG9yXG4gICAgJ2F0dHItbmFtZSc6IC9cXGJcXHcrXFw/PzooPyE6KS8sXG4gICAgYXJndW1lbnQ6IHtcbiAgICAgIC8vIExvb2stYmVoaW5kIHByZXZlbnRzIGJhZCBoaWdobGlnaHRpbmcgb2YgdGhlICYmIG9wZXJhdG9yXG4gICAgICBwYXR0ZXJuOiAvKF58W14mXSkmXFxkKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIGF0dHJpYnV0ZToge1xuICAgICAgcGF0dGVybjogL0BcXHcrLyxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBmdW5jdGlvbjogL1xcYltfYS16QS1aXVxcdypbPyFdPyg/Oig/PVxccyooPzpcXC5cXHMqKT9cXCgpfCg/PVxcL1xcZCkpLyxcbiAgICBudW1iZXI6IC9cXGIoPzowW2JveF1bYS1mXFxkX10rfFxcZFtcXGRfXSopKD86XFwuW1xcZF9dKyk/KD86ZVsrLV0/W1xcZF9dKyk/XFxiL2ksXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphZnRlcnxhbGlhc3xhbmR8Y2FzZXxjYXRjaHxjb25kfGRlZig/OmNhbGxiYWNrfGRlbGVnYXRlfGV4Y2VwdGlvbnxpbXBsfG1hY3JvfG1vZHVsZXxufG5wfHB8cHJvdG9jb2x8c3RydWN0KT98ZG98ZWxzZXxlbmR8Zm58Zm9yfGlmfGltcG9ydHxub3R8b3J8cXVvdGV8cmFpc2V8cmVxdWlyZXxyZXNjdWV8dHJ5fHVubGVzc3x1bnF1b3RlfHVzZXx3aGVuKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG5pbHx0cnVlKVxcYi8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9cXGJpblxcYnwmJj98XFx8W3w+XT98XFxcXFxcXFx8Ojp8XFwuXFwuXFwuP3xcXCtcXCs/fC1bLT5dP3w8Wy09Pl18Pj18IT09P3xcXEIhfD0oPzo9PT98Wz5+XSk/fFsqXFwvXl0vLFxuICAgICAge1xuICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIG1hdGNoIDw8XG4gICAgICAgIHBhdHRlcm46IC8oW148XSk8KD8hPCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBXZSBkb24ndCB3YW50IHRvIG1hdGNoID4+XG4gICAgICAgIHBhdHRlcm46IC8oW14+XSk+KD8hPikvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBwdW5jdHVhdGlvbjogLzw8fD4+fFsuLCVcXFtcXF17fSgpXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuZWxpeGlyLnN0cmluZy5mb3JFYWNoKGZ1bmN0aW9uIChvKSB7XG4gICAgby5pbnNpZGUgPSB7XG4gICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8jXFx7W159XStcXH0vLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eI1xce3xcXH0kLyxcbiAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgfSxcbiAgICAgICAgICByZXN0OiBQcmlzbS5sYW5ndWFnZXMuZWxpeGlyXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsiZWxpeGlyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJkb2MiLCJwYXR0ZXJuIiwiaW5zaWRlIiwiYXR0cmlidXRlIiwic3RyaW5nIiwiY29tbWVudCIsImdyZWVkeSIsInJlZ2V4IiwiYXRvbSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsIm1vZHVsZSIsImFyZ3VtZW50IiwiZnVuY3Rpb24iLCJudW1iZXIiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJmb3JFYWNoIiwibyIsImludGVycG9sYXRpb24iLCJkZWxpbWl0ZXIiLCJyZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elixir.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elm.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elm.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ elm)\n/* harmony export */ });\n// @ts-nocheck\nelm.displayName = \"elm\";\nelm.aliases = [];\n/** @type {import('../core.js').Syntax} */ function elm(Prism) {\n    Prism.languages.elm = {\n        comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n        char: {\n            pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n            greedy: true\n        },\n        string: [\n            {\n                // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n                pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n                greedy: true\n            },\n            {\n                pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n                greedy: true\n            }\n        ],\n        \"import-statement\": {\n            // The imported or hidden names are not included in this import\n            // statement. This is because we want to highlight those exactly like\n            // we do for the names in the program.\n            pattern: /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n            lookbehind: true,\n            inside: {\n                keyword: /\\b(?:as|exposing|import)\\b/\n            }\n        },\n        keyword: /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n        // These are builtin variables only. Constructors are highlighted later as a constant.\n        builtin: /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n        // decimal integers and floating point numbers | hexadecimal integers\n        number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n        // Most of this is needed because of the meaning of a single '.'.\n        // If it stands alone freely, it is the function composition.\n        // It may also be a separator between a module name and an identifier => no\n        // operator. If it comes together with other special characters it is an\n        // operator too.\n        // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n        // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n        operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n        // In Elm, nearly everything is a variable, do not highlight these.\n        hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n        constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n        punctuation: /[{}[\\]|(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lbG0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsTUFBTTtZQUNKQyxTQUNFO1lBQ0ZDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ047Z0JBQ0UsMEVBQTBFO2dCQUMxRUYsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VELFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtTQUNEO1FBQ0Qsb0JBQW9CO1lBQ2xCLCtEQUErRDtZQUMvRCxxRUFBcUU7WUFDckUsc0NBQXNDO1lBQ3RDRCxTQUNFO1lBQ0ZHLFlBQVk7WUFDWkMsUUFBUTtnQkFDTkMsU0FBUztZQUNYO1FBQ0Y7UUFDQUEsU0FDRTtRQUNGLHNGQUFzRjtRQUN0RkMsU0FDRTtRQUNGLHFFQUFxRTtRQUNyRUMsUUFBUTtRQUNSLGlFQUFpRTtRQUNqRSw2REFBNkQ7UUFDN0QsMkVBQTJFO1FBQzNFLHdFQUF3RTtRQUN4RSxnQkFBZ0I7UUFDaEIseURBQXlEO1FBQ3pELDhFQUE4RTtRQUM5RUMsVUFBVTtRQUNWLG1FQUFtRTtRQUNuRUMsV0FBVztRQUNYQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VsbS5qcz84Mzc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5lbG0uZGlzcGxheU5hbWUgPSAnZWxtJ1xuZWxtLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVsbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZWxtID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qfFxcey1bXFxzXFxTXSo/LVxcfS8sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLycoPzpbXlxcXFwnXFxyXFxuXXxcXFxcKD86W2FiZm5ydHZcXFxcJ118XFxkK3x4WzAtOWEtZkEtRl0rfHVcXHtbMC05YS1mQS1GXStcXH0pKScvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gTXVsdGlsaW5lIHN0cmluZ3MgYXJlIHdyYXBwZWQgaW4gdHJpcGxlIFwiLiBRdW90ZXMgbWF5IGFwcGVhciB1bmVzY2FwZWQuXG4gICAgICAgIHBhdHRlcm46IC9cIlwiXCJbXFxzXFxTXSo/XCJcIlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlxcXFxcIlxcclxcbl18XFxcXC4pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICAnaW1wb3J0LXN0YXRlbWVudCc6IHtcbiAgICAgIC8vIFRoZSBpbXBvcnRlZCBvciBoaWRkZW4gbmFtZXMgYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGlzIGltcG9ydFxuICAgICAgLy8gc3RhdGVtZW50LiBUaGlzIGlzIGJlY2F1c2Ugd2Ugd2FudCB0byBoaWdobGlnaHQgdGhvc2UgZXhhY3RseSBsaWtlXG4gICAgICAvLyB3ZSBkbyBmb3IgdGhlIG5hbWVzIGluIHRoZSBwcm9ncmFtLlxuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKilpbXBvcnRcXHMrW0EtWl1cXHcqKD86XFwuW0EtWl1cXHcqKSooPzpcXHMrYXNcXHMrKD86W0EtWl1cXHcqKSg/OlxcLltBLVpdXFx3KikqKT8oPzpcXHMrZXhwb3NpbmdcXHMrKT8vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OmFzfGV4cG9zaW5nfGltcG9ydClcXGIvXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFsaWFzfGFzfGNhc2V8ZWxzZXxleHBvc2luZ3xpZnxpbnxpbmZpeGx8aW5maXhyfGxldHxtb2R1bGV8b2Z8dGhlbnx0eXBlKVxcYi8sXG4gICAgLy8gVGhlc2UgYXJlIGJ1aWx0aW4gdmFyaWFibGVzIG9ubHkuIENvbnN0cnVjdG9ycyBhcmUgaGlnaGxpZ2h0ZWQgbGF0ZXIgYXMgYSBjb25zdGFudC5cbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OmFic3xhY29zfGFsd2F5c3xhc2lufGF0YW58YXRhbjJ8Y2VpbGluZ3xjbGFtcHxjb21wYXJlfGNvc3xjdXJyeXxkZWdyZWVzfGV8ZmxpcHxmbG9vcnxmcm9tUG9sYXJ8aWRlbnRpdHl8aXNJbmZpbml0ZXxpc05hTnxsb2dCYXNlfG1heHxtaW58bmVnYXRlfG5ldmVyfG5vdHxwaXxyYWRpYW5zfHJlbXxyb3VuZHxzaW58c3FydHx0YW58dG9GbG9hdHx0b1BvbGFyfHRvU3RyaW5nfHRydW5jYXRlfHR1cm5zfHVuY3Vycnl8eG9yKVxcYi8sXG4gICAgLy8gZGVjaW1hbCBpbnRlZ2VycyBhbmQgZmxvYXRpbmcgcG9pbnQgbnVtYmVycyB8IGhleGFkZWNpbWFsIGludGVnZXJzXG4gICAgbnVtYmVyOiAvXFxiKD86XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspP3wweFswLTlhLWZdKylcXGIvaSxcbiAgICAvLyBNb3N0IG9mIHRoaXMgaXMgbmVlZGVkIGJlY2F1c2Ugb2YgdGhlIG1lYW5pbmcgb2YgYSBzaW5nbGUgJy4nLlxuICAgIC8vIElmIGl0IHN0YW5kcyBhbG9uZSBmcmVlbHksIGl0IGlzIHRoZSBmdW5jdGlvbiBjb21wb3NpdGlvbi5cbiAgICAvLyBJdCBtYXkgYWxzbyBiZSBhIHNlcGFyYXRvciBiZXR3ZWVuIGEgbW9kdWxlIG5hbWUgYW5kIGFuIGlkZW50aWZpZXIgPT4gbm9cbiAgICAvLyBvcGVyYXRvci4gSWYgaXQgY29tZXMgdG9nZXRoZXIgd2l0aCBvdGhlciBzcGVjaWFsIGNoYXJhY3RlcnMgaXQgaXMgYW5cbiAgICAvLyBvcGVyYXRvciB0b28uXG4gICAgLy8gVmFsaWQgb3BlcmF0b3IgY2hhcmFjdGVycyBpbiAwLjE4OiArLS8qPS4kPD46JnxePyUjQH4hXG4gICAgLy8gUmVmOiBodHRwczovL2dyb3Vwcy5nb29nbGUuY29tL2ZvcnVtLyMhbXNnL2VsbS1kZXYvMEFIU25EZGtTa1EvRTBTVlU3MEpFUUFKXG4gICAgb3BlcmF0b3I6IC9cXHNcXC5cXHN8WytcXC0vKj0uJDw+OiZ8Xj8lI0B+IV17Mix9fFsrXFwtLyo9JDw+OiZ8Xj8lI0B+IV0vLFxuICAgIC8vIEluIEVsbSwgbmVhcmx5IGV2ZXJ5dGhpbmcgaXMgYSB2YXJpYWJsZSwgZG8gbm90IGhpZ2hsaWdodCB0aGVzZS5cbiAgICBodmFyaWFibGU6IC9cXGIoPzpbQS1aXVxcdypcXC4pKlthLXpdXFx3KlxcYi8sXG4gICAgY29uc3RhbnQ6IC9cXGIoPzpbQS1aXVxcdypcXC4pKltBLVpdXFx3KlxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdfCgpLC46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImVsbSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImNoYXIiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwibG9va2JlaGluZCIsImluc2lkZSIsImtleXdvcmQiLCJidWlsdGluIiwibnVtYmVyIiwib3BlcmF0b3IiLCJodmFyaWFibGUiLCJjb25zdGFudCIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erb.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erb.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ erb)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n/* harmony import */ var _ruby_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ruby.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js\");\n// @ts-nocheck\n\n\nerb.displayName = \"erb\";\nerb.aliases = [];\n/** @type {import('../core.js').Syntax} */ function erb(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_ruby_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.erb = {\n            delimiter: {\n                pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            ruby: {\n                pattern: /\\s*\\S[\\s\\S]*/,\n                alias: \"language-ruby\",\n                inside: Prism.languages.ruby\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var erbPattern = /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"erb\", erbPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"erb\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lcmIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYztBQUNnRDtBQUN6QjtBQUNyQ0UsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsUUFBUSxDQUFDTiw2REFBeUJBO0lBQ3hDSyxNQUFNQyxRQUFRLENBQUNMLGdEQUFhQTtJQUMxQixVQUFVSSxLQUFLO1FBQ2ZBLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxHQUFHO1lBQ3BCTSxXQUFXO2dCQUNUQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQUMsTUFBTTtnQkFDSkgsU0FBUztnQkFDVEUsT0FBTztnQkFDUEUsUUFBUVIsTUFBTUUsU0FBUyxDQUFDSyxJQUFJO1lBQzlCO1FBQ0Y7UUFDQVAsTUFBTVMsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUMsSUFBSUMsYUFDRjtZQUNGWixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNXLGlCQUFpQixDQUNwREYsS0FDQSxPQUNBQztRQUVKO1FBQ0FaLE1BQU1TLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDWCxNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNZLG9CQUFvQixDQUFDSCxLQUFLO1FBQ2pFO0lBQ0YsR0FBR1g7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lcmIuanM/M2ZhMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgZnJvbSAnLi9tYXJrdXAtdGVtcGxhdGluZy5qcydcbmltcG9ydCByZWZyYWN0b3JSdWJ5IGZyb20gJy4vcnVieS5qcydcbmVyYi5kaXNwbGF5TmFtZSA9ICdlcmInXG5lcmIuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXJiKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclJ1YnkpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmVyYiA9IHtcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXihcXHMqKTwlPT98JT4oPz1cXHMqJCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIHJ1Ynk6IHtcbiAgICAgICAgcGF0dGVybjogL1xccypcXFNbXFxzXFxTXSovLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLXJ1YnknLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5ydWJ5XG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgdmFyIGVyYlBhdHRlcm4gPVxuICAgICAgICAvPCU9Pyg/OlteXFxyXFxuXXxbXFxyXFxuXSg/IT1iZWdpbil8W1xcclxcbl09YmVnaW5cXHMoPzpbXlxcclxcbl18W1xcclxcbl0oPyE9ZW5kKSkqW1xcclxcbl09ZW5kKSs/JT4vZ1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgICBlbnYsXG4gICAgICAgICdlcmInLFxuICAgICAgICBlcmJQYXR0ZXJuXG4gICAgICApXG4gICAgfSlcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2FmdGVyLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLnRva2VuaXplUGxhY2Vob2xkZXJzKGVudiwgJ2VyYicpXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyIsInJlZnJhY3RvclJ1YnkiLCJlcmIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZGVsaW1pdGVyIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInJ1YnkiLCJpbnNpZGUiLCJob29rcyIsImFkZCIsImVudiIsImVyYlBhdHRlcm4iLCJidWlsZFBsYWNlaG9sZGVycyIsInRva2VuaXplUGxhY2Vob2xkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erb.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erlang.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erlang.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ erlang)\n/* harmony export */ });\n// @ts-nocheck\nerlang.displayName = \"erlang\";\nerlang.aliases = [];\n/** @type {import('../core.js').Syntax} */ function erlang(Prism) {\n    Prism.languages.erlang = {\n        comment: /%.+/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n            greedy: true\n        },\n        \"quoted-function\": {\n            pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n            alias: \"function\"\n        },\n        \"quoted-atom\": {\n            pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n            alias: \"atom\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\b(?:after|begin|case|catch|end|fun|if|of|receive|try|when)\\b/,\n        number: [\n            /\\$\\\\?./,\n            /\\b\\d+#[a-z0-9]+/i,\n            /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n        ],\n        function: /\\b[a-z][\\w@]*(?=\\()/,\n        variable: {\n            // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n            pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n            lookbehind: true\n        },\n        operator: [\n            /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n            {\n                // We don't want to match <<\n                pattern: /(^|[^<])<(?!<)/,\n                lookbehind: true\n            },\n            {\n                // We don't want to match >>\n                pattern: /(^|[^>])>(?!>)/,\n                lookbehind: true\n            }\n        ],\n        atom: /\\b[a-z][\\w@]*/,\n        punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9lcmxhbmcuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLG1CQUFtQjtZQUNqQkQsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQSxlQUFlO1lBQ2JGLFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FDLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxRQUFRO1lBQ047WUFDQTtZQUNBO1NBQ0Q7UUFDREMsVUFBVTtRQUNWQyxVQUFVO1lBQ1IsNEVBQTRFO1lBQzVFUCxTQUFTO1lBQ1RRLFlBQVk7UUFDZDtRQUNBQyxVQUFVO1lBQ1I7WUFDQTtnQkFDRSw0QkFBNEI7Z0JBQzVCVCxTQUFTO2dCQUNUUSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSw0QkFBNEI7Z0JBQzVCUixTQUFTO2dCQUNUUSxZQUFZO1lBQ2Q7U0FDRDtRQUNERSxNQUFNO1FBQ05DLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2VybGFuZy5qcz8xZTkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5lcmxhbmcuZGlzcGxheU5hbWUgPSAnZXJsYW5nJ1xuZXJsYW5nLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGVybGFuZyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZXJsYW5nID0ge1xuICAgIGNvbW1lbnQ6IC8lLisvLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXC58W15cXFxcXCJcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdxdW90ZWQtZnVuY3Rpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvJyg/OlxcXFwufFteXFxcXCdcXHJcXG5dKSsnKD89XFwoKS8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgJ3F1b3RlZC1hdG9tJzoge1xuICAgICAgcGF0dGVybjogLycoPzpcXFxcLnxbXlxcXFwnXFxyXFxuXSkrJy8sXG4gICAgICBhbGlhczogJ2F0b20nXG4gICAgfSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIGtleXdvcmQ6IC9cXGIoPzphZnRlcnxiZWdpbnxjYXNlfGNhdGNofGVuZHxmdW58aWZ8b2Z8cmVjZWl2ZXx0cnl8d2hlbilcXGIvLFxuICAgIG51bWJlcjogW1xuICAgICAgL1xcJFxcXFw/Li8sXG4gICAgICAvXFxiXFxkKyNbYS16MC05XSsvaSxcbiAgICAgIC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/L2lcbiAgICBdLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel1bXFx3QF0qKD89XFwoKS8sXG4gICAgdmFyaWFibGU6IHtcbiAgICAgIC8vIExvb2stYmVoaW5kIGlzIHVzZWQgdG8gcHJldmVudCB3cm9uZyBoaWdobGlnaHRpbmcgb2YgYXRvbXMgY29udGFpbmluZyBcIkBcIlxuICAgICAgcGF0dGVybjogLyhefFteQF0pKD86XFxifFxcPylbQS1aX11bXFx3QF0qLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICAvWz1cXC88PjpdPXw9WzpcXC9dPXxcXCtcXCs/fC0tP3xbPSpcXC8hXXxcXGIoPzphbmR8YW5kYWxzb3xiYW5kfGJub3R8Ym9yfGJzbHxic3J8YnhvcnxkaXZ8bm90fG9yfG9yZWxzZXxyZW18eG9yKVxcYi8sXG4gICAgICB7XG4gICAgICAgIC8vIFdlIGRvbid0IHdhbnQgdG8gbWF0Y2ggPDxcbiAgICAgICAgcGF0dGVybjogLyhefFtePF0pPCg/ITwpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byBtYXRjaCA+PlxuICAgICAgICBwYXR0ZXJuOiAvKF58W14+XSk+KD8hPikvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBhdG9tOiAvXFxiW2Etel1bXFx3QF0qLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKVtcXF17fTo7LC4jfF18PDx8Pj4vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJlcmxhbmciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJib29sZWFuIiwia2V5d29yZCIsIm51bWJlciIsImZ1bmN0aW9uIiwidmFyaWFibGUiLCJsb29rYmVoaW5kIiwib3BlcmF0b3IiLCJhdG9tIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erlang.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/etlua.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/etlua.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ etlua)\n/* harmony export */ });\n/* harmony import */ var _lua_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lua.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lua.js\");\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\n\netlua.displayName = \"etlua\";\netlua.aliases = [];\n/** @type {import('../core.js').Syntax} */ function etlua(Prism) {\n    Prism.register(_lua_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.etlua = {\n            delimiter: {\n                pattern: /^<%[-=]?|-?%>$/,\n                alias: \"punctuation\"\n            },\n            \"language-lua\": {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.lua\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var pattern = /<%[\\s\\S]+?%>/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"etlua\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"etlua\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ldGx1YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxjQUFjO0FBQ3FCO0FBQzJCO0FBQzlERSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxRQUFRLENBQUNOLCtDQUFZQTtJQUMzQkssTUFBTUMsUUFBUSxDQUFDTCw2REFBeUJBO0lBQ3RDLFVBQVVJLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUc7WUFDdEJNLFdBQVc7Z0JBQ1RDLFNBQVM7Z0JBQ1RDLE9BQU87WUFDVDtZQUNBLGdCQUFnQjtnQkFDZEQsU0FBUztnQkFDVEUsUUFBUU4sTUFBTUUsU0FBUyxDQUFDSyxHQUFHO1lBQzdCO1FBQ0Y7UUFDQVAsTUFBTVEsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDOUMsSUFBSU4sVUFBVTtZQUNkSixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNTLGlCQUFpQixDQUNwREQsS0FDQSxTQUNBTjtRQUVKO1FBQ0FKLE1BQU1RLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDVixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNVLG9CQUFvQixDQUFDRixLQUFLO1FBQ2pFO0lBQ0YsR0FBR1Y7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ldGx1YS5qcz9lZWQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yTHVhIGZyb20gJy4vbHVhLmpzJ1xuaW1wb3J0IHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgZnJvbSAnLi9tYXJrdXAtdGVtcGxhdGluZy5qcydcbmV0bHVhLmRpc3BsYXlOYW1lID0gJ2V0bHVhJ1xuZXRsdWEuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXRsdWEoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTHVhKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5ldGx1YSA9IHtcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXjwlWy09XT98LT8lPiQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgICdsYW5ndWFnZS1sdWEnOiB7XG4gICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5sdWFcbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICB2YXIgcGF0dGVybiA9IC88JVtcXHNcXFNdKz8lPi9nXG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10uYnVpbGRQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ2V0bHVhJyxcbiAgICAgICAgcGF0dGVyblxuICAgICAgKVxuICAgIH0pXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdldGx1YScpXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTHVhIiwicmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyIsImV0bHVhIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImRlbGltaXRlciIsInBhdHRlcm4iLCJhbGlhcyIsImluc2lkZSIsImx1YSIsImhvb2tzIiwiYWRkIiwiZW52IiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/etlua.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/excel-formula.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/excel-formula.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ excelFormula)\n/* harmony export */ });\n// @ts-nocheck\nexcelFormula.displayName = \"excel-formula\";\nexcelFormula.aliases = [\n    \"xls\",\n    \"xlsx\"\n];\n/** @type {import('../core.js').Syntax} */ function excelFormula(Prism) {\n    Prism.languages[\"excel-formula\"] = {\n        comment: {\n            pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        reference: {\n            // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n            // Sales!B2\n            // 'Winter sales'!B2\n            // [Sales.xlsx]Jan!B2:B5\n            // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n            // '[Sales.xlsx]Jan sales'!B2:B5\n            // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n            pattern: /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n            greedy: true,\n            alias: \"string\",\n            inside: {\n                operator: /!$/,\n                punctuation: /'/,\n                sheet: {\n                    pattern: /[^[\\]]+$/,\n                    alias: \"function\"\n                },\n                file: {\n                    pattern: /\\[[^[\\]]+\\]$/,\n                    inside: {\n                        punctuation: /[[\\]]/\n                    }\n                },\n                path: /[\\s\\S]+/\n            }\n        },\n        \"function-name\": {\n            pattern: /\\b[A-Z]\\w*(?=\\()/i,\n            alias: \"builtin\"\n        },\n        range: {\n            pattern: /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n            alias: \"selector\",\n            inside: {\n                operator: /:/,\n                cell: /\\$?[A-Z]+\\$?\\d+/i,\n                column: /\\$?[A-Z]+/i,\n                row: /\\$?\\d+/\n            }\n        },\n        cell: {\n            // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n            // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n            pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n            alias: \"selector\"\n        },\n        number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n        boolean: /\\b(?:FALSE|TRUE)\\b/i,\n        operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n        punctuation: /[[\\]();{}|]/\n    };\n    Prism.languages[\"xlsx\"] = Prism.languages[\"xls\"] = Prism.languages[\"excel-formula\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9leGNlbC1mb3JtdWxhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHO0lBQUM7SUFBTztDQUFPO0FBRXRDLHdDQUF3QyxHQUN6QixTQUFTRixhQUFhRyxLQUFLO0lBQ3hDQSxNQUFNQyxTQUFTLENBQUMsZ0JBQWdCLEdBQUc7UUFDakNDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05ILFNBQVM7WUFDVEUsUUFBUTtRQUNWO1FBQ0FFLFdBQVc7WUFDVCxpR0FBaUc7WUFFakcsV0FBVztZQUNYLG9CQUFvQjtZQUNwQix3QkFBd0I7WUFDeEIsbUNBQW1DO1lBQ25DLGdDQUFnQztZQUNoQywyQ0FBMkM7WUFFM0NKLFNBQ0U7WUFDRkUsUUFBUTtZQUNSRyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05DLFVBQVU7Z0JBQ1ZDLGFBQWE7Z0JBQ2JDLE9BQU87b0JBQ0xULFNBQVM7b0JBQ1RLLE9BQU87Z0JBQ1Q7Z0JBQ0FLLE1BQU07b0JBQ0pWLFNBQVM7b0JBQ1RNLFFBQVE7d0JBQ05FLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0FHLE1BQU07WUFDUjtRQUNGO1FBQ0EsaUJBQWlCO1lBQ2ZYLFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FPLE9BQU87WUFDTFosU0FDRTtZQUNGSyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05DLFVBQVU7Z0JBQ1ZNLE1BQU07Z0JBQ05DLFFBQVE7Z0JBQ1JDLEtBQUs7WUFDUDtRQUNGO1FBQ0FGLE1BQU07WUFDSix3RkFBd0Y7WUFDeEYsa0hBQWtIO1lBQ2xIYixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBVyxRQUFRO1FBQ1JDLFNBQVM7UUFDVFYsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQVgsTUFBTUMsU0FBUyxDQUFDLE9BQU8sR0FBR0QsTUFBTUMsU0FBUyxDQUFDLE1BQU0sR0FDOUNELE1BQU1DLFNBQVMsQ0FBQyxnQkFBZ0I7QUFDcEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZXhjZWwtZm9ybXVsYS5qcz8xZjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5leGNlbEZvcm11bGEuZGlzcGxheU5hbWUgPSAnZXhjZWwtZm9ybXVsYSdcbmV4Y2VsRm9ybXVsYS5hbGlhc2VzID0gWyd4bHMnLCAneGxzeCddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZXhjZWxGb3JtdWxhKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlc1snZXhjZWwtZm9ybXVsYSddID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiTlxcKFxccyopXCIoPzpbXlwiXXxcIlwiKSpcIig/PVxccypcXCkpL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJdfFwiXCIpKlwiKD8hXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgcmVmZXJlbmNlOiB7XG4gICAgICAvLyBodHRwczovL3d3dy5hYmxlYml0cy5jb20vb2ZmaWNlLWFkZGlucy1ibG9nLzIwMTUvMTIvMDgvZXhjZWwtcmVmZXJlbmNlLWFub3RoZXItc2hlZXQtd29ya2Jvb2svXG5cbiAgICAgIC8vIFNhbGVzIUIyXG4gICAgICAvLyAnV2ludGVyIHNhbGVzJyFCMlxuICAgICAgLy8gW1NhbGVzLnhsc3hdSmFuIUIyOkI1XG4gICAgICAvLyBEOlxcUmVwb3J0c1xcW1NhbGVzLnhsc3hdSmFuIUIyOkI1XG4gICAgICAvLyAnW1NhbGVzLnhsc3hdSmFuIHNhbGVzJyFCMjpCNVxuICAgICAgLy8gJ0Q6XFxSZXBvcnRzXFxbU2FsZXMueGxzeF1KYW4gc2FsZXMnIUIyOkI1XG5cbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oPzonW14nXSonfCg/OlteXFxzKClbXFxde308Pio/XCInOywkJl0qXFxbW15eXFxzKClbXFxde308Pio/XCInXStcXF0pP1xcdyspIS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZycsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgb3BlcmF0b3I6IC8hJC8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvJy8sXG4gICAgICAgIHNoZWV0OiB7XG4gICAgICAgICAgcGF0dGVybjogL1teW1xcXV0rJC8sXG4gICAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgZmlsZToge1xuICAgICAgICAgIHBhdHRlcm46IC9cXFtbXltcXF1dK1xcXSQvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bW1xcXV0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwYXRoOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgJ2Z1bmN0aW9uLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW0EtWl1cXHcqKD89XFwoKS9pLFxuICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgIH0sXG4gICAgcmFuZ2U6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXCQ/XFxiKD86W0EtWl0rXFwkP1xcZCs6XFwkP1tBLVpdK1xcJD9cXGQrfFtBLVpdKzpcXCQ/W0EtWl0rfFxcZCs6XFwkP1xcZCspXFxiL2ksXG4gICAgICBhbGlhczogJ3NlbGVjdG9yJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBvcGVyYXRvcjogLzovLFxuICAgICAgICBjZWxsOiAvXFwkP1tBLVpdK1xcJD9cXGQrL2ksXG4gICAgICAgIGNvbHVtbjogL1xcJD9bQS1aXSsvaSxcbiAgICAgICAgcm93OiAvXFwkP1xcZCsvXG4gICAgICB9XG4gICAgfSxcbiAgICBjZWxsOiB7XG4gICAgICAvLyBFeGNlbCBpcyBjYXNlIGluc2Vuc2l0aXZlLCBzbyB0aGUgc3RyaW5nIFwiZm9vMVwiIGNvdWxkIGJlIGVpdGhlciBhIHZhcmlhYmxlIG9yIGEgY2VsbC5cbiAgICAgIC8vIFRvIGNvbWJhdCB0aGlzLCB3ZSBtYXRjaCBjZWxscyBjYXNlIGluc2Vuc2l0aXZlLCBpZiB0aGUgY29udGFpbiBhdCBsZWFzdCBvbmUgXCIkXCIsIGFuZCBjYXNlIHNlbnNpdGl2ZSBvdGhlcndpc2UuXG4gICAgICBwYXR0ZXJuOiAvXFxiW0EtWl0rXFxkK1xcYnxcXCRbQS1aYS16XStcXCQ/XFxkK1xcYnxcXGJbQS1aYS16XStcXCRcXGQrXFxiLyxcbiAgICAgIGFsaWFzOiAnc2VsZWN0b3InXG4gICAgfSxcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKyk/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/XFxiL2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfFRSVUUpXFxiL2ksXG4gICAgb3BlcmF0b3I6IC9bLSsqL14lPSYsXXw8Wz0+XT98Pj0/LyxcbiAgICBwdW5jdHVhdGlvbjogL1tbXFxdKCk7e318XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXNbJ3hsc3gnXSA9IFByaXNtLmxhbmd1YWdlc1sneGxzJ10gPVxuICAgIFByaXNtLmxhbmd1YWdlc1snZXhjZWwtZm9ybXVsYSddXG59XG4iXSwibmFtZXMiOlsiZXhjZWxGb3JtdWxhIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJyZWZlcmVuY2UiLCJhbGlhcyIsImluc2lkZSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJzaGVldCIsImZpbGUiLCJwYXRoIiwicmFuZ2UiLCJjZWxsIiwiY29sdW1uIiwicm93IiwibnVtYmVyIiwiYm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/excel-formula.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/factor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/factor.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ factor)\n/* harmony export */ });\n// @ts-nocheck\nfactor.displayName = \"factor\";\nfactor.aliases = [];\n/** @type {import('../core.js').Syntax} */ function factor(Prism) {\n    ;\n    (function(Prism) {\n        var comment_inside = {\n            function: /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n        };\n        var string_inside = {\n            number: /\\\\[^\\s']|%\\w/\n        };\n        var factor = {\n            comment: [\n                {\n                    // ! single-line exclamation point comments with whitespace after/around the !\n                    pattern: /(^|\\s)(?:! .*|!$)/,\n                    lookbehind: true,\n                    inside: comment_inside\n                } /* from basis/multiline: */ ,\n                {\n                    // /* comment */, /* comment*/\n                    pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: comment_inside\n                },\n                {\n                    // ![[ comment ]] , ![===[ comment]===]\n                    pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: comment_inside\n                }\n            ],\n            number: [\n                {\n                    // basic base 10 integers 9, -9\n                    pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n                    pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n                    lookbehind: true\n                },\n                {\n                    // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n                    pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // positive mixed numbers 23+1/5 +23+1/5\n                    pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // negative mixed numbers -23-1/5\n                    pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n                    // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n                    pattern: /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n                    lookbehind: true\n                },\n                {\n                    // NAN literal syntax NAN: 80000deadbeef, NAN: a\n                    pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n                    lookbehind: true\n                },\n                {\n                    /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/ pattern: /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n                    lookbehind: true\n                }\n            ],\n            // R/ regexp?\\/\\\\/\n            regexp: {\n                pattern: /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"number\",\n                inside: {\n                    variable: /\\\\\\S/,\n                    keyword: /[+?*\\[\\]^$(){}.|]/,\n                    operator: {\n                        pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n                        lookbehind: true\n                    }\n                }\n            },\n            boolean: {\n                pattern: /(^|\\s)[tf](?=\\s|$)/,\n                lookbehind: true\n            },\n            // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n            \"custom-string\": {\n                pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n                lookbehind: true,\n                greedy: true,\n                alias: \"string\",\n                inside: {\n                    number: /\\\\\\S|%\\w|\\//\n                }\n            },\n            \"multiline-string\": [\n                {\n                    // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n                    pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        number: string_inside.number,\n                        // trailing semicolon on its own line\n                        \"semicolon-or-setlocal\": {\n                            pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n                            lookbehind: true,\n                            alias: \"function\"\n                        }\n                    }\n                },\n                {\n                    // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n                    pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: string_inside\n                },\n                {\n                    // [[ string ]], [==[ string]==]\n                    pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: string_inside\n                }\n            ],\n            \"special-using\": {\n                pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n                lookbehind: true,\n                alias: \"function\",\n                inside: {\n                    // this is essentially a regex for vocab names, which i don't want to specify\n                    // but the USING: gets picked up as a vocab name\n                    string: {\n                        pattern: /(\\s)[^:\\s]+/,\n                        lookbehind: true\n                    }\n                }\n            },\n            /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/ // current solution is not great\n            \"stack-effect-delimiter\": [\n                {\n                    // opening parenthesis\n                    pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // middle --\n                    pattern: /(\\s)--(?=\\s)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // closing parenthesis\n                    pattern: /(\\s)\\)(?=\\s|$)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                }\n            ],\n            combinators: {\n                pattern: null,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"kernel-builtin\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            \"sequences-builtin\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            \"math-builtin\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            \"constructor-word\": {\n                // <array> but not <=>\n                pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"other-builtin-syntax\": {\n                pattern: null,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/ \"conventionally-named-word\": {\n                pattern: /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"colon-syntax\": {\n                pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n                lookbehind: true,\n                greedy: true,\n                alias: \"function\"\n            },\n            \"semicolon-or-setlocal\": {\n                pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n            \"curly-brace-literal-delimiter\": [\n                {\n                    // opening\n                    pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // closing\n                    pattern: /(\\s)\\}(?=\\s|$)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                }\n            ],\n            // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n            \"quotation-delimiter\": [\n                {\n                    // opening\n                    pattern: /(^|\\s)\\[(?=\\s)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                },\n                {\n                    // closing\n                    pattern: /(\\s)\\](?=\\s|$)/,\n                    lookbehind: true,\n                    alias: \"operator\"\n                }\n            ],\n            \"normal-word\": {\n                pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n                lookbehind: true\n            },\n            /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/ string: {\n                pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n                greedy: true,\n                inside: string_inside\n            }\n        };\n        var escape = function(str) {\n            return (str + \"\").replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, \"\\\\$1\");\n        };\n        var arrToWordsRegExp = function(arr) {\n            return new RegExp(\"(^|\\\\s)(?:\" + arr.map(escape).join(\"|\") + \")(?=\\\\s|$)\");\n        };\n        var builtins = {\n            \"kernel-builtin\": [\n                \"or\",\n                \"2nipd\",\n                \"4drop\",\n                \"tuck\",\n                \"wrapper\",\n                \"nip\",\n                \"wrapper?\",\n                \"callstack>array\",\n                \"die\",\n                \"dupd\",\n                \"callstack\",\n                \"callstack?\",\n                \"3dup\",\n                \"hashcode\",\n                \"pick\",\n                \"4nip\",\n                \"build\",\n                \">boolean\",\n                \"nipd\",\n                \"clone\",\n                \"5nip\",\n                \"eq?\",\n                \"?\",\n                \"=\",\n                \"swapd\",\n                \"2over\",\n                \"clear\",\n                \"2dup\",\n                \"get-retainstack\",\n                \"not\",\n                \"tuple?\",\n                \"dup\",\n                \"3nipd\",\n                \"call\",\n                \"-rotd\",\n                \"object\",\n                \"drop\",\n                \"assert=\",\n                \"assert?\",\n                \"-rot\",\n                \"execute\",\n                \"boa\",\n                \"get-callstack\",\n                \"curried?\",\n                \"3drop\",\n                \"pickd\",\n                \"overd\",\n                \"over\",\n                \"roll\",\n                \"3nip\",\n                \"swap\",\n                \"and\",\n                \"2nip\",\n                \"rotd\",\n                \"throw\",\n                \"(clone)\",\n                \"hashcode*\",\n                \"spin\",\n                \"reach\",\n                \"4dup\",\n                \"equal?\",\n                \"get-datastack\",\n                \"assert\",\n                \"2drop\",\n                \"<wrapper>\",\n                \"boolean?\",\n                \"identity-hashcode\",\n                \"identity-tuple?\",\n                \"null\",\n                \"composed?\",\n                \"new\",\n                \"5drop\",\n                \"rot\",\n                \"-roll\",\n                \"xor\",\n                \"identity-tuple\",\n                \"boolean\"\n            ],\n            \"other-builtin-syntax\": [\n                // syntax\n                \"=======\",\n                \"recursive\",\n                \"flushable\",\n                \">>\",\n                \"<<<<<<\",\n                \"M\\\\\",\n                \"B\",\n                \"PRIVATE>\",\n                \"\\\\\",\n                \"======\",\n                \"final\",\n                \"inline\",\n                \"delimiter\",\n                \"deprecated\",\n                \"<PRIVATE\",\n                \">>>>>>\",\n                \"<<<<<<<\",\n                \"parse-complex\",\n                \"malformed-complex\",\n                \"read-only\",\n                \">>>>>>>\",\n                \"call-next-method\",\n                \"<<\",\n                \"foldable\",\n                // literals\n                \"$\",\n                \"$[\",\n                \"${\"\n            ],\n            \"sequences-builtin\": [\n                \"member-eq?\",\n                \"mismatch\",\n                \"append\",\n                \"assert-sequence=\",\n                \"longer\",\n                \"repetition\",\n                \"clone-like\",\n                \"3sequence\",\n                \"assert-sequence?\",\n                \"last-index-from\",\n                \"reversed\",\n                \"index-from\",\n                \"cut*\",\n                \"pad-tail\",\n                \"join-as\",\n                \"remove-eq!\",\n                \"concat-as\",\n                \"but-last\",\n                \"snip\",\n                \"nths\",\n                \"nth\",\n                \"sequence\",\n                \"longest\",\n                \"slice?\",\n                \"<slice>\",\n                \"remove-nth\",\n                \"tail-slice\",\n                \"empty?\",\n                \"tail*\",\n                \"member?\",\n                \"virtual-sequence?\",\n                \"set-length\",\n                \"drop-prefix\",\n                \"iota\",\n                \"unclip\",\n                \"bounds-error?\",\n                \"unclip-last-slice\",\n                \"non-negative-integer-expected\",\n                \"non-negative-integer-expected?\",\n                \"midpoint@\",\n                \"longer?\",\n                \"?set-nth\",\n                \"?first\",\n                \"rest-slice\",\n                \"prepend-as\",\n                \"prepend\",\n                \"fourth\",\n                \"sift\",\n                \"subseq-start\",\n                \"new-sequence\",\n                \"?last\",\n                \"like\",\n                \"first4\",\n                \"1sequence\",\n                \"reverse\",\n                \"slice\",\n                \"virtual@\",\n                \"repetition?\",\n                \"set-last\",\n                \"index\",\n                \"4sequence\",\n                \"max-length\",\n                \"set-second\",\n                \"immutable-sequence\",\n                \"first2\",\n                \"first3\",\n                \"supremum\",\n                \"unclip-slice\",\n                \"suffix!\",\n                \"insert-nth\",\n                \"tail\",\n                \"3append\",\n                \"short\",\n                \"suffix\",\n                \"concat\",\n                \"flip\",\n                \"immutable?\",\n                \"reverse!\",\n                \"2sequence\",\n                \"sum\",\n                \"delete-all\",\n                \"indices\",\n                \"snip-slice\",\n                \"<iota>\",\n                \"check-slice\",\n                \"sequence?\",\n                \"head\",\n                \"append-as\",\n                \"halves\",\n                \"sequence=\",\n                \"collapse-slice\",\n                \"?second\",\n                \"slice-error?\",\n                \"product\",\n                \"bounds-check?\",\n                \"bounds-check\",\n                \"immutable\",\n                \"virtual-exemplar\",\n                \"harvest\",\n                \"remove\",\n                \"pad-head\",\n                \"last\",\n                \"set-fourth\",\n                \"cartesian-product\",\n                \"remove-eq\",\n                \"shorten\",\n                \"shorter\",\n                \"reversed?\",\n                \"shorter?\",\n                \"shortest\",\n                \"head-slice\",\n                \"pop*\",\n                \"tail-slice*\",\n                \"but-last-slice\",\n                \"iota?\",\n                \"append!\",\n                \"cut-slice\",\n                \"new-resizable\",\n                \"head-slice*\",\n                \"sequence-hashcode\",\n                \"pop\",\n                \"set-nth\",\n                \"?nth\",\n                \"second\",\n                \"join\",\n                \"immutable-sequence?\",\n                \"<reversed>\",\n                \"3append-as\",\n                \"virtual-sequence\",\n                \"subseq?\",\n                \"remove-nth!\",\n                \"length\",\n                \"last-index\",\n                \"lengthen\",\n                \"assert-sequence\",\n                \"copy\",\n                \"move\",\n                \"third\",\n                \"first\",\n                \"tail?\",\n                \"set-first\",\n                \"prefix\",\n                \"bounds-error\",\n                \"<repetition>\",\n                \"exchange\",\n                \"surround\",\n                \"cut\",\n                \"min-length\",\n                \"set-third\",\n                \"push-all\",\n                \"head?\",\n                \"subseq-start-from\",\n                \"delete-slice\",\n                \"rest\",\n                \"sum-lengths\",\n                \"head*\",\n                \"infimum\",\n                \"remove!\",\n                \"glue\",\n                \"slice-error\",\n                \"subseq\",\n                \"push\",\n                \"replace-slice\",\n                \"subseq-as\",\n                \"unclip-last\"\n            ],\n            \"math-builtin\": [\n                \"number=\",\n                \"next-power-of-2\",\n                \"?1+\",\n                \"fp-special?\",\n                \"imaginary-part\",\n                \"float>bits\",\n                \"number?\",\n                \"fp-infinity?\",\n                \"bignum?\",\n                \"fp-snan?\",\n                \"denominator\",\n                \"gcd\",\n                \"*\",\n                \"+\",\n                \"fp-bitwise=\",\n                \"-\",\n                \"u>=\",\n                \"/\",\n                \">=\",\n                \"bitand\",\n                \"power-of-2?\",\n                \"log2-expects-positive\",\n                \"neg?\",\n                \"<\",\n                \"log2\",\n                \">\",\n                \"integer?\",\n                \"number\",\n                \"bits>double\",\n                \"2/\",\n                \"zero?\",\n                \"bits>float\",\n                \"float?\",\n                \"shift\",\n                \"ratio?\",\n                \"rect>\",\n                \"even?\",\n                \"ratio\",\n                \"fp-sign\",\n                \"bitnot\",\n                \">fixnum\",\n                \"complex?\",\n                \"/i\",\n                \"integer>fixnum\",\n                \"/f\",\n                \"sgn\",\n                \">bignum\",\n                \"next-float\",\n                \"u<\",\n                \"u>\",\n                \"mod\",\n                \"recip\",\n                \"rational\",\n                \">float\",\n                \"2^\",\n                \"integer\",\n                \"fixnum?\",\n                \"neg\",\n                \"fixnum\",\n                \"sq\",\n                \"bignum\",\n                \">rect\",\n                \"bit?\",\n                \"fp-qnan?\",\n                \"simple-gcd\",\n                \"complex\",\n                \"<fp-nan>\",\n                \"real\",\n                \">fraction\",\n                \"double>bits\",\n                \"bitor\",\n                \"rem\",\n                \"fp-nan-payload\",\n                \"real-part\",\n                \"log2-expects-positive?\",\n                \"prev-float\",\n                \"align\",\n                \"unordered?\",\n                \"float\",\n                \"fp-nan?\",\n                \"abs\",\n                \"bitxor\",\n                \"integer>fixnum-strict\",\n                \"u<=\",\n                \"odd?\",\n                \"<=\",\n                \"/mod\",\n                \">integer\",\n                \"real?\",\n                \"rational?\",\n                \"numerator\"\n            ]\n        };\n        Object.keys(builtins).forEach(function(k) {\n            factor[k].pattern = arrToWordsRegExp(builtins[k]);\n        });\n        var combinators = [\n            // kernel\n            \"2bi\",\n            \"while\",\n            \"2tri\",\n            \"bi*\",\n            \"4dip\",\n            \"both?\",\n            \"same?\",\n            \"tri@\",\n            \"curry\",\n            \"prepose\",\n            \"3bi\",\n            \"?if\",\n            \"tri*\",\n            \"2keep\",\n            \"3keep\",\n            \"curried\",\n            \"2keepd\",\n            \"when\",\n            \"2bi*\",\n            \"2tri*\",\n            \"4keep\",\n            \"bi@\",\n            \"keepdd\",\n            \"do\",\n            \"unless*\",\n            \"tri-curry\",\n            \"if*\",\n            \"loop\",\n            \"bi-curry*\",\n            \"when*\",\n            \"2bi@\",\n            \"2tri@\",\n            \"with\",\n            \"2with\",\n            \"either?\",\n            \"bi\",\n            \"until\",\n            \"3dip\",\n            \"3curry\",\n            \"tri-curry*\",\n            \"tri-curry@\",\n            \"bi-curry\",\n            \"keepd\",\n            \"compose\",\n            \"2dip\",\n            \"if\",\n            \"3tri\",\n            \"unless\",\n            \"tuple\",\n            \"keep\",\n            \"2curry\",\n            \"tri\",\n            \"most\",\n            \"while*\",\n            \"dip\",\n            \"composed\",\n            \"bi-curry@\",\n            // sequences\n            \"find-last-from\",\n            \"trim-head-slice\",\n            \"map-as\",\n            \"each-from\",\n            \"none?\",\n            \"trim-tail\",\n            \"partition\",\n            \"if-empty\",\n            \"accumulate*\",\n            \"reject!\",\n            \"find-from\",\n            \"accumulate-as\",\n            \"collector-for-as\",\n            \"reject\",\n            \"map\",\n            \"map-sum\",\n            \"accumulate!\",\n            \"2each-from\",\n            \"follow\",\n            \"supremum-by\",\n            \"map!\",\n            \"unless-empty\",\n            \"collector\",\n            \"padding\",\n            \"reduce-index\",\n            \"replicate-as\",\n            \"infimum-by\",\n            \"trim-tail-slice\",\n            \"count\",\n            \"find-index\",\n            \"filter\",\n            \"accumulate*!\",\n            \"reject-as\",\n            \"map-integers\",\n            \"map-find\",\n            \"reduce\",\n            \"selector\",\n            \"interleave\",\n            \"2map\",\n            \"filter-as\",\n            \"binary-reduce\",\n            \"map-index-as\",\n            \"find\",\n            \"produce\",\n            \"filter!\",\n            \"replicate\",\n            \"cartesian-map\",\n            \"cartesian-each\",\n            \"find-index-from\",\n            \"map-find-last\",\n            \"3map-as\",\n            \"3map\",\n            \"find-last\",\n            \"selector-as\",\n            \"2map-as\",\n            \"2map-reduce\",\n            \"accumulate\",\n            \"each\",\n            \"each-index\",\n            \"accumulate*-as\",\n            \"when-empty\",\n            \"all?\",\n            \"collector-as\",\n            \"push-either\",\n            \"new-like\",\n            \"collector-for\",\n            \"2selector\",\n            \"push-if\",\n            \"2all?\",\n            \"map-reduce\",\n            \"3each\",\n            \"any?\",\n            \"trim-slice\",\n            \"2reduce\",\n            \"change-nth\",\n            \"produce-as\",\n            \"2each\",\n            \"trim\",\n            \"trim-head\",\n            \"cartesian-find\",\n            \"map-index\",\n            // math\n            \"if-zero\",\n            \"each-integer\",\n            \"unless-zero\",\n            \"(find-integer)\",\n            \"when-zero\",\n            \"find-last-integer\",\n            \"(all-integers?)\",\n            \"times\",\n            \"(each-integer)\",\n            \"find-integer\",\n            \"all-integers?\",\n            // math.combinators\n            \"unless-negative\",\n            \"if-positive\",\n            \"when-positive\",\n            \"when-negative\",\n            \"unless-positive\",\n            \"if-negative\",\n            // combinators\n            \"case\",\n            \"2cleave\",\n            \"cond>quot\",\n            \"case>quot\",\n            \"3cleave\",\n            \"wrong-values\",\n            \"to-fixed-point\",\n            \"alist>quot\",\n            \"cond\",\n            \"cleave\",\n            \"call-effect\",\n            \"recursive-hashcode\",\n            \"spread\",\n            \"deep-spread>quot\",\n            // combinators.short-circuit\n            \"2||\",\n            \"0||\",\n            \"n||\",\n            \"0&&\",\n            \"2&&\",\n            \"3||\",\n            \"1||\",\n            \"1&&\",\n            \"n&&\",\n            \"3&&\",\n            // combinators.smart\n            \"smart-unless*\",\n            \"keep-inputs\",\n            \"reduce-outputs\",\n            \"smart-when*\",\n            \"cleave>array\",\n            \"smart-with\",\n            \"smart-apply\",\n            \"smart-if\",\n            \"inputs/outputs\",\n            \"output>sequence-n\",\n            \"map-outputs\",\n            \"map-reduce-outputs\",\n            \"dropping\",\n            \"output>array\",\n            \"smart-map-reduce\",\n            \"smart-2map-reduce\",\n            \"output>array-n\",\n            \"nullary\",\n            \"input<sequence\",\n            \"append-outputs\",\n            \"drop-inputs\",\n            \"inputs\",\n            \"smart-2reduce\",\n            \"drop-outputs\",\n            \"smart-reduce\",\n            \"preserving\",\n            \"smart-when\",\n            \"outputs\",\n            \"append-outputs-as\",\n            \"smart-unless\",\n            \"smart-if*\",\n            \"sum-outputs\",\n            \"input<sequence-unsafe\",\n            \"output>sequence\"\n        ];\n        factor.combinators.pattern = arrToWordsRegExp(combinators);\n        Prism.languages.factor = factor;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mYWN0b3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSzs7SUFDaEMsVUFBVUEsS0FBSztRQUNmLElBQUlDLGlCQUFpQjtZQUNuQkMsVUFDRTtRQUNKO1FBQ0EsSUFBSUMsZ0JBQWdCO1lBQ2xCQyxRQUFRO1FBQ1Y7UUFDQSxJQUFJUCxTQUFTO1lBQ1hRLFNBQVM7Z0JBQ1A7b0JBQ0UsOEVBQThFO29CQUM5RUMsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsUUFBUVA7Z0JBQ1YsRUFBRSx5QkFBeUI7Z0JBQzNCO29CQUNFLDhCQUE4QjtvQkFDOUJLLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7b0JBQ1JELFFBQVFQO2dCQUNWO2dCQUNBO29CQUNFLHVDQUF1QztvQkFDdkNLLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7b0JBQ1JELFFBQVFQO2dCQUNWO2FBQ0Q7WUFDREcsUUFBUTtnQkFDTjtvQkFDRSwrQkFBK0I7b0JBQy9CRSxTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBO29CQUNFLHVEQUF1RDtvQkFDdkRELFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0UsNkVBQTZFO29CQUM3RUQsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRSx3Q0FBd0M7b0JBQ3hDRCxTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBO29CQUNFLGlDQUFpQztvQkFDakNELFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0UsNERBQTREO29CQUM1RCxnRUFBZ0U7b0JBQ2hFRCxTQUNFO29CQUNGQyxZQUFZO2dCQUNkO2dCQUNBO29CQUNFLGdEQUFnRDtvQkFDaERELFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0U7Ozs7O0FBS1YsR0FDVUQsU0FDRTtvQkFDRkMsWUFBWTtnQkFDZDthQUNEO1lBQ0Qsa0JBQWtCO1lBQ2xCRyxRQUFRO2dCQUNOSixTQUNFO2dCQUNGQyxZQUFZO2dCQUNaSSxPQUFPO2dCQUNQSCxRQUFRO29CQUNOSSxVQUFVO29CQUNWQyxTQUFTO29CQUNUQyxVQUFVO3dCQUNSUixTQUFTO3dCQUNUQyxZQUFZO29CQUNkO2dCQUNGO1lBQ0Y7WUFDQVEsU0FBUztnQkFDUFQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0Esc0NBQXNDO1lBQ3RDLGlCQUFpQjtnQkFDZkQsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsUUFBUTtnQkFDUkUsT0FBTztnQkFDUEgsUUFBUTtvQkFDTkosUUFBUTtnQkFDVjtZQUNGO1lBQ0Esb0JBQW9CO2dCQUNsQjtvQkFDRSxvRUFBb0U7b0JBQ3BFRSxTQUFTO29CQUNUQyxZQUFZO29CQUNaRSxRQUFRO29CQUNSRSxPQUFPO29CQUNQSCxRQUFRO3dCQUNOSixRQUFRRCxjQUFjQyxNQUFNO3dCQUM1QixxQ0FBcUM7d0JBQ3JDLHlCQUF5Qjs0QkFDdkJFLFNBQVM7NEJBQ1RDLFlBQVk7NEJBQ1pJLE9BQU87d0JBQ1Q7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0Usa0VBQWtFO29CQUNsRUwsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkUsUUFBUTtvQkFDUkUsT0FBTztvQkFDUEgsUUFBUUw7Z0JBQ1Y7Z0JBQ0E7b0JBQ0UsZ0NBQWdDO29CQUNoQ0csU0FBUztvQkFDVEMsWUFBWTtvQkFDWkUsUUFBUTtvQkFDUkUsT0FBTztvQkFDUEgsUUFBUUw7Z0JBQ1Y7YUFDRDtZQUNELGlCQUFpQjtnQkFDZkcsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkksT0FBTztnQkFDUEgsUUFBUTtvQkFDTiw2RUFBNkU7b0JBQzdFLGdEQUFnRDtvQkFDaERRLFFBQVE7d0JBQ05WLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7Z0JBQ0Y7WUFDRjtZQUNBOzs7Ozs7Ozs7Ozs7QUFZTixHQUVNLGdDQUFnQztZQUNoQywwQkFBMEI7Z0JBQ3hCO29CQUNFLHNCQUFzQjtvQkFDdEJELFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pJLE9BQU87Z0JBQ1Q7Z0JBQ0E7b0JBQ0UsWUFBWTtvQkFDWkwsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkksT0FBTztnQkFDVDtnQkFDQTtvQkFDRSxzQkFBc0I7b0JBQ3RCTCxTQUFTO29CQUNUQyxZQUFZO29CQUNaSSxPQUFPO2dCQUNUO2FBQ0Q7WUFDRE0sYUFBYTtnQkFDWFgsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkksT0FBTztZQUNUO1lBQ0Esa0JBQWtCO2dCQUNoQkwsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkksT0FBTztZQUNUO1lBQ0EscUJBQXFCO2dCQUNuQkwsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkksT0FBTztZQUNUO1lBQ0EsZ0JBQWdCO2dCQUNkTCxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaSSxPQUFPO1lBQ1Q7WUFDQSxvQkFBb0I7Z0JBQ2xCLHNCQUFzQjtnQkFDdEJMLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pJLE9BQU87WUFDVDtZQUNBLHdCQUF3QjtnQkFDdEJMLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pJLE9BQU87WUFDVDtZQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVCTixHQUNNLDZCQUE2QjtnQkFDM0JMLFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pJLE9BQU87WUFDVDtZQUNBLGdCQUFnQjtnQkFDZEwsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsUUFBUTtnQkFDUkUsT0FBTztZQUNUO1lBQ0EseUJBQXlCO2dCQUN2QkwsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkksT0FBTztZQUNUO1lBQ0EsZ0dBQWdHO1lBQ2hHLGlDQUFpQztnQkFDL0I7b0JBQ0UsVUFBVTtvQkFDVkwsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkksT0FBTztnQkFDVDtnQkFDQTtvQkFDRSxVQUFVO29CQUNWTCxTQUFTO29CQUNUQyxZQUFZO29CQUNaSSxPQUFPO2dCQUNUO2FBQ0Q7WUFDRCwrRkFBK0Y7WUFDL0YsdUJBQXVCO2dCQUNyQjtvQkFDRSxVQUFVO29CQUNWTCxTQUFTO29CQUNUQyxZQUFZO29CQUNaSSxPQUFPO2dCQUNUO2dCQUNBO29CQUNFLFVBQVU7b0JBQ1ZMLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pJLE9BQU87Z0JBQ1Q7YUFDRDtZQUNELGVBQWU7Z0JBQ2JMLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBOzs7Ozs7Ozs7Ozs7OztBQWNOLEdBQ01TLFFBQVE7Z0JBQ05WLFNBQVM7Z0JBQ1RHLFFBQVE7Z0JBQ1JELFFBQVFMO1lBQ1Y7UUFDRjtRQUNBLElBQUllLFNBQVMsU0FBVUMsR0FBRztZQUN4QixPQUFPLENBQUNBLE1BQU0sRUFBQyxFQUFHQyxPQUFPLENBQUMsNkJBQTZCO1FBQ3pEO1FBQ0EsSUFBSUMsbUJBQW1CLFNBQVVDLEdBQUc7WUFDbEMsT0FBTyxJQUFJQyxPQUFPLGVBQWVELElBQUlFLEdBQUcsQ0FBQ04sUUFBUU8sSUFBSSxDQUFDLE9BQU87UUFDL0Q7UUFDQSxJQUFJQyxXQUFXO1lBQ2Isa0JBQWtCO2dCQUNoQjtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTthQUNEO1lBQ0Qsd0JBQXdCO2dCQUN0QixTQUFTO2dCQUNUO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBO2dCQUNBLFdBQVc7Z0JBQ1g7Z0JBQ0E7Z0JBQ0E7YUFDRDtZQUNELHFCQUFxQjtnQkFDbktZQUNELGdCQUFnQjtnQkFDZDtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTthQUNEO1FBRUg7UUFFQUMsT0FBT0MsSUFBSSxDQUFDRixVQUFVRyxPQUFPLENBQUMsU0FBVUMsQ0FBQztZQUN2Q2pDLE1BQU0sQ0FBQ2lDLEVBQUUsQ0FBQ3hCLE9BQU8sR0FBR2UsaUJBQWlCSyxRQUFRLENBQUNJLEVBQUU7UUFDbEQ7UUFDQSxJQUFJYixjQUFjO1lBQ2hCLFNBQVM7WUFDVDtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQSxZQUFZO1lBQ1o7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0EsT0FBTztZQUNQO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQSxtQkFBbUI7WUFDbkI7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0EsY0FBYztZQUNkO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQSw0QkFBNEI7WUFDNUI7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQSxvQkFBb0I7WUFDcEI7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7U0FFRDtRQUVEcEIsT0FBT29CLFdBQVcsQ0FBQ1gsT0FBTyxHQUFHZSxpQkFBaUJKO1FBQzlDakIsTUFBTStCLFNBQVMsQ0FBQ2xDLE1BQU0sR0FBR0E7SUFDM0IsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mYWN0b3IuanM/YjE3MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuZmFjdG9yLmRpc3BsYXlOYW1lID0gJ2ZhY3RvcidcbmZhY3Rvci5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmYWN0b3IoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgY29tbWVudF9pbnNpZGUgPSB7XG4gICAgICBmdW5jdGlvbjpcbiAgICAgICAgL1xcYig/OkJVR1M/fEZJWCg/Ok1FUz8pP3xOT1RFUz98VE9ET1M/fFhYK3xIQUNLUz98V0FSTig/OklORyk/fFxcP3syLH18IXsyLH0pXFxiL1xuICAgIH1cbiAgICB2YXIgc3RyaW5nX2luc2lkZSA9IHtcbiAgICAgIG51bWJlcjogL1xcXFxbXlxccyddfCVcXHcvXG4gICAgfVxuICAgIHZhciBmYWN0b3IgPSB7XG4gICAgICBjb21tZW50OiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyAhIHNpbmdsZS1saW5lIGV4Y2xhbWF0aW9uIHBvaW50IGNvbW1lbnRzIHdpdGggd2hpdGVzcGFjZSBhZnRlci9hcm91bmQgdGhlICFcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKSg/OiEgLip8ISQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogY29tbWVudF9pbnNpZGVcbiAgICAgICAgfSAvKiBmcm9tIGJhc2lzL211bHRpbGluZTogKi8sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyAvKiBjb21tZW50ICovLCAvKiBjb21tZW50Ki9cbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKVxcL1xcKlxcc1tcXHNcXFNdKj9cXCpcXC8oPz1cXHN8JCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogY29tbWVudF9pbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vICFbWyBjb21tZW50IF1dICwgIVs9PT1bIGNvbW1lbnRdPT09XVxuICAgICAgICAgIHBhdHRlcm46IC8oXnxcXHMpIVxcWyg9ezAsNn0pXFxbXFxzW1xcc1xcU10qP1xcXVxcMlxcXSg/PVxcc3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBjb21tZW50X2luc2lkZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbnVtYmVyOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBiYXNpYyBiYXNlIDEwIGludGVnZXJzIDksIC05XG4gICAgICAgICAgcGF0dGVybjogLyhefFxccylbKy1dP1xcZCsoPz1cXHN8JCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGJhc2UgcHJlZml4IGludGVnZXJzIDBiMDEwIDBvNzAgMHhhZCAwZDEwIDBYQUQgLTB4YTlcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKVsrLV0/MCg/OmJbMDFdK3xvWzAtN10rfGRcXGQrfHhbXFxkQS1GXSspKD89XFxzfCQpL2ksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gZnJhY3Rpb25hbCByYXRpb3MgMS81IC0xLzUgYW5kIHRoZSBsaXRlcmFsIGZsb2F0IGFwcHJveGltYXRpb25zIDEvNS4gLTEvNS5cbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKVsrLV0/XFxkK1xcL1xcZCtcXC4/KD89XFxzfCQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBwb3NpdGl2ZSBtaXhlZCBudW1iZXJzIDIzKzEvNSArMjMrMS81XG4gICAgICAgICAgcGF0dGVybjogLyhefFxccylcXCs/XFxkK1xcK1xcZCtcXC9cXGQrKD89XFxzfCQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBuZWdhdGl2ZSBtaXhlZCBudW1iZXJzIC0yMy0xLzVcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKS1cXGQrLVxcZCtcXC9cXGQrKD89XFxzfCQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBiYXNpYyBkZWNpbWFsIGZsb2F0cyAtMC4wMSAwLiAuMCAuMSAtLjEgLTEuIC0xMi4xMyArMTIuMTNcbiAgICAgICAgICAvLyBhbmQgc2NpZW50aWZpYyBub3RhdGlvbiB3aXRoIGJhc2UgMTAgZXhwb25lbnRzIDNlNCAzZS00IC4zZS00XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oXnxcXHMpWystXT8oPzpcXGQqXFwuXFxkK3xcXGQrXFwuXFxkKnxcXGQrKSg/OmVbKy1dP1xcZCspPyg/PVxcc3wkKS9pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIE5BTiBsaXRlcmFsIHN5bnRheCBOQU46IDgwMDAwZGVhZGJlZWYsIE5BTjogYVxuICAgICAgICAgIHBhdHRlcm46IC8oXnxcXHMpTkFOOlxccytbXFxkYS1mQS1GXSsoPz1cXHN8JCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8qXG5iYXNlIHByZWZpeCBmbG9hdHMgMHgxLjBwMyAoOC4wKSAwYjEuMDEwcDIgKDUuMCkgMHgxLnAxIDBiMS4xMTExMTExMXAxMTExMS4uLlxuXCJUaGUgbm9ybWFsaXplZCBoZXggZm9ybSDCsTB4MS5NTU1NTU1NTU1NTU1NW3BQXcKxRUVFRSBhbGxvd3MgYW55IGZsb2F0aW5nLXBvaW50IG51bWJlciB0byBiZSBzcGVjaWZpZWQgcHJlY2lzZWx5LlxuVGhlIHZhbHVlcyBvZiBNTU1NTU1NTU1NTU1NIGFuZCBFRUVFIG1hcCBkaXJlY3RseSB0byB0aGUgbWFudGlzc2EgYW5kIGV4cG9uZW50IGZpZWxkcyBvZiB0aGUgYmluYXJ5IElFRUUgNzU0IHJlcHJlc2VudGF0aW9uLlwiXG48aHR0cHM6Ly9kb2NzLmZhY3RvcmNvZGUub3JnL2NvbnRlbnQvYXJ0aWNsZS1zeW50YXgtZmxvYXRzLmh0bWw+XG4qL1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKF58XFxzKVsrLV0/MCg/OmIxXFwuWzAxXSp8bzFcXC5bMC03XSp8ZDFcXC5cXGQqfHgxXFwuW1xcZEEtRl0qKXBcXGQrKD89XFxzfCQpL2ksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgLy8gUi8gcmVnZXhwP1xcL1xcXFwvXG4gICAgICByZWdleHA6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58XFxzKVJcXC9cXHMoPzpcXFxcXFxTfFteXFxcXC9dKSpcXC8oPzpbaWRtc3JdKnxbaWRtc3JdKy1baWRtc3JdKykoPz1cXHN8JCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ251bWJlcicsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHZhcmlhYmxlOiAvXFxcXFxcUy8sXG4gICAgICAgICAga2V5d29yZDogL1srPypcXFtcXF1eJCgpe30ufF0vLFxuICAgICAgICAgIG9wZXJhdG9yOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKFxcLylbaWRtc3JdKyg/Oi1baWRtc3JdKyk/LyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBib29sZWFuOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxcXHMpW3RmXSg/PVxcc3wkKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvLyBTQlVGXCIgYXNkXCIsIFVSTFwiIDovLy4uLlwiLCBQXCIgL2V0Yy9cIlxuICAgICAgJ2N1c3RvbS1zdHJpbmcnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxcXHMpW0EtWjAtOVxcLV0rXCJcXHMoPzpcXFxcXFxTfFteXCJcXFxcXSkqXCIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgbnVtYmVyOiAvXFxcXFxcU3wlXFx3fFxcLy9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdtdWx0aWxpbmUtc3RyaW5nJzogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gU1RSSU5HOiBuYW1lIFxcbiBjb250ZW50IFxcbiA7IC0+IENPTlNUQU5UOiBuYW1lIFwiY29udGVudFwiIChzeW1ib2wpXG4gICAgICAgICAgcGF0dGVybjogLyhefFxccylTVFJJTkc6XFxzK1xcUysoPzpcXG58XFxyXFxuKS4qKD86XFxufFxcclxcbilcXHMqOyg/PVxcc3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgbnVtYmVyOiBzdHJpbmdfaW5zaWRlLm51bWJlcixcbiAgICAgICAgICAgIC8vIHRyYWlsaW5nIHNlbWljb2xvbiBvbiBpdHMgb3duIGxpbmVcbiAgICAgICAgICAgICdzZW1pY29sb24tb3Itc2V0bG9jYWwnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oW1xcclxcbl1bIFxcdF0qKTsoPz1cXHN8JCkvLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIEhFUkVET0M6IG1hcmtlciBcXG4gY29udGVudCBcXG4gbWFya2VyIDsgLT4gXCJjb250ZW50XCIgKGltbWVkaWF0ZSlcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKUhFUkVET0M6XFxzK1xcUysoPzpcXG58XFxyXFxuKS4qKD86XFxufFxcclxcbilcXHMqXFxTKyg/PVxcc3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICAgIGluc2lkZTogc3RyaW5nX2luc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gW1sgc3RyaW5nIF1dLCBbPT1bIHN0cmluZ109PV1cbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKVxcWyg9ezAsNn0pXFxbXFxzW1xcc1xcU10qP1xcXVxcMlxcXSg/PVxcc3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICAgIGluc2lkZTogc3RyaW5nX2luc2lkZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgJ3NwZWNpYWwtdXNpbmcnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxcXHMpVVNJTkc6KD86XFxzXFxTKykqKD89XFxzKzsoPzpcXHN8JCkpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbicsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIC8vIHRoaXMgaXMgZXNzZW50aWFsbHkgYSByZWdleCBmb3Igdm9jYWIgbmFtZXMsIHdoaWNoIGkgZG9uJ3Qgd2FudCB0byBzcGVjaWZ5XG4gICAgICAgICAgLy8gYnV0IHRoZSBVU0lORzogZ2V0cyBwaWNrZWQgdXAgYXMgYSB2b2NhYiBuYW1lXG4gICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKFxccylbXjpcXHNdKy8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLyogdGhpcyBkZXNjcmlwdGlvbiBvZiBzdGFjayBlZmZlY3QgbGl0ZXJhbCBzeW50YXggaXMgbm90IGNvbXBsZXRlIGFuZCBub3QgYXMgc3BlY2lmaWMgYXMgdGhlb3JldGljYWxseSBwb3NzaWJsZVxudHJ5aW5nIHRvIGRvIGJldHRlciBpcyBtb3JlIHdvcmsgYW5kIHJlZ2V4LWNvbXB1dGF0aW9uLXRpbWUgdGhhbiBpdCdzIHdvcnRoIHRob3VnaC5cbi0gd2UnZCBsaWtlIHRvIGhhdmUgdGhlIFwiZGVsaW1pdGVyXCIgcGFydHMgb2YgdGhlIHN0YWNrIGVmZmVjdCBbICgsIC0tLCBhbmQgKSBdIGJlIGEgZGlmZmVyZW50IChsZXNzLWltcG9ydGFudCBvciBjb21tZW50LWxpa2UpIGNvbG91ciB0byB0aGUgc3RhY2sgZWZmZWN0IGNvbnRlbnRzXG4tIHdlJ2QgbGlrZSBpZiBuZXN0ZWQgc3RhY2sgZWZmZWN0cyB3ZXJlIHRyZWF0ZWQgYXMgc3VjaCByYXRoZXIgdGhhbiBqdXN0IGFwcGVhcmluZyBmbGF0ICh3aXRoIGBpbnNpZGVgKVxuLSB3ZSdkIGxpa2UgaWYgdGhlIGZvbGxvd2luZyB2YXJpYWJsZSBuYW1lIGNvbnZlbnRpb25zIHdlcmUgcmVjb2duaXNlZCBzcGVjaWZpY2FsbHk6XG5zcGVjaWFsIHJvdyB2YXJpYWJsZXMgPSAuLmEgYi4uXG50eXBlIGFuZCBzdGFjayBlZmZlY3QgYW5ub3RhdGlvbnMgZW5kIHdpdGggYSBjb2xvbiA9ICggcXVvdDogKCBhOiAoIC0tICkgLS0gYiApIC0tIHggKSwgKCB4OiBudW1iZXIgLS0gKVxud29yZCB0aHJvd3MgdW5jb25kaXRpb25hbCBlcnJvciA9ICpcbmFueSBvdGhlciB3b3JkLWxpa2UgdmFyaWFibGUgbmFtZSA9IGEgPyBxJyBldGNcbmh0dHBzOi8vZG9jcy5mYWN0b3Jjb2RlLm9yZy9jb250ZW50L2FydGljbGUtZWZmZWN0cy5odG1sXG50aGVzZSBhcmUgcHJldHR5IGNvbXBsaWNhdGVkIHRvIGhpZ2hsaWdodCBwcm9wZXJseSB3aXRob3V0IGEgcmVhbCBwYXJzZXIsIGFuZCB0aGVyZWZvcmUgb3V0IG9mIHNjb3BlXG50aGUgb2xkIHBhdHRlcm4sIHdoaWNoIG1heSBiZSBsYXRlciB1c2VmdWwsIHdhczogKF58XFxzKSg/OmNhbGx8ZXhlY3V0ZXxldmFsKT9cXCgoPzpcXHMrW15cIlxcclxcblxcdCBdXFxTKikqP1xccystLSg/OlxccytbXlwiXFxuXFx0IF1cXFMqKSo/XFxzK1xcKSg/PVxcc3wkKVxuKi9cblxuICAgICAgLy8gY3VycmVudCBzb2x1dGlvbiBpcyBub3QgZ3JlYXRcbiAgICAgICdzdGFjay1lZmZlY3QtZGVsaW1pdGVyJzogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gb3BlbmluZyBwYXJlbnRoZXNpc1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxcXHMpKD86Y2FsbHxldmFsfGV4ZWN1dGUpP1xcKCg/PVxccykvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIG1pZGRsZSAtLVxuICAgICAgICAgIHBhdHRlcm46IC8oXFxzKS0tKD89XFxzKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gY2xvc2luZyBwYXJlbnRoZXNpc1xuICAgICAgICAgIHBhdHRlcm46IC8oXFxzKVxcKSg/PVxcc3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgY29tYmluYXRvcnM6IHtcbiAgICAgICAgcGF0dGVybjogbnVsbCxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdrZXJuZWwtYnVpbHRpbic6IHtcbiAgICAgICAgcGF0dGVybjogbnVsbCxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICAgIH0sXG4gICAgICAnc2VxdWVuY2VzLWJ1aWx0aW4nOiB7XG4gICAgICAgIHBhdHRlcm46IG51bGwsXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICB9LFxuICAgICAgJ21hdGgtYnVpbHRpbic6IHtcbiAgICAgICAgcGF0dGVybjogbnVsbCxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICAgIH0sXG4gICAgICAnY29uc3RydWN0b3Itd29yZCc6IHtcbiAgICAgICAgLy8gPGFycmF5PiBidXQgbm90IDw9PlxuICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKTwoPyE9Kz58LSs+KVxcUys+KD89XFxzfCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdvdGhlci1idWlsdGluLXN5bnRheCc6IHtcbiAgICAgICAgcGF0dGVybjogbnVsbCxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgIH0sXG4gICAgICAvKlxuZnVsbCBsaXN0IG9mIHN1cHBvcnRlZCB3b3JkIG5hbWluZyBjb252ZW50aW9uczogKHRoZSBjb252ZW50aW9uIGFwcGVhcnMgb3V0c2lkZSBvZiB0aGUgW2JyYWNrZXRzXSlcbnNldC1beF1cbmNoYW5nZS1beF1cbndpdGgtW3hdXG5uZXctW3hdXG4+W3N0cmluZ11cbltiYXNlXT5cbltzdHJpbmddPltudW1iZXJdXG4rW3N5bWJvbF0rXG5bYm9vbGVhbi13b3JkXT9cbj9bb2ZdXG5bc2xvdC1yZWFkZXJdPj5cbj4+W3Nsb3Qtc2V0dGVyXVxuW3Nsb3Qtd3JpdGVyXTw8XG4oW2ltcGxlbWVudGF0aW9uLWRldGFpbF0pXG5bbXV0YXRlcl0hXG5bdmFyaWFudF0qXG5bcHJldHR5cHJpbnRdLlxuJFtoZWxwLW1hcmt1cF1cbjxjb25zdHJ1Y3RvcnM+LCBTWU5UQVg6LCBldGMgYXJlIHN1cHBvcnRlZCBieSB0aGVpciBvd24gcGF0dGVybnMuXG5gd2l0aGAgYW5kIGBuZXdgIGZyb20gYGtlcm5lbGAgYXJlIHRoZWlyIG93biBidWlsdGlucy5cbnNlZSA8aHR0cHM6Ly9kb2NzLmZhY3RvcmNvZGUub3JnL2NvbnRlbnQvYXJ0aWNsZS1jb252ZW50aW9ucy5odG1sPlxuKi9cbiAgICAgICdjb252ZW50aW9uYWxseS1uYW1lZC13b3JkJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxcXHMpKD8hXCIpKD86KD86Y2hhbmdlfG5ld3xzZXR8d2l0aCktXFxTK3xcXCRcXFMrfD5bXj5cXHNdK3xbXjo+XFxzXSs+fFtePlxcc10rPltePlxcc10rfFxcK1teK1xcc10rXFwrfFteP1xcc10rXFw/fFxcP1teP1xcc10rfFtePlxcc10rPj58Pj5bXj5cXHNdK3xbXjxcXHNdKzw8fFxcKFteKClcXHNdK1xcKXxbXiFcXHNdKyF8W14qXFxzXVxcUypcXCp8W14uXFxzXVxcUypcXC4pKD89XFxzfCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdjb2xvbi1zeW50YXgnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxcXHMpKD86W0EtWjAtOVxcLV0rIz8pPzp7MSwyfVxccysoPzo7XFxTK3woPyE7KVxcUyspKD89XFxzfCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgICdzZW1pY29sb24tb3Itc2V0bG9jYWwnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxzKSg/Ojt8Oj4pKD89XFxzfCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICAvLyBkbyBub3QgaGlnaGxpZ2h0IGxlYWRpbmcgfSBvciB0cmFpbGluZyBYeyBhdCB0aGUgYmVnaW4vZW5kIG9mIHRoZSBmaWxlIGFzIGl0J3MgaW52YWxpZCBzeW50YXhcbiAgICAgICdjdXJseS1icmFjZS1saXRlcmFsLWRlbGltaXRlcic6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIG9wZW5pbmdcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKVthLXpdKlxceyg/PVxccykvaSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBjbG9zaW5nXG4gICAgICAgICAgcGF0dGVybjogLyhcXHMpXFx9KD89XFxzfCQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAvLyBkbyBub3QgaGlnaGxpZ2h0IGxlYWRpbmcgXSBvciB0cmFpbGluZyBbIGF0IHRoZSBiZWdpbi9lbmQgb2YgdGhlIGZpbGUgYXMgaXQncyBpbnZhbGlkIHN5bnRheFxuICAgICAgJ3F1b3RhdGlvbi1kZWxpbWl0ZXInOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBvcGVuaW5nXG4gICAgICAgICAgcGF0dGVybjogLyhefFxccylcXFsoPz1cXHMpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBjbG9zaW5nXG4gICAgICAgICAgcGF0dGVybjogLyhcXHMpXFxdKD89XFxzfCQpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAnbm9ybWFsLXdvcmQnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxcXHMpW15cIlxcc11cXFMqKD89XFxzfCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8qXG5iYXNpYyBmaXJzdC1jbGFzcyBzdHJpbmcgXCJhXCJcbndpdGggZXNjYXBlZCBkb3VibGUtcXVvdGUgXCJhXFxcIlwiXG5lc2NhcGVkIGJhY2tzbGFzaCBcIlxcXFxcIlxuYW5kIGdlbmVyYWwgZXNjYXBlcyBzaW5jZSBGYWN0b3IgaGFzIHNvIG1hbnkgXCJcXE5cIlxuc3ludGF4IHRoYXQgd29ya3MgaW4gdGhlIHJlZmVyZW5jZSBpbXBsZW1lbnRhdGlvbiB0aGF0IGlzbid0IGZ1bGx5XG5zdXBwb3J0ZWQgYmVjYXVzZSBpdCdzIGFuIGltcGxlbWVudGF0aW9uIGRldGFpbDpcblwic3RyaW5nIDFcIlwic3RyaW5nIDJcIiAtPiAyIHN0cmluZ3MgKHdvcmtzIGFueXdheSlcblwic3RyaW5nXCI1IC0+IHN0cmluZywgNVxuXCJzdHJpbmdcIlsgXSAtPiBzdHJpbmcsIHF1b3RhdGlvblxueyBcImFcIn0gLT4gYXJyYXk8c3RyaW5nPlxudGhlIHJlc3Qgb2YgdGhvc2UgZXhhbXBsZXMgYWxsIHByb3Blcmx5IHJlY29nbmlzZSB0aGUgc3RyaW5nLCBidXQgbm90XG50aGUgb3RoZXIgb2JqZWN0IChudW1iZXIsIHF1b3RhdGlvbiwgZXRjKVxudGhpcyBpcyBmaW5lIGZvciBhIHJlZ2V4LW9ubHkgaW1wbGVtZW50YXRpb24uXG4qL1xuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFxcXFN8W15cIlxcXFxdKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBzdHJpbmdfaW5zaWRlXG4gICAgICB9XG4gICAgfVxuICAgIHZhciBlc2NhcGUgPSBmdW5jdGlvbiAoc3RyKSB7XG4gICAgICByZXR1cm4gKHN0ciArICcnKS5yZXBsYWNlKC8oWy4/KitcXF4kXFxbXFxdXFxcXCgpe318XFwtXSkvZywgJ1xcXFwkMScpXG4gICAgfVxuICAgIHZhciBhcnJUb1dvcmRzUmVnRXhwID0gZnVuY3Rpb24gKGFycikge1xuICAgICAgcmV0dXJuIG5ldyBSZWdFeHAoJyhefFxcXFxzKSg/OicgKyBhcnIubWFwKGVzY2FwZSkuam9pbignfCcpICsgJykoPz1cXFxcc3wkKScpXG4gICAgfVxuICAgIHZhciBidWlsdGlucyA9IHtcbiAgICAgICdrZXJuZWwtYnVpbHRpbic6IFtcbiAgICAgICAgJ29yJyxcbiAgICAgICAgJzJuaXBkJyxcbiAgICAgICAgJzRkcm9wJyxcbiAgICAgICAgJ3R1Y2snLFxuICAgICAgICAnd3JhcHBlcicsXG4gICAgICAgICduaXAnLFxuICAgICAgICAnd3JhcHBlcj8nLFxuICAgICAgICAnY2FsbHN0YWNrPmFycmF5JyxcbiAgICAgICAgJ2RpZScsXG4gICAgICAgICdkdXBkJyxcbiAgICAgICAgJ2NhbGxzdGFjaycsXG4gICAgICAgICdjYWxsc3RhY2s/JyxcbiAgICAgICAgJzNkdXAnLFxuICAgICAgICAnaGFzaGNvZGUnLFxuICAgICAgICAncGljaycsXG4gICAgICAgICc0bmlwJyxcbiAgICAgICAgJ2J1aWxkJyxcbiAgICAgICAgJz5ib29sZWFuJyxcbiAgICAgICAgJ25pcGQnLFxuICAgICAgICAnY2xvbmUnLFxuICAgICAgICAnNW5pcCcsXG4gICAgICAgICdlcT8nLFxuICAgICAgICAnPycsXG4gICAgICAgICc9JyxcbiAgICAgICAgJ3N3YXBkJyxcbiAgICAgICAgJzJvdmVyJyxcbiAgICAgICAgJ2NsZWFyJyxcbiAgICAgICAgJzJkdXAnLFxuICAgICAgICAnZ2V0LXJldGFpbnN0YWNrJyxcbiAgICAgICAgJ25vdCcsXG4gICAgICAgICd0dXBsZT8nLFxuICAgICAgICAnZHVwJyxcbiAgICAgICAgJzNuaXBkJyxcbiAgICAgICAgJ2NhbGwnLFxuICAgICAgICAnLXJvdGQnLFxuICAgICAgICAnb2JqZWN0JyxcbiAgICAgICAgJ2Ryb3AnLFxuICAgICAgICAnYXNzZXJ0PScsXG4gICAgICAgICdhc3NlcnQ/JyxcbiAgICAgICAgJy1yb3QnLFxuICAgICAgICAnZXhlY3V0ZScsXG4gICAgICAgICdib2EnLFxuICAgICAgICAnZ2V0LWNhbGxzdGFjaycsXG4gICAgICAgICdjdXJyaWVkPycsXG4gICAgICAgICczZHJvcCcsXG4gICAgICAgICdwaWNrZCcsXG4gICAgICAgICdvdmVyZCcsXG4gICAgICAgICdvdmVyJyxcbiAgICAgICAgJ3JvbGwnLFxuICAgICAgICAnM25pcCcsXG4gICAgICAgICdzd2FwJyxcbiAgICAgICAgJ2FuZCcsXG4gICAgICAgICcybmlwJyxcbiAgICAgICAgJ3JvdGQnLFxuICAgICAgICAndGhyb3cnLFxuICAgICAgICAnKGNsb25lKScsXG4gICAgICAgICdoYXNoY29kZSonLFxuICAgICAgICAnc3BpbicsXG4gICAgICAgICdyZWFjaCcsXG4gICAgICAgICc0ZHVwJyxcbiAgICAgICAgJ2VxdWFsPycsXG4gICAgICAgICdnZXQtZGF0YXN0YWNrJyxcbiAgICAgICAgJ2Fzc2VydCcsXG4gICAgICAgICcyZHJvcCcsXG4gICAgICAgICc8d3JhcHBlcj4nLFxuICAgICAgICAnYm9vbGVhbj8nLFxuICAgICAgICAnaWRlbnRpdHktaGFzaGNvZGUnLFxuICAgICAgICAnaWRlbnRpdHktdHVwbGU/JyxcbiAgICAgICAgJ251bGwnLFxuICAgICAgICAnY29tcG9zZWQ/JyxcbiAgICAgICAgJ25ldycsXG4gICAgICAgICc1ZHJvcCcsXG4gICAgICAgICdyb3QnLFxuICAgICAgICAnLXJvbGwnLFxuICAgICAgICAneG9yJyxcbiAgICAgICAgJ2lkZW50aXR5LXR1cGxlJyxcbiAgICAgICAgJ2Jvb2xlYW4nXG4gICAgICBdLFxuICAgICAgJ290aGVyLWJ1aWx0aW4tc3ludGF4JzogW1xuICAgICAgICAvLyBzeW50YXhcbiAgICAgICAgJz09PT09PT0nLFxuICAgICAgICAncmVjdXJzaXZlJyxcbiAgICAgICAgJ2ZsdXNoYWJsZScsXG4gICAgICAgICc+PicsXG4gICAgICAgICc8PDw8PDwnLFxuICAgICAgICAnTVxcXFwnLFxuICAgICAgICAnQicsXG4gICAgICAgICdQUklWQVRFPicsXG4gICAgICAgICdcXFxcJyxcbiAgICAgICAgJz09PT09PScsXG4gICAgICAgICdmaW5hbCcsXG4gICAgICAgICdpbmxpbmUnLFxuICAgICAgICAnZGVsaW1pdGVyJyxcbiAgICAgICAgJ2RlcHJlY2F0ZWQnLFxuICAgICAgICAnPFBSSVZBVEUnLFxuICAgICAgICAnPj4+Pj4+JyxcbiAgICAgICAgJzw8PDw8PDwnLFxuICAgICAgICAncGFyc2UtY29tcGxleCcsXG4gICAgICAgICdtYWxmb3JtZWQtY29tcGxleCcsXG4gICAgICAgICdyZWFkLW9ubHknLFxuICAgICAgICAnPj4+Pj4+PicsXG4gICAgICAgICdjYWxsLW5leHQtbWV0aG9kJyxcbiAgICAgICAgJzw8JyxcbiAgICAgICAgJ2ZvbGRhYmxlJyxcbiAgICAgICAgLy8gbGl0ZXJhbHNcbiAgICAgICAgJyQnLFxuICAgICAgICAnJFsnLFxuICAgICAgICAnJHsnXG4gICAgICBdLFxuICAgICAgJ3NlcXVlbmNlcy1idWlsdGluJzogW1xuICAgICAgICAnbWVtYmVyLWVxPycsXG4gICAgICAgICdtaXNtYXRjaCcsXG4gICAgICAgICdhcHBlbmQnLFxuICAgICAgICAnYXNzZXJ0LXNlcXVlbmNlPScsXG4gICAgICAgICdsb25nZXInLFxuICAgICAgICAncmVwZXRpdGlvbicsXG4gICAgICAgICdjbG9uZS1saWtlJyxcbiAgICAgICAgJzNzZXF1ZW5jZScsXG4gICAgICAgICdhc3NlcnQtc2VxdWVuY2U/JyxcbiAgICAgICAgJ2xhc3QtaW5kZXgtZnJvbScsXG4gICAgICAgICdyZXZlcnNlZCcsXG4gICAgICAgICdpbmRleC1mcm9tJyxcbiAgICAgICAgJ2N1dConLFxuICAgICAgICAncGFkLXRhaWwnLFxuICAgICAgICAnam9pbi1hcycsXG4gICAgICAgICdyZW1vdmUtZXEhJyxcbiAgICAgICAgJ2NvbmNhdC1hcycsXG4gICAgICAgICdidXQtbGFzdCcsXG4gICAgICAgICdzbmlwJyxcbiAgICAgICAgJ250aHMnLFxuICAgICAgICAnbnRoJyxcbiAgICAgICAgJ3NlcXVlbmNlJyxcbiAgICAgICAgJ2xvbmdlc3QnLFxuICAgICAgICAnc2xpY2U/JyxcbiAgICAgICAgJzxzbGljZT4nLFxuICAgICAgICAncmVtb3ZlLW50aCcsXG4gICAgICAgICd0YWlsLXNsaWNlJyxcbiAgICAgICAgJ2VtcHR5PycsXG4gICAgICAgICd0YWlsKicsXG4gICAgICAgICdtZW1iZXI/JyxcbiAgICAgICAgJ3ZpcnR1YWwtc2VxdWVuY2U/JyxcbiAgICAgICAgJ3NldC1sZW5ndGgnLFxuICAgICAgICAnZHJvcC1wcmVmaXgnLFxuICAgICAgICAnaW90YScsXG4gICAgICAgICd1bmNsaXAnLFxuICAgICAgICAnYm91bmRzLWVycm9yPycsXG4gICAgICAgICd1bmNsaXAtbGFzdC1zbGljZScsXG4gICAgICAgICdub24tbmVnYXRpdmUtaW50ZWdlci1leHBlY3RlZCcsXG4gICAgICAgICdub24tbmVnYXRpdmUtaW50ZWdlci1leHBlY3RlZD8nLFxuICAgICAgICAnbWlkcG9pbnRAJyxcbiAgICAgICAgJ2xvbmdlcj8nLFxuICAgICAgICAnP3NldC1udGgnLFxuICAgICAgICAnP2ZpcnN0JyxcbiAgICAgICAgJ3Jlc3Qtc2xpY2UnLFxuICAgICAgICAncHJlcGVuZC1hcycsXG4gICAgICAgICdwcmVwZW5kJyxcbiAgICAgICAgJ2ZvdXJ0aCcsXG4gICAgICAgICdzaWZ0JyxcbiAgICAgICAgJ3N1YnNlcS1zdGFydCcsXG4gICAgICAgICduZXctc2VxdWVuY2UnLFxuICAgICAgICAnP2xhc3QnLFxuICAgICAgICAnbGlrZScsXG4gICAgICAgICdmaXJzdDQnLFxuICAgICAgICAnMXNlcXVlbmNlJyxcbiAgICAgICAgJ3JldmVyc2UnLFxuICAgICAgICAnc2xpY2UnLFxuICAgICAgICAndmlydHVhbEAnLFxuICAgICAgICAncmVwZXRpdGlvbj8nLFxuICAgICAgICAnc2V0LWxhc3QnLFxuICAgICAgICAnaW5kZXgnLFxuICAgICAgICAnNHNlcXVlbmNlJyxcbiAgICAgICAgJ21heC1sZW5ndGgnLFxuICAgICAgICAnc2V0LXNlY29uZCcsXG4gICAgICAgICdpbW11dGFibGUtc2VxdWVuY2UnLFxuICAgICAgICAnZmlyc3QyJyxcbiAgICAgICAgJ2ZpcnN0MycsXG4gICAgICAgICdzdXByZW11bScsXG4gICAgICAgICd1bmNsaXAtc2xpY2UnLFxuICAgICAgICAnc3VmZml4IScsXG4gICAgICAgICdpbnNlcnQtbnRoJyxcbiAgICAgICAgJ3RhaWwnLFxuICAgICAgICAnM2FwcGVuZCcsXG4gICAgICAgICdzaG9ydCcsXG4gICAgICAgICdzdWZmaXgnLFxuICAgICAgICAnY29uY2F0JyxcbiAgICAgICAgJ2ZsaXAnLFxuICAgICAgICAnaW1tdXRhYmxlPycsXG4gICAgICAgICdyZXZlcnNlIScsXG4gICAgICAgICcyc2VxdWVuY2UnLFxuICAgICAgICAnc3VtJyxcbiAgICAgICAgJ2RlbGV0ZS1hbGwnLFxuICAgICAgICAnaW5kaWNlcycsXG4gICAgICAgICdzbmlwLXNsaWNlJyxcbiAgICAgICAgJzxpb3RhPicsXG4gICAgICAgICdjaGVjay1zbGljZScsXG4gICAgICAgICdzZXF1ZW5jZT8nLFxuICAgICAgICAnaGVhZCcsXG4gICAgICAgICdhcHBlbmQtYXMnLFxuICAgICAgICAnaGFsdmVzJyxcbiAgICAgICAgJ3NlcXVlbmNlPScsXG4gICAgICAgICdjb2xsYXBzZS1zbGljZScsXG4gICAgICAgICc/c2Vjb25kJyxcbiAgICAgICAgJ3NsaWNlLWVycm9yPycsXG4gICAgICAgICdwcm9kdWN0JyxcbiAgICAgICAgJ2JvdW5kcy1jaGVjaz8nLFxuICAgICAgICAnYm91bmRzLWNoZWNrJyxcbiAgICAgICAgJ2ltbXV0YWJsZScsXG4gICAgICAgICd2aXJ0dWFsLWV4ZW1wbGFyJyxcbiAgICAgICAgJ2hhcnZlc3QnLFxuICAgICAgICAncmVtb3ZlJyxcbiAgICAgICAgJ3BhZC1oZWFkJyxcbiAgICAgICAgJ2xhc3QnLFxuICAgICAgICAnc2V0LWZvdXJ0aCcsXG4gICAgICAgICdjYXJ0ZXNpYW4tcHJvZHVjdCcsXG4gICAgICAgICdyZW1vdmUtZXEnLFxuICAgICAgICAnc2hvcnRlbicsXG4gICAgICAgICdzaG9ydGVyJyxcbiAgICAgICAgJ3JldmVyc2VkPycsXG4gICAgICAgICdzaG9ydGVyPycsXG4gICAgICAgICdzaG9ydGVzdCcsXG4gICAgICAgICdoZWFkLXNsaWNlJyxcbiAgICAgICAgJ3BvcConLFxuICAgICAgICAndGFpbC1zbGljZSonLFxuICAgICAgICAnYnV0LWxhc3Qtc2xpY2UnLFxuICAgICAgICAnaW90YT8nLFxuICAgICAgICAnYXBwZW5kIScsXG4gICAgICAgICdjdXQtc2xpY2UnLFxuICAgICAgICAnbmV3LXJlc2l6YWJsZScsXG4gICAgICAgICdoZWFkLXNsaWNlKicsXG4gICAgICAgICdzZXF1ZW5jZS1oYXNoY29kZScsXG4gICAgICAgICdwb3AnLFxuICAgICAgICAnc2V0LW50aCcsXG4gICAgICAgICc/bnRoJyxcbiAgICAgICAgJ3NlY29uZCcsXG4gICAgICAgICdqb2luJyxcbiAgICAgICAgJ2ltbXV0YWJsZS1zZXF1ZW5jZT8nLFxuICAgICAgICAnPHJldmVyc2VkPicsXG4gICAgICAgICczYXBwZW5kLWFzJyxcbiAgICAgICAgJ3ZpcnR1YWwtc2VxdWVuY2UnLFxuICAgICAgICAnc3Vic2VxPycsXG4gICAgICAgICdyZW1vdmUtbnRoIScsXG4gICAgICAgICdsZW5ndGgnLFxuICAgICAgICAnbGFzdC1pbmRleCcsXG4gICAgICAgICdsZW5ndGhlbicsXG4gICAgICAgICdhc3NlcnQtc2VxdWVuY2UnLFxuICAgICAgICAnY29weScsXG4gICAgICAgICdtb3ZlJyxcbiAgICAgICAgJ3RoaXJkJyxcbiAgICAgICAgJ2ZpcnN0JyxcbiAgICAgICAgJ3RhaWw/JyxcbiAgICAgICAgJ3NldC1maXJzdCcsXG4gICAgICAgICdwcmVmaXgnLFxuICAgICAgICAnYm91bmRzLWVycm9yJyxcbiAgICAgICAgJzxyZXBldGl0aW9uPicsXG4gICAgICAgICdleGNoYW5nZScsXG4gICAgICAgICdzdXJyb3VuZCcsXG4gICAgICAgICdjdXQnLFxuICAgICAgICAnbWluLWxlbmd0aCcsXG4gICAgICAgICdzZXQtdGhpcmQnLFxuICAgICAgICAncHVzaC1hbGwnLFxuICAgICAgICAnaGVhZD8nLFxuICAgICAgICAnc3Vic2VxLXN0YXJ0LWZyb20nLFxuICAgICAgICAnZGVsZXRlLXNsaWNlJyxcbiAgICAgICAgJ3Jlc3QnLFxuICAgICAgICAnc3VtLWxlbmd0aHMnLFxuICAgICAgICAnaGVhZConLFxuICAgICAgICAnaW5maW11bScsXG4gICAgICAgICdyZW1vdmUhJyxcbiAgICAgICAgJ2dsdWUnLFxuICAgICAgICAnc2xpY2UtZXJyb3InLFxuICAgICAgICAnc3Vic2VxJyxcbiAgICAgICAgJ3B1c2gnLFxuICAgICAgICAncmVwbGFjZS1zbGljZScsXG4gICAgICAgICdzdWJzZXEtYXMnLFxuICAgICAgICAndW5jbGlwLWxhc3QnXG4gICAgICBdLFxuICAgICAgJ21hdGgtYnVpbHRpbic6IFtcbiAgICAgICAgJ251bWJlcj0nLFxuICAgICAgICAnbmV4dC1wb3dlci1vZi0yJyxcbiAgICAgICAgJz8xKycsXG4gICAgICAgICdmcC1zcGVjaWFsPycsXG4gICAgICAgICdpbWFnaW5hcnktcGFydCcsXG4gICAgICAgICdmbG9hdD5iaXRzJyxcbiAgICAgICAgJ251bWJlcj8nLFxuICAgICAgICAnZnAtaW5maW5pdHk/JyxcbiAgICAgICAgJ2JpZ251bT8nLFxuICAgICAgICAnZnAtc25hbj8nLFxuICAgICAgICAnZGVub21pbmF0b3InLFxuICAgICAgICAnZ2NkJyxcbiAgICAgICAgJyonLFxuICAgICAgICAnKycsXG4gICAgICAgICdmcC1iaXR3aXNlPScsXG4gICAgICAgICctJyxcbiAgICAgICAgJ3U+PScsXG4gICAgICAgICcvJyxcbiAgICAgICAgJz49JyxcbiAgICAgICAgJ2JpdGFuZCcsXG4gICAgICAgICdwb3dlci1vZi0yPycsXG4gICAgICAgICdsb2cyLWV4cGVjdHMtcG9zaXRpdmUnLFxuICAgICAgICAnbmVnPycsXG4gICAgICAgICc8JyxcbiAgICAgICAgJ2xvZzInLFxuICAgICAgICAnPicsXG4gICAgICAgICdpbnRlZ2VyPycsXG4gICAgICAgICdudW1iZXInLFxuICAgICAgICAnYml0cz5kb3VibGUnLFxuICAgICAgICAnMi8nLFxuICAgICAgICAnemVybz8nLFxuICAgICAgICAnYml0cz5mbG9hdCcsXG4gICAgICAgICdmbG9hdD8nLFxuICAgICAgICAnc2hpZnQnLFxuICAgICAgICAncmF0aW8/JyxcbiAgICAgICAgJ3JlY3Q+JyxcbiAgICAgICAgJ2V2ZW4/JyxcbiAgICAgICAgJ3JhdGlvJyxcbiAgICAgICAgJ2ZwLXNpZ24nLFxuICAgICAgICAnYml0bm90JyxcbiAgICAgICAgJz5maXhudW0nLFxuICAgICAgICAnY29tcGxleD8nLFxuICAgICAgICAnL2knLFxuICAgICAgICAnaW50ZWdlcj5maXhudW0nLFxuICAgICAgICAnL2YnLFxuICAgICAgICAnc2duJyxcbiAgICAgICAgJz5iaWdudW0nLFxuICAgICAgICAnbmV4dC1mbG9hdCcsXG4gICAgICAgICd1PCcsXG4gICAgICAgICd1PicsXG4gICAgICAgICdtb2QnLFxuICAgICAgICAncmVjaXAnLFxuICAgICAgICAncmF0aW9uYWwnLFxuICAgICAgICAnPmZsb2F0JyxcbiAgICAgICAgJzJeJyxcbiAgICAgICAgJ2ludGVnZXInLFxuICAgICAgICAnZml4bnVtPycsXG4gICAgICAgICduZWcnLFxuICAgICAgICAnZml4bnVtJyxcbiAgICAgICAgJ3NxJyxcbiAgICAgICAgJ2JpZ251bScsXG4gICAgICAgICc+cmVjdCcsXG4gICAgICAgICdiaXQ/JyxcbiAgICAgICAgJ2ZwLXFuYW4/JyxcbiAgICAgICAgJ3NpbXBsZS1nY2QnLFxuICAgICAgICAnY29tcGxleCcsXG4gICAgICAgICc8ZnAtbmFuPicsXG4gICAgICAgICdyZWFsJyxcbiAgICAgICAgJz5mcmFjdGlvbicsXG4gICAgICAgICdkb3VibGU+Yml0cycsXG4gICAgICAgICdiaXRvcicsXG4gICAgICAgICdyZW0nLFxuICAgICAgICAnZnAtbmFuLXBheWxvYWQnLFxuICAgICAgICAncmVhbC1wYXJ0JyxcbiAgICAgICAgJ2xvZzItZXhwZWN0cy1wb3NpdGl2ZT8nLFxuICAgICAgICAncHJldi1mbG9hdCcsXG4gICAgICAgICdhbGlnbicsXG4gICAgICAgICd1bm9yZGVyZWQ/JyxcbiAgICAgICAgJ2Zsb2F0JyxcbiAgICAgICAgJ2ZwLW5hbj8nLFxuICAgICAgICAnYWJzJyxcbiAgICAgICAgJ2JpdHhvcicsXG4gICAgICAgICdpbnRlZ2VyPmZpeG51bS1zdHJpY3QnLFxuICAgICAgICAndTw9JyxcbiAgICAgICAgJ29kZD8nLFxuICAgICAgICAnPD0nLFxuICAgICAgICAnL21vZCcsXG4gICAgICAgICc+aW50ZWdlcicsXG4gICAgICAgICdyZWFsPycsXG4gICAgICAgICdyYXRpb25hbD8nLFxuICAgICAgICAnbnVtZXJhdG9yJ1xuICAgICAgXVxuICAgICAgLy8gdGhhdCdzIGFsbCBmb3Igbm93XG4gICAgfVxuXG4gICAgT2JqZWN0LmtleXMoYnVpbHRpbnMpLmZvckVhY2goZnVuY3Rpb24gKGspIHtcbiAgICAgIGZhY3RvcltrXS5wYXR0ZXJuID0gYXJyVG9Xb3Jkc1JlZ0V4cChidWlsdGluc1trXSlcbiAgICB9KVxuICAgIHZhciBjb21iaW5hdG9ycyA9IFtcbiAgICAgIC8vIGtlcm5lbFxuICAgICAgJzJiaScsXG4gICAgICAnd2hpbGUnLFxuICAgICAgJzJ0cmknLFxuICAgICAgJ2JpKicsXG4gICAgICAnNGRpcCcsXG4gICAgICAnYm90aD8nLFxuICAgICAgJ3NhbWU/JyxcbiAgICAgICd0cmlAJyxcbiAgICAgICdjdXJyeScsXG4gICAgICAncHJlcG9zZScsXG4gICAgICAnM2JpJyxcbiAgICAgICc/aWYnLFxuICAgICAgJ3RyaSonLFxuICAgICAgJzJrZWVwJyxcbiAgICAgICcza2VlcCcsXG4gICAgICAnY3VycmllZCcsXG4gICAgICAnMmtlZXBkJyxcbiAgICAgICd3aGVuJyxcbiAgICAgICcyYmkqJyxcbiAgICAgICcydHJpKicsXG4gICAgICAnNGtlZXAnLFxuICAgICAgJ2JpQCcsXG4gICAgICAna2VlcGRkJyxcbiAgICAgICdkbycsXG4gICAgICAndW5sZXNzKicsXG4gICAgICAndHJpLWN1cnJ5JyxcbiAgICAgICdpZionLFxuICAgICAgJ2xvb3AnLFxuICAgICAgJ2JpLWN1cnJ5KicsXG4gICAgICAnd2hlbionLFxuICAgICAgJzJiaUAnLFxuICAgICAgJzJ0cmlAJyxcbiAgICAgICd3aXRoJyxcbiAgICAgICcyd2l0aCcsXG4gICAgICAnZWl0aGVyPycsXG4gICAgICAnYmknLFxuICAgICAgJ3VudGlsJyxcbiAgICAgICczZGlwJyxcbiAgICAgICczY3VycnknLFxuICAgICAgJ3RyaS1jdXJyeSonLFxuICAgICAgJ3RyaS1jdXJyeUAnLFxuICAgICAgJ2JpLWN1cnJ5JyxcbiAgICAgICdrZWVwZCcsXG4gICAgICAnY29tcG9zZScsXG4gICAgICAnMmRpcCcsXG4gICAgICAnaWYnLFxuICAgICAgJzN0cmknLFxuICAgICAgJ3VubGVzcycsXG4gICAgICAndHVwbGUnLFxuICAgICAgJ2tlZXAnLFxuICAgICAgJzJjdXJyeScsXG4gICAgICAndHJpJyxcbiAgICAgICdtb3N0JyxcbiAgICAgICd3aGlsZSonLFxuICAgICAgJ2RpcCcsXG4gICAgICAnY29tcG9zZWQnLFxuICAgICAgJ2JpLWN1cnJ5QCcsXG4gICAgICAvLyBzZXF1ZW5jZXNcbiAgICAgICdmaW5kLWxhc3QtZnJvbScsXG4gICAgICAndHJpbS1oZWFkLXNsaWNlJyxcbiAgICAgICdtYXAtYXMnLFxuICAgICAgJ2VhY2gtZnJvbScsXG4gICAgICAnbm9uZT8nLFxuICAgICAgJ3RyaW0tdGFpbCcsXG4gICAgICAncGFydGl0aW9uJyxcbiAgICAgICdpZi1lbXB0eScsXG4gICAgICAnYWNjdW11bGF0ZSonLFxuICAgICAgJ3JlamVjdCEnLFxuICAgICAgJ2ZpbmQtZnJvbScsXG4gICAgICAnYWNjdW11bGF0ZS1hcycsXG4gICAgICAnY29sbGVjdG9yLWZvci1hcycsXG4gICAgICAncmVqZWN0JyxcbiAgICAgICdtYXAnLFxuICAgICAgJ21hcC1zdW0nLFxuICAgICAgJ2FjY3VtdWxhdGUhJyxcbiAgICAgICcyZWFjaC1mcm9tJyxcbiAgICAgICdmb2xsb3cnLFxuICAgICAgJ3N1cHJlbXVtLWJ5JyxcbiAgICAgICdtYXAhJyxcbiAgICAgICd1bmxlc3MtZW1wdHknLFxuICAgICAgJ2NvbGxlY3RvcicsXG4gICAgICAncGFkZGluZycsXG4gICAgICAncmVkdWNlLWluZGV4JyxcbiAgICAgICdyZXBsaWNhdGUtYXMnLFxuICAgICAgJ2luZmltdW0tYnknLFxuICAgICAgJ3RyaW0tdGFpbC1zbGljZScsXG4gICAgICAnY291bnQnLFxuICAgICAgJ2ZpbmQtaW5kZXgnLFxuICAgICAgJ2ZpbHRlcicsXG4gICAgICAnYWNjdW11bGF0ZSohJyxcbiAgICAgICdyZWplY3QtYXMnLFxuICAgICAgJ21hcC1pbnRlZ2VycycsXG4gICAgICAnbWFwLWZpbmQnLFxuICAgICAgJ3JlZHVjZScsXG4gICAgICAnc2VsZWN0b3InLFxuICAgICAgJ2ludGVybGVhdmUnLFxuICAgICAgJzJtYXAnLFxuICAgICAgJ2ZpbHRlci1hcycsXG4gICAgICAnYmluYXJ5LXJlZHVjZScsXG4gICAgICAnbWFwLWluZGV4LWFzJyxcbiAgICAgICdmaW5kJyxcbiAgICAgICdwcm9kdWNlJyxcbiAgICAgICdmaWx0ZXIhJyxcbiAgICAgICdyZXBsaWNhdGUnLFxuICAgICAgJ2NhcnRlc2lhbi1tYXAnLFxuICAgICAgJ2NhcnRlc2lhbi1lYWNoJyxcbiAgICAgICdmaW5kLWluZGV4LWZyb20nLFxuICAgICAgJ21hcC1maW5kLWxhc3QnLFxuICAgICAgJzNtYXAtYXMnLFxuICAgICAgJzNtYXAnLFxuICAgICAgJ2ZpbmQtbGFzdCcsXG4gICAgICAnc2VsZWN0b3ItYXMnLFxuICAgICAgJzJtYXAtYXMnLFxuICAgICAgJzJtYXAtcmVkdWNlJyxcbiAgICAgICdhY2N1bXVsYXRlJyxcbiAgICAgICdlYWNoJyxcbiAgICAgICdlYWNoLWluZGV4JyxcbiAgICAgICdhY2N1bXVsYXRlKi1hcycsXG4gICAgICAnd2hlbi1lbXB0eScsXG4gICAgICAnYWxsPycsXG4gICAgICAnY29sbGVjdG9yLWFzJyxcbiAgICAgICdwdXNoLWVpdGhlcicsXG4gICAgICAnbmV3LWxpa2UnLFxuICAgICAgJ2NvbGxlY3Rvci1mb3InLFxuICAgICAgJzJzZWxlY3RvcicsXG4gICAgICAncHVzaC1pZicsXG4gICAgICAnMmFsbD8nLFxuICAgICAgJ21hcC1yZWR1Y2UnLFxuICAgICAgJzNlYWNoJyxcbiAgICAgICdhbnk/JyxcbiAgICAgICd0cmltLXNsaWNlJyxcbiAgICAgICcycmVkdWNlJyxcbiAgICAgICdjaGFuZ2UtbnRoJyxcbiAgICAgICdwcm9kdWNlLWFzJyxcbiAgICAgICcyZWFjaCcsXG4gICAgICAndHJpbScsXG4gICAgICAndHJpbS1oZWFkJyxcbiAgICAgICdjYXJ0ZXNpYW4tZmluZCcsXG4gICAgICAnbWFwLWluZGV4JyxcbiAgICAgIC8vIG1hdGhcbiAgICAgICdpZi16ZXJvJyxcbiAgICAgICdlYWNoLWludGVnZXInLFxuICAgICAgJ3VubGVzcy16ZXJvJyxcbiAgICAgICcoZmluZC1pbnRlZ2VyKScsXG4gICAgICAnd2hlbi16ZXJvJyxcbiAgICAgICdmaW5kLWxhc3QtaW50ZWdlcicsXG4gICAgICAnKGFsbC1pbnRlZ2Vycz8pJyxcbiAgICAgICd0aW1lcycsXG4gICAgICAnKGVhY2gtaW50ZWdlciknLFxuICAgICAgJ2ZpbmQtaW50ZWdlcicsXG4gICAgICAnYWxsLWludGVnZXJzPycsXG4gICAgICAvLyBtYXRoLmNvbWJpbmF0b3JzXG4gICAgICAndW5sZXNzLW5lZ2F0aXZlJyxcbiAgICAgICdpZi1wb3NpdGl2ZScsXG4gICAgICAnd2hlbi1wb3NpdGl2ZScsXG4gICAgICAnd2hlbi1uZWdhdGl2ZScsXG4gICAgICAndW5sZXNzLXBvc2l0aXZlJyxcbiAgICAgICdpZi1uZWdhdGl2ZScsXG4gICAgICAvLyBjb21iaW5hdG9yc1xuICAgICAgJ2Nhc2UnLFxuICAgICAgJzJjbGVhdmUnLFxuICAgICAgJ2NvbmQ+cXVvdCcsXG4gICAgICAnY2FzZT5xdW90JyxcbiAgICAgICczY2xlYXZlJyxcbiAgICAgICd3cm9uZy12YWx1ZXMnLFxuICAgICAgJ3RvLWZpeGVkLXBvaW50JyxcbiAgICAgICdhbGlzdD5xdW90JyxcbiAgICAgICdjb25kJyxcbiAgICAgICdjbGVhdmUnLFxuICAgICAgJ2NhbGwtZWZmZWN0JyxcbiAgICAgICdyZWN1cnNpdmUtaGFzaGNvZGUnLFxuICAgICAgJ3NwcmVhZCcsXG4gICAgICAnZGVlcC1zcHJlYWQ+cXVvdCcsXG4gICAgICAvLyBjb21iaW5hdG9ycy5zaG9ydC1jaXJjdWl0XG4gICAgICAnMnx8JyxcbiAgICAgICcwfHwnLFxuICAgICAgJ258fCcsXG4gICAgICAnMCYmJyxcbiAgICAgICcyJiYnLFxuICAgICAgJzN8fCcsXG4gICAgICAnMXx8JyxcbiAgICAgICcxJiYnLFxuICAgICAgJ24mJicsXG4gICAgICAnMyYmJyxcbiAgICAgIC8vIGNvbWJpbmF0b3JzLnNtYXJ0XG4gICAgICAnc21hcnQtdW5sZXNzKicsXG4gICAgICAna2VlcC1pbnB1dHMnLFxuICAgICAgJ3JlZHVjZS1vdXRwdXRzJyxcbiAgICAgICdzbWFydC13aGVuKicsXG4gICAgICAnY2xlYXZlPmFycmF5JyxcbiAgICAgICdzbWFydC13aXRoJyxcbiAgICAgICdzbWFydC1hcHBseScsXG4gICAgICAnc21hcnQtaWYnLFxuICAgICAgJ2lucHV0cy9vdXRwdXRzJyxcbiAgICAgICdvdXRwdXQ+c2VxdWVuY2UtbicsXG4gICAgICAnbWFwLW91dHB1dHMnLFxuICAgICAgJ21hcC1yZWR1Y2Utb3V0cHV0cycsXG4gICAgICAnZHJvcHBpbmcnLFxuICAgICAgJ291dHB1dD5hcnJheScsXG4gICAgICAnc21hcnQtbWFwLXJlZHVjZScsXG4gICAgICAnc21hcnQtMm1hcC1yZWR1Y2UnLFxuICAgICAgJ291dHB1dD5hcnJheS1uJyxcbiAgICAgICdudWxsYXJ5JyxcbiAgICAgICdpbnB1dDxzZXF1ZW5jZScsXG4gICAgICAnYXBwZW5kLW91dHB1dHMnLFxuICAgICAgJ2Ryb3AtaW5wdXRzJyxcbiAgICAgICdpbnB1dHMnLFxuICAgICAgJ3NtYXJ0LTJyZWR1Y2UnLFxuICAgICAgJ2Ryb3Atb3V0cHV0cycsXG4gICAgICAnc21hcnQtcmVkdWNlJyxcbiAgICAgICdwcmVzZXJ2aW5nJyxcbiAgICAgICdzbWFydC13aGVuJyxcbiAgICAgICdvdXRwdXRzJyxcbiAgICAgICdhcHBlbmQtb3V0cHV0cy1hcycsXG4gICAgICAnc21hcnQtdW5sZXNzJyxcbiAgICAgICdzbWFydC1pZionLFxuICAgICAgJ3N1bS1vdXRwdXRzJyxcbiAgICAgICdpbnB1dDxzZXF1ZW5jZS11bnNhZmUnLFxuICAgICAgJ291dHB1dD5zZXF1ZW5jZSdcbiAgICAgIC8vIHRhZm5cbiAgICBdXG5cbiAgICBmYWN0b3IuY29tYmluYXRvcnMucGF0dGVybiA9IGFyclRvV29yZHNSZWdFeHAoY29tYmluYXRvcnMpXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmZhY3RvciA9IGZhY3RvclxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJmYWN0b3IiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNvbW1lbnRfaW5zaWRlIiwiZnVuY3Rpb24iLCJzdHJpbmdfaW5zaWRlIiwibnVtYmVyIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwiZ3JlZWR5IiwicmVnZXhwIiwiYWxpYXMiLCJ2YXJpYWJsZSIsImtleXdvcmQiLCJvcGVyYXRvciIsImJvb2xlYW4iLCJzdHJpbmciLCJjb21iaW5hdG9ycyIsImVzY2FwZSIsInN0ciIsInJlcGxhY2UiLCJhcnJUb1dvcmRzUmVnRXhwIiwiYXJyIiwiUmVnRXhwIiwibWFwIiwiam9pbiIsImJ1aWx0aW5zIiwiT2JqZWN0Iiwia2V5cyIsImZvckVhY2giLCJrIiwibGFuZ3VhZ2VzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/factor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/false.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/false.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ $false)\n/* harmony export */ });\n// @ts-nocheck\n$false.displayName = \"false\";\n$false.aliases = [];\n/** @type {import('../core.js').Syntax} */ function $false(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */ Prism.languages[\"false\"] = {\n            comment: {\n                pattern: /\\{[^}]*\\}/\n            },\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            \"character-code\": {\n                pattern: /'(?:[^\\r]|\\r\\n?)/,\n                alias: \"number\"\n            },\n            \"assembler-code\": {\n                pattern: /\\d+`/,\n                alias: \"important\"\n            },\n            number: /\\d+/,\n            operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n            punctuation: /\\[|\\]/,\n            variable: /[a-z]/,\n            \"non-standard\": {\n                pattern: /[()<BDO®]/,\n                alias: \"bold\"\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mYWxzZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLOztJQUNoQyxVQUFVQSxLQUFLO1FBQ2Y7Ozs7S0FJQyxHQUNEQSxNQUFNQyxTQUFTLENBQUMsUUFBUSxHQUFHO1lBQ3pCQyxTQUFTO2dCQUNQQyxTQUFTO1lBQ1g7WUFDQUMsUUFBUTtnQkFDTkQsU0FBUztnQkFDVEUsUUFBUTtZQUNWO1lBQ0Esa0JBQWtCO2dCQUNoQkYsU0FBUztnQkFDVEcsT0FBTztZQUNUO1lBQ0Esa0JBQWtCO2dCQUNoQkgsU0FBUztnQkFDVEcsT0FBTztZQUNUO1lBQ0FDLFFBQVE7WUFDUkMsVUFBVTtZQUNWQyxhQUFhO1lBQ2JDLFVBQVU7WUFDVixnQkFBZ0I7Z0JBQ2RQLFNBQVM7Z0JBQ1RHLE9BQU87WUFDVDtRQUNGO0lBQ0YsR0FBR047QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mYWxzZS5qcz85ZmJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG4kZmFsc2UuZGlzcGxheU5hbWUgPSAnZmFsc2UnXG4kZmFsc2UuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gJGZhbHNlKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgLyoqXG4gICAgICogQmFzZWQgb24gdGhlIG1hbnVhbCBieSBXb3V0ZXIgdmFuIE9vcnRtZXJzc2VuLlxuICAgICAqXG4gICAgICogQHNlZSB7QGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL1ByaXNtSlMvcHJpc20vaXNzdWVzLzI4MDEjaXNzdWUtODI5NzE3NTA0fVxuICAgICAqL1xuICAgIFByaXNtLmxhbmd1YWdlc1snZmFsc2UnXSA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xce1tefV0qXFx9L1xuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCJbXlwiXSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdjaGFyYWN0ZXItY29kZSc6IHtcbiAgICAgICAgcGF0dGVybjogLycoPzpbXlxccl18XFxyXFxuPykvLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICAnYXNzZW1ibGVyLWNvZGUnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGQrYC8sXG4gICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgfSxcbiAgICAgIG51bWJlcjogL1xcZCsvLFxuICAgICAgb3BlcmF0b3I6IC9bLSEjJCUmJyorLC4vOjs9Pj9AXFxcXF5fYHx+w5/DuF0vLFxuICAgICAgcHVuY3R1YXRpb246IC9cXFt8XFxdLyxcbiAgICAgIHZhcmlhYmxlOiAvW2Etel0vLFxuICAgICAgJ25vbi1zdGFuZGFyZCc6IHtcbiAgICAgICAgcGF0dGVybjogL1soKTxCRE/Crl0vLFxuICAgICAgICBhbGlhczogJ2JvbGQnXG4gICAgICB9XG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyIkZmFsc2UiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwic3RyaW5nIiwiZ3JlZWR5IiwiYWxpYXMiLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwidmFyaWFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/false.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/firestore-security-rules.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/firestore-security-rules.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ firestoreSecurityRules)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nfirestoreSecurityRules.displayName = \"firestore-security-rules\";\nfirestoreSecurityRules.aliases = [];\n/** @type {import('../core.js').Syntax} */ function firestoreSecurityRules(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages[\"firestore-security-rules\"] = Prism.languages.extend(\"clike\", {\n        comment: /\\/\\/.*/,\n        keyword: /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n        operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    });\n    delete Prism.languages[\"firestore-security-rules\"][\"class-name\"];\n    Prism.languages.insertBefore(\"firestore-security-rules\", \"keyword\", {\n        path: {\n            pattern: /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                variable: {\n                    pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n                    inside: {\n                        operator: /=/,\n                        keyword: /\\*\\*/,\n                        punctuation: /[.$(){}]/\n                    }\n                },\n                punctuation: /\\//\n            }\n        },\n        method: {\n            // to make the pattern shorter, the actual method names are omitted\n            pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n            lookbehind: true,\n            alias: \"builtin\",\n            inside: {\n                punctuation: /,/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9maXJlc3RvcmUtc2VjdXJpdHktcnVsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyx1QkFBdUJDLFdBQVcsR0FBRztBQUNyQ0QsdUJBQXVCRSxPQUFPLEdBQUcsRUFBRTtBQUVuQyx3Q0FBd0MsR0FDekIsU0FBU0YsdUJBQXVCRyxLQUFLO0lBQ2xEQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUM3QkksTUFBTUUsU0FBUyxDQUFDLDJCQUEyQixHQUFHRixNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FDbEUsU0FDQTtRQUNFQyxTQUFTO1FBQ1RDLFNBQ0U7UUFDRkMsVUFBVTtJQUNaO0lBRUYsT0FBT04sTUFBTUUsU0FBUyxDQUFDLDJCQUEyQixDQUFDLGFBQWE7SUFDaEVGLE1BQU1FLFNBQVMsQ0FBQ0ssWUFBWSxDQUFDLDRCQUE0QixXQUFXO1FBQ2xFQyxNQUFNO1lBQ0pDLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05DLFVBQVU7b0JBQ1JKLFNBQVM7b0JBQ1RHLFFBQVE7d0JBQ05OLFVBQVU7d0JBQ1ZELFNBQVM7d0JBQ1RTLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0FBLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFFBQVE7WUFDTixtRUFBbUU7WUFDbkVOLFNBQVM7WUFDVEMsWUFBWTtZQUNaTSxPQUFPO1lBQ1BKLFFBQVE7Z0JBQ05FLGFBQWE7WUFDZjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9maXJlc3RvcmUtc2VjdXJpdHktcnVsZXMuanM/NmQxYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5maXJlc3RvcmVTZWN1cml0eVJ1bGVzLmRpc3BsYXlOYW1lID0gJ2ZpcmVzdG9yZS1zZWN1cml0eS1ydWxlcydcbmZpcmVzdG9yZVNlY3VyaXR5UnVsZXMuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmlyZXN0b3JlU2VjdXJpdHlSdWxlcyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgUHJpc20ubGFuZ3VhZ2VzWydmaXJlc3RvcmUtc2VjdXJpdHktcnVsZXMnXSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoXG4gICAgJ2NsaWtlJyxcbiAgICB7XG4gICAgICBjb21tZW50OiAvXFwvXFwvLiovLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFsbG93fGZ1bmN0aW9ufGlmfG1hdGNofG51bGx8cmV0dXJufHJ1bGVzX3ZlcnNpb258c2VydmljZSlcXGIvLFxuICAgICAgb3BlcmF0b3I6IC8mJnxcXHxcXHx8Wzw+IT1dPT98Wy0rKi8lXXxcXGIoPzppbnxpcylcXGIvXG4gICAgfVxuICApXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXNbJ2ZpcmVzdG9yZS1zZWN1cml0eS1ydWxlcyddWydjbGFzcy1uYW1lJ11cbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZmlyZXN0b3JlLXNlY3VyaXR5LXJ1bGVzJywgJ2tleXdvcmQnLCB7XG4gICAgcGF0aDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFtcXHMoKSxdKSg/OlxcLyg/OltcXHdcXHhBMC1cXHVGRkZGXSt8XFx7W1xcd1xceEEwLVxcdUZGRkZdKyg/Oj1cXCpcXCopP1xcfXxcXCRcXChbXFx3XFx4QTAtXFx1RkZGRi5dK1xcKSkpKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xce1tcXHdcXHhBMC1cXHVGRkZGXSsoPzo9XFwqXFwqKT9cXH18XFwkXFwoW1xcd1xceEEwLVxcdUZGRkYuXStcXCkvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgb3BlcmF0b3I6IC89LyxcbiAgICAgICAgICAgIGtleXdvcmQ6IC9cXCpcXCovLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bLiQoKXt9XS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwvL1xuICAgICAgfVxuICAgIH0sXG4gICAgbWV0aG9kOiB7XG4gICAgICAvLyB0byBtYWtlIHRoZSBwYXR0ZXJuIHNob3J0ZXIsIHRoZSBhY3R1YWwgbWV0aG9kIG5hbWVzIGFyZSBvbWl0dGVkXG4gICAgICBwYXR0ZXJuOiAvKFxcYmFsbG93XFxzKylbYS16XSsoPzpcXHMqLFxccypbYS16XSspKig/PVxccypbOjtdKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdidWlsdGluJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogLywvXG4gICAgICB9XG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwiZmlyZXN0b3JlU2VjdXJpdHlSdWxlcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb21tZW50Iiwia2V5d29yZCIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwicGF0aCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwidmFyaWFibGUiLCJwdW5jdHVhdGlvbiIsIm1ldGhvZCIsImFsaWFzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/firestore-security-rules.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/flow.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/flow.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ flow)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\nflow.displayName = \"flow\";\nflow.aliases = [];\n/** @type {import('../core.js').Syntax} */ function flow(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.flow = Prism.languages.extend(\"javascript\", {});\n        Prism.languages.insertBefore(\"flow\", \"keyword\", {\n            type: [\n                {\n                    pattern: /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|[Ss]ymbol|any|mixed|null|void)\\b/,\n                    alias: \"class-name\"\n                }\n            ]\n        });\n        Prism.languages.flow[\"function-variable\"].pattern = /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i;\n        delete Prism.languages.flow[\"parameter\"];\n        Prism.languages.insertBefore(\"flow\", \"operator\", {\n            \"flow-punctuation\": {\n                pattern: /\\{\\||\\|\\}/,\n                alias: \"punctuation\"\n            }\n        });\n        if (!Array.isArray(Prism.languages.flow.keyword)) {\n            Prism.languages.flow.keyword = [\n                Prism.languages.flow.keyword\n            ];\n        }\n        Prism.languages.flow.keyword.unshift({\n            pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n            lookbehind: true\n        }, {\n            pattern: /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n            lookbehind: true\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mbG93LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNtQztBQUNqREMsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxzREFBbUJBO0lBQ2hDLFVBQVVJLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxJQUFJLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGNBQWMsQ0FBQztRQUM3REgsTUFBTUUsU0FBUyxDQUFDRSxZQUFZLENBQUMsUUFBUSxXQUFXO1lBQzlDQyxNQUFNO2dCQUNKO29CQUNFQyxTQUNFO29CQUNGQyxPQUFPO2dCQUNUO2FBQ0Q7UUFDSDtRQUNBUCxNQUFNRSxTQUFTLENBQUNMLElBQUksQ0FBQyxvQkFBb0IsQ0FBQ1MsT0FBTyxHQUMvQztRQUNGLE9BQU9OLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDLFlBQVk7UUFDeENHLE1BQU1FLFNBQVMsQ0FBQ0UsWUFBWSxDQUFDLFFBQVEsWUFBWTtZQUMvQyxvQkFBb0I7Z0JBQ2xCRSxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7UUFDRjtRQUNBLElBQUksQ0FBQ0MsTUFBTUMsT0FBTyxDQUFDVCxNQUFNRSxTQUFTLENBQUNMLElBQUksQ0FBQ2EsT0FBTyxHQUFHO1lBQ2hEVixNQUFNRSxTQUFTLENBQUNMLElBQUksQ0FBQ2EsT0FBTyxHQUFHO2dCQUFDVixNQUFNRSxTQUFTLENBQUNMLElBQUksQ0FBQ2EsT0FBTzthQUFDO1FBQy9EO1FBQ0FWLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDYSxPQUFPLENBQUNDLE9BQU8sQ0FDbEM7WUFDRUwsU0FBUztZQUNUTSxZQUFZO1FBQ2QsR0FDQTtZQUNFTixTQUNFO1lBQ0ZNLFlBQVk7UUFDZDtJQUVKLEdBQUdaO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZmxvdy5qcz81M2Y3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9ySmF2YXNjcmlwdCBmcm9tICcuL2phdmFzY3JpcHQuanMnXG5mbG93LmRpc3BsYXlOYW1lID0gJ2Zsb3cnXG5mbG93LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGZsb3coUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuZmxvdyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7fSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdmbG93JywgJ2tleXdvcmQnLCB7XG4gICAgICB0eXBlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcYig/OltCYl1vb2xlYW58RnVuY3Rpb258W05uXXVtYmVyfFtTc110cmluZ3xbU3NdeW1ib2x8YW55fG1peGVkfG51bGx8dm9pZClcXGIvLFxuICAgICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmZsb3dbJ2Z1bmN0aW9uLXZhcmlhYmxlJ10ucGF0dGVybiA9XG4gICAgICAvKD8hXFxzKVtfJGEtelxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKig/PVxccyo9XFxzKig/OmZ1bmN0aW9uXFxifCg/OlxcKFteKCldKlxcKSg/Olxccyo6XFxzKlxcdyspP3woPyFcXHMpW18kYS16XFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWyRcXHdcXHhBMC1cXHVGRkZGXSkqKVxccyo9PikpL2lcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmZsb3dbJ3BhcmFtZXRlciddXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZmxvdycsICdvcGVyYXRvcicsIHtcbiAgICAgICdmbG93LXB1bmN0dWF0aW9uJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx7XFx8fFxcfFxcfS8sXG4gICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICB9XG4gICAgfSlcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoUHJpc20ubGFuZ3VhZ2VzLmZsb3cua2V5d29yZCkpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlcy5mbG93LmtleXdvcmQgPSBbUHJpc20ubGFuZ3VhZ2VzLmZsb3cua2V5d29yZF1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmZsb3cua2V5d29yZC51bnNoaWZ0KFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W14kXVxcYikoPzpDbGFzc3xkZWNsYXJlfG9wYXF1ZXx0eXBlKVxcYig/IVxcJCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXiRdXFxCKVxcJCg/OkRpZmZ8RW51bXxFeGFjdHxLZXlzfE9iak1hcHxQcm9wZXJ0eVR5cGV8UmVjb3JkfFNoYXBlfFN1YnR5cGV8U3VwZXJ0eXBlfGF3YWl0KVxcYig/IVxcJCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgKVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JKYXZhc2NyaXB0IiwiZmxvdyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJpbnNlcnRCZWZvcmUiLCJ0eXBlIiwicGF0dGVybiIsImFsaWFzIiwiQXJyYXkiLCJpc0FycmF5Iiwia2V5d29yZCIsInVuc2hpZnQiLCJsb29rYmVoaW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/flow.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fortran.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fortran.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fortran)\n/* harmony export */ });\n// @ts-nocheck\nfortran.displayName = \"fortran\";\nfortran.aliases = [];\n/** @type {import('../core.js').Syntax} */ function fortran(Prism) {\n    Prism.languages.fortran = {\n        \"quoted-number\": {\n            pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n            alias: \"number\"\n        },\n        string: {\n            pattern: /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n            inside: {\n                comment: {\n                    pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n                    lookbehind: true\n                }\n            }\n        },\n        comment: {\n            pattern: /!.*/,\n            greedy: true\n        },\n        boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n        keyword: [\n            // Types\n            /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i,\n            // END statements\n            /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,\n            // Statements\n            /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,\n            // Others\n            /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n        ],\n        operator: [\n            /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n            {\n                // Use lookbehind to prevent confusion with (/ /)\n                pattern: /(^|(?!\\().)\\/(?!\\))/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mb3J0cmFuLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCLGlCQUFpQjtZQUNmSyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05GLFNBQ0U7WUFDRkcsUUFBUTtnQkFDTkMsU0FBUztvQkFDUEosU0FBUztvQkFDVEssWUFBWTtnQkFDZDtZQUNGO1FBQ0Y7UUFDQUQsU0FBUztZQUNQSixTQUFTO1lBQ1RNLFFBQVE7UUFDVjtRQUNBQyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsU0FBUztZQUNQLFFBQVE7WUFDUjtZQUNBLGlCQUFpQjtZQUNqQjtZQUNBLGFBQWE7WUFDYjtZQUNBLFNBQVM7WUFDVDtTQUNEO1FBQ0RDLFVBQVU7WUFDUjtZQUNBO2dCQUNFLGlEQUFpRDtnQkFDakRWLFNBQVM7Z0JBQ1RLLFlBQVk7WUFDZDtTQUNEO1FBQ0RNLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2ZvcnRyYW4uanM/ODA1NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuZm9ydHJhbi5kaXNwbGF5TmFtZSA9ICdmb3J0cmFuJ1xuZm9ydHJhbi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmb3J0cmFuKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5mb3J0cmFuID0ge1xuICAgICdxdW90ZWQtbnVtYmVyJzoge1xuICAgICAgcGF0dGVybjogL1tCT1pdKFsnXCJdKVtBLUYwLTldK1xcMS9pLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oPzpcXGJcXHcrXyk/KFsnXCJdKSg/OlxcMVxcMXwmKD86XFxyXFxuP3xcXG4pKD86WyBcXHRdKiEuKig/Olxcclxcbj98XFxuKXwoPyFbIFxcdF0qISkpfCg/IVxcMSkuKSooPzpcXDF8JikvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCYoPzpcXHJcXG4/fFxcbilcXHMqKSEuKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIS4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcLig/OkZBTFNFfFRSVUUpXFwuKD86X1xcdyspPy9pLFxuICAgIG51bWJlcjogLyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRURdWystXT9cXGQrKT8oPzpfXFx3Kyk/L2ksXG4gICAga2V5d29yZDogW1xuICAgICAgLy8gVHlwZXNcbiAgICAgIC9cXGIoPzpDSEFSQUNURVJ8Q09NUExFWHxET1VCTEUgP1BSRUNJU0lPTnxJTlRFR0VSfExPR0lDQUx8UkVBTClcXGIvaSxcbiAgICAgIC8vIEVORCBzdGF0ZW1lbnRzXG4gICAgICAvXFxiKD86RU5EID8pPyg/OkJMT0NLID9EQVRBfERPfEZJTEV8Rk9SQUxMfEZVTkNUSU9OfElGfElOVEVSRkFDRXxNT0RVTEUoPyEgUFJPQ0VEVVJFKXxQUk9HUkFNfFNFTEVDVHxTVUJST1VUSU5FfFRZUEV8V0hFUkUpXFxiL2ksXG4gICAgICAvLyBTdGF0ZW1lbnRzXG4gICAgICAvXFxiKD86QUxMT0NBVEFCTEV8QUxMT0NBVEV8QkFDS1NQQUNFfENBTEx8Q0FTRXxDTE9TRXxDT01NT058Q09OVEFJTlN8Q09OVElOVUV8Q1lDTEV8REFUQXxERUFMTE9DQVRFfERJTUVOU0lPTnxET3xFTkR8RVFVSVZBTEVOQ0V8RVhJVHxFWFRFUk5BTHxGT1JNQVR8R08gP1RPfElNUExJQ0lUKD86IE5PTkUpP3xJTlFVSVJFfElOVEVOVHxJTlRSSU5TSUN8TU9EVUxFIFBST0NFRFVSRXxOQU1FTElTVHxOVUxMSUZZfE9QRU58T1BUSU9OQUx8UEFSQU1FVEVSfFBPSU5URVJ8UFJJTlR8UFJJVkFURXxQVUJMSUN8UkVBRHxSRVRVUk58UkVXSU5EfFNBVkV8U0VMRUNUfFNUT1B8VEFSR0VUfFdISUxFfFdSSVRFKVxcYi9pLFxuICAgICAgLy8gT3RoZXJzXG4gICAgICAvXFxiKD86QVNTSUdOTUVOVHxERUZBVUxUfEVMRU1FTlRBTHxFTFNFfEVMU0VJRnxFTFNFV0hFUkV8RU5UUll8SU58SU5DTFVERXxJTk9VVHxLSU5EfE5VTEx8T05MWXxPUEVSQVRPUnxPVVR8UFVSRXxSRUNVUlNJVkV8UkVTVUxUfFNFUVVFTkNFfFNUQVR8VEhFTnxVU0UpXFxiL2lcbiAgICBdLFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICAvXFwqXFwqfFxcL1xcL3w9PnxbPVxcL109fFs8Pl09P3w6OnxbK1xcLSo9JV18XFwuW0EtWl0rXFwuL2ksXG4gICAgICB7XG4gICAgICAgIC8vIFVzZSBsb29rYmVoaW5kIHRvIHByZXZlbnQgY29uZnVzaW9uIHdpdGggKC8gLylcbiAgICAgICAgcGF0dGVybjogLyhefCg/IVxcKCkuKVxcLyg/IVxcKSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBwdW5jdHVhdGlvbjogL1xcKFxcL3xcXC9cXCl8WygpLDs6Jl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJmb3J0cmFuIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJwYXR0ZXJuIiwiYWxpYXMiLCJzdHJpbmciLCJpbnNpZGUiLCJjb21tZW50IiwibG9va2JlaGluZCIsImdyZWVkeSIsImJvb2xlYW4iLCJudW1iZXIiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fortran.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fsharp.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fsharp.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ fsharp)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nfsharp.displayName = \"fsharp\";\nfsharp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function fsharp(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.fsharp = Prism.languages.extend(\"clike\", {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n            lookbehind: true,\n            inside: {\n                operator: /->|\\*/,\n                punctuation: /\\./\n            }\n        },\n        keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n        number: [\n            /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n            /\\b0b[01]+(?:uy|y)?\\b/,\n            /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n            /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n        ],\n        operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n    });\n    Prism.languages.insertBefore(\"fsharp\", \"keyword\", {\n        preprocessor: {\n            pattern: /(^[\\t ]*)#.*/m,\n            lookbehind: true,\n            alias: \"property\",\n            inside: {\n                directive: {\n                    pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n                    lookbehind: true,\n                    alias: \"keyword\"\n                }\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"fsharp\", \"punctuation\", {\n        \"computation-expression\": {\n            pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n            alias: \"keyword\"\n        }\n    });\n    Prism.languages.insertBefore(\"fsharp\", \"string\", {\n        annotation: {\n            pattern: /\\[<.+?>\\]/,\n            greedy: true,\n            inside: {\n                punctuation: /^\\[<|>\\]$/,\n                \"class-name\": {\n                    pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n                    lookbehind: true\n                },\n                \"annotation-content\": {\n                    pattern: /[\\s\\S]+/,\n                    inside: Prism.languages.fsharp\n                }\n            }\n        },\n        char: {\n            pattern: /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n            greedy: true\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9mc2hhcnAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUM3QkksTUFBTUUsU0FBUyxDQUFDTCxNQUFNLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDdkRDLFNBQVM7WUFDUDtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtTQUNEO1FBQ0RDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pGLFNBQ0U7WUFDRkMsWUFBWTtZQUNaRyxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUNFO1FBQ0ZDLFFBQVE7WUFDTjtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RILFVBQ0U7SUFDSjtJQUNBVixNQUFNRSxTQUFTLENBQUNZLFlBQVksQ0FBQyxVQUFVLFdBQVc7UUFDaERDLGNBQWM7WUFDWlYsU0FBUztZQUNUQyxZQUFZO1lBQ1pVLE9BQU87WUFDUFAsUUFBUTtnQkFDTlEsV0FBVztvQkFDVFosU0FBUztvQkFDVEMsWUFBWTtvQkFDWlUsT0FBTztnQkFDVDtZQUNGO1FBQ0Y7SUFDRjtJQUNBaEIsTUFBTUUsU0FBUyxDQUFDWSxZQUFZLENBQUMsVUFBVSxlQUFlO1FBQ3BELDBCQUEwQjtZQUN4QlQsU0FBUztZQUNUVyxPQUFPO1FBQ1Q7SUFDRjtJQUNBaEIsTUFBTUUsU0FBUyxDQUFDWSxZQUFZLENBQUMsVUFBVSxVQUFVO1FBQy9DSSxZQUFZO1lBQ1ZiLFNBQVM7WUFDVEUsUUFBUTtZQUNSRSxRQUFRO2dCQUNORSxhQUFhO2dCQUNiLGNBQWM7b0JBQ1pOLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0Esc0JBQXNCO29CQUNwQkQsU0FBUztvQkFDVEksUUFBUVQsTUFBTUUsU0FBUyxDQUFDTCxNQUFNO2dCQUNoQztZQUNGO1FBQ0Y7UUFDQXNCLE1BQU07WUFDSmQsU0FDRTtZQUNGRSxRQUFRO1FBQ1Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2ZzaGFycC5qcz81ZWUyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmZzaGFycC5kaXNwbGF5TmFtZSA9ICdmc2hhcnAnXG5mc2hhcnAuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZnNoYXJwKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5sYW5ndWFnZXMuZnNoYXJwID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgY29tbWVudDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXChcXCooPyFcXCkpW1xcc1xcU10qP1xcKlxcKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXDpdKVxcL1xcLy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oPzpcIlwiXCJbXFxzXFxTXSo/XCJcIlwifEBcIig/OlwiXCJ8W15cIl0pKlwifFwiKD86XFxcXFtcXHNcXFNdfFteXFxcXFwiXSkqXCIpQj8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiKD86ZXhjZXB0aW9ufGluaGVyaXR8aW50ZXJmYWNlfG5ld3xvZnx0eXBlKVxccyt8XFx3XFxzKjpcXHMqfFxcczpcXD8/PlxccyopWy5cXHddK1xcYig/OlxccyooPzotPnxcXCopXFxzKlsuXFx3XStcXGIpKig/IVxccypbOi5dKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIG9wZXJhdG9yOiAvLT58XFwqLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmxldHxyZXR1cm58dXNlfHlpZWxkKSg/OiFcXEJ8XFxiKXxcXGIoPzphYnN0cmFjdHxhbmR8YXN8YXNyfGFzc2VydHxhdG9taWN8YmFzZXxiZWdpbnxicmVha3xjaGVja2VkfGNsYXNzfGNvbXBvbmVudHxjb25zdHxjb25zdHJhaW50fGNvbnN0cnVjdG9yfGNvbnRpbnVlfGRlZmF1bHR8ZGVsZWdhdGV8ZG98ZG9uZXxkb3duY2FzdHxkb3dudG98ZWFnZXJ8ZWxpZnxlbHNlfGVuZHxldmVudHxleGNlcHRpb258ZXh0ZXJufGV4dGVybmFsfGZhbHNlfGZpbmFsbHl8Zml4ZWR8Zm9yfGZ1bnxmdW5jdGlvbnxmdW5jdG9yfGdsb2JhbHxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5saW5lfGludGVyZmFjZXxpbnRlcm5hbHxsYW5kfGxhenl8bG9yfGxzbHxsc3J8bHhvcnxtYXRjaHxtZW1iZXJ8bWV0aG9kfG1peGlufG1vZHxtb2R1bGV8bXV0YWJsZXxuYW1lc3BhY2V8bmV3fG5vdHxudWxsfG9iamVjdHxvZnxvcGVufG9yfG92ZXJyaWRlfHBhcmFsbGVsfHByaXZhdGV8cHJvY2Vzc3xwcm90ZWN0ZWR8cHVibGljfHB1cmV8cmVjfHNlYWxlZHxzZWxlY3R8c2lnfHN0YXRpY3xzdHJ1Y3R8dGFpbGNhbGx8dGhlbnx0b3x0cmFpdHx0cnVlfHRyeXx0eXBlfHVwY2FzdHx2YWx8dmlydHVhbHx2b2lkfHZvbGF0aWxlfHdoZW58d2hpbGV8d2l0aClcXGIvLFxuICAgIG51bWJlcjogW1xuICAgICAgL1xcYjB4W1xcZGEtZkEtRl0rKD86TEZ8bGZ8dW4pP1xcYi8sXG4gICAgICAvXFxiMGJbMDFdKyg/OnV5fHkpP1xcYi8sXG4gICAgICAvKD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OltmbV18ZVsrLV0/XFxkKyk/XFxiL2ksXG4gICAgICAvXFxiXFxkKyg/OltJbExzeV18VUx8dVtsc3ldPyk/XFxiL1xuICAgIF0sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvKFs8Pn4mXl0pXFwxXFwxfChbKi46PD4mXSlcXDJ8PC18LT58WyE9Ol09fDw/XFx8ezEsM30+P3xcXD8/KD86PD18Pj18PD58Wy0rKi8lPTw+XSlcXD8/fFshP14mXXx+Wyt+LV18Oj58OlxcPz4/L1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdmc2hhcnAnLCAna2V5d29yZCcsIHtcbiAgICBwcmVwcm9jZXNzb3I6IHtcbiAgICAgIHBhdHRlcm46IC8oXltcXHQgXSopIy4qL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eScsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgICAgcGF0dGVybjogLyheIylcXGIoPzplbHNlfGVuZGlmfGlmfGxpZ2h0fGxpbmV8bm93YXJuKVxcYi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2ZzaGFycCcsICdwdW5jdHVhdGlvbicsIHtcbiAgICAnY29tcHV0YXRpb24tZXhwcmVzc2lvbic6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbX2Etel1cXHcqKD89XFxzKlxceykvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2ZzaGFycCcsICdzdHJpbmcnLCB7XG4gICAgYW5ub3RhdGlvbjoge1xuICAgICAgcGF0dGVybjogL1xcWzwuKz8+XFxdLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL15cXFs8fD5cXF0kLyxcbiAgICAgICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICAgICAgcGF0dGVybjogL15cXHcrJHwoXnw7XFxzKilbQS1aXVxcdyooPz1cXCgpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgICdhbm5vdGF0aW9uLWNvbnRlbnQnOiB7XG4gICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuZnNoYXJwXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8nKD86W15cXFxcJ118XFxcXCg/Oi58XFxkezN9fHhbYS1mQS1GXFxkXXsyfXx1W2EtZkEtRlxcZF17NH18VVthLWZBLUZcXGRdezh9KSknQj8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwiZnNoYXJwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsImluc2lkZSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwibnVtYmVyIiwiaW5zZXJ0QmVmb3JlIiwicHJlcHJvY2Vzc29yIiwiYWxpYXMiLCJkaXJlY3RpdmUiLCJhbm5vdGF0aW9uIiwiY2hhciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fsharp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ftl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ftl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ftl)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\nftl.displayName = \"ftl\";\nftl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function ftl(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        // https://freemarker.apache.org/docs/dgui_template_exp.html\n        // FTL expression with 4 levels of nesting supported\n        var FTL_EXPR = /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/.source;\n        for(var i = 0; i < 2; i++){\n            FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function() {\n                return FTL_EXPR;\n            });\n        }\n        FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source);\n        var ftl = {\n            comment: /<#--[\\s\\S]*?-->/,\n            string: [\n                {\n                    // raw string\n                    pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n                    greedy: true\n                },\n                {\n                    pattern: RegExp(/(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(/<expr>/g, function() {\n                        return FTL_EXPR;\n                    })),\n                    greedy: true,\n                    inside: {\n                        interpolation: {\n                            pattern: RegExp(/((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(/<expr>/g, function() {\n                                return FTL_EXPR;\n                            })),\n                            lookbehind: true,\n                            inside: {\n                                \"interpolation-punctuation\": {\n                                    pattern: /^\\$\\{|\\}$/,\n                                    alias: \"punctuation\"\n                                },\n                                rest: null\n                            }\n                        }\n                    }\n                }\n            ],\n            keyword: /\\b(?:as)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            \"builtin-function\": {\n                pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            function: /\\b\\w+(?=\\s*\\()/,\n            number: /\\b\\d+(?:\\.\\d+)?\\b/,\n            operator: /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n            punctuation: /[,;.:()[\\]{}]/\n        };\n        ftl.string[1].inside.interpolation.inside.rest = ftl;\n        Prism.languages.ftl = {\n            \"ftl-comment\": {\n                // the pattern is shortened to be more efficient\n                pattern: /^<#--[\\s\\S]*/,\n                alias: \"comment\"\n            },\n            \"ftl-directive\": {\n                pattern: /^<[\\s\\S]+>$/,\n                inside: {\n                    directive: {\n                        pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n                        lookbehind: true,\n                        alias: \"keyword\"\n                    },\n                    punctuation: /^<\\/?|\\/?>$/,\n                    content: {\n                        pattern: /\\s*\\S[\\s\\S]*/,\n                        alias: \"ftl\",\n                        inside: ftl\n                    }\n                }\n            },\n            \"ftl-interpolation\": {\n                pattern: /^\\$\\{[\\s\\S]*\\}$/,\n                inside: {\n                    punctuation: /^\\$\\{|\\}$/,\n                    content: {\n                        pattern: /\\s*\\S[\\s\\S]*/,\n                        alias: \"ftl\",\n                        inside: ftl\n                    }\n                }\n            }\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            // eslint-disable-next-line regexp/no-useless-lazy\n            var pattern = RegExp(/<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(/<expr>/g, function() {\n                return FTL_EXPR;\n            }), \"gi\");\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"ftl\", pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"ftl\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ftl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gap.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gap.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gap)\n/* harmony export */ });\n// @ts-nocheck\ngap.displayName = \"gap\";\ngap.aliases = [];\n/** @type {import('../core.js').Syntax} */ function gap(Prism) {\n    // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n    // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n    Prism.languages.gap = {\n        shell: {\n            pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n            greedy: true,\n            inside: {\n                gap: {\n                    pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                punctuation: /^gap>/\n            }\n        },\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                continuation: {\n                    pattern: /([\\r\\n])>/,\n                    lookbehind: true,\n                    alias: \"punctuation\"\n                }\n            }\n        },\n        keyword: /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: {\n            pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n            lookbehind: true\n        },\n        continuation: {\n            pattern: /([\\r\\n])>/,\n            lookbehind: true,\n            alias: \"punctuation\"\n        },\n        operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n        punctuation: /[()[\\]{},;.:]/\n    };\n    Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nYXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQix3REFBd0Q7SUFDeEQseURBQXlEO0lBRXpEQSxNQUFNQyxTQUFTLENBQUNKLEdBQUcsR0FBRztRQUNwQkssT0FBTztZQUNMQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsUUFBUTtnQkFDTlIsS0FBSztvQkFDSE0sU0FBUztvQkFDVEcsWUFBWTtvQkFDWkQsUUFBUSxLQUFLLFlBQVk7Z0JBQzNCO2dCQUVBRSxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1lBQ1BMLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FLLFFBQVE7WUFDTk4sU0FDRTtZQUNGRyxZQUFZO1lBQ1pGLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkssY0FBYztvQkFDWlAsU0FBUztvQkFDVEcsWUFBWTtvQkFDWkssT0FBTztnQkFDVDtZQUNGO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsUUFBUTtZQUNOWixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBSSxjQUFjO1lBQ1pQLFNBQVM7WUFDVEcsWUFBWTtZQUNaSyxPQUFPO1FBQ1Q7UUFDQUssVUFBVTtRQUNWVCxhQUFhO0lBQ2Y7SUFDQVAsTUFBTUMsU0FBUyxDQUFDSixHQUFHLENBQUNLLEtBQUssQ0FBQ0csTUFBTSxDQUFDUixHQUFHLENBQUNRLE1BQU0sR0FBR0wsTUFBTUMsU0FBUyxDQUFDSixHQUFHO0FBQ25FIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dhcC5qcz84ZjQ0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5nYXAuZGlzcGxheU5hbWUgPSAnZ2FwJ1xuZ2FwLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdhcChQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5nYXAtc3lzdGVtLm9yZy9NYW51YWxzL2RvYy9yZWYvY2hhcDQuaHRtbFxuICAvLyBodHRwczovL3d3dy5nYXAtc3lzdGVtLm9yZy9NYW51YWxzL2RvYy9yZWYvY2hhcDI3Lmh0bWxcblxuICBQcmlzbS5sYW5ndWFnZXMuZ2FwID0ge1xuICAgIHNoZWxsOiB7XG4gICAgICBwYXR0ZXJuOiAvXmdhcD5bXFxzXFxTXSo/KD89XmdhcD58JCg/IVtcXHNcXFNdKSkvbSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBnYXA6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihnYXA+KS4rKD86KD86XFxyKD86XFxufCg/IVxcbikpfFxcbik+LiopKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgIH0sXG5cbiAgICAgICAgcHVuY3R1YXRpb246IC9eZ2FwPi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXlxcXFwnXCJdKSg/OicoPzpbXlxcclxcblxcXFwnXXxcXFxcLil7MSwxMH0nfFwiKD86W15cXHJcXG5cXFxcXCJdfFxcXFwuKSpcIig/IVwiKXxcIlwiXCJbXFxzXFxTXSo/XCJcIlwiKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGNvbnRpbnVhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC8oW1xcclxcbl0pPi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFzc2VydHxJbmZvfElzQm91bmR8UVVJVHxUcnlOZXh0TWV0aG9kfFVuYmluZHxhbmR8YXRvbWljfGJyZWFrfGNvbnRpbnVlfGRvfGVsaWZ8ZWxzZXxlbmR8Zml8Zm9yfGZ1bmN0aW9ufGlmfGlufGxvY2FsfG1vZHxub3R8b2R8b3J8cXVpdHxyZWFkb25seXxyZWFkd3JpdGV8cmVjfHJlcGVhdHxyZXR1cm58dGhlbnx1bnRpbHx3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvaSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXlxcdy5dfFxcLlxcLikoPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86W2VFXVsrLV0/XFxkKyk/KD86X1thLXpdPyk/KD89JHxbXlxcdy5dfFxcLlxcLikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgY29udGludWF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKFtcXHJcXG5dKT4vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLy0+fFstKyovXn49IV18PD58Wzw+XT0/fDo9fFxcLlxcLi8sXG4gICAgcHVuY3R1YXRpb246IC9bKClbXFxde30sOy46XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMuZ2FwLnNoZWxsLmluc2lkZS5nYXAuaW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmdhcFxufVxuIl0sIm5hbWVzIjpbImdhcCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic2hlbGwiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiaW5zaWRlIiwibG9va2JlaGluZCIsInB1bmN0dWF0aW9uIiwiY29tbWVudCIsInN0cmluZyIsImNvbnRpbnVhdGlvbiIsImFsaWFzIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gcode.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gcode.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gcode)\n/* harmony export */ });\n// @ts-nocheck\ngcode.displayName = \"gcode\";\ngcode.aliases = [];\n/** @type {import('../core.js').Syntax} */ function gcode(Prism) {\n    Prism.languages.gcode = {\n        comment: /;.*|\\B\\(.*?\\)\\B/,\n        string: {\n            pattern: /\"(?:\"\"|[^\"])*\"/,\n            greedy: true\n        },\n        keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n        property: /\\b[A-Z]/,\n        checksum: {\n            pattern: /(\\*)\\d+/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        // T0:0:0\n        punctuation: /[:*]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxVQUFVO1lBQ1JKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQSxTQUFTO1FBQ1RDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2djb2RlLmpzPzY5MjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmdjb2RlLmRpc3BsYXlOYW1lID0gJ2djb2RlJ1xuZ2NvZGUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2NvZGUoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmdjb2RlID0ge1xuICAgIGNvbW1lbnQ6IC87Lip8XFxCXFwoLio/XFwpXFxCLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlwiXCJ8W15cIl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDogL1xcYltHTV1cXGQrKD86XFwuXFxkKyk/XFxiLyxcbiAgICBwcm9wZXJ0eTogL1xcYltBLVpdLyxcbiAgICBjaGVja3N1bToge1xuICAgICAgcGF0dGVybjogLyhcXCopXFxkKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICAvLyBUMDowOjBcbiAgICBwdW5jdHVhdGlvbjogL1s6Kl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnY29kZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwicHJvcGVydHkiLCJjaGVja3N1bSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gcode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gdscript.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gdscript.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gdscript)\n/* harmony export */ });\n// @ts-nocheck\ngdscript.displayName = \"gdscript\";\ngdscript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function gdscript(Prism) {\n    Prism.languages.gdscript = {\n        comment: /#.*/,\n        string: {\n            pattern: /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n            greedy: true\n        },\n        \"class-name\": {\n            // class_name Foo, extends Bar, class InnerClass\n            // export(int) var baz, export(int, 0) var i\n            // as Node\n            // const FOO: int = 9, var bar: bool = true\n            // func add(reference: Item, amount: int) -> Item:\n            pattern: /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n            lookbehind: true\n        },\n        keyword: /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n        variable: /\\$\\w+/,\n        number: [\n            /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n            /\\b(?:INF|NAN|PI|TAU)\\b/\n        ],\n        constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n        punctuation: /[.:,;()[\\]{}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nZHNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRyxFQUFFO0FBRXJCLHdDQUF3QyxHQUN6QixTQUFTRixTQUFTRyxLQUFLO0lBQ3BDQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQ0U7WUFDRkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaLGdEQUFnRDtZQUNoRCw0Q0FBNEM7WUFDNUMsVUFBVTtZQUNWLDJDQUEyQztZQUMzQyxrREFBa0Q7WUFDbERELFNBQ0U7WUFDRkUsWUFBWTtRQUNkO1FBQ0FDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTjtZQUNBO1NBQ0Q7UUFDREMsVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2RzY3JpcHQuanM/MGJhYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuZ2RzY3JpcHQuZGlzcGxheU5hbWUgPSAnZ2RzY3JpcHQnXG5nZHNjcmlwdC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZHNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZ2RzY3JpcHQgPSB7XG4gICAgY29tbWVudDogLyMuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvQD8oPzooXCJ8JykoPzooPyFcXDEpW15cXG5cXFxcXXxcXFxcW1xcc1xcU10pKlxcMSg/IVwifCcpfFwiXCJcIig/OlteXFxcXF18XFxcXFtcXHNcXFNdKSo/XCJcIlwiKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgLy8gY2xhc3NfbmFtZSBGb28sIGV4dGVuZHMgQmFyLCBjbGFzcyBJbm5lckNsYXNzXG4gICAgICAvLyBleHBvcnQoaW50KSB2YXIgYmF6LCBleHBvcnQoaW50LCAwKSB2YXIgaVxuICAgICAgLy8gYXMgTm9kZVxuICAgICAgLy8gY29uc3QgRk9POiBpbnQgPSA5LCB2YXIgYmFyOiBib29sID0gdHJ1ZVxuICAgICAgLy8gZnVuYyBhZGQocmVmZXJlbmNlOiBJdGVtLCBhbW91bnQ6IGludCkgLT4gSXRlbTpcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXig/OmNsYXNzfGNsYXNzX25hbWV8ZXh0ZW5kcylbIFxcdF0rfF5leHBvcnRcXChbIFxcdF0qfFxcYmFzWyBcXHRdK3woPzpcXGIoPzpjb25zdHx2YXIpWyBcXHRdfFssKF0pWyBcXHRdKlxcdytbIFxcdF0qOlsgXFx0XSp8LT5bIFxcdF0qKVthLXpBLVpfXVxcdyovbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YW5kfGFzfGFzc2VydHxicmVha3xicmVha3BvaW50fGNsYXNzfGNsYXNzX25hbWV8Y29uc3R8Y29udGludWV8ZWxpZnxlbHNlfGVudW18ZXhwb3J0fGV4dGVuZHN8Zm9yfGZ1bmN8aWZ8aW58aXN8bWFzdGVyfG1hc3RlcnN5bmN8bWF0Y2h8bm90fG51bGx8b25yZWFkeXxvcnxwYXNzfHByZWxvYWR8cHVwcGV0fHB1cHBldHN5bmN8cmVtb3RlfHJlbW90ZXN5bmN8cmV0dXJufHNlbGZ8c2V0Z2V0fHNpZ25hbHxzdGF0aWN8dG9vbHx2YXJ8d2hpbGV8eWllbGQpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1bIFxcdF0qXFwoKS9pLFxuICAgIHZhcmlhYmxlOiAvXFwkXFx3Ky8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvXFxiMGJbMDFfXStcXGJ8XFxiMHhbXFxkYS1mQS1GX10rXFxifCg/OlxcYlxcZFtcXGRfXSooPzpcXC5bXFxkX10qKT98XFxCXFwuW1xcZF9dKykoPzplWystXT9bXFxkX10rKT9cXGIvLFxuICAgICAgL1xcYig/OklORnxOQU58UEl8VEFVKVxcYi9cbiAgICBdLFxuICAgIGNvbnN0YW50OiAvXFxiW0EtWl1bQS1aX1xcZF0qXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIG9wZXJhdG9yOiAvLT58Oj18JiZ8XFx8XFx8fDw8fD4+fFstKyovJSZ8ITw+PV09P3xbfl5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1suOiw7KClbXFxde31dL1xuICB9XG59XG4iXSwibmFtZXMiOlsiZ2RzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsImtleXdvcmQiLCJmdW5jdGlvbiIsInZhcmlhYmxlIiwibnVtYmVyIiwiY29uc3RhbnQiLCJib29sZWFuIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gdscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gedcom.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gedcom.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gedcom)\n/* harmony export */ });\n// @ts-nocheck\ngedcom.displayName = \"gedcom\";\ngedcom.aliases = [];\n/** @type {import('../core.js').Syntax} */ function gedcom(Prism) {\n    Prism.languages.gedcom = {\n        \"line-value\": {\n            // Preceded by level, optional pointer, and tag\n            pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n            lookbehind: true,\n            inside: {\n                pointer: {\n                    pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n                    alias: \"variable\"\n                }\n            }\n        },\n        record: {\n            // Preceded by level and optional pointer\n            pattern: /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n            lookbehind: true,\n            alias: \"tag\"\n        },\n        level: {\n            pattern: /(^[\\t ]*)\\d+/m,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        pointer: {\n            pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n            alias: \"variable\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nZWRjb20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkIsY0FBYztZQUNaLCtDQUErQztZQUMvQ0ssU0FDRTtZQUNGQyxZQUFZO1lBQ1pDLFFBQVE7Z0JBQ05DLFNBQVM7b0JBQ1BILFNBQVM7b0JBQ1RJLE9BQU87Z0JBQ1Q7WUFDRjtRQUNGO1FBQ0FDLFFBQVE7WUFDTix5Q0FBeUM7WUFDekNMLFNBQ0U7WUFDRkMsWUFBWTtZQUNaRyxPQUFPO1FBQ1Q7UUFDQUUsT0FBTztZQUNMTixTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsT0FBTztRQUNUO1FBQ0FELFNBQVM7WUFDUEgsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dlZGNvbS5qcz9jYWQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5nZWRjb20uZGlzcGxheU5hbWUgPSAnZ2VkY29tJ1xuZ2VkY29tLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdlZGNvbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZ2VkY29tID0ge1xuICAgICdsaW5lLXZhbHVlJzoge1xuICAgICAgLy8gUHJlY2VkZWQgYnkgbGV2ZWwsIG9wdGlvbmFsIHBvaW50ZXIsIGFuZCB0YWdcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSpcXGQrICsoPzpAXFx3W1xcdyFcIiQlJicoKSorLFxcLS4vOjs8PT4/W1xcXFxcXF1eYHt8fX5cXHg4MC1cXHhmZSAjXSpAICspP1xcdysgKS4rL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHBvaW50ZXI6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXkBcXHdbXFx3IVwiJCUmJygpKissXFwtLi86Ozw9Pj9bXFxcXFxcXV5ge3x9flxceDgwLVxceGZlICNdKkAkLyxcbiAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICByZWNvcmQ6IHtcbiAgICAgIC8vIFByZWNlZGVkIGJ5IGxldmVsIGFuZCBvcHRpb25hbCBwb2ludGVyXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF5bXFx0IF0qXFxkKyArKD86QFxcd1tcXHchXCIkJSYnKCkqKyxcXC0uLzo7PD0+P1tcXFxcXFxdXmB7fH1+XFx4ODAtXFx4ZmUgI10qQCArKT8pXFx3Ky9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAndGFnJ1xuICAgIH0sXG4gICAgbGV2ZWw6IHtcbiAgICAgIHBhdHRlcm46IC8oXltcXHQgXSopXFxkKy9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgcG9pbnRlcjoge1xuICAgICAgcGF0dGVybjogL0BcXHdbXFx3IVwiJCUmJygpKissXFwtLi86Ozw9Pj9bXFxcXFxcXV5ge3x9flxceDgwLVxceGZlICNdKkAvLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnZWRjb20iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwicG9pbnRlciIsImFsaWFzIiwicmVjb3JkIiwibGV2ZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gedcom.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gettext.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gettext.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gettext)\n/* harmony export */ });\n// @ts-nocheck\ngettext.displayName = \"gettext\";\ngettext.aliases = [\n    \"po\"\n];\n/** @type {import('../core.js').Syntax} */ function gettext(Prism) {\n    Prism.languages.gettext = {\n        comment: [\n            {\n                pattern: /# .*/,\n                greedy: true,\n                alias: \"translator-comment\"\n            },\n            {\n                pattern: /#\\..*/,\n                greedy: true,\n                alias: \"extracted-comment\"\n            },\n            {\n                pattern: /#:.*/,\n                greedy: true,\n                alias: \"reference-comment\"\n            },\n            {\n                pattern: /#,.*/,\n                greedy: true,\n                alias: \"flag-comment\"\n            },\n            {\n                pattern: /#\\|.*/,\n                greedy: true,\n                alias: \"previously-untranslated-comment\"\n            },\n            {\n                pattern: /#.*/,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /^msg(?:ctxt|id|id_plural|str)\\b/m,\n        number: /\\b\\d+\\b/,\n        punctuation: /[\\[\\]]/\n    };\n    Prism.languages.po = Prism.languages.gettext;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nZXR0ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUV4Qix3Q0FBd0MsR0FDekIsU0FBU0YsUUFBUUcsS0FBSztJQUNuQ0EsTUFBTUMsU0FBUyxDQUFDSixPQUFPLEdBQUc7UUFDeEJLLFNBQVM7WUFDUDtnQkFDRUMsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkMsT0FBTztZQUNUO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RDLFFBQVE7Z0JBQ1JDLE9BQU87WUFDVDtZQUNBO2dCQUNFRixTQUFTO2dCQUNUQyxRQUFRO2dCQUNSQyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkMsT0FBTztZQUNUO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RDLFFBQVE7Z0JBQ1JDLE9BQU87WUFDVDtZQUNBO2dCQUNFRixTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7U0FDRDtRQUNERSxRQUFRO1lBQ05ILFNBQVM7WUFDVEksWUFBWTtZQUNaSCxRQUFRO1FBQ1Y7UUFDQUksU0FBUztRQUNUQyxRQUFRO1FBQ1JDLGFBQWE7SUFDZjtJQUNBVixNQUFNQyxTQUFTLENBQUNVLEVBQUUsR0FBR1gsTUFBTUMsU0FBUyxDQUFDSixPQUFPO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dldHRleHQuanM/YTA0MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuZ2V0dGV4dC5kaXNwbGF5TmFtZSA9ICdnZXR0ZXh0J1xuZ2V0dGV4dC5hbGlhc2VzID0gWydwbyddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0dGV4dChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuZ2V0dGV4dCA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8jIC4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ3RyYW5zbGF0b3ItY29tbWVudCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8jXFwuLiovLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnZXh0cmFjdGVkLWNvbW1lbnQnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvIzouKi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdyZWZlcmVuY2UtY29tbWVudCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8jLC4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2ZsYWctY29tbWVudCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8jXFx8LiovLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAncHJldmlvdXNseS11bnRyYW5zbGF0ZWQtY29tbWVudCdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpbXlwiXFxcXF18XFxcXC4pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6IC9ebXNnKD86Y3R4dHxpZHxpZF9wbHVyYWx8c3RyKVxcYi9tLFxuICAgIG51bWJlcjogL1xcYlxcZCtcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnBvID0gUHJpc20ubGFuZ3VhZ2VzLmdldHRleHRcbn1cbiJdLCJuYW1lcyI6WyJnZXR0ZXh0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImFsaWFzIiwic3RyaW5nIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJudW1iZXIiLCJwdW5jdHVhdGlvbiIsInBvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gettext.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gherkin.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gherkin.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gherkin)\n/* harmony export */ });\n// @ts-nocheck\ngherkin.displayName = \"gherkin\";\ngherkin.aliases = [];\n/** @type {import('../core.js').Syntax} */ function gherkin(Prism) {\n    ;\n    (function(Prism) {\n        var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source;\n        Prism.languages.gherkin = {\n            pystring: {\n                pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n                alias: \"string\"\n            },\n            comment: {\n                pattern: /(^[ \\t]*)#.*/m,\n                lookbehind: true\n            },\n            tag: {\n                pattern: /(^[ \\t]*)@\\S*/m,\n                lookbehind: true\n            },\n            feature: {\n                pattern: /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n                lookbehind: true,\n                inside: {\n                    important: {\n                        pattern: /(:)[^\\r\\n]+/,\n                        lookbehind: true\n                    },\n                    keyword: /[^:\\r\\n]+:/\n                }\n            },\n            scenario: {\n                pattern: /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n                lookbehind: true,\n                inside: {\n                    important: {\n                        pattern: /(:)[^\\r\\n]*/,\n                        lookbehind: true\n                    },\n                    keyword: /[^:\\r\\n]+:/\n                }\n            },\n            \"table-body\": {\n                // Look-behind is used to skip the table head, which has the same format as any table row\n                pattern: RegExp(\"(\" + tableRow + \")(?:\" + tableRow + \")+\"),\n                lookbehind: true,\n                inside: {\n                    outline: {\n                        pattern: /<[^>]+>/,\n                        alias: \"variable\"\n                    },\n                    td: {\n                        pattern: /\\s*[^\\s|][^|]*/,\n                        alias: \"string\"\n                    },\n                    punctuation: /\\|/\n                }\n            },\n            \"table-head\": {\n                pattern: RegExp(tableRow),\n                inside: {\n                    th: {\n                        pattern: /\\s*[^\\s|][^|]*/,\n                        alias: \"variable\"\n                    },\n                    punctuation: /\\|/\n                }\n            },\n            atrule: {\n                pattern: /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n                lookbehind: true\n            },\n            string: {\n                pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n                inside: {\n                    outline: {\n                        pattern: /<[^>]+>/,\n                        alias: \"variable\"\n                    }\n                }\n            },\n            outline: {\n                pattern: /<[^>]+>/,\n                alias: \"variable\"\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gherkin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/git.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/git.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ git)\n/* harmony export */ });\n// @ts-nocheck\ngit.displayName = \"git\";\ngit.aliases = [];\n/** @type {import('../core.js').Syntax} */ function git(Prism) {\n    Prism.languages.git = {\n        /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */ comment: /^#.*/m,\n        /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */ deleted: /^[-–].*/m,\n        inserted: /^\\+.*/m,\n        /*\n     * a string (double and simple quote)\n     */ string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */ command: {\n            pattern: /^.*\\$ git .*$/m,\n            inside: {\n                /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */ parameter: /\\s--?\\w+/\n            }\n        },\n        /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */ coord: /^@@.*@@$/m,\n        /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */ \"commit-sha1\": /^commit \\w{40}$/m\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9naXQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEI7Ozs7Ozs7O0tBUUMsR0FDREssU0FBUztRQUNUOztLQUVDLEdBQ0RDLFNBQVM7UUFDVEMsVUFBVTtRQUNWOztLQUVDLEdBQ0RDLFFBQVE7UUFDUjs7OztLQUlDLEdBQ0RDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO2dCQUNOOzs7OztTQUtDLEdBQ0RDLFdBQVc7WUFDYjtRQUNGO1FBQ0E7Ozs7Ozs7Ozs7OztLQVlDLEdBQ0RDLE9BQU87UUFDUDs7Ozs7Ozs7O0tBU0MsR0FDRCxlQUFlO0lBQ2pCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ2l0LmpzPzgyZTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmdpdC5kaXNwbGF5TmFtZSA9ICdnaXQnXG5naXQuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2l0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5naXQgPSB7XG4gICAgLypcbiAgICAgKiBBIHNpbXBsZSBvbmUgbGluZSBjb21tZW50IGxpa2UgaW4gYSBnaXQgc3RhdHVzIGNvbW1hbmRcbiAgICAgKiBGb3IgaW5zdGFuY2U6XG4gICAgICogJCBnaXQgc3RhdHVzXG4gICAgICogIyBPbiBicmFuY2ggaW5maW5pdGUtc2Nyb2xsXG4gICAgICogIyBZb3VyIGJyYW5jaCBhbmQgJ29yaWdpbi9zaGFyZWRCcmFuY2hlcy9mcm9udGVuZFRlYW0vaW5maW5pdGUtc2Nyb2xsJyBoYXZlIGRpdmVyZ2VkLFxuICAgICAqICMgYW5kIGhhdmUgMSBhbmQgMiBkaWZmZXJlbnQgY29tbWl0cyBlYWNoLCByZXNwZWN0aXZlbHkuXG4gICAgICogbm90aGluZyB0byBjb21taXQgKHdvcmtpbmcgZGlyZWN0b3J5IGNsZWFuKVxuICAgICAqL1xuICAgIGNvbW1lbnQ6IC9eIy4qL20sXG4gICAgLypcbiAgICAgKiBSZWdleHAgdG8gbWF0Y2ggdGhlIGNoYW5nZWQgbGluZXMgaW4gYSBnaXQgZGlmZiBvdXRwdXQuIENoZWNrIHRoZSBleGFtcGxlIGJlbG93LlxuICAgICAqL1xuICAgIGRlbGV0ZWQ6IC9eWy3igJNdLiovbSxcbiAgICBpbnNlcnRlZDogL15cXCsuKi9tLFxuICAgIC8qXG4gICAgICogYSBzdHJpbmcgKGRvdWJsZSBhbmQgc2ltcGxlIHF1b3RlKVxuICAgICAqL1xuICAgIHN0cmluZzogLyhcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgIC8qXG4gICAgICogYSBnaXQgY29tbWFuZC4gSXQgc3RhcnRzIHdpdGggYSByYW5kb20gcHJvbXB0IGZpbmlzaGluZyBieSBhICQsIHRoZW4gXCJnaXRcIiB0aGVuIHNvbWUgb3RoZXIgcGFyYW1ldGVyc1xuICAgICAqIEZvciBpbnN0YW5jZTpcbiAgICAgKiAkIGdpdCBhZGQgZmlsZS50eHRcbiAgICAgKi9cbiAgICBjb21tYW5kOiB7XG4gICAgICBwYXR0ZXJuOiAvXi4qXFwkIGdpdCAuKiQvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAvKlxuICAgICAgICAgKiBBIGdpdCBjb21tYW5kIGNhbiBjb250YWluIGEgcGFyYW1ldGVyIHN0YXJ0aW5nIGJ5IGEgc2luZ2xlIG9yIGEgZG91YmxlIGRhc2ggZm9sbG93ZWQgYnkgYSBzdHJpbmdcbiAgICAgICAgICogRm9yIGluc3RhbmNlOlxuICAgICAgICAgKiAkIGdpdCBkaWZmIC0tY2FjaGVkXG4gICAgICAgICAqICQgZ2l0IGxvZyAtcFxuICAgICAgICAgKi9cbiAgICAgICAgcGFyYW1ldGVyOiAvXFxzLS0/XFx3Ky9cbiAgICAgIH1cbiAgICB9LFxuICAgIC8qXG4gICAgICogQ29vcmRpbmF0ZXMgZGlzcGxheWVkIGluIGEgZ2l0IGRpZmYgY29tbWFuZFxuICAgICAqIEZvciBpbnN0YW5jZTpcbiAgICAgKiAkIGdpdCBkaWZmXG4gICAgICogZGlmZiAtLWdpdCBmaWxlLnR4dCBmaWxlLnR4dFxuICAgICAqIGluZGV4IDYyMTQ5NTMuLjFkNTRhNTIgMTAwNjQ0XG4gICAgICogLS0tIGZpbGUudHh0XG4gICAgICogKysrIGZpbGUudHh0XG4gICAgICogQEAgLTEgKzEsMiBAQFxuICAgICAqIC1IZXJlJ3MgbXkgdGV0eCBmaWxlXG4gICAgICogK0hlcmUncyBteSB0ZXh0IGZpbGVcbiAgICAgKiArQW5kIHRoaXMgaXMgdGhlIHNlY29uZCBsaW5lXG4gICAgICovXG4gICAgY29vcmQ6IC9eQEAuKkBAJC9tLFxuICAgIC8qXG4gICAgICogTWF0Y2ggYSBcImNvbW1pdCBbU0hBMV1cIiBsaW5lIGluIGEgZ2l0IGxvZyBvdXRwdXQuXG4gICAgICogRm9yIGluc3RhbmNlOlxuICAgICAqICQgZ2l0IGxvZ1xuICAgICAqIGNvbW1pdCBhMTFhMTRlZjdlMjZmMmNhNjJkNGIzNWVhYzQ1NWNlNjM2ZDBkYzA5XG4gICAgICogQXV0aG9yOiBsZ2lyYXVkZWxcbiAgICAgKiBEYXRlOiAgIE1vbiBGZWIgMTcgMTE6MTg6MzQgMjAxNCArMDEwMFxuICAgICAqXG4gICAgICogICAgIEFkZCBvZiBhIG5ldyBsaW5lXG4gICAgICovXG4gICAgJ2NvbW1pdC1zaGExJzogL15jb21taXQgXFx3ezQwfSQvbVxuICB9XG59XG4iXSwibmFtZXMiOlsiZ2l0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiZGVsZXRlZCIsImluc2VydGVkIiwic3RyaW5nIiwiY29tbWFuZCIsInBhdHRlcm4iLCJpbnNpZGUiLCJwYXJhbWV0ZXIiLCJjb29yZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/git.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/glsl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/glsl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ glsl)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\nglsl.displayName = \"glsl\";\nglsl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function glsl(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.glsl = Prism.languages.extend(\"c\", {\n        keyword: /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nbHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNpQjtBQUMvQkMsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCw2Q0FBVUE7SUFDekJJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxLQUFLO1FBQ2pEQyxTQUNFO0lBQ0o7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nbHNsLmpzP2JmNGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDIGZyb20gJy4vYy5qcydcbmdsc2wuZGlzcGxheU5hbWUgPSAnZ2xzbCdcbmdsc2wuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2xzbChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDKVxuICBQcmlzbS5sYW5ndWFnZXMuZ2xzbCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2MnLCB7XG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphY3RpdmV8YXNtfGF0b21pY191aW50fGF0dHJpYnV0ZXxbaWJkdV0/dmVjWzIzNF18Ym9vbHxicmVha3xidWZmZXJ8Y2FzZXxjYXN0fGNlbnRyb2lkfGNsYXNzfGNvaGVyZW50fGNvbW1vbnxjb25zdHxjb250aW51ZXxkP21hdFsyMzRdKD86eFsyMzRdKT98ZGVmYXVsdHxkaXNjYXJkfGRvfGRvdWJsZXxlbHNlfGVudW18ZXh0ZXJufGV4dGVybmFsfGZhbHNlfGZpbHRlcnxmaXhlZHxmbGF0fGZsb2F0fGZvcnxmdmVjWzIzNF18Z290b3xoYWxmfGhpZ2hwfGh2ZWNbMjM0XXxbaXVdP3NhbXBsZXIyRE1TKD86QXJyYXkpP3xbaXVdP3NhbXBsZXIyRFJlY3R8W2l1XT9zYW1wbGVyQnVmZmVyfFtpdV0/c2FtcGxlckN1YmV8W2l1XT9zYW1wbGVyQ3ViZUFycmF5fFtpdV0/c2FtcGxlclsxMjNdRHxbaXVdP3NhbXBsZXJbMTJdREFycmF5fFtpdV0/aW1hZ2UyRE1TKD86QXJyYXkpP3xbaXVdP2ltYWdlMkRSZWN0fFtpdV0/aW1hZ2VCdWZmZXJ8W2l1XT9pbWFnZUN1YmV8W2l1XT9pbWFnZUN1YmVBcnJheXxbaXVdP2ltYWdlWzEyM11EfFtpdV0/aW1hZ2VbMTJdREFycmF5fGlmfGlufGlubGluZXxpbm91dHxpbnB1dHxpbnR8aW50ZXJmYWNlfGludmFyaWFudHxsYXlvdXR8bG9uZ3xsb3dwfG1lZGl1bXB8bmFtZXNwYWNlfG5vaW5saW5lfG5vcGVyc3BlY3RpdmV8b3V0fG91dHB1dHxwYXJ0aXRpb258cGF0Y2h8cHJlY2lzZXxwcmVjaXNpb258cHVibGljfHJlYWRvbmx5fHJlc291cmNlfHJlc3RyaWN0fHJldHVybnxzYW1wbGV8c2FtcGxlclsxMl1EQXJyYXlTaGFkb3d8c2FtcGxlclsxMl1EU2hhZG93fHNhbXBsZXIyRFJlY3RTaGFkb3d8c2FtcGxlcjNEUmVjdHxzYW1wbGVyQ3ViZUFycmF5U2hhZG93fHNhbXBsZXJDdWJlU2hhZG93fHNoYXJlZHxzaG9ydHxzaXplb2Z8c21vb3RofHN0YXRpY3xzdHJ1Y3R8c3Vicm91dGluZXxzdXBlcnB8c3dpdGNofHRlbXBsYXRlfHRoaXN8dHJ1ZXx0eXBlZGVmfHVpbnR8dW5pZm9ybXx1bmlvbnx1bnNpZ25lZHx1c2luZ3x2YXJ5aW5nfHZvaWR8dm9sYXRpbGV8d2hpbGV8d3JpdGVvbmx5KVxcYi9cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDIiwiZ2xzbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/glsl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gml.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gml.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gml)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ngml.displayName = \"gml\";\ngml.aliases = [\n    \"gamemakerlanguage\"\n];\n/** @type {import('../core.js').Syntax} */ function gml(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.gamemakerlanguage = Prism.languages.gml = Prism.languages.extend(\"clike\", {\n        keyword: /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n        number: /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n        operator: /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n        constant: /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n        variable: /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gn.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gn.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gn)\n/* harmony export */ });\n// @ts-nocheck\ngn.displayName = \"gn\";\ngn.aliases = [\n    \"gni\"\n];\n/** @type {import('../core.js').Syntax} */ function gn(Prism) {\n    // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n    Prism.languages.gn = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        \"string-literal\": {\n            pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n                    lookbehind: true,\n                    inside: {\n                        number: /^\\$0x[\\s\\S]{2}$/,\n                        variable: /^\\$\\w+$/,\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: null // see below\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        keyword: /\\b(?:else|if)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        \"builtin-function\": {\n            // a few functions get special highlighting to improve readability\n            pattern: /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n            alias: \"keyword\"\n        },\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        constant: /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n        number: /-?\\b\\d+\\b/,\n        operator: /[-+!=<>]=?|&&|\\|\\|/,\n        punctuation: /[(){}[\\],.]/\n    };\n    Prism.languages.gn[\"string-literal\"].inside[\"interpolation\"].inside[\"expression\"].inside = Prism.languages.gn;\n    Prism.languages.gni = Prism.languages.gn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nbi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxHQUFHQyxXQUFXLEdBQUc7QUFDakJELEdBQUdFLE9BQU8sR0FBRztJQUFDO0NBQU07QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLEdBQUdHLEtBQUs7SUFDOUIsNkVBQTZFO0lBRTdFQSxNQUFNQyxTQUFTLENBQUNKLEVBQUUsR0FBRztRQUNuQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGtCQUFrQjtZQUNoQkQsU0FBUztZQUNURSxZQUFZO1lBQ1pELFFBQVE7WUFDUkUsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYkosU0FDRTtvQkFDRkUsWUFBWTtvQkFDWkMsUUFBUTt3QkFDTkUsUUFBUTt3QkFDUkMsVUFBVTt3QkFDViw2QkFBNkI7NEJBQzNCTixTQUFTOzRCQUNUTyxPQUFPO3dCQUNUO3dCQUNBQyxZQUFZOzRCQUNWUixTQUFTOzRCQUNURyxRQUFRLEtBQUssWUFBWTt3QkFDM0I7b0JBQ0Y7Z0JBQ0Y7Z0JBRUFNLFFBQVE7WUFDVjtRQUNGO1FBQ0FDLFNBQVM7UUFDVEMsU0FBUztRQUNULG9CQUFvQjtZQUNsQixrRUFBa0U7WUFDbEVYLFNBQ0U7WUFDRk8sT0FBTztRQUNUO1FBQ0FLLFVBQVU7UUFDVkMsVUFDRTtRQUNGUixRQUFRO1FBQ1JTLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FsQixNQUFNQyxTQUFTLENBQUNKLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQ1MsTUFBTSxDQUFDLGdCQUFnQixDQUFDQSxNQUFNLENBQ2pFLGFBQ0QsQ0FBQ0EsTUFBTSxHQUFHTixNQUFNQyxTQUFTLENBQUNKLEVBQUU7SUFDN0JHLE1BQU1DLFNBQVMsQ0FBQ2tCLEdBQUcsR0FBR25CLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRTtBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nbi5qcz8yMWYzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5nbi5kaXNwbGF5TmFtZSA9ICdnbidcbmduLmFsaWFzZXMgPSBbJ2duaSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ24oUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly9nbi5nb29nbGVzb3VyY2UuY29tL2duLysvcmVmcy9oZWFkcy9tYWluL2RvY3MvcmVmZXJlbmNlLm1kI2dyYW1tYXJcblxuICBQcmlzbS5sYW5ndWFnZXMuZ24gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdzdHJpbmctbGl0ZXJhbCc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxcIl0pXCIoPzpbXlxcclxcblwiXFxcXF18XFxcXC4pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopXFwkKD86XFx7W1xcc1xcU10qP1xcfXxbYS16QS1aX11cXHcqfDB4W2EtZkEtRjAtOV17Mn0pLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgbnVtYmVyOiAvXlxcJDB4W1xcc1xcU117Mn0kLyxcbiAgICAgICAgICAgIHZhcmlhYmxlOiAvXlxcJFxcdyskLyxcbiAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxce3xcXH0kLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6IC9cXGIoPzplbHNlfGlmKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAnYnVpbHRpbi1mdW5jdGlvbic6IHtcbiAgICAgIC8vIGEgZmV3IGZ1bmN0aW9ucyBnZXQgc3BlY2lhbCBoaWdobGlnaHRpbmcgdG8gaW1wcm92ZSByZWFkYWJpbGl0eVxuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OmFzc2VydHxkZWZpbmVkfGZvcmVhY2h8aW1wb3J0fHBvb2x8cHJpbnR8dGVtcGxhdGV8dG9vbHx0b29sY2hhaW4pKD89XFxzKlxcKCkvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgY29uc3RhbnQ6XG4gICAgICAvXFxiKD86Y3VycmVudF9jcHV8Y3VycmVudF9vc3xjdXJyZW50X3Rvb2xjaGFpbnxkZWZhdWx0X3Rvb2xjaGFpbnxob3N0X2NwdXxob3N0X29zfHJvb3RfYnVpbGRfZGlyfHJvb3RfZ2VuX2Rpcnxyb290X291dF9kaXJ8dGFyZ2V0X2NwdXx0YXJnZXRfZ2VuX2Rpcnx0YXJnZXRfb3N8dGFyZ2V0X291dF9kaXIpXFxiLyxcbiAgICBudW1iZXI6IC8tP1xcYlxcZCtcXGIvLFxuICAgIG9wZXJhdG9yOiAvWy0rIT08Pl09P3wmJnxcXHxcXHwvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31bXFxdLC5dL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5nblsnc3RyaW5nLWxpdGVyYWwnXS5pbnNpZGVbJ2ludGVycG9sYXRpb24nXS5pbnNpZGVbXG4gICAgJ2V4cHJlc3Npb24nXG4gIF0uaW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLmduXG4gIFByaXNtLmxhbmd1YWdlcy5nbmkgPSBQcmlzbS5sYW5ndWFnZXMuZ25cbn1cbiJdLCJuYW1lcyI6WyJnbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiIsIm51bWJlciIsInZhcmlhYmxlIiwiYWxpYXMiLCJleHByZXNzaW9uIiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsImNvbnN0YW50Iiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImduaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gn.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go-module.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go-module.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ goModule)\n/* harmony export */ });\n// @ts-nocheck\ngoModule.displayName = \"go-module\";\ngoModule.aliases = [\n    \"go-mod\"\n];\n/** @type {import('../core.js').Syntax} */ function goModule(Prism) {\n    // https://go.dev/ref/mod#go-mod-file-module\n    Prism.languages[\"go-mod\"] = Prism.languages[\"go-module\"] = {\n        comment: {\n            pattern: /\\/\\/.*/,\n            greedy: true\n        },\n        version: {\n            pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        \"go-version\": {\n            pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        keyword: {\n            pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n            lookbehind: true\n        },\n        operator: /=>/,\n        punctuation: /[()[\\],]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nby1tb2R1bGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsU0FBU0MsV0FBVyxHQUFHO0FBQ3ZCRCxTQUFTRSxPQUFPLEdBQUc7SUFBQztDQUFTO0FBRTdCLHdDQUF3QyxHQUN6QixTQUFTRixTQUFTRyxLQUFLO0lBQ3BDLDRDQUE0QztJQUU1Q0EsTUFBTUMsU0FBUyxDQUFDLFNBQVMsR0FBR0QsTUFBTUMsU0FBUyxDQUFDLFlBQVksR0FBRztRQUN6REMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxTQUFTO1lBQ1BGLFNBQVM7WUFDVEcsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQSxjQUFjO1lBQ1pKLFNBQVM7WUFDVEcsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQUMsU0FBUztZQUNQTCxTQUFTO1lBQ1RHLFlBQVk7UUFDZDtRQUNBRyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dvLW1vZHVsZS5qcz9hZWM1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5nb01vZHVsZS5kaXNwbGF5TmFtZSA9ICdnby1tb2R1bGUnXG5nb01vZHVsZS5hbGlhc2VzID0gWydnby1tb2QnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdvTW9kdWxlKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vZ28uZGV2L3JlZi9tb2QjZ28tbW9kLWZpbGUtbW9kdWxlXG5cbiAgUHJpc20ubGFuZ3VhZ2VzWydnby1tb2QnXSA9IFByaXNtLmxhbmd1YWdlc1snZ28tbW9kdWxlJ10gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcLy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmVyc2lvbjoge1xuICAgICAgcGF0dGVybjogLyhefFtcXHMoKVtcXF0sXSl2XFxkK1xcLlxcZCtcXC5cXGQrKD86WystXVstKy5cXHddKik/KD8hW15cXHMoKVtcXF0sXSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAgJ2dvLXZlcnNpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58XFxzKWdvXFxzKylcXGQrKD86XFwuXFxkKyl7MSwyfS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICBrZXl3b3JkOiB7XG4gICAgICBwYXR0ZXJuOiAvXihbIFxcdF0qKSg/OmV4Y2x1ZGV8Z298bW9kdWxlfHJlcGxhY2V8cmVxdWlyZXxyZXRyYWN0KVxcYi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC89Pi8sXG4gICAgcHVuY3R1YXRpb246IC9bKClbXFxdLF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJnb01vZHVsZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJ2ZXJzaW9uIiwibG9va2JlaGluZCIsImFsaWFzIiwia2V5d29yZCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go-module.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ go)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ngo.displayName = \"go\";\ngo.aliases = [];\n/** @type {import('../core.js').Syntax} */ function go(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.go = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n        boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n        number: [\n            // binary and octal integers\n            /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,\n            // hexadecimal integers and floats\n            /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n            // decimal integers and floats\n            /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n        ],\n        operator: /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n        builtin: /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n    });\n    Prism.languages.insertBefore(\"go\", \"string\", {\n        char: {\n            pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n            greedy: true\n        }\n    });\n    delete Prism.languages.go[\"class-name\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9nby5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLEdBQUdDLFdBQVcsR0FBRztBQUNqQkQsR0FBR0UsT0FBTyxHQUFHLEVBQUU7QUFFZix3Q0FBd0MsR0FDekIsU0FBU0YsR0FBR0csS0FBSztJQUM5QkEsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsRUFBRSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ25EQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQUMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFFBQVE7WUFDTiw0QkFBNEI7WUFDNUI7WUFDQSxrQ0FBa0M7WUFDbEM7WUFDQSw4QkFBOEI7WUFDOUI7U0FDRDtRQUNEQyxVQUNFO1FBQ0ZDLFNBQ0U7SUFDSjtJQUNBWixNQUFNRSxTQUFTLENBQUNXLFlBQVksQ0FBQyxNQUFNLFVBQVU7UUFDM0NDLE1BQU07WUFDSlQsU0FBUztZQUNURSxRQUFRO1FBQ1Y7SUFDRjtJQUNBLE9BQU9QLE1BQU1FLFNBQVMsQ0FBQ0wsRUFBRSxDQUFDLGFBQWE7QUFDekMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ28uanM/MjdhYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5nby5kaXNwbGF5TmFtZSA9ICdnbydcbmdvLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdvKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5sYW5ndWFnZXMuZ28gPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVwiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcInxgW15gXSpgLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YnJlYWt8Y2FzZXxjaGFufGNvbnN0fGNvbnRpbnVlfGRlZmF1bHR8ZGVmZXJ8ZWxzZXxmYWxsdGhyb3VnaHxmb3J8ZnVuY3xnbyg/OnRvKT98aWZ8aW1wb3J0fGludGVyZmFjZXxtYXB8cGFja2FnZXxyYW5nZXxyZXR1cm58c2VsZWN0fHN0cnVjdHxzd2l0Y2h8dHlwZXx2YXIpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86X3xmYWxzZXxpb3RhfG5pbHx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvLyBiaW5hcnkgYW5kIG9jdGFsIGludGVnZXJzXG4gICAgICAvXFxiMCg/OmJbMDFfXSt8b1swLTdfXSspaT9cXGIvaSxcbiAgICAgIC8vIGhleGFkZWNpbWFsIGludGVnZXJzIGFuZCBmbG9hdHNcbiAgICAgIC9cXGIweCg/OlthLWZcXGRfXSsoPzpcXC5bYS1mXFxkX10qKT98XFwuW2EtZlxcZF9dKykoPzpwWystXT9cXGQrKD86X1xcZCspKik/aT8oPyFcXHcpL2ksXG4gICAgICAvLyBkZWNpbWFsIGludGVnZXJzIGFuZCBmbG9hdHNcbiAgICAgIC8oPzpcXGJcXGRbXFxkX10qKD86XFwuW1xcZF9dKik/fFxcQlxcLlxcZFtcXGRfXSopKD86ZVsrLV0/W1xcZF9dKyk/aT8oPyFcXHcpL2lcbiAgICBdLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1sqXFwvJV4hPV09P3xcXCtbPStdP3wtWz0tXT98XFx8Wz18XT98Jig/Oj18JnxcXF49Pyk/fD4oPzo+PT98PSk/fDwoPzo8PT98PXwtKT98Oj18XFwuXFwuXFwuLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OmFwcGVuZHxib29sfGJ5dGV8Y2FwfGNsb3NlfGNvbXBsZXh8Y29tcGxleCg/OjY0fDEyOCl8Y29weXxkZWxldGV8ZXJyb3J8ZmxvYXQoPzozMnw2NCl8dT9pbnQoPzo4fDE2fDMyfDY0KT98aW1hZ3xsZW58bWFrZXxuZXd8cGFuaWN8cHJpbnQoPzpsbik/fHJlYWx8cmVjb3ZlcnxydW5lfHN0cmluZ3x1aW50cHRyKVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZ28nLCAnc3RyaW5nJywge1xuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86XFxcXC58W14nXFxcXFxcclxcbl0pezAsMTB9Jy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gIH0pXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMuZ29bJ2NsYXNzLW5hbWUnXVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwiZ28iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwic3RyaW5nIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiYnVpbHRpbiIsImluc2VydEJlZm9yZSIsImNoYXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gradle.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gradle.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ gradle)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ngradle.displayName = \"gradle\";\ngradle.aliases = [];\n/** @type {import('../core.js').Syntax} */ function gradle(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var interpolation = {\n            pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n            lookbehind: true,\n            inside: {\n                \"interpolation-punctuation\": {\n                    pattern: /^\\$\\{?|\\}$/,\n                    alias: \"punctuation\"\n                },\n                expression: {\n                    pattern: /[\\s\\S]+/,\n                    inside: null\n                }\n            }\n        };\n        Prism.languages.gradle = Prism.languages.extend(\"clike\", {\n            string: {\n                pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n                greedy: true\n            },\n            keyword: /\\b(?:apply|def|dependencies|else|if|implementation|import|plugin|plugins|project|repositories|repository|sourceSets|tasks|val)\\b/,\n            number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n            operator: {\n                pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n                lookbehind: true\n            },\n            punctuation: /\\.+|[{}[\\];(),:$]/\n        });\n        Prism.languages.insertBefore(\"gradle\", \"string\", {\n            shebang: {\n                pattern: /#!.+/,\n                alias: \"comment\",\n                greedy: true\n            },\n            \"interpolation-string\": {\n                pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n                greedy: true,\n                inside: {\n                    interpolation: interpolation,\n                    string: /[\\s\\S]+/\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"gradle\", \"punctuation\", {\n            \"spock-block\": /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n        });\n        Prism.languages.insertBefore(\"gradle\", \"function\", {\n            annotation: {\n                pattern: /(^|[^.])@\\w+/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            }\n        });\n        interpolation.inside.expression.inside = Prism.languages.gradle;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ncmFkbGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUMzQixVQUFVSSxLQUFLO1FBQ2YsSUFBSUUsZ0JBQWdCO1lBQ2xCQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtnQkFDTiw2QkFBNkI7b0JBQzNCRixTQUFTO29CQUNURyxPQUFPO2dCQUNUO2dCQUNBQyxZQUFZO29CQUNWSixTQUFTO29CQUNURSxRQUFRO2dCQUNWO1lBQ0Y7UUFDRjtRQUNBTCxNQUFNUSxTQUFTLENBQUNYLE1BQU0sR0FBR0csTUFBTVEsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUN2REMsUUFBUTtnQkFDTlAsU0FBUztnQkFDVFEsUUFBUTtZQUNWO1lBQ0FDLFNBQ0U7WUFDRkMsUUFDRTtZQUNGQyxVQUFVO2dCQUNSWCxTQUNFO2dCQUNGQyxZQUFZO1lBQ2Q7WUFDQVcsYUFBYTtRQUNmO1FBQ0FmLE1BQU1RLFNBQVMsQ0FBQ1EsWUFBWSxDQUFDLFVBQVUsVUFBVTtZQUMvQ0MsU0FBUztnQkFDUGQsU0FBUztnQkFDVEcsT0FBTztnQkFDUEssUUFBUTtZQUNWO1lBQ0Esd0JBQXdCO2dCQUN0QlIsU0FDRTtnQkFDRlEsUUFBUTtnQkFDUk4sUUFBUTtvQkFDTkgsZUFBZUE7b0JBQ2ZRLFFBQVE7Z0JBQ1Y7WUFDRjtRQUNGO1FBQ0FWLE1BQU1RLFNBQVMsQ0FBQ1EsWUFBWSxDQUFDLFVBQVUsZUFBZTtZQUNwRCxlQUFlO1FBQ2pCO1FBQ0FoQixNQUFNUSxTQUFTLENBQUNRLFlBQVksQ0FBQyxVQUFVLFlBQVk7WUFDakRFLFlBQVk7Z0JBQ1ZmLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pFLE9BQU87WUFDVDtRQUNGO1FBQ0FKLGNBQWNHLE1BQU0sQ0FBQ0UsVUFBVSxDQUFDRixNQUFNLEdBQUdMLE1BQU1RLFNBQVMsQ0FBQ1gsTUFBTTtJQUNqRSxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2dyYWRsZS5qcz8wZDE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmdyYWRsZS5kaXNwbGF5TmFtZSA9ICdncmFkbGUnXG5ncmFkbGUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ3JhZGxlKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBpbnRlcnBvbGF0aW9uID0ge1xuICAgICAgcGF0dGVybjogLygoPzpefFteXFxcXCRdKSg/OlxcXFx7Mn0pKilcXCQoPzpcXHcrfFxce1tee31dKlxcfSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxcez98XFx9JC8sXG4gICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgIGluc2lkZTogbnVsbFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5ncmFkbGUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvJycnKD86W15cXFxcXXxcXFxcW1xcc1xcU10pKj8nJyd8Jyg/OlxcXFwufFteXFxcXCdcXHJcXG5dKSonLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFwcGx5fGRlZnxkZXBlbmRlbmNpZXN8ZWxzZXxpZnxpbXBsZW1lbnRhdGlvbnxpbXBvcnR8cGx1Z2lufHBsdWdpbnN8cHJvamVjdHxyZXBvc2l0b3JpZXN8cmVwb3NpdG9yeXxzb3VyY2VTZXRzfHRhc2tzfHZhbClcXGIvLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiKD86MGJbMDFfXSt8MHhbXFxkYS1mX10rKD86XFwuW1xcZGEtZl9wXFwtXSspP3xbXFxkX10rKD86XFwuW1xcZF9dKyk/KD86ZVsrLV0/XFxkKyk/KVtnbGlkZl0/XFxiL2ksXG4gICAgICBvcGVyYXRvcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXi5dKSg/On58PT0/fj98XFw/Wy46XT98XFwqKD86Wy49XXxcXCo9Pyk/fFxcLltAJl18XFwuXFwuPHxcXC5cXC4oPyFcXC4pfC1bLT0+XT98XFwrWys9XT98IT0/fDwoPzo8PT98PT4/KT98Pig/Oj4+Pz0/fD0pP3wmWyY9XT98XFx8W3w9XT98XFwvPT98XFxePT98JT0/KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1xcLit8W3t9W1xcXTsoKSw6JF0vXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdncmFkbGUnLCAnc3RyaW5nJywge1xuICAgICAgc2hlYmFuZzoge1xuICAgICAgICBwYXR0ZXJuOiAvIyEuKy8sXG4gICAgICAgIGFsaWFzOiAnY29tbWVudCcsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdpbnRlcnBvbGF0aW9uLXN0cmluZyc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXCJcIlwiKD86W15cXFxcXXxcXFxcW1xcc1xcU10pKj9cIlwiXCJ8KFtcIi9dKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDF8XFwkXFwvKD86W14vJF18XFwkKD86Wy8kXXwoPyFbLyRdKSl8XFwvKD8hXFwkKSkqXFwvXFwkLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbnRlcnBvbGF0aW9uOiBpbnRlcnBvbGF0aW9uLFxuICAgICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZ3JhZGxlJywgJ3B1bmN0dWF0aW9uJywge1xuICAgICAgJ3Nwb2NrLWJsb2NrJzogL1xcYig/OmFuZHxjbGVhbnVwfGV4cGVjdHxnaXZlbnxzZXR1cHx0aGVufHdoZW58d2hlcmUpOi9cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2dyYWRsZScsICdmdW5jdGlvbicsIHtcbiAgICAgIGFubm90YXRpb246IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteLl0pQFxcdysvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfVxuICAgIH0pXG4gICAgaW50ZXJwb2xhdGlvbi5pbnNpZGUuZXhwcmVzc2lvbi5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuZ3JhZGxlXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwiZ3JhZGxlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImludGVycG9sYXRpb24iLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsImFsaWFzIiwiZXhwcmVzc2lvbiIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsImdyZWVkeSIsImtleXdvcmQiLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiaW5zZXJ0QmVmb3JlIiwic2hlYmFuZyIsImFubm90YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gradle.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/graphql.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/graphql.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ graphql)\n/* harmony export */ });\n// @ts-nocheck\ngraphql.displayName = \"graphql\";\ngraphql.aliases = [];\n/** @type {import('../core.js').Syntax} */ function graphql(Prism) {\n    Prism.languages.graphql = {\n        comment: /#.*/,\n        description: {\n            pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n            greedy: true,\n            alias: \"string\",\n            inside: {\n                \"language-markdown\": {\n                    pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n                    lookbehind: true,\n                    inside: Prism.languages.markdown\n                }\n            }\n        },\n        string: {\n            pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n            greedy: true\n        },\n        number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n        boolean: /\\b(?:false|true)\\b/,\n        variable: /\\$[a-z_]\\w*/i,\n        directive: {\n            pattern: /@[a-z_]\\w*/i,\n            alias: \"function\"\n        },\n        \"attr-name\": {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n            greedy: true\n        },\n        \"atom-input\": {\n            pattern: /\\b[A-Z]\\w*Input\\b/,\n            alias: \"class-name\"\n        },\n        scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n        constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n        \"class-name\": {\n            pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n            lookbehind: true\n        },\n        fragment: {\n            pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        \"definition-mutation\": {\n            pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        \"definition-query\": {\n            pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        keyword: /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n        operator: /[!=|&]|\\.{3}/,\n        \"property-query\": /\\w+(?=\\s*\\()/,\n        object: /\\w+(?=\\s*\\{)/,\n        punctuation: /[!(){}\\[\\]:=,]/,\n        property: /\\w+/\n    };\n    Prism.hooks.add(\"after-tokenize\", function afterTokenizeGraphql(env) {\n        if (env.language !== \"graphql\") {\n            return;\n        }\n        /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */ var validTokens = env.tokens.filter(function(token) {\n            return typeof token !== \"string\" && token.type !== \"comment\" && token.type !== \"scalar\";\n        });\n        var currentIndex = 0;\n        /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */ function getToken(offset) {\n            return validTokens[currentIndex + offset];\n        }\n        /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */ function isTokenType(types, offset) {\n            offset = offset || 0;\n            for(var i = 0; i < types.length; i++){\n                var token = getToken(i + offset);\n                if (!token || token.type !== types[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */ function findClosingBracket(open, close) {\n            var stackHeight = 1;\n            for(var i = currentIndex; i < validTokens.length; i++){\n                var token = validTokens[i];\n                var content = token.content;\n                if (token.type === \"punctuation\" && typeof content === \"string\") {\n                    if (open.test(content)) {\n                        stackHeight++;\n                    } else if (close.test(content)) {\n                        stackHeight--;\n                        if (stackHeight === 0) {\n                            return i;\n                        }\n                    }\n                }\n            }\n            return -1;\n        }\n        /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */ function addAlias(token, alias) {\n            var aliases = token.alias;\n            if (!aliases) {\n                token.alias = aliases = [];\n            } else if (!Array.isArray(aliases)) {\n                token.alias = aliases = [\n                    aliases\n                ];\n            }\n            aliases.push(alias);\n        }\n        for(; currentIndex < validTokens.length;){\n            var startToken = validTokens[currentIndex++];\n            // add special aliases for mutation tokens\n            if (startToken.type === \"keyword\" && startToken.content === \"mutation\") {\n                // any array of the names of all input variables (if any)\n                var inputVariables = [];\n                if (isTokenType([\n                    \"definition-mutation\",\n                    \"punctuation\"\n                ]) && getToken(1).content === \"(\") {\n                    // definition\n                    currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n                    ;\n                    var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n                    if (definitionEnd === -1) {\n                        continue;\n                    }\n                    // find all input variables\n                    for(; currentIndex < definitionEnd; currentIndex++){\n                        var t = getToken(0);\n                        if (t.type === \"variable\") {\n                            addAlias(t, \"variable-input\");\n                            inputVariables.push(t.content);\n                        }\n                    }\n                    currentIndex = definitionEnd + 1;\n                }\n                if (isTokenType([\n                    \"punctuation\",\n                    \"property-query\"\n                ]) && getToken(0).content === \"{\") {\n                    currentIndex++ // skip opening bracket\n                    ;\n                    addAlias(getToken(0), \"property-mutation\");\n                    if (inputVariables.length > 0) {\n                        var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n                        if (mutationEnd === -1) {\n                            continue;\n                        }\n                        // give references to input variables a special alias\n                        for(var i = currentIndex; i < mutationEnd; i++){\n                            var varToken = validTokens[i];\n                            if (varToken.type === \"variable\" && inputVariables.indexOf(varToken.content) >= 0) {\n                                addAlias(varToken, \"variable-input\");\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/graphql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/groovy.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/groovy.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ groovy)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\ngroovy.displayName = \"groovy\";\ngroovy.aliases = [];\n/** @type {import('../core.js').Syntax} */ function groovy(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var interpolation = {\n            pattern: /((?:^|[^\\\\$])(?:\\\\{2})*)\\$(?:\\w+|\\{[^{}]*\\})/,\n            lookbehind: true,\n            inside: {\n                \"interpolation-punctuation\": {\n                    pattern: /^\\$\\{?|\\}$/,\n                    alias: \"punctuation\"\n                },\n                expression: {\n                    pattern: /[\\s\\S]+/,\n                    inside: null // see below\n                }\n            }\n        };\n        Prism.languages.groovy = Prism.languages.extend(\"clike\", {\n            string: {\n                // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n                pattern: /'''(?:[^\\\\]|\\\\[\\s\\S])*?'''|'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n                greedy: true\n            },\n            keyword: /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n            number: /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n            operator: {\n                pattern: /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n                lookbehind: true\n            },\n            punctuation: /\\.+|[{}[\\];(),:$]/\n        });\n        Prism.languages.insertBefore(\"groovy\", \"string\", {\n            shebang: {\n                pattern: /#!.+/,\n                alias: \"comment\",\n                greedy: true\n            },\n            \"interpolation-string\": {\n                // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n                // simple division (see JS regex), so find a fix maybe?\n                pattern: /\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\"|([\"/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n                greedy: true,\n                inside: {\n                    interpolation: interpolation,\n                    string: /[\\s\\S]+/\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"groovy\", \"punctuation\", {\n            \"spock-block\": /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n        });\n        Prism.languages.insertBefore(\"groovy\", \"function\", {\n            annotation: {\n                pattern: /(^|[^.])@\\w+/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            }\n        });\n        interpolation.inside.expression.inside = Prism.languages.groovy;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ncm9vdnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUMzQixVQUFVSSxLQUFLO1FBQ2YsSUFBSUUsZ0JBQWdCO1lBQ2xCQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtnQkFDTiw2QkFBNkI7b0JBQzNCRixTQUFTO29CQUNURyxPQUFPO2dCQUNUO2dCQUNBQyxZQUFZO29CQUNWSixTQUFTO29CQUNURSxRQUFRLEtBQUssWUFBWTtnQkFDM0I7WUFDRjtRQUNGO1FBRUFMLE1BQU1RLFNBQVMsQ0FBQ1gsTUFBTSxHQUFHRyxNQUFNUSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1lBQ3ZEQyxRQUFRO2dCQUNOLDREQUE0RDtnQkFDNURQLFNBQVM7Z0JBQ1RRLFFBQVE7WUFDVjtZQUNBQyxTQUNFO1lBQ0ZDLFFBQ0U7WUFDRkMsVUFBVTtnQkFDUlgsU0FDRTtnQkFDRkMsWUFBWTtZQUNkO1lBQ0FXLGFBQWE7UUFDZjtRQUNBZixNQUFNUSxTQUFTLENBQUNRLFlBQVksQ0FBQyxVQUFVLFVBQVU7WUFDL0NDLFNBQVM7Z0JBQ1BkLFNBQVM7Z0JBQ1RHLE9BQU87Z0JBQ1BLLFFBQVE7WUFDVjtZQUNBLHdCQUF3QjtnQkFDdEIscUdBQXFHO2dCQUNyRyx1REFBdUQ7Z0JBQ3ZEUixTQUNFO2dCQUNGUSxRQUFRO2dCQUNSTixRQUFRO29CQUNOSCxlQUFlQTtvQkFDZlEsUUFBUTtnQkFDVjtZQUNGO1FBQ0Y7UUFDQVYsTUFBTVEsU0FBUyxDQUFDUSxZQUFZLENBQUMsVUFBVSxlQUFlO1lBQ3BELGVBQWU7UUFDakI7UUFDQWhCLE1BQU1RLFNBQVMsQ0FBQ1EsWUFBWSxDQUFDLFVBQVUsWUFBWTtZQUNqREUsWUFBWTtnQkFDVmYsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsT0FBTztZQUNUO1FBQ0Y7UUFDQUosY0FBY0csTUFBTSxDQUFDRSxVQUFVLENBQUNGLE1BQU0sR0FBR0wsTUFBTVEsU0FBUyxDQUFDWCxNQUFNO0lBQ2pFLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvZ3Jvb3Z5LmpzP2U4ODQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDbGlrZSBmcm9tICcuL2NsaWtlLmpzJ1xuZ3Jvb3Z5LmRpc3BsYXlOYW1lID0gJ2dyb292eSdcbmdyb292eS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBncm9vdnkoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGludGVycG9sYXRpb24gPSB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58W15cXFxcJF0pKD86XFxcXHsyfSkqKVxcJCg/Olxcdyt8XFx7W157fV0qXFx9KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdpbnRlcnBvbGF0aW9uLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eXFwkXFx7P3xcXH0kLyxcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICB9LFxuICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmdyb292eSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIC8vIGh0dHBzOi8vZ3Jvb3Z5LWxhbmcub3JnL3N5bnRheC5odG1sI19kb2xsYXJfc2xhc2h5X3N0cmluZ1xuICAgICAgICBwYXR0ZXJuOiAvJycnKD86W15cXFxcXXxcXFxcW1xcc1xcU10pKj8nJyd8Jyg/OlxcXFwufFteXFxcXCdcXHJcXG5dKSonLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFic3RyYWN0fGFzfGFzc2VydHxib29sZWFufGJyZWFrfGJ5dGV8Y2FzZXxjYXRjaHxjaGFyfGNsYXNzfGNvbnN0fGNvbnRpbnVlfGRlZnxkZWZhdWx0fGRvfGRvdWJsZXxlbHNlfGVudW18ZXh0ZW5kc3xmaW5hbHxmaW5hbGx5fGZsb2F0fGZvcnxnb3RvfGlmfGltcGxlbWVudHN8aW1wb3J0fGlufGluc3RhbmNlb2Z8aW50fGludGVyZmFjZXxsb25nfG5hdGl2ZXxuZXd8cGFja2FnZXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHNob3J0fHN0YXRpY3xzdHJpY3RmcHxzdXBlcnxzd2l0Y2h8c3luY2hyb25pemVkfHRoaXN8dGhyb3d8dGhyb3dzfHRyYWl0fHRyYW5zaWVudHx0cnl8dm9pZHx2b2xhdGlsZXx3aGlsZSlcXGIvLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiKD86MGJbMDFfXSt8MHhbXFxkYS1mX10rKD86XFwuW1xcZGEtZl9wXFwtXSspP3xbXFxkX10rKD86XFwuW1xcZF9dKyk/KD86ZVsrLV0/XFxkKyk/KVtnbGlkZl0/XFxiL2ksXG4gICAgICBvcGVyYXRvcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXi5dKSg/On58PT0/fj98XFw/Wy46XT98XFwqKD86Wy49XXxcXCo9Pyk/fFxcLltAJl18XFwuXFwuPHxcXC5cXC4oPyFcXC4pfC1bLT0+XT98XFwrWys9XT98IT0/fDwoPzo8PT98PT4/KT98Pig/Oj4+Pz0/fD0pP3wmWyY9XT98XFx8W3w9XT98XFwvPT98XFxePT98JT0/KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1xcLit8W3t9W1xcXTsoKSw6JF0vXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdncm9vdnknLCAnc3RyaW5nJywge1xuICAgICAgc2hlYmFuZzoge1xuICAgICAgICBwYXR0ZXJuOiAvIyEuKy8sXG4gICAgICAgIGFsaWFzOiAnY29tbWVudCcsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdpbnRlcnBvbGF0aW9uLXN0cmluZyc6IHtcbiAgICAgICAgLy8gVE9ETzogU2xhc2ggc3RyaW5ncyAoZS5nLiAvZm9vLykgY2FuIGNvbnRhaW4gbGluZSBicmVha3MgYnV0IHRoaXMgd2lsbCBjYXVzZSBhIGxvdCBvZiB0cm91YmxlIHdpdGhcbiAgICAgICAgLy8gc2ltcGxlIGRpdmlzaW9uIChzZWUgSlMgcmVnZXgpLCBzbyBmaW5kIGEgZml4IG1heWJlP1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cIlwiXCIoPzpbXlxcXFxdfFxcXFxbXFxzXFxTXSkqP1wiXCJcInwoW1wiL10pKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMXxcXCRcXC8oPzpbXi8kXXxcXCQoPzpbLyRdfCg/IVsvJF0pKXxcXC8oPyFcXCQpKSpcXC9cXCQvLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGludGVycG9sYXRpb246IGludGVycG9sYXRpb24sXG4gICAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdncm9vdnknLCAncHVuY3R1YXRpb24nLCB7XG4gICAgICAnc3BvY2stYmxvY2snOiAvXFxiKD86YW5kfGNsZWFudXB8ZXhwZWN0fGdpdmVufHNldHVwfHRoZW58d2hlbnx3aGVyZSk6L1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnZ3Jvb3Z5JywgJ2Z1bmN0aW9uJywge1xuICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W14uXSlAXFx3Ky8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICB9XG4gICAgfSlcbiAgICBpbnRlcnBvbGF0aW9uLmluc2lkZS5leHByZXNzaW9uLmluc2lkZSA9IFByaXNtLmxhbmd1YWdlcy5ncm9vdnlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJncm9vdnkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwiaW50ZXJwb2xhdGlvbiIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwiYWxpYXMiLCJleHByZXNzaW9uIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwic3RyaW5nIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJpbnNlcnRCZWZvcmUiLCJzaGViYW5nIiwiYW5ub3RhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/groovy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haml.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haml.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ haml)\n/* harmony export */ });\n/* harmony import */ var _ruby_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ruby.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js\");\n// @ts-nocheck\n\nhaml.displayName = \"haml\";\nhaml.aliases = [];\n/** @type {import('../core.js').Syntax} */ function haml(Prism) {\n    Prism.register(_ruby_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/ ;\n    (function(Prism) {\n        Prism.languages.haml = {\n            // Multiline stuff should appear before the rest\n            \"multiline-comment\": {\n                pattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n                lookbehind: true,\n                alias: \"comment\"\n            },\n            \"multiline-code\": [\n                {\n                    pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n                    lookbehind: true,\n                    inside: Prism.languages.ruby\n                },\n                {\n                    pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n                    lookbehind: true,\n                    inside: Prism.languages.ruby\n                }\n            ],\n            // See at the end of the file for known filters\n            filter: {\n                pattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n                lookbehind: true,\n                inside: {\n                    \"filter-name\": {\n                        pattern: /^:[\\w-]+/,\n                        alias: \"symbol\"\n                    }\n                }\n            },\n            markup: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n                lookbehind: true,\n                inside: Prism.languages.markup\n            },\n            doctype: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n                lookbehind: true\n            },\n            tag: {\n                // Allows for one nested group of braces\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n                lookbehind: true,\n                inside: {\n                    attributes: [\n                        {\n                            // Lookbehind tries to prevent interpolations from breaking it all\n                            // Allows for one nested group of braces\n                            pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n                            lookbehind: true,\n                            inside: Prism.languages.ruby\n                        },\n                        {\n                            pattern: /\\([^)]+\\)/,\n                            inside: {\n                                \"attr-value\": {\n                                    pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                                    lookbehind: true\n                                },\n                                \"attr-name\": /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                                punctuation: /[=(),]/\n                            }\n                        },\n                        {\n                            pattern: /\\[[^\\]]+\\]/,\n                            inside: Prism.languages.ruby\n                        }\n                    ],\n                    punctuation: /[<>]/\n                }\n            },\n            code: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n                lookbehind: true,\n                inside: Prism.languages.ruby\n            },\n            // Interpolations in plain text\n            interpolation: {\n                pattern: /#\\{[^}]+\\}/,\n                inside: {\n                    delimiter: {\n                        pattern: /^#\\{|\\}$/,\n                        alias: \"punctuation\"\n                    },\n                    ruby: {\n                        pattern: /[\\s\\S]+/,\n                        inside: Prism.languages.ruby\n                    }\n                }\n            },\n            punctuation: {\n                pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n                lookbehind: true\n            }\n        };\n        var filter_pattern = \"((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+\";\n        // Non exhaustive list of available filters and associated languages\n        var filters = [\n            \"css\",\n            {\n                filter: \"coffee\",\n                language: \"coffeescript\"\n            },\n            \"erb\",\n            \"javascript\",\n            \"less\",\n            \"markdown\",\n            \"ruby\",\n            \"scss\",\n            \"textile\"\n        ];\n        var all_filters = {};\n        for(var i = 0, l = filters.length; i < l; i++){\n            var filter = filters[i];\n            filter = typeof filter === \"string\" ? {\n                filter: filter,\n                language: filter\n            } : filter;\n            if (Prism.languages[filter.language]) {\n                all_filters[\"filter-\" + filter.filter] = {\n                    pattern: RegExp(filter_pattern.replace(\"{{filter_name}}\", function() {\n                        return filter.filter;\n                    })),\n                    lookbehind: true,\n                    inside: {\n                        \"filter-name\": {\n                            pattern: /^:[\\w-]+/,\n                            alias: \"symbol\"\n                        },\n                        text: {\n                            pattern: /[\\s\\S]+/,\n                            alias: [\n                                filter.language,\n                                \"language-\" + filter.language\n                            ],\n                            inside: Prism.languages[filter.language]\n                        }\n                    }\n                };\n            }\n        }\n        Prism.languages.insertBefore(\"haml\", \"filter\", all_filters);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/handlebars.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/handlebars.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handlebars)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\nhandlebars.displayName = \"handlebars\";\nhandlebars.aliases = [\n    \"hbs\",\n    \"mustache\"\n];\n/** @type {import('../core.js').Syntax} */ function handlebars(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.handlebars = {\n            comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n            delimiter: {\n                pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n                alias: \"punctuation\"\n            },\n            string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n            boolean: /\\b(?:false|true)\\b/,\n            block: {\n                pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            brackets: {\n                pattern: /\\[[^\\]]+\\]/,\n                inside: {\n                    punctuation: /\\[|\\]/,\n                    variable: /[\\s\\S]+/\n                }\n            },\n            punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n            variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n        };\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"handlebars\", handlebarsPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"handlebars\");\n        });\n        Prism.languages.hbs = Prism.languages.handlebars;\n        Prism.languages.mustache = Prism.languages.handlebars;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oYW5kbGViYXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNnRDtBQUM5REMsV0FBV0MsV0FBVyxHQUFHO0FBQ3pCRCxXQUFXRSxPQUFPLEdBQUc7SUFBQztJQUFPO0NBQVc7QUFFeEMsd0NBQXdDLEdBQ3pCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdENBLE1BQU1DLFFBQVEsQ0FBQ0wsNkRBQXlCQTtJQUN0QyxVQUFVSSxLQUFLO1FBQ2ZBLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxHQUFHO1lBQzNCTSxTQUFTO1lBQ1RDLFdBQVc7Z0JBQ1RDLFNBQVM7Z0JBQ1RDLE9BQU87WUFDVDtZQUNBQyxRQUFRO1lBQ1JDLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxPQUFPO2dCQUNMTCxTQUFTO2dCQUNUTSxZQUFZO2dCQUNaTCxPQUFPO1lBQ1Q7WUFDQU0sVUFBVTtnQkFDUlAsU0FBUztnQkFDVFEsUUFBUTtvQkFDTkMsYUFBYTtvQkFDYkMsVUFBVTtnQkFDWjtZQUNGO1lBQ0FELGFBQWE7WUFDYkMsVUFBVTtRQUNaO1FBQ0FmLE1BQU1nQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5QyxJQUFJQyxvQkFBb0I7WUFDeEJuQixNQUFNRSxTQUFTLENBQUMsb0JBQW9CLENBQUNrQixpQkFBaUIsQ0FDcERGLEtBQ0EsY0FDQUM7UUFFSjtRQUNBbkIsTUFBTWdCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDbEIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDbUIsb0JBQW9CLENBQ3ZESCxLQUNBO1FBRUo7UUFDQWxCLE1BQU1FLFNBQVMsQ0FBQ29CLEdBQUcsR0FBR3RCLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVTtRQUNoREcsTUFBTUUsU0FBUyxDQUFDcUIsUUFBUSxHQUFHdkIsTUFBTUUsU0FBUyxDQUFDTCxVQUFVO0lBQ3ZELEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGFuZGxlYmFycy5qcz8zMmQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyBmcm9tICcuL21hcmt1cC10ZW1wbGF0aW5nLmpzJ1xuaGFuZGxlYmFycy5kaXNwbGF5TmFtZSA9ICdoYW5kbGViYXJzJ1xuaGFuZGxlYmFycy5hbGlhc2VzID0gWydoYnMnLCAnbXVzdGFjaGUnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZWJhcnMoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZylcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuaGFuZGxlYmFycyA9IHtcbiAgICAgIGNvbW1lbnQ6IC9cXHtcXHshW1xcc1xcU10qP1xcfVxcfS8sXG4gICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgcGF0dGVybjogL15cXHtcXHtcXHs/fFxcfVxcfVxcfT8kLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IC8oW1wiJ10pKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBudW1iZXI6IC9cXGIweFtcXGRBLUZhLWZdK1xcYnwoPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W0VlXVsrLV0/XFxkKyk/LyxcbiAgICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgICBibG9jazoge1xuICAgICAgICBwYXR0ZXJuOiAvXihcXHMqKD86flxccyopPylbI1xcL11cXFMrPyg/PVxccyooPzp+XFxzKik/JHxcXHMpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgIGJyYWNrZXRzOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXFtbXlxcXV0rXFxdLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXFt8XFxdLyxcbiAgICAgICAgICB2YXJpYWJsZTogL1tcXHNcXFNdKy9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWyFcIiMlJic6KCkqKywuXFwvOzw9PkBcXFtcXFxcXFxdXmB7fH1+XS8sXG4gICAgICB2YXJpYWJsZTogL1teIVwiIyUmJygpKissXFwvOzw9PkBcXFtcXFxcXFxdXmB7fH1+XFxzXSsvXG4gICAgfVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgdmFyIGhhbmRsZWJhcnNQYXR0ZXJuID0gL1xce1xce1xce1tcXHNcXFNdKz9cXH1cXH1cXH18XFx7XFx7W1xcc1xcU10rP1xcfVxcfS9nXG4gICAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10uYnVpbGRQbGFjZWhvbGRlcnMoXG4gICAgICAgIGVudixcbiAgICAgICAgJ2hhbmRsZWJhcnMnLFxuICAgICAgICBoYW5kbGViYXJzUGF0dGVyblxuICAgICAgKVxuICAgIH0pXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhcbiAgICAgICAgZW52LFxuICAgICAgICAnaGFuZGxlYmFycydcbiAgICAgIClcbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5oYnMgPSBQcmlzbS5sYW5ndWFnZXMuaGFuZGxlYmFyc1xuICAgIFByaXNtLmxhbmd1YWdlcy5tdXN0YWNoZSA9IFByaXNtLmxhbmd1YWdlcy5oYW5kbGViYXJzXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmciLCJoYW5kbGViYXJzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJkZWxpbWl0ZXIiLCJwYXR0ZXJuIiwiYWxpYXMiLCJzdHJpbmciLCJudW1iZXIiLCJib29sZWFuIiwiYmxvY2siLCJsb29rYmVoaW5kIiwiYnJhY2tldHMiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsInZhcmlhYmxlIiwiaG9va3MiLCJhZGQiLCJlbnYiLCJoYW5kbGViYXJzUGF0dGVybiIsImJ1aWxkUGxhY2Vob2xkZXJzIiwidG9rZW5pemVQbGFjZWhvbGRlcnMiLCJoYnMiLCJtdXN0YWNoZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/handlebars.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haskell.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haskell.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ haskell)\n/* harmony export */ });\n// @ts-nocheck\nhaskell.displayName = \"haskell\";\nhaskell.aliases = [\n    \"hs\"\n];\n/** @type {import('../core.js').Syntax} */ function haskell(Prism) {\n    Prism.languages.haskell = {\n        comment: {\n            pattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n            lookbehind: true\n        },\n        char: {\n            pattern: /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n        \"import-statement\": {\n            // The imported or hidden names are not included in this import\n            // statement. This is because we want to highlight those exactly like\n            // we do for the names in the program.\n            pattern: /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n            lookbehind: true,\n            inside: {\n                keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n                punctuation: /\\./\n            }\n        },\n        // These are builtin variables only. Constructors are highlighted later as a constant.\n        builtin: /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n        // decimal integers and floating point numbers | octal integers | hexadecimal integers\n        number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n        operator: [\n            {\n                // infix operator\n                pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n                greedy: true\n            },\n            {\n                // function composition\n                pattern: /(\\s)\\.(?=\\s)/,\n                lookbehind: true\n            },\n            // Most of this is needed because of the meaning of a single '.'.\n            // If it stands alone freely, it is the function composition.\n            // It may also be a separator between a module name and an identifier => no\n            // operator. If it comes together with other special characters it is an\n            // operator too.\n            //\n            // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n            /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n        ],\n        // In Haskell, nearly everything is a variable, do not highlight these.\n        hvariable: {\n            pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        constant: {\n            pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.hs = Prism.languages.haskell;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oYXNrZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUV4Qix3Q0FBd0MsR0FDekIsU0FBU0YsUUFBUUcsS0FBSztJQUNuQ0EsTUFBTUMsU0FBUyxDQUFDSixPQUFPLEdBQUc7UUFDeEJLLFNBQVM7WUFDUEMsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQUMsTUFBTTtZQUNKRixTQUNFO1lBQ0ZHLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05KLFNBQVM7WUFDVEssUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRixvQkFBb0I7WUFDbEIsK0RBQStEO1lBQy9ELHFFQUFxRTtZQUNyRSxzQ0FBc0M7WUFDdENOLFNBQ0U7WUFDRkMsWUFBWTtZQUNaTSxRQUFRO2dCQUNORCxTQUFTO2dCQUNURSxhQUFhO1lBQ2Y7UUFDRjtRQUNBLHNGQUFzRjtRQUN0RkMsU0FDRTtRQUNGLHNGQUFzRjtRQUN0RkMsUUFBUTtRQUNSQyxVQUFVO1lBQ1I7Z0JBQ0UsaUJBQWlCO2dCQUNqQlgsU0FBUztnQkFDVEssUUFBUTtZQUNWO1lBQ0E7Z0JBQ0UsdUJBQXVCO2dCQUN2QkwsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0EsaUVBQWlFO1lBQ2pFLDZEQUE2RDtZQUM3RCwyRUFBMkU7WUFDM0Usd0VBQXdFO1lBQ3hFLGdCQUFnQjtZQUNoQixFQUFFO1lBQ0YsOERBQThEO1lBQzlEO1NBQ0Q7UUFDRCx1RUFBdUU7UUFDdkVXLFdBQVc7WUFDVFosU0FBUztZQUNUTyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBSyxVQUFVO1lBQ1JiLFNBQVM7WUFDVE8sUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUEsYUFBYTtJQUNmO0lBQ0FYLE1BQU1DLFNBQVMsQ0FBQ2dCLEVBQUUsR0FBR2pCLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTztBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oYXNrZWxsLmpzPzI0MDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmhhc2tlbGwuZGlzcGxheU5hbWUgPSAnaGFza2VsbCdcbmhhc2tlbGwuYWxpYXNlcyA9IFsnaHMnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhc2tlbGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmhhc2tlbGwgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLSEjJCUqKz0/JkB8fi46PD5eXFxcXFxcL10pKD86LS0oPzooPz0uKVteLSEjJCUqKz0/JkB8fi46PD5eXFxcXFxcL10uKnwkKXxcXHstW1xcc1xcU10qPy1cXH0pL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBjaGFyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvJyg/OlteXFxcXCddfFxcXFwoPzpbYWJmbnJ0dlxcXFxcIicmXXxcXF5bQS1aQFtcXF1eX118QUNLfEJFTHxCU3xDQU58Q1J8REMxfERDMnxEQzN8REM0fERFTHxETEV8RU18RU5RfEVPVHxFU0N8RVRCfEVUWHxGRnxGU3xHU3xIVHxMRnxOQUt8TlVMfFJTfFNJfFNPfFNPSHxTUHxTVFh8U1VCfFNZTnxVU3xWVHxcXGQrfG9bMC03XSt8eFswLTlhLWZBLUZdKykpJy8sXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cXFxcXCJdfFxcXFwoPzpcXFN8XFxzK1xcXFwpKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86Y2FzZXxjbGFzc3xkYXRhfGRlcml2aW5nfGRvfGVsc2V8aWZ8aW58aW5maXhsfGluZml4cnxpbnN0YW5jZXxsZXR8bW9kdWxlfG5ld3R5cGV8b2Z8cHJpbWl0aXZlfHRoZW58dHlwZXx3aGVyZSlcXGIvLFxuICAgICdpbXBvcnQtc3RhdGVtZW50Jzoge1xuICAgICAgLy8gVGhlIGltcG9ydGVkIG9yIGhpZGRlbiBuYW1lcyBhcmUgbm90IGluY2x1ZGVkIGluIHRoaXMgaW1wb3J0XG4gICAgICAvLyBzdGF0ZW1lbnQuIFRoaXMgaXMgYmVjYXVzZSB3ZSB3YW50IHRvIGhpZ2hsaWdodCB0aG9zZSBleGFjdGx5IGxpa2VcbiAgICAgIC8vIHdlIGRvIGZvciB0aGUgbmFtZXMgaW4gdGhlIHByb2dyYW0uXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF5bXFx0IF0qKWltcG9ydFxccysoPzpxdWFsaWZpZWRcXHMrKT8oPzpbQS1aXVtcXHcnXSopKD86XFwuW0EtWl1bXFx3J10qKSooPzpcXHMrYXNcXHMrKD86W0EtWl1bXFx3J10qKSg/OlxcLltBLVpdW1xcdyddKikqKT8oPzpcXHMraGlkaW5nXFxiKT8vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OmFzfGhpZGluZ3xpbXBvcnR8cXVhbGlmaWVkKVxcYi8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8gVGhlc2UgYXJlIGJ1aWx0aW4gdmFyaWFibGVzIG9ubHkuIENvbnN0cnVjdG9ycyBhcmUgaGlnaGxpZ2h0ZWQgbGF0ZXIgYXMgYSBjb25zdGFudC5cbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OmFic3xhY29zfGFjb3NofGFsbHxhbmR8YW55fGFwcGVuZEZpbGV8YXBwcm94UmF0aW9uYWx8YXNUeXBlT2Z8YXNpbnxhc2luaHxhdGFufGF0YW4yfGF0YW5ofGJhc2ljSU9SdW58YnJlYWt8Y2F0Y2h8Y2VpbGluZ3xjaHJ8Y29tcGFyZXxjb25jYXR8Y29uY2F0TWFwfGNvbnN0fGNvc3xjb3NofGN1cnJ5fGN5Y2xlfGRlY29kZUZsb2F0fGRlbm9taW5hdG9yfGRpZ2l0VG9JbnR8ZGl2fGRpdk1vZHxkcm9wfGRyb3BXaGlsZXxlaXRoZXJ8ZWxlbXxlbmNvZGVGbG9hdHxlbnVtRnJvbXxlbnVtRnJvbVRoZW58ZW51bUZyb21UaGVuVG98ZW51bUZyb21Ub3xlcnJvcnxldmVufGV4cHxleHBvbmVudHxmYWlsfGZpbHRlcnxmbGlwfGZsb2F0RGlnaXRzfGZsb2F0UmFkaXh8ZmxvYXRSYW5nZXxmbG9vcnxmbWFwfGZvbGRsfGZvbGRsMXxmb2xkcnxmb2xkcjF8ZnJvbURvdWJsZXxmcm9tRW51bXxmcm9tSW50fGZyb21JbnRlZ2VyfGZyb21JbnRlZ3JhbHxmcm9tUmF0aW9uYWx8ZnN0fGdjZHxnZXRDaGFyfGdldENvbnRlbnRzfGdldExpbmV8Z3JvdXB8aGVhZHxpZHxpblJhbmdlfGluZGV4fGluaXR8aW50VG9EaWdpdHxpbnRlcmFjdHxpb0Vycm9yfGlzQWxwaGF8aXNBbHBoYU51bXxpc0FzY2lpfGlzQ29udHJvbHxpc0Rlbm9ybWFsaXplZHxpc0RpZ2l0fGlzSGV4RGlnaXR8aXNJRUVFfGlzSW5maW5pdGV8aXNMb3dlcnxpc05hTnxpc05lZ2F0aXZlWmVyb3xpc09jdERpZ2l0fGlzUHJpbnR8aXNTcGFjZXxpc1VwcGVyfGl0ZXJhdGV8bGFzdHxsY218bGVuZ3RofGxleHxsZXhEaWdpdHN8bGV4TGl0Q2hhcnxsaW5lc3xsb2d8bG9nQmFzZXxsb29rdXB8bWFwfG1hcE18bWFwTV98bWF4fG1heEJvdW5kfG1heGltdW18bWF5YmV8bWlufG1pbkJvdW5kfG1pbmltdW18bW9kfG5lZ2F0ZXxub3R8bm90RWxlbXxudWxsfG51bWVyYXRvcnxvZGR8b3J8b3JkfG90aGVyd2lzZXxwYWNrfHBpfHByZWR8cHJpbUV4aXRXaXRofHByaW50fHByb2R1Y3R8cHJvcGVyRnJhY3Rpb258cHV0Q2hhcnxwdXRTdHJ8cHV0U3RyTG58cXVvdHxxdW90UmVtfHJhbmdlfHJhbmdlU2l6ZXxyZWFkfHJlYWREZWN8cmVhZEZpbGV8cmVhZEZsb2F0fHJlYWRIZXh8cmVhZElPfHJlYWRJbnR8cmVhZExpc3R8cmVhZExpdENoYXJ8cmVhZExufHJlYWRPY3R8cmVhZFBhcmVufHJlYWRTaWduZWR8cmVhZHN8cmVhZHNQcmVjfHJlYWxUb0ZyYWN8cmVjaXB8cmVtfHJlcGVhdHxyZXBsaWNhdGV8cmV0dXJufHJldmVyc2V8cm91bmR8c2NhbGVGbG9hdHxzY2FubHxzY2FubDF8c2NhbnJ8c2NhbnIxfHNlcXxzZXF1ZW5jZXxzZXF1ZW5jZV98c2hvd3xzaG93Q2hhcnxzaG93SW50fHNob3dMaXN0fHNob3dMaXRDaGFyfHNob3dQYXJlbnxzaG93U2lnbmVkfHNob3dTdHJpbmd8c2hvd3N8c2hvd3NQcmVjfHNpZ25pZmljYW5kfHNpZ251bXxzaW58c2luaHxzbmR8c29ydHxzcGFufHNwbGl0QXR8c3FydHxzdWJ0cmFjdHxzdWNjfHN1bXx0YWlsfHRha2V8dGFrZVdoaWxlfHRhbnx0YW5ofHRocmVhZFRvSU9SZXN1bHR8dG9FbnVtfHRvSW50fHRvSW50ZWdlcnx0b0xvd2VyfHRvUmF0aW9uYWx8dG9VcHBlcnx0cnVuY2F0ZXx1bmN1cnJ5fHVuZGVmaW5lZHx1bmxpbmVzfHVudGlsfHVud29yZHN8dW56aXB8dW56aXAzfHVzZXJFcnJvcnx3b3Jkc3x3cml0ZUZpbGV8emlwfHppcDN8emlwV2l0aHx6aXBXaXRoMylcXGIvLFxuICAgIC8vIGRlY2ltYWwgaW50ZWdlcnMgYW5kIGZsb2F0aW5nIHBvaW50IG51bWJlcnMgfCBvY3RhbCBpbnRlZ2VycyB8IGhleGFkZWNpbWFsIGludGVnZXJzXG4gICAgbnVtYmVyOiAvXFxiKD86XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspP3wwb1swLTddK3wweFswLTlhLWZdKylcXGIvaSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAge1xuICAgICAgICAvLyBpbmZpeCBvcGVyYXRvclxuICAgICAgICBwYXR0ZXJuOiAvYCg/OltBLVpdW1xcdyddKlxcLikqW19hLXpdW1xcdyddKmAvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIGZ1bmN0aW9uIGNvbXBvc2l0aW9uXG4gICAgICAgIHBhdHRlcm46IC8oXFxzKVxcLig/PVxccykvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gTW9zdCBvZiB0aGlzIGlzIG5lZWRlZCBiZWNhdXNlIG9mIHRoZSBtZWFuaW5nIG9mIGEgc2luZ2xlICcuJy5cbiAgICAgIC8vIElmIGl0IHN0YW5kcyBhbG9uZSBmcmVlbHksIGl0IGlzIHRoZSBmdW5jdGlvbiBjb21wb3NpdGlvbi5cbiAgICAgIC8vIEl0IG1heSBhbHNvIGJlIGEgc2VwYXJhdG9yIGJldHdlZW4gYSBtb2R1bGUgbmFtZSBhbmQgYW4gaWRlbnRpZmllciA9PiBub1xuICAgICAgLy8gb3BlcmF0b3IuIElmIGl0IGNvbWVzIHRvZ2V0aGVyIHdpdGggb3RoZXIgc3BlY2lhbCBjaGFyYWN0ZXJzIGl0IGlzIGFuXG4gICAgICAvLyBvcGVyYXRvciB0b28uXG4gICAgICAvL1xuICAgICAgLy8gVGhpcyByZWdleCBtZWFuczogL1stISMkJSorPT8mQHx+Ljo8Pl5cXFxcXFwvXSsvIHdpdGhvdXQgL1xcLi8uXG4gICAgICAvWy0hIyQlKis9PyZAfH46PD5eXFxcXFxcL11bLSEjJCUqKz0/JkB8fi46PD5eXFxcXFxcL10qfFxcLlstISMkJSorPT8mQHx+Ljo8Pl5cXFxcXFwvXSsvXG4gICAgXSxcbiAgICAvLyBJbiBIYXNrZWxsLCBuZWFybHkgZXZlcnl0aGluZyBpcyBhIHZhcmlhYmxlLCBkbyBub3QgaGlnaGxpZ2h0IHRoZXNlLlxuICAgIGh2YXJpYWJsZToge1xuICAgICAgcGF0dGVybjogL1xcYig/OltBLVpdW1xcdyddKlxcLikqW19hLXpdW1xcdyddKi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICB9XG4gICAgfSxcbiAgICBjb25zdGFudDoge1xuICAgICAgcGF0dGVybjogL1xcYig/OltBLVpdW1xcdyddKlxcLikqW0EtWl1bXFx3J10qLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLmhzID0gUHJpc20ubGFuZ3VhZ2VzLmhhc2tlbGxcbn1cbiJdLCJuYW1lcyI6WyJoYXNrZWxsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJjaGFyIiwiYWxpYXMiLCJzdHJpbmciLCJncmVlZHkiLCJrZXl3b3JkIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJidWlsdGluIiwibnVtYmVyIiwib3BlcmF0b3IiLCJodmFyaWFibGUiLCJjb25zdGFudCIsImhzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haskell.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haxe.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haxe.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ haxe)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nhaxe.displayName = \"haxe\";\nhaxe.aliases = [];\n/** @type {import('../core.js').Syntax} */ function haxe(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.haxe = Prism.languages.extend(\"clike\", {\n        string: {\n            // Strings can be multi-line\n            pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n            greedy: true\n        },\n        \"class-name\": [\n            {\n                pattern: /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n                lookbehind: true\n            },\n            // based on naming convention\n            /\\b[A-Z]\\w*/\n        ],\n        // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n        keyword: /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n        function: {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n            greedy: true\n        },\n        operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n    });\n    Prism.languages.insertBefore(\"haxe\", \"string\", {\n        \"string-interpolation\": {\n            pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{?|\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: Prism.languages.haxe\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"haxe\", \"class-name\", {\n        regex: {\n            pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n            greedy: true,\n            inside: {\n                \"regex-flags\": /\\b[a-z]+$/,\n                \"regex-source\": {\n                    pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n                    lookbehind: true,\n                    alias: \"language-regex\",\n                    inside: Prism.languages.regex\n                },\n                \"regex-delimiter\": /^~\\/|\\/$/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"haxe\", \"keyword\", {\n        preprocessor: {\n            pattern: /#(?:else|elseif|end|if)\\b.*/,\n            alias: \"property\"\n        },\n        metadata: {\n            pattern: /@:?[\\w.]+/,\n            alias: \"symbol\"\n        },\n        reification: {\n            pattern: /\\$(?:\\w+|(?=\\{))/,\n            alias: \"important\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oYXhlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JEQyxRQUFRO1lBQ04sNEJBQTRCO1lBQzVCQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGNBQWM7WUFDWjtnQkFDRUQsU0FDRTtnQkFDRkUsWUFBWTtZQUNkO1lBQ0EsNkJBQTZCO1lBQzdCO1NBQ0Q7UUFDRCxrR0FBa0c7UUFDbEdDLFNBQ0U7UUFDRkMsVUFBVTtZQUNSSixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSSxVQUFVO0lBQ1o7SUFDQVYsTUFBTUUsU0FBUyxDQUFDUyxZQUFZLENBQUMsUUFBUSxVQUFVO1FBQzdDLHdCQUF3QjtZQUN0Qk4sU0FBUztZQUNUQyxRQUFRO1lBQ1JNLFFBQVE7Z0JBQ05DLGVBQWU7b0JBQ2JSLFNBQVM7b0JBQ1RFLFlBQVk7b0JBQ1pLLFFBQVE7d0JBQ04sNkJBQTZCOzRCQUMzQlAsU0FBUzs0QkFDVFMsT0FBTzt3QkFDVDt3QkFDQUMsWUFBWTs0QkFDVlYsU0FBUzs0QkFDVE8sUUFBUVosTUFBTUUsU0FBUyxDQUFDTCxJQUFJO3dCQUM5QjtvQkFDRjtnQkFDRjtnQkFDQU8sUUFBUTtZQUNWO1FBQ0Y7SUFDRjtJQUNBSixNQUFNRSxTQUFTLENBQUNTLFlBQVksQ0FBQyxRQUFRLGNBQWM7UUFDakRLLE9BQU87WUFDTFgsU0FBUztZQUNUQyxRQUFRO1lBQ1JNLFFBQVE7Z0JBQ04sZUFBZTtnQkFDZixnQkFBZ0I7b0JBQ2RQLFNBQVM7b0JBQ1RFLFlBQVk7b0JBQ1pPLE9BQU87b0JBQ1BGLFFBQVFaLE1BQU1FLFNBQVMsQ0FBQ2MsS0FBSztnQkFDL0I7Z0JBQ0EsbUJBQW1CO1lBQ3JCO1FBQ0Y7SUFDRjtJQUNBaEIsTUFBTUUsU0FBUyxDQUFDUyxZQUFZLENBQUMsUUFBUSxXQUFXO1FBQzlDTSxjQUFjO1lBQ1paLFNBQVM7WUFDVFMsT0FBTztRQUNUO1FBQ0FJLFVBQVU7WUFDUmIsU0FBUztZQUNUUyxPQUFPO1FBQ1Q7UUFDQUssYUFBYTtZQUNYZCxTQUFTO1lBQ1RTLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGF4ZS5qcz8zZmJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmhheGUuZGlzcGxheU5hbWUgPSAnaGF4ZSdcbmhheGUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGF4ZShQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmhheGUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIC8vIFN0cmluZ3MgY2FuIGJlIG11bHRpLWxpbmVcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcW1xcc1xcU10pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhcXGIoPzphYnN0cmFjdHxjbGFzc3xlbnVtfGV4dGVuZHN8aW1wbGVtZW50c3xpbnRlcmZhY2V8bmV3fHR5cGVkZWYpXFxzKylbQS1aX11cXHcqLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8vIGJhc2VkIG9uIG5hbWluZyBjb252ZW50aW9uXG4gICAgICAvXFxiW0EtWl1cXHcqL1xuICAgIF0sXG4gICAgLy8gVGhlIGZpbmFsIGxvb2stYWhlYWQgcHJldmVudHMgaGlnaGxpZ2h0aW5nIG9mIGtleXdvcmRzIGlmIGV4cHJlc3Npb25zIHN1Y2ggYXMgXCJoYXhlLm1hY3JvLkV4cHJcIlxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxidGhpc1xcYnxcXGIoPzphYnN0cmFjdHxhc3xicmVha3xjYXNlfGNhc3R8Y2F0Y2h8Y2xhc3N8Y29udGludWV8ZGVmYXVsdHxkb3xkeW5hbWljfGVsc2V8ZW51bXxleHRlbmRzfGV4dGVybnxmaW5hbHxmb3J8ZnJvbXxmdW5jdGlvbnxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbnxpbmxpbmV8aW50ZXJmYWNlfG1hY3JvfG5ld3xudWxsfG9wZXJhdG9yfG92ZXJsb2FkfG92ZXJyaWRlfHBhY2thZ2V8cHJpdmF0ZXxwdWJsaWN8cmV0dXJufHN0YXRpY3xzdXBlcnxzd2l0Y2h8dGhyb3d8dG98dHJ5fHR5cGVkZWZ8dW50eXBlZHx1c2luZ3x2YXJ8d2hpbGUpKD8hXFwuKVxcYi8sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89XFxzKig/OjxbXjw+XSo+XFxzKik/XFwoKS9pLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogL1xcLnszfXxcXCtcXCt8LS18JiZ8XFx8XFx8fC0+fD0+fCg/Ojw8P3w+ezEsM318Wy0rKi8lIT0mfF5dKT0/fFs/On5dL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdoYXhlJywgJ3N0cmluZycsIHtcbiAgICAnc3RyaW5nLWludGVycG9sYXRpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvJyg/OlteJ1xcXFxdfFxcXFxbXFxzXFxTXSkqJy8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcJCg/Olxcdyt8XFx7W157fV0rXFx9KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxcez98XFx9JC8sXG4gICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuaGF4ZVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnaGF4ZScsICdjbGFzcy1uYW1lJywge1xuICAgIHJlZ2V4OiB7XG4gICAgICBwYXR0ZXJuOiAvflxcLyg/OlteXFwvXFxcXFxcclxcbl18XFxcXC4pK1xcL1thLXpdKi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3JlZ2V4LWZsYWdzJzogL1xcYlthLXpdKyQvLFxuICAgICAgICAncmVnZXgtc291cmNlJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eKH5cXC8pW1xcc1xcU10rKD89XFwvJCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1yZWdleCcsXG4gICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMucmVnZXhcbiAgICAgICAgfSxcbiAgICAgICAgJ3JlZ2V4LWRlbGltaXRlcic6IC9eflxcL3xcXC8kL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnaGF4ZScsICdrZXl3b3JkJywge1xuICAgIHByZXByb2Nlc3Nvcjoge1xuICAgICAgcGF0dGVybjogLyMoPzplbHNlfGVsc2VpZnxlbmR8aWYpXFxiLiovLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIG1ldGFkYXRhOiB7XG4gICAgICBwYXR0ZXJuOiAvQDo/W1xcdy5dKy8sXG4gICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICB9LFxuICAgIHJlaWZpY2F0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwkKD86XFx3K3woPz1cXHspKS8sXG4gICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJoYXhlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJpbnNpZGUiLCJpbnRlcnBvbGF0aW9uIiwiYWxpYXMiLCJleHByZXNzaW9uIiwicmVnZXgiLCJwcmVwcm9jZXNzb3IiLCJtZXRhZGF0YSIsInJlaWZpY2F0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haxe.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hcl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hcl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hcl)\n/* harmony export */ });\n// @ts-nocheck\nhcl.displayName = \"hcl\";\nhcl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function hcl(Prism) {\n    Prism.languages.hcl = {\n        comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        heredoc: {\n            pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n            greedy: true,\n            alias: \"string\"\n        },\n        keyword: [\n            {\n                pattern: /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n                inside: {\n                    type: {\n                        pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n                        lookbehind: true,\n                        alias: \"variable\"\n                    }\n                }\n            },\n            {\n                pattern: /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n                inside: {\n                    type: {\n                        pattern: /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n                        lookbehind: true,\n                        alias: \"variable\"\n                    }\n                }\n            },\n            /[\\w-]+(?=\\s+\\{)/\n        ],\n        property: [\n            /[-\\w\\.]+(?=\\s*=(?!=))/,\n            /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/\n        ],\n        string: {\n            pattern: /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n                    lookbehind: true,\n                    inside: {\n                        type: {\n                            pattern: /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n                            lookbehind: true,\n                            alias: \"variable\"\n                        },\n                        keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n                        function: /\\w+(?=\\()/,\n                        string: {\n                            pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                            greedy: true\n                        },\n                        number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n                        punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n                    }\n                }\n            }\n        },\n        number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        punctuation: /[=\\[\\]{}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oY2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVEMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUDtnQkFDRUgsU0FDRTtnQkFDRkksUUFBUTtvQkFDTkMsTUFBTTt3QkFDSkwsU0FBUzt3QkFDVE0sWUFBWTt3QkFDWkosT0FBTztvQkFDVDtnQkFDRjtZQUNGO1lBQ0E7Z0JBQ0VGLFNBQ0U7Z0JBQ0ZJLFFBQVE7b0JBQ05DLE1BQU07d0JBQ0pMLFNBQ0U7d0JBQ0ZNLFlBQVk7d0JBQ1pKLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtZQUNBO1NBQ0Q7UUFDREssVUFBVTtZQUFDO1lBQXlCO1NBQW9DO1FBQ3hFQyxRQUFRO1lBQ05SLFNBQ0U7WUFDRkMsUUFBUTtZQUNSRyxRQUFRO2dCQUNOSyxlQUFlO29CQUNiVCxTQUFTO29CQUNUTSxZQUFZO29CQUNaRixRQUFRO3dCQUNOQyxNQUFNOzRCQUNKTCxTQUNFOzRCQUNGTSxZQUFZOzRCQUNaSixPQUFPO3dCQUNUO3dCQUNBQyxTQUFTO3dCQUNUTyxVQUFVO3dCQUNWRixRQUFROzRCQUNOUixTQUFTOzRCQUNUQyxRQUFRO3dCQUNWO3dCQUNBVSxRQUFRO3dCQUNSQyxhQUFhO29CQUNmO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBRCxRQUFRO1FBQ1JFLFNBQVM7UUFDVEQsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGNsLmpzP2ZhNjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmhjbC5kaXNwbGF5TmFtZSA9ICdoY2wnXG5oY2wuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGNsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5oY2wgPSB7XG4gICAgY29tbWVudDogLyg/OlxcL1xcL3wjKS4qfFxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgIGhlcmVkb2M6IHtcbiAgICAgIHBhdHRlcm46IC88PC0/KFxcdytcXGIpW1xcc1xcU10qP15bIFxcdF0qXFwxL20sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKD86ZGF0YXxyZXNvdXJjZSlcXHMrKD86XCIoPzpcXFxcW1xcc1xcU118W15cXFxcXCJdKSpcIikoPz1cXHMrXCJbXFx3LV0rXCJcXHMrXFx7KS9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKHJlc291cmNlfGRhdGF8XFxzKykoPzpcIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiKS9pLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oPzpiYWNrZW5kfG1vZHVsZXxvdXRwdXR8cHJvdmlkZXJ8cHJvdmlzaW9uZXJ8dmFyaWFibGUpXFxzKyg/OltcXHctXSt8XCIoPzpcXFxcW1xcc1xcU118W15cXFxcXCJdKSpcIilcXHMrKD89XFx7KS9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICB0eXBlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKGJhY2tlbmR8bW9kdWxlfG91dHB1dHxwcm92aWRlcnxwcm92aXNpb25lcnx2YXJpYWJsZSlcXHMrKD86W1xcdy1dK3xcIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiKVxccysvaSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC9bXFx3LV0rKD89XFxzK1xceykvXG4gICAgXSxcbiAgICBwcm9wZXJ0eTogWy9bLVxcd1xcLl0rKD89XFxzKj0oPyE9KSkvLCAvXCIoPzpcXFxcW1xcc1xcU118W15cXFxcXCJdKStcIig/PVxccypbOj1dKS9dLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1wiKD86W15cXFxcJFwiXXxcXFxcW1xcc1xcU118XFwkKD86KD89XCIpfFxcJCsoPyFcXCQpfFteXCIke10pfFxcJFxceyg/Oltee31cIl18XCIoPzpbXlxcXFxcIl18XFxcXFtcXHNcXFNdKSpcIikqXFx9KSpcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXiRdKVxcJFxceyg/Oltee31cIl18XCIoPzpbXlxcXFxcIl18XFxcXFtcXHNcXFNdKSpcIikqXFx9LyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgdHlwZToge1xuICAgICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAgIC8oXFxiKD86Y291bnR8ZGF0YXxsb2NhbHxtb2R1bGV8cGF0aHxzZWxmfHRlcnJhZm9ybXx2YXIpXFxiXFwuKVtcXHdcXCpdKy9pLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGtleXdvcmQ6IC9cXGIoPzpjb3VudHxkYXRhfGxvY2FsfG1vZHVsZXxwYXRofHNlbGZ8dGVycmFmb3JtfHZhcilcXGIvaSxcbiAgICAgICAgICAgIGZ1bmN0aW9uOiAvXFx3Kyg/PVxcKCkvLFxuICAgICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFxbXFxzXFxTXXxbXlxcXFxcIl0pKlwiLyxcbiAgICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8XFxiXFxkKyg/OlxcLlxcZCopPyg/OmVbKy1dP1xcZCspPy9pLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bIVxcJCMlJicoKSorLC5cXC87PD0+QFxcW1xcXFxcXF1eYHt8fX4/Ol0vXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBudW1iZXI6IC9cXGIweFtcXGRhLWZdK1xcYnxcXGJcXGQrKD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/L2ksXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bPVxcW1xcXXt9XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImhjbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImhlcmVkb2MiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJrZXl3b3JkIiwiaW5zaWRlIiwidHlwZSIsImxvb2tiZWhpbmQiLCJwcm9wZXJ0eSIsInN0cmluZyIsImludGVycG9sYXRpb24iLCJmdW5jdGlvbiIsIm51bWJlciIsInB1bmN0dWF0aW9uIiwiYm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hcl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hlsl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hlsl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hlsl)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\nhlsl.displayName = \"hlsl\";\nhlsl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function hlsl(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.hlsl = Prism.languages.extend(\"c\", {\n        // Regarding keywords and class names:\n        // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n        // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n        // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n        \"class-name\": [\n            Prism.languages.c[\"class-name\"],\n            /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n        ],\n        keyword: [\n            // HLSL keyword\n            /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/,\n            // scalar, vector, and matrix types\n            /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n        ],\n        // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n        number: /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n        boolean: /\\b(?:false|true)\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9obHNsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNpQjtBQUMvQkMsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCw2Q0FBVUE7SUFDekJJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxLQUFLO1FBQ2pELHNDQUFzQztRQUN0QyxtSEFBbUg7UUFDbkgsaUdBQWlHO1FBQ2pHLHVHQUF1RztRQUN2RyxjQUFjO1lBQ1pILE1BQU1FLFNBQVMsQ0FBQ0UsQ0FBQyxDQUFDLGFBQWE7WUFDL0I7U0FDRDtRQUNEQyxTQUFTO1lBQ1AsZUFBZTtZQUNmO1lBQ0EsbUNBQW1DO1lBQ25DO1NBQ0Q7UUFDRCx1SEFBdUg7UUFDdkhDLFFBQ0U7UUFDRkMsU0FBUztJQUNYO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaGxzbC5qcz83M2EyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQyBmcm9tICcuL2MuanMnXG5obHNsLmRpc3BsYXlOYW1lID0gJ2hsc2wnXG5obHNsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhsc2woUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQylcbiAgUHJpc20ubGFuZ3VhZ2VzLmhsc2wgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjJywge1xuICAgIC8vIFJlZ2FyZGluZyBrZXl3b3JkcyBhbmQgY2xhc3MgbmFtZXM6XG4gICAgLy8gVGhlIGxpc3Qgb2YgYWxsIGtleXdvcmRzIHdhcyBzcGxpdCBpbnRvICdrZXl3b3JkJyBhbmQgJ2NsYXNzLW5hbWUnIHRva2VucyBiYXNlZCBvbiB3aGV0aGVyIHRoZXkgYXJlIGNhcGl0YWxpemVkLlxuICAgIC8vIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL3dpbmRvd3Mvd2luMzIvZGlyZWN0M2RobHNsL2R4LWdyYXBoaWNzLWhsc2wtYXBwZW5kaXgta2V5d29yZHNcbiAgICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy93aW5kb3dzL3dpbjMyL2RpcmVjdDNkaGxzbC9keC1ncmFwaGljcy1obHNsLWFwcGVuZGl4LXJlc2VydmVkLXdvcmRzXG4gICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICBQcmlzbS5sYW5ndWFnZXMuY1snY2xhc3MtbmFtZSddLFxuICAgICAgL1xcYig/OkFwcGVuZFN0cnVjdHVyZWRCdWZmZXJ8QmxlbmRTdGF0ZXxCdWZmZXJ8Qnl0ZUFkZHJlc3NCdWZmZXJ8Q29tcGlsZVNoYWRlcnxDb21wdXRlU2hhZGVyfENvbnN1bWVTdHJ1Y3R1cmVkQnVmZmVyfERlcHRoU3RlbmNpbFN0YXRlfERlcHRoU3RlbmNpbFZpZXd8RG9tYWluU2hhZGVyfEdlb21ldHJ5U2hhZGVyfEh1bGxzaGFkZXJ8SW5wdXRQYXRjaHxMaW5lU3RyZWFtfE91dHB1dFBhdGNofFBpeGVsU2hhZGVyfFBvaW50U3RyZWFtfFJXQnVmZmVyfFJXQnl0ZUFkZHJlc3NCdWZmZXJ8UldTdHJ1Y3R1cmVkQnVmZmVyfFJXVGV4dHVyZSg/OjFEfDFEQXJyYXl8MkR8MkRBcnJheXwzRCl8UmFzdGVyaXplclN0YXRlfFJlbmRlclRhcmdldFZpZXd8U2FtcGxlckNvbXBhcmlzb25TdGF0ZXxTYW1wbGVyU3RhdGV8U3RydWN0dXJlZEJ1ZmZlcnxUZXh0dXJlKD86MUR8MURBcnJheXwyRHwyREFycmF5fDJETVN8MkRNU0FycmF5fDNEfEN1YmV8Q3ViZUFycmF5KXxUcmlhbmdsZVN0cmVhbXxWZXJ0ZXhTaGFkZXIpXFxiL1xuICAgIF0sXG4gICAga2V5d29yZDogW1xuICAgICAgLy8gSExTTCBrZXl3b3JkXG4gICAgICAvXFxiKD86YXNtfGFzbV9mcmFnbWVudHxhdXRvfGJyZWFrfGNhc2V8Y2F0Y2h8Y2J1ZmZlcnxjZW50cm9pZHxjaGFyfGNsYXNzfGNvbHVtbl9tYWpvcnxjb21waWxlfGNvbXBpbGVfZnJhZ21lbnR8Y29uc3R8Y29uc3RfY2FzdHxjb250aW51ZXxkZWZhdWx0fGRlbGV0ZXxkaXNjYXJkfGRvfGR5bmFtaWNfY2FzdHxlbHNlfGVudW18ZXhwbGljaXR8ZXhwb3J0fGV4dGVybnxmb3J8ZnJpZW5kfGZ4Z3JvdXB8Z290b3xncm91cHNoYXJlZHxpZnxpbnxpbmxpbmV8aW5vdXR8aW50ZXJmYWNlfGxpbmV8bGluZWFkanxsaW5lYXJ8bG9uZ3xtYXRyaXh8bXV0YWJsZXxuYW1lc3BhY2V8bmV3fG5vaW50ZXJwb2xhdGlvbnxub3BlcnNwZWN0aXZlfG9wZXJhdG9yfG91dHxwYWNrb2Zmc2V0fHBhc3N8cGl4ZWxmcmFnbWVudHxwb2ludHxwcmVjaXNlfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZWdpc3RlcnxyZWludGVycHJldF9jYXN0fHJldHVybnxyb3dfbWFqb3J8c2FtcGxlfHNhbXBsZXJ8c2hhcmVkfHNob3J0fHNpZ25lZHxzaXplb2Z8c25vcm18c3RhdGVibG9ja3xzdGF0ZWJsb2NrX3N0YXRlfHN0YXRpY3xzdGF0aWNfY2FzdHxzdHJpbmd8c3RydWN0fHN3aXRjaHx0YnVmZmVyfHRlY2huaXF1ZXx0ZWNobmlxdWUxMHx0ZWNobmlxdWUxMXx0ZW1wbGF0ZXx0ZXh0dXJlfHRoaXN8dGhyb3d8dHJpYW5nbGV8dHJpYW5nbGVhZGp8dHJ5fHR5cGVkZWZ8dHlwZW5hbWV8dW5pZm9ybXx1bmlvbnx1bm9ybXx1bnNpZ25lZHx1c2luZ3x2ZWN0b3J8dmVydGV4ZnJhZ21lbnR8dmlydHVhbHx2b2lkfHZvbGF0aWxlfHdoaWxlKVxcYi8sXG4gICAgICAvLyBzY2FsYXIsIHZlY3RvciwgYW5kIG1hdHJpeCB0eXBlc1xuICAgICAgL1xcYig/OmJvb2x8ZG91YmxlfGR3b3JkfGZsb2F0fGhhbGZ8aW50fG1pbig/OjEwZmxvYXR8MTJpbnR8MTYoPzpmbG9hdHxpbnR8dWludCkpfHVpbnQpKD86WzEtNF0oPzp4WzEtNF0pPyk/XFxiL1xuICAgIF0sXG4gICAgLy8gaHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy93aW4zMi9kaXJlY3QzZGhsc2wvZHgtZ3JhcGhpY3MtaGxzbC1hcHBlbmRpeC1ncmFtbWFyI2Zsb2F0aW5nLXBvaW50LW51bWJlcnNcbiAgICBudW1iZXI6XG4gICAgICAvKD86KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OltlRV1bKy1dP1xcZCspP3xcXGIweFtcXGRhLWZBLUZdKylbZkZoSGxMdVVdP1xcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL1xuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckMiLCJobHNsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImMiLCJrZXl3b3JkIiwibnVtYmVyIiwiYm9vbGVhbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hlsl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hoon.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hoon.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hoon)\n/* harmony export */ });\n// @ts-nocheck\nhoon.displayName = \"hoon\";\nhoon.aliases = [];\n/** @type {import('../core.js').Syntax} */ function hoon(Prism) {\n    Prism.languages.hoon = {\n        comment: {\n            pattern: /::.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'/,\n            greedy: true\n        },\n        constant: /%(?:\\.[ny]|[\\w-]+)/,\n        \"class-name\": /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n        function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n        keyword: /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ob29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUUsVUFBVTtRQUNWLGNBQWM7UUFDZEMsVUFBVTtRQUNWQyxTQUNFO0lBQ0o7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ob29uLmpzP2Y4YzAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmhvb24uZGlzcGxheU5hbWUgPSAnaG9vbidcbmhvb24uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaG9vbihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaG9vbiA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvOjouKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxdfFxcXFwuKSpcInwnKD86W14nXFxcXF18XFxcXC4pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjb25zdGFudDogLyUoPzpcXC5bbnldfFtcXHctXSspLyxcbiAgICAnY2xhc3MtbmFtZSc6IC9AKD86W2EtejAtOS1dKlthLXowLTldKT98XFwqL2ksXG4gICAgZnVuY3Rpb246IC8oPzpcXCtbLStdIHsyfSk/KD86W2Etel0oPzpbYS16MC05LV0qW2EtejAtOV0pPykvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFwuW1xcXlxcK1xcKj1cXD9dfCFbPjw6XFwuPVxcPyFdfD1bPnw6LFxcLlxcLVxcXjwrOy9+XFwqXFw/XXxcXD9bPnw6XFwuXFwtXFxePFxcKyZ+PUAhXXxcXHxbXFwkXyU6XFwuXFwtXFxeflxcKj1AXFw/XXxcXCtbfFxcJFxcK1xcKl18OltfXFwtXFxeXFwrflxcKl18JVtfOlxcLlxcLVxcXlxcK35cXCo9XXxcXF5bfDpcXC5cXC1cXCsmflxcKj1cXD9dfFxcJFt8XyU6PD5cXC1cXF4mfkA9XFw/XXw7Wzo8XFwrO1xcL35cXCo9XXx+Wz58XFwkXyU8XFwrXFwvJj1cXD8hXXwtLXw9PS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImhvb24iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiY29uc3RhbnQiLCJmdW5jdGlvbiIsImtleXdvcmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hoon.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hpkp.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hpkp.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hpkp)\n/* harmony export */ });\n// @ts-nocheck\nhpkp.displayName = \"hpkp\";\nhpkp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function hpkp(Prism) {\n    /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */ Prism.languages.hpkp = {\n        directive: {\n            pattern: /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n            alias: \"property\"\n        },\n        operator: /=/,\n        punctuation: /;/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9ocGtwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEM7Ozs7R0FJQyxHQUVEQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssV0FBVztZQUNUQyxTQUNFO1lBQ0ZDLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hwa3AuanM/YWY4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaHBrcC5kaXNwbGF5TmFtZSA9ICdocGtwJ1xuaHBrcC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBocGtwKFByaXNtKSB7XG4gIC8qKlxuICAgKiBPcmlnaW5hbCBieSBTY290dCBIZWxtZS5cbiAgICpcbiAgICogUmVmZXJlbmNlOiBodHRwczovL3Njb3R0aGVsbWUuY28udWsvaHBrcC1jaGVhdC1zaGVldC9cbiAgICovXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLmhwa3AgPSB7XG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86aW5jbHVkZVN1YkRvbWFpbnN8bWF4LWFnZXxwaW4tc2hhMjU2fHByZWxvYWR8cmVwb3J0LXRvfHJlcG9ydC11cml8c3RyaWN0KSg/PVtcXHM7PV18JCkvaSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLz0vLFxuICAgIHB1bmN0dWF0aW9uOiAvOy9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImhwa3AiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImRpcmVjdGl2ZSIsInBhdHRlcm4iLCJhbGlhcyIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hpkp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hsts.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hsts.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hsts)\n/* harmony export */ });\n// @ts-nocheck\nhsts.displayName = \"hsts\";\nhsts.aliases = [];\n/** @type {import('../core.js').Syntax} */ function hsts(Prism) {\n    /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */ Prism.languages.hsts = {\n        directive: {\n            pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n            alias: \"property\"\n        },\n        operator: /=/,\n        punctuation: /;/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9oc3RzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEM7Ozs7R0FJQyxHQUVEQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssV0FBVztZQUNUQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2hzdHMuanM/ZDE5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaHN0cy5kaXNwbGF5TmFtZSA9ICdoc3RzJ1xuaHN0cy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoc3RzKFByaXNtKSB7XG4gIC8qKlxuICAgKiBPcmlnaW5hbCBieSBTY290dCBIZWxtZS5cbiAgICpcbiAgICogUmVmZXJlbmNlOiBodHRwczovL3Njb3R0aGVsbWUuY28udWsvaHN0cy1jaGVhdC1zaGVldC9cbiAgICovXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLmhzdHMgPSB7XG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD86aW5jbHVkZVN1YkRvbWFpbnN8bWF4LWFnZXxwcmVsb2FkKSg/PVtcXHM7PV18JCkvaSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLz0vLFxuICAgIHB1bmN0dWF0aW9uOiAvOy9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImhzdHMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImRpcmVjdGl2ZSIsInBhdHRlcm4iLCJhbGlhcyIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hsts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/http.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/http.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ http)\n/* harmony export */ });\n// @ts-nocheck\nhttp.displayName = \"http\";\nhttp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function http(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} name\n     * @returns {RegExp}\n     */ function headerValueOf(name) {\n            return RegExp(\"(^(?:\" + name + \"):[ \t]*(?![ \t]))[^]+\", \"i\");\n        }\n        Prism.languages.http = {\n            \"request-line\": {\n                pattern: /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n                inside: {\n                    // HTTP Method\n                    method: {\n                        pattern: /^[A-Z]+\\b/,\n                        alias: \"property\"\n                    },\n                    // Request Target e.g. http://example.com, /path/to/file\n                    \"request-target\": {\n                        pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n                        lookbehind: true,\n                        alias: \"url\",\n                        inside: Prism.languages.uri\n                    },\n                    // HTTP Version\n                    \"http-version\": {\n                        pattern: /^(\\s)HTTP\\/[\\d.]+/,\n                        lookbehind: true,\n                        alias: \"property\"\n                    }\n                }\n            },\n            \"response-status\": {\n                pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n                inside: {\n                    // HTTP Version\n                    \"http-version\": {\n                        pattern: /^HTTP\\/[\\d.]+/,\n                        alias: \"property\"\n                    },\n                    // Status Code\n                    \"status-code\": {\n                        pattern: /^(\\s)\\d+(?=\\s)/,\n                        lookbehind: true,\n                        alias: \"number\"\n                    },\n                    // Reason Phrase\n                    \"reason-phrase\": {\n                        pattern: /^(\\s).+/,\n                        lookbehind: true,\n                        alias: \"string\"\n                    }\n                }\n            },\n            header: {\n                pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n                inside: {\n                    \"header-value\": [\n                        {\n                            pattern: headerValueOf(/Content-Security-Policy/.source),\n                            lookbehind: true,\n                            alias: [\n                                \"csp\",\n                                \"languages-csp\"\n                            ],\n                            inside: Prism.languages.csp\n                        },\n                        {\n                            pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n                            lookbehind: true,\n                            alias: [\n                                \"hpkp\",\n                                \"languages-hpkp\"\n                            ],\n                            inside: Prism.languages.hpkp\n                        },\n                        {\n                            pattern: headerValueOf(/Strict-Transport-Security/.source),\n                            lookbehind: true,\n                            alias: [\n                                \"hsts\",\n                                \"languages-hsts\"\n                            ],\n                            inside: Prism.languages.hsts\n                        },\n                        {\n                            pattern: headerValueOf(/[^:]+/.source),\n                            lookbehind: true\n                        }\n                    ],\n                    \"header-name\": {\n                        pattern: /^[^:]+/,\n                        alias: \"keyword\"\n                    },\n                    punctuation: /^:/\n                }\n            }\n        };\n        // Create a mapping of Content-Type headers to language definitions\n        var langs = Prism.languages;\n        var httpLanguages = {\n            \"application/javascript\": langs.javascript,\n            \"application/json\": langs.json || langs.javascript,\n            \"application/xml\": langs.xml,\n            \"text/xml\": langs.xml,\n            \"text/html\": langs.html,\n            \"text/css\": langs.css,\n            \"text/plain\": langs.plain\n        };\n        // Declare which types can also be suffixes\n        var suffixTypes = {\n            \"application/json\": true,\n            \"application/xml\": true\n        };\n        /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */ function getSuffixPattern(contentType) {\n            var suffix = contentType.replace(/^[a-z]+\\//, \"\");\n            var suffixPattern = \"\\\\w+/(?:[\\\\w.-]+\\\\+)+\" + suffix + \"(?![+\\\\w.-])\";\n            return \"(?:\" + contentType + \"|\" + suffixPattern + \")\";\n        }\n        // Insert each content type parser that has its associated language\n        // currently loaded.\n        var options;\n        for(var contentType in httpLanguages){\n            if (httpLanguages[contentType]) {\n                options = options || {};\n                var pattern = suffixTypes[contentType] ? getSuffixPattern(contentType) : contentType;\n                options[contentType.replace(/\\//g, \"-\")] = {\n                    pattern: RegExp(\"(\" + /content-type:\\s*/.source + pattern + /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source + \")\" + // This is a little interesting:\n                    // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n                    // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n                    // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n                    // the body does not start with a [\\w-] character (as headers do).\n                    /[^ \\t\\w-][\\s\\S]*/.source, \"i\"),\n                    lookbehind: true,\n                    inside: httpLanguages[contentType]\n                };\n            }\n        }\n        if (options) {\n            Prism.languages.insertBefore(\"http\", \"header\", options);\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/http.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ichigojam.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ichigojam.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ichigojam)\n/* harmony export */ });\n// @ts-nocheck\nichigojam.displayName = \"ichigojam\";\nichigojam.aliases = [];\n/** @type {import('../core.js').Syntax} */ function ichigojam(Prism) {\n    // according to the offical reference (EN)\n    // https://ichigojam.net/IchigoJam-en.html\n    Prism.languages.ichigojam = {\n        comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n        string: {\n            pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n            greedy: true\n        },\n        number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n        keyword: /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n        function: /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n        label: /(?:\\B@\\S+)/,\n        operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n        punctuation: /[\\[,;:()\\]]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pY2hpZ29qYW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSztJQUNyQywwQ0FBMEM7SUFDMUMsMENBQTBDO0lBQzFDQSxNQUFNQyxTQUFTLENBQUNKLFNBQVMsR0FBRztRQUMxQkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7UUFDUkMsU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLE9BQU87UUFDUEMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pY2hpZ29qYW0uanM/MjA2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaWNoaWdvamFtLmRpc3BsYXlOYW1lID0gJ2ljaGlnb2phbSdcbmljaGlnb2phbS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpY2hpZ29qYW0oUHJpc20pIHtcbiAgLy8gYWNjb3JkaW5nIHRvIHRoZSBvZmZpY2FsIHJlZmVyZW5jZSAoRU4pXG4gIC8vIGh0dHBzOi8vaWNoaWdvamFtLm5ldC9JY2hpZ29KYW0tZW4uaHRtbFxuICBQcmlzbS5sYW5ndWFnZXMuaWNoaWdvamFtID0ge1xuICAgIGNvbW1lbnQ6IC8oPzpcXEInfFJFTSkoPzpbXlxcblxccl0qKS9pLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XCJcInxbISMkJSYnKCkqLFxcLzo7PD0+P15cXHcgK1xcLS5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjogL1xcQiNbMC05QS1GXSt8XFxCYFswMV0rfCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpFWystXT9cXGQrKT8vaSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkJFRVB8QlBTfENBU0V8Q0xFQVJ8Q0xLfENMT3xDTFB8Q0xTfENMVHxDTFZ8Q09OVHxDT1BZfEVMU0V8RU5EfEZJTEV8RklMRVN8Rk9SfEdPU1VCfEdPVE98R1NCfElGfElOUFVUfEtCRHxMRUR8TEVUfExJU1R8TE9BRHxMT0NBVEV8TFJVTnxORVd8TkVYVHxPVVR8UExBWXxQT0tFfFBSSU5UfFBXTXxSRU18UkVOVU18UkVTRVR8UkVUVVJOfFJJR0hUfFJUTnxSVU58U0FWRXxTQ1JPTEx8U0xFRVB8U1JORHxTVEVQfFNUT1B8U1VCfFRFTVBPfFRIRU58VE98VUFSVHxWSURFT3xXQUlUKSg/OlxcJHxcXGIpL2ksXG4gICAgZnVuY3Rpb246XG4gICAgICAvXFxiKD86QUJTfEFOQXxBU0N8QklOfEJUTnxERUN8RU5EfEZSRUV8SEVMUHxIRVh8STJDUnxJMkNXfElOfElOS0VZfExFTnxMSU5FfFBFRUt8Uk5EfFNDUnxTT1VORHxTVFJ8VElDS3xVU1J8VkVSfFZQRUVLfFpFUikoPzpcXCR8XFxiKS9pLFxuICAgIGxhYmVsOiAvKD86XFxCQFxcUyspLyxcbiAgICBvcGVyYXRvcjogLzxbPT5dP3w+PT98XFx8XFx8fCYmfFsrXFwtKlxcLz18Jl5+IV18XFxiKD86QU5EfE5PVHxPUilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFssOzooKVxcXV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJpY2hpZ29qYW0iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibnVtYmVyIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibGFiZWwiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ichigojam.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icon.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icon.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ icon)\n/* harmony export */ });\n// @ts-nocheck\nicon.displayName = \"icon\";\nicon.aliases = [];\n/** @type {import('../core.js').Syntax} */ function icon(Prism) {\n    Prism.languages.icon = {\n        comment: /#.*/,\n        string: {\n            pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n            greedy: true\n        },\n        number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n        \"builtin-keyword\": {\n            pattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n            alias: \"variable\"\n        },\n        directive: {\n            pattern: /\\$\\w+/,\n            alias: \"builtin\"\n        },\n        keyword: /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n        function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n        operator: /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n        punctuation: /[\\[\\](){},;]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pY29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtRQUNSLG1CQUFtQjtZQUNqQkYsU0FDRTtZQUNGRyxPQUFPO1FBQ1Q7UUFDQUMsV0FBVztZQUNUSixTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBRSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pY29uLmpzPzVlOGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmljb24uZGlzcGxheU5hbWUgPSAnaWNvbidcbmljb24uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaWNvbihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaWNvbiA9IHtcbiAgICBjb21tZW50OiAvIy4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86KD8hXFwxKVteXFxcXFxcclxcbl9dfFxcXFwufF8oPyFcXDEpKD86XFxyXFxufFtcXHNcXFNdKSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgbnVtYmVyOiAvXFxiKD86XFxkK3JbYS16XFxkXSt8XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspPylcXGJ8XFwuXFxkK1xcYi9pLFxuICAgICdidWlsdGluLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvJig/OmFsbG9jYXRlZHxhc2NpaXxjbG9ja3xjb2xsZWN0aW9uc3xjc2V0fGN1cnJlbnR8ZGF0ZXxkYXRlbGluZXxkaWdpdHN8ZHVtcHxlfGVycm9yKD86bnVtYmVyfHRleHR8dmFsdWUpP3xlcnJvdXR8ZmFpbHxmZWF0dXJlc3xmaWxlfGhvc3R8aW5wdXR8bGNhc2V8bGV0dGVyc3xsZXZlbHxsaW5lfG1haW58bnVsbHxvdXRwdXR8cGhpfHBpfHBvc3xwcm9nbmFtZXxyYW5kb218cmVnaW9uc3xzb3VyY2V8c3RvcmFnZXxzdWJqZWN0fHRpbWV8dHJhY2V8dWNhc2V8dmVyc2lvbilcXGIvLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjogL1xcJFxcdysvLFxuICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpicmVha3xieXxjYXNlfGNyZWF0ZXxkZWZhdWx0fGRvfGVsc2V8ZW5kfGV2ZXJ5fGZhaWx8Z2xvYmFsfGlmfGluaXRpYWx8aW52b2NhYmxlfGxpbmt8bG9jYWx8bmV4dHxub3R8b2Z8cHJvY2VkdXJlfHJlY29yZHxyZXBlYXR8cmV0dXJufHN0YXRpY3xzdXNwZW5kfHRoZW58dG98dW50aWx8d2hpbGUpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYig/IVxcZClcXHcrKD89XFxzKlsoe118XFxzKiFcXHMqXFxbKS8sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWystXTooPyE9KXwoPzpbXFwvP0BeJSZdfFxcK1xcKz98LS0/fD09Pz0/fH49PT89P3xcXCpcXCo/fFxcfFxcfFxcfD98PCg/Oi0+P3w8Pz0/KXw+Pj89PykoPzo6PSk/fDooPzo9Oj8pP3xbIS5cXFxcfH5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF0oKXt9LDtdL1xuICB9XG59XG4iXSwibmFtZXMiOlsiaWNvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJudW1iZXIiLCJhbGlhcyIsImRpcmVjdGl2ZSIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icon.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icu-message-format.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icu-message-format.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ icuMessageFormat)\n/* harmony export */ });\n// @ts-nocheck\nicuMessageFormat.displayName = \"icu-message-format\";\nicuMessageFormat.aliases = [];\n/** @type {import('../core.js').Syntax} */ function icuMessageFormat(Prism) {\n    // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n    // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n    ;\n    (function(Prism) {\n        /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */ function nested(source, level) {\n            if (level <= 0) {\n                return /[]/.source;\n            } else {\n                return source.replace(/<SELF>/g, function() {\n                    return nested(source, level - 1);\n                });\n            }\n        }\n        var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/;\n        var escape = {\n            pattern: /''/,\n            greedy: true,\n            alias: \"operator\"\n        };\n        var string = {\n            pattern: stringPattern,\n            greedy: true,\n            inside: {\n                escape: escape\n            }\n        };\n        var argumentSource = nested(/\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(/<STR>/g, function() {\n            return stringPattern.source;\n        }), 8);\n        var nestedMessage = {\n            pattern: RegExp(argumentSource),\n            inside: {\n                message: {\n                    pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                \"message-delimiter\": {\n                    pattern: /./,\n                    alias: \"punctuation\"\n                }\n            }\n        };\n        Prism.languages[\"icu-message-format\"] = {\n            argument: {\n                pattern: RegExp(argumentSource),\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n                        lookbehind: true,\n                        inside: {\n                            \"argument-name\": {\n                                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                                lookbehind: true\n                            },\n                            \"choice-style\": {\n                                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                                lookbehind: true,\n                                inside: {\n                                    punctuation: /\\|/,\n                                    range: {\n                                        pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                                        lookbehind: true,\n                                        inside: {\n                                            operator: /[<#\\u2264]/,\n                                            number: /\\S+/\n                                        }\n                                    },\n                                    rest: null // see below\n                                }\n                            },\n                            \"plural-style\": {\n                                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                                pattern: /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                                lookbehind: true,\n                                inside: {\n                                    offset: /^offset:\\s*\\d+/,\n                                    \"nested-message\": nestedMessage,\n                                    selector: {\n                                        pattern: /=\\d+|[^{}:=,\\s]+/,\n                                        inside: {\n                                            keyword: /^(?:few|many|one|other|two|zero)$/\n                                        }\n                                    }\n                                }\n                            },\n                            \"select-style\": {\n                                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                                lookbehind: true,\n                                inside: {\n                                    \"nested-message\": nestedMessage,\n                                    selector: {\n                                        pattern: /[^{}:=,\\s]+/,\n                                        inside: {\n                                            keyword: /^other$/\n                                        }\n                                    }\n                                }\n                            },\n                            keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n                            \"arg-type\": {\n                                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                                alias: \"keyword\"\n                            },\n                            \"arg-skeleton\": {\n                                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                                lookbehind: true\n                            },\n                            \"arg-style\": {\n                                pattern: /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                                lookbehind: true\n                            },\n                            \"arg-style-text\": {\n                                pattern: RegExp(/(^\\s*,\\s*(?=\\S))/.source + nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) + \"$\"),\n                                lookbehind: true,\n                                alias: \"string\"\n                            },\n                            punctuation: /,/\n                        }\n                    },\n                    \"argument-delimiter\": {\n                        pattern: /./,\n                        alias: \"operator\"\n                    }\n                }\n            },\n            escape: escape,\n            string: string\n        };\n        nestedMessage.inside.message.inside = Prism.languages[\"icu-message-format\"];\n        Prism.languages[\"icu-message-format\"].argument.inside.content.inside[\"choice-style\"].inside.rest = Prism.languages[\"icu-message-format\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icu-message-format.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/idris.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/idris.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ idris)\n/* harmony export */ });\n/* harmony import */ var _haskell_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./haskell.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haskell.js\");\n// @ts-nocheck\n\nidris.displayName = \"idris\";\nidris.aliases = [\n    \"idr\"\n];\n/** @type {import('../core.js').Syntax} */ function idris(Prism) {\n    Prism.register(_haskell_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.idris = Prism.languages.extend(\"haskell\", {\n        comment: {\n            pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n        },\n        keyword: /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n        builtin: undefined\n    });\n    Prism.languages.insertBefore(\"idris\", \"keyword\", {\n        \"import-statement\": {\n            pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n            lookbehind: true,\n            inside: {\n                punctuation: /\\./\n            }\n        }\n    });\n    Prism.languages.idr = Prism.languages.idris;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pZHJpcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDNkI7QUFDM0NDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHO0lBQUM7Q0FBTTtBQUV2Qix3Q0FBd0MsR0FDekIsU0FBU0YsTUFBTUcsS0FBSztJQUNqQ0EsTUFBTUMsUUFBUSxDQUFDTCxtREFBZ0JBO0lBQy9CSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsV0FBVztRQUN4REMsU0FBUztZQUNQQyxTQUFTO1FBQ1g7UUFDQUMsU0FDRTtRQUNGQyxTQUFTQztJQUNYO0lBQ0FSLE1BQU1FLFNBQVMsQ0FBQ08sWUFBWSxDQUFDLFNBQVMsV0FBVztRQUMvQyxvQkFBb0I7WUFDbEJKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FaLE1BQU1FLFNBQVMsQ0FBQ1csR0FBRyxHQUFHYixNQUFNRSxTQUFTLENBQUNMLEtBQUs7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWRyaXMuanM/NDg5OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3Rvckhhc2tlbGwgZnJvbSAnLi9oYXNrZWxsLmpzJ1xuaWRyaXMuZGlzcGxheU5hbWUgPSAnaWRyaXMnXG5pZHJpcy5hbGlhc2VzID0gWydpZHInXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlkcmlzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvckhhc2tlbGwpXG4gIFByaXNtLmxhbmd1YWdlcy5pZHJpcyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2hhc2tlbGwnLCB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyg/Oig/Oi0tfFxcfFxcfFxcfCkuKiR8XFx7LVtcXHNcXFNdKj8tXFx9KS9tXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OlR5cGV8Y2FzZXxjbGFzc3xjb2RhdGF8Y29uc3RydWN0b3J8Y29yZWNvcmR8ZGF0YXxkb3xkc2x8ZWxzZXxleHBvcnR8aWZ8aW1wbGVtZW50YXRpb258aW1wbGljaXR8aW1wb3J0fGltcG9zc2libGV8aW58aW5maXh8aW5maXhsfGluZml4cnxpbnN0YW5jZXxpbnRlcmZhY2V8bGV0fG1vZHVsZXxtdXR1YWx8bmFtZXNwYWNlfG9mfHBhcmFtZXRlcnN8cGFydGlhbHxwb3N0dWxhdGV8cHJpdmF0ZXxwcm9vZnxwdWJsaWN8cXVvdGVHb2FsfHJlY29yZHxyZXdyaXRlfHN5bnRheHx0aGVufHRvdGFsfHVzaW5nfHdoZXJlfHdpdGgpXFxiLyxcbiAgICBidWlsdGluOiB1bmRlZmluZWRcbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnaWRyaXMnLCAna2V5d29yZCcsIHtcbiAgICAnaW1wb3J0LXN0YXRlbWVudCc6IHtcbiAgICAgIHBhdHRlcm46IC8oXlxccyppbXBvcnRcXHMrKSg/OltBLVpdW1xcdyddKikoPzpcXC5bQS1aXVtcXHcnXSopKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pZHIgPSBQcmlzbS5sYW5ndWFnZXMuaWRyaXNcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JIYXNrZWxsIiwiaWRyaXMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJrZXl3b3JkIiwiYnVpbHRpbiIsInVuZGVmaW5lZCIsImluc2VydEJlZm9yZSIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImlkciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/idris.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/iecst.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/iecst.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ iecst)\n/* harmony export */ });\n// @ts-nocheck\niecst.displayName = \"iecst\";\niecst.aliases = [];\n/** @type {import('../core.js').Syntax} */ function iecst(Prism) {\n    Prism.languages.iecst = {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: [\n            /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n            /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n        ],\n        \"class-name\": /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n        address: {\n            pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n            alias: \"symbol\"\n        },\n        number: /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n        operator: /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        punctuation: /[()[\\].,;]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pZWNzdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQO2dCQUNFQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBRSxTQUFTO1lBQ1A7WUFDQTtTQUNEO1FBQ0QsY0FDRTtRQUNGQyxTQUFTO1lBQ1BMLFNBQVM7WUFDVE0sT0FBTztRQUNUO1FBQ0FDLFFBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaWVjc3QuanM/NzdlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaWVjc3QuZGlzcGxheU5hbWUgPSAnaWVjc3QnXG5pZWNzdC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpZWNzdChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaWVjc3QgPSB7XG4gICAgY29tbWVudDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCl8XFwoXFwqW1xcc1xcU10qPyg/OlxcKlxcKXwkKXxcXHtbXFxzXFxTXSo/KD86XFx9fCQpKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXDpdKVxcL1xcLy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIC9cXGIoPzpFTkRfKT8oPzpQUk9HUkFNfENPTkZJR1VSQVRJT058SU5URVJGQUNFfEZVTkNUSU9OX0JMT0NLfEZVTkNUSU9OfEFDVElPTnxUUkFOU0lUSU9OfFRZUEV8U1RSVUNUfCg/OklOSVRJQUxfKT9TVEVQfE5BTUVTUEFDRXxMSUJSQVJZfENIQU5ORUx8Rk9MREVSfFJFU09VUkNFfFZBUl8oPzpBQ0NFU1N8Q09ORklHfEVYVEVSTkFMfEdMT0JBTHxJTlBVVHxJTl9PVVR8T1VUUFVUfFRFTVApfFZBUnxNRVRIT0R8UFJPUEVSVFkpXFxiL2ksXG4gICAgICAvXFxiKD86QVR8Qll8KD86RU5EXyk/KD86Q0FTRXxGT1J8SUZ8UkVQRUFUfFdISUxFKXxDT05TVEFOVHxDT05USU5VRXxET3xFTFNFfEVMU0lGfEVYSVR8RVhURU5EU3xGUk9NfEdFVHxHT1RPfElNUExFTUVOVFN8Sk1QfE5PTl9SRVRBSU58T0Z8UFJJVkFURXxQUk9URUNURUR8UFVCTElDfFJFVEFJTnxSRVRVUk58U0VUfFRBU0t8VEhFTnxUT3xVTlRJTHxVU0lOR3xXSVRIfF9fQ0FUQ0h8X19FTkRUUll8X19GSU5BTExZfF9fVFJZKVxcYi9cbiAgICBdLFxuICAgICdjbGFzcy1uYW1lJzpcbiAgICAgIC9cXGIoPzpBTll8QVJSQVl8Qk9PTHxCWVRFfFU/KD86RHxMfFMpP0lOVHwoPzpEfEwpP1dPUkR8REFURSg/Ol9BTkRfVElNRSk/fERUfEw/UkVBTHxQT0lOVEVSfFNUUklOR3xUSU1FKD86X09GX0RBWSk/fFRPRClcXGIvLFxuICAgIGFkZHJlc3M6IHtcbiAgICAgIHBhdHRlcm46IC8lW0lRTV1bWEJXRExdW1xcZC5dKnwlW0lRXVtcXGQuXSovLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgfSxcbiAgICBudW1iZXI6XG4gICAgICAvXFxiKD86MTYjW1xcZGEtZl0rfDIjWzAxX10rfDB4W1xcZGEtZl0rKVxcYnxcXGIoPzpEfERUfFR8VE9EKSNbXFxkX3NobWQ6XSp8XFxiW0EtWl0qI1tcXGQuLF9dKnwoPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/L2ksXG4gICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfE5VTEx8VFJVRSlcXGIvLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1M/Uj86Pz0+P3wmJj98XFwqXFwqP3w8Wz0+XT98Pj0/fFstOl4vKyNdfFxcYig/OkFORHxFUXxFWFBUfEdFfEdUfExFfExUfE1PRHxORXxOT1R8T1J8WE9SKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvaSxcbiAgICBwdW5jdHVhdGlvbjogL1soKVtcXF0uLDtdL1xuICB9XG59XG4iXSwibmFtZXMiOlsiaWVjc3QiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsImtleXdvcmQiLCJhZGRyZXNzIiwiYWxpYXMiLCJudW1iZXIiLCJib29sZWFuIiwib3BlcmF0b3IiLCJmdW5jdGlvbiIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/iecst.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ignore.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ignore.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ignore)\n/* harmony export */ });\n// @ts-nocheck\nignore.displayName = \"ignore\";\nignore.aliases = [\n    \"gitignore\",\n    \"hgignore\",\n    \"npmignore\"\n];\n/** @type {import('../core.js').Syntax} */ function ignore(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.ignore = {\n            // https://git-scm.com/docs/gitignore\n            comment: /^#.*/m,\n            entry: {\n                pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n                alias: \"string\",\n                inside: {\n                    operator: /^!|\\*\\*?|\\?/,\n                    regex: {\n                        pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n                        lookbehind: true\n                    },\n                    punctuation: /\\//\n                }\n            }\n        };\n        Prism.languages.gitignore = Prism.languages.ignore;\n        Prism.languages.hgignore = Prism.languages.ignore;\n        Prism.languages.npmignore = Prism.languages.ignore;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pZ25vcmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztJQUFhO0lBQVk7Q0FBWTtBQUV2RCx3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSzs7SUFDaEMsVUFBVUEsS0FBSztRQUNmQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztZQUN2QixxQ0FBcUM7WUFDckNLLFNBQVM7WUFDVEMsT0FBTztnQkFDTEMsU0FBUztnQkFDVEMsT0FBTztnQkFDUEMsUUFBUTtvQkFDTkMsVUFBVTtvQkFDVkMsT0FBTzt3QkFDTEosU0FBUzt3QkFDVEssWUFBWTtvQkFDZDtvQkFDQUMsYUFBYTtnQkFDZjtZQUNGO1FBQ0Y7UUFDQVYsTUFBTUMsU0FBUyxDQUFDVSxTQUFTLEdBQUdYLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtRQUNsREcsTUFBTUMsU0FBUyxDQUFDVyxRQUFRLEdBQUdaLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtRQUNqREcsTUFBTUMsU0FBUyxDQUFDWSxTQUFTLEdBQUdiLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtJQUNwRCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2lnbm9yZS5qcz9mZWU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pZ25vcmUuZGlzcGxheU5hbWUgPSAnaWdub3JlJ1xuaWdub3JlLmFsaWFzZXMgPSBbJ2dpdGlnbm9yZScsICdoZ2lnbm9yZScsICducG1pZ25vcmUnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlnbm9yZShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5pZ25vcmUgPSB7XG4gICAgICAvLyBodHRwczovL2dpdC1zY20uY29tL2RvY3MvZ2l0aWdub3JlXG4gICAgICBjb21tZW50OiAvXiMuKi9tLFxuICAgICAgZW50cnk6IHtcbiAgICAgICAgcGF0dGVybjogL1xcUyg/Oi4qKD86KD86XFxcXCApfFxcUykpPy8sXG4gICAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgb3BlcmF0b3I6IC9eIXxcXCpcXCo/fFxcPy8sXG4gICAgICAgICAgcmVnZXg6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcW1teXFxbXFxdXSpcXF0vLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXC8vXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmdpdGlnbm9yZSA9IFByaXNtLmxhbmd1YWdlcy5pZ25vcmVcbiAgICBQcmlzbS5sYW5ndWFnZXMuaGdpZ25vcmUgPSBQcmlzbS5sYW5ndWFnZXMuaWdub3JlXG4gICAgUHJpc20ubGFuZ3VhZ2VzLm5wbWlnbm9yZSA9IFByaXNtLmxhbmd1YWdlcy5pZ25vcmVcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsiaWdub3JlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiZW50cnkiLCJwYXR0ZXJuIiwiYWxpYXMiLCJpbnNpZGUiLCJvcGVyYXRvciIsInJlZ2V4IiwibG9va2JlaGluZCIsInB1bmN0dWF0aW9uIiwiZ2l0aWdub3JlIiwiaGdpZ25vcmUiLCJucG1pZ25vcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ignore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/inform7.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/inform7.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ inform7)\n/* harmony export */ });\n// @ts-nocheck\ninform7.displayName = \"inform7\";\ninform7.aliases = [];\n/** @type {import('../core.js').Syntax} */ function inform7(Prism) {\n    Prism.languages.inform7 = {\n        string: {\n            pattern: /\"[^\"]*\"/,\n            inside: {\n                substitution: {\n                    pattern: /\\[[^\\[\\]]+\\]/,\n                    inside: {\n                        delimiter: {\n                            pattern: /\\[|\\]/,\n                            alias: \"punctuation\"\n                        }\n                    }\n                }\n            }\n        },\n        comment: {\n            pattern: /\\[[^\\[\\]]+\\]/,\n            greedy: true\n        },\n        title: {\n            pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n            alias: \"important\"\n        },\n        number: {\n            pattern: /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n            lookbehind: true\n        },\n        verb: {\n            pattern: /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"operator\"\n        },\n        keyword: {\n            pattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n            lookbehind: true\n        },\n        property: {\n            pattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"symbol\"\n        },\n        position: {\n            pattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        type: {\n            pattern: /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        punctuation: /[.,:;(){}]/\n    };\n    Prism.languages.inform7[\"string\"].inside[\"substitution\"].inside.rest = Prism.languages.inform7;\n    // We don't want the remaining text in the substitution to be highlighted as the string.\n    Prism.languages.inform7[\"string\"].inside[\"substitution\"].inside.rest.text = {\n        pattern: /\\S(?:\\s*\\S)*/,\n        alias: \"comment\"\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pbmZvcm03LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsY0FBYztvQkFDWkYsU0FBUztvQkFDVEMsUUFBUTt3QkFDTkUsV0FBVzs0QkFDVEgsU0FBUzs0QkFDVEksT0FBTzt3QkFDVDtvQkFFRjtnQkFDRjtZQUNGO1FBQ0Y7UUFFQUMsU0FBUztZQUNQTCxTQUFTO1lBQ1RNLFFBQVE7UUFDVjtRQUNBQyxPQUFPO1lBQ0xQLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0FJLFFBQVE7WUFDTlIsU0FDRTtZQUNGUyxZQUFZO1FBQ2Q7UUFDQUMsTUFBTTtZQUNKVixTQUNFO1lBQ0ZTLFlBQVk7WUFDWkwsT0FBTztRQUNUO1FBQ0FPLFNBQVM7WUFDUFgsU0FDRTtZQUNGUyxZQUFZO1FBQ2Q7UUFDQUcsVUFBVTtZQUNSWixTQUNFO1lBQ0ZTLFlBQVk7WUFDWkwsT0FBTztRQUNUO1FBQ0FTLFVBQVU7WUFDUmIsU0FDRTtZQUNGUyxZQUFZO1lBQ1pMLE9BQU87UUFDVDtRQUNBVSxNQUFNO1lBQ0pkLFNBQ0U7WUFDRlMsWUFBWTtZQUNaTCxPQUFPO1FBQ1Q7UUFDQVcsYUFBYTtJQUNmO0lBQ0FsQixNQUFNQyxTQUFTLENBQUNKLE9BQU8sQ0FBQyxTQUFTLENBQUNPLE1BQU0sQ0FBQyxlQUFlLENBQUNBLE1BQU0sQ0FBQ2UsSUFBSSxHQUNsRW5CLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTztJQUN6Qix3RkFBd0Y7SUFDeEZHLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxDQUFDLFNBQVMsQ0FBQ08sTUFBTSxDQUFDLGVBQWUsQ0FBQ0EsTUFBTSxDQUFDZSxJQUFJLENBQUNDLElBQUksR0FBRztRQUMxRWpCLFNBQVM7UUFDVEksT0FBTztJQUNUO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaW5mb3JtNy5qcz9mMzJiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbmZvcm03LmRpc3BsYXlOYW1lID0gJ2luZm9ybTcnXG5pbmZvcm03LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluZm9ybTcoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmluZm9ybTcgPSB7XG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJbXlwiXSpcIi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgc3Vic3RpdHV0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcW1teXFxbXFxdXStcXF0vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cXFt8XFxdLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFNlZSByZXN0IGJlbG93XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXFtbXlxcW1xcXV0rXFxdLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdGl0bGU6IHtcbiAgICAgIHBhdHRlcm46IC9eWyBcXHRdKig/OmJvb2t8Y2hhcHRlcnxwYXJ0KD8hIG9mKXxzZWN0aW9ufHRhYmxlfHZvbHVtZSlcXGIuKy9pbSxcbiAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgIH0sXG4gICAgbnVtYmVyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W14tXSkoPzpcXGJcXGQrKD86XFwuXFxkKyk/KD86XFxeXFxkKyk/KD86KD8hXFxkKVxcdyspP3xcXGIoPzplaWdodHxlbGV2ZW58Zml2ZXxmb3VyfG5pbmV8b25lfHNldmVufHNpeHx0ZW58dGhyZWV8dHdlbHZlfHR3bykpXFxiKD8hLSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHZlcmI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi1dKVxcYig/OmFuc3dlcmluZ3xhcHBseWluZyB0b3xhcmV8YXNraW5nfGF0dGFja2luZ3xiZSg/OmluZyk/fGJ1cm5pbmd8YnV5aW5nfGNhbGxlZHxjYXJyaWVzfGNhcnJ5KD8hIG91dCl8Y2Fycnlpbmd8Y2xpbWJpbmd8Y2xvc2luZ3xjb25jZWFsKD86aW5nfHMpP3xjb25zdWx0aW5nfGNvbnRhaW4oPzppbmd8cyk/fGN1dHRpbmd8ZHJpbmtpbmd8ZHJvcHBpbmd8ZWF0aW5nfGVuY2xvcyg/OmVzP3xpbmcpfGVudGVyaW5nfGV4YW1pbmluZ3xleGl0aW5nfGdldHRpbmd8Z2l2aW5nfGdvaW5nfGhhKD86c3x2ZXx2aW5nKXxob2xkKD86aW5nfHMpP3xpbXBsKD86aWVzfHkpfGluY29ycG9yYXQoPzplcz98aW5nKXxpbnNlcnRpbmd8aXN8anVtcGluZ3xraXNzaW5nfGxpc3RlbmluZ3xsb2NraW5nfGxvb2tpbmd8bWVhbig/OmluZ3xzKT98b3BlbmluZ3xwcm92aWQoPzplcz98aW5nKXxwdWxsaW5nfHB1c2hpbmd8cHV0dGluZ3xyZWxhdCg/OmVzP3xpbmcpfHJlbW92aW5nfHNlYXJjaGluZ3xzZWUoPzppbmd8cyk/fHNldHRpbmd8c2hvd2luZ3xzaW5naW5nfHNsZWVwaW5nfHNtZWxsaW5nfHNxdWVlemluZ3xzdXBwb3J0KD86aW5nfHMpP3xzd2VhcmluZ3xzd2l0Y2hpbmd8dGFraW5nfHRhc3Rpbmd8dGVsbGluZ3x0aGlua2luZ3x0aHJvd2luZ3x0b3VjaGluZ3x0dXJuaW5nfHR5aW5nfHVubG9jayg/OmluZ3xzKT98dmFyKD86aWVzfHl8eWluZyl8d2FpdGluZ3x3YWtpbmd8d2F2aW5nfHdlYXIoPzppbmd8cyk/KVxcYig/IS0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgIGtleXdvcmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi1dKVxcYig/OmFmdGVyfGJlZm9yZXxjYXJyeSBvdXR8Y2hlY2t8Y29udGludWUgdGhlIGFjdGlvbnxkZWZpbml0aW9uKD89ICo6KXxkbyBub3RoaW5nfGVsc2V8ZW5kICg/OmlmfHRoZSBzdG9yeXx1bmxlc3MpfGV2ZXJ5IHR1cm58aWZ8aW5jbHVkZXxpbnN0ZWFkKD86IG9mKT98bGV0fG1vdmV8bm98bm93fG90aGVyd2lzZXxyZXBlYXR8cmVwb3J0fHJlc3VtZSB0aGUgc3Rvcnl8cnVsZSBmb3J8cnVubmluZyB0aHJvdWdofHNheSg/OmluZyk/fHN0b3AgdGhlIGFjdGlvbnx0ZXN0fHRyeSg/OmluZyk/fHVuZGVyc3RhbmR8dW5sZXNzfHVzZXx3aGVufHdoaWxlfHllcylcXGIoPyEtKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgcHJvcGVydHk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi1dKVxcYig/OmFkamFjZW50KD8hIHRvKXxjYXJyaWVkfGNsb3NlZHxjb25jZWFsZWR8Y29udGFpbmVkfGRhcmt8ZGVzY3JpYmVkfGVkaWJsZXxlbXB0eXxlbmNsb3NlZHxlbnRlcmFibGV8ZXZlbnxmZW1hbGV8Zml4ZWQgaW4gcGxhY2V8ZnVsbHxoYW5kbGVkfGhlbGR8aW1wcm9wZXItbmFtZWR8aW5jb3Jwb3JhdGVkfGluZWRpYmxlfGludmlzaWJsZXxsaWdodGVkfGxpdHxsb2NrKD86YWJsZXxlZCl8bWFsZXxtYXJrZWQgZm9yIGxpc3Rpbmd8bWVudGlvbmVkfG5lZ2F0aXZlfG5ldXRlcnxub24tKD86ZW1wdHl8ZnVsbHxyZWN1cnJpbmcpfG9kZHxvcGFxdWV8b3Blbig/OmFibGUpP3xwbHVyYWwtbmFtZWR8cG9ydGFibGV8cG9zaXRpdmV8cHJpdmF0ZWx5LW5hbWVkfHByb3Blci1uYW1lZHxwcm92aWRlZHxwdWJsaWNhbGx5LW5hbWVkfHB1c2hhYmxlIGJldHdlZW4gcm9vbXN8cmVjdXJyaW5nfHJlbGF0ZWR8cnViYmluZ3xzY2VuZXJ5fHNlZW58c2luZ3VsYXItbmFtZWR8c3VwcG9ydGVkfHN3aW5naW5nfHN3aXRjaCg/OmFibGV8ZWQoPzogb2ZmfCBvbik/KXx0b3VjaCg/OmFibGV8ZWQpfHRyYW5zcGFyZW50fHVuY29uY2VhbGVkfHVuZGVzY3JpYmVkfHVubGl0fHVubG9ja2VkfHVubWFya2VkIGZvciBsaXN0aW5nfHVubWVudGlvbmVkfHVub3BlbmFibGV8dW50b3VjaGFibGV8dW52aXNpdGVkfHZhcmlhYmxlfHZpc2libGV8dmlzaXRlZHx3ZWFyYWJsZXx3b3JuKVxcYig/IS0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgfSxcbiAgICBwb3NpdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLV0pXFxiKD86YWJvdmV8YWRqYWNlbnQgdG98YmFjayBzaWRlIG9mfGJlbG93fGJldHdlZW58ZG93bnxlYXN0fGV2ZXJ5d2hlcmV8ZnJvbnQgc2lkZXxoZXJlfGlufGluc2lkZSg/OiBmcm9tKT98bm9ydGgoPzplYXN0fHdlc3QpP3xub3doZXJlfG9uKD86IHRvcCBvZik/fG90aGVyIHNpZGV8b3V0c2lkZSg/OiBmcm9tKT98cGFydHM/IG9mfHJlZ2lvbmFsbHkgaW58c291dGgoPzplYXN0fHdlc3QpP3x0aHJvdWdofHVwfHdlc3R8d2l0aGluKVxcYig/IS0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgdHlwZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLV0pXFxiKD86YWN0aW9ucz98YWN0aXZpdCg/Omllc3x5KXxhY3RvcnM/fGFuaW1hbHM/fGJhY2tkcm9wcz98Y29udGFpbmVycz98ZGV2aWNlcz98ZGlyZWN0aW9ucz98ZG9vcnM/fGhvbGRlcnM/fGtpbmRzP3xsaXN0cz98bVthZV1ufG5vYm9keXxub3RoaW5nfG5vdW5zP3xudW1iZXJzP3xvYmplY3RzP3xwZW9wbGV8cGVyc29ucz98cGxheWVyKD86J3MgaG9sZGFsbCk/fHJlZ2lvbnM/fHJlbGF0aW9ucz98cm9vbXM/fHJ1bGUoPzpib29rKT9zP3xzY2VuZXM/fHNvbWVvbmV8c29tZXRoaW5nfHN1cHBvcnRlcnM/fHRhYmxlcz98dGV4dHM/fHRoaW5ncz98dGltZXx2ZWhpY2xlcz98d29tW2FlXW4pXFxiKD8hLSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bLiw6Oygpe31dL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5pbmZvcm03WydzdHJpbmcnXS5pbnNpZGVbJ3N1YnN0aXR1dGlvbiddLmluc2lkZS5yZXN0ID1cbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5mb3JtN1xuICAvLyBXZSBkb24ndCB3YW50IHRoZSByZW1haW5pbmcgdGV4dCBpbiB0aGUgc3Vic3RpdHV0aW9uIHRvIGJlIGhpZ2hsaWdodGVkIGFzIHRoZSBzdHJpbmcuXG4gIFByaXNtLmxhbmd1YWdlcy5pbmZvcm03WydzdHJpbmcnXS5pbnNpZGVbJ3N1YnN0aXR1dGlvbiddLmluc2lkZS5yZXN0LnRleHQgPSB7XG4gICAgcGF0dGVybjogL1xcUyg/OlxccypcXFMpKi8sXG4gICAgYWxpYXM6ICdjb21tZW50J1xuICB9XG59XG4iXSwibmFtZXMiOlsiaW5mb3JtNyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic3RyaW5nIiwicGF0dGVybiIsImluc2lkZSIsInN1YnN0aXR1dGlvbiIsImRlbGltaXRlciIsImFsaWFzIiwiY29tbWVudCIsImdyZWVkeSIsInRpdGxlIiwibnVtYmVyIiwibG9va2JlaGluZCIsInZlcmIiLCJrZXl3b3JkIiwicHJvcGVydHkiLCJwb3NpdGlvbiIsInR5cGUiLCJwdW5jdHVhdGlvbiIsInJlc3QiLCJ0ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/inform7.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ini.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ini.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ini)\n/* harmony export */ });\n// @ts-nocheck\nini.displayName = \"ini\";\nini.aliases = [];\n/** @type {import('../core.js').Syntax} */ function ini(Prism) {\n    Prism.languages.ini = {\n        /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */ comment: {\n            pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n            lookbehind: true\n        },\n        section: {\n            pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n            lookbehind: true,\n            inside: {\n                \"section-name\": {\n                    pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n                    lookbehind: true,\n                    alias: \"selector\"\n                },\n                punctuation: /\\[|\\]/\n            }\n        },\n        key: {\n            pattern: /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        value: {\n            pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n            lookbehind: true,\n            alias: \"attr-value\",\n            inside: {\n                \"inner-value\": {\n                    pattern: /^(\"|').+(?=\\1$)/,\n                    lookbehind: true\n                }\n            }\n        },\n        punctuation: /=/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pbmkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEI7Ozs7S0FJQyxHQUVESyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFNBQVM7WUFDUEYsU0FBUztZQUNUQyxZQUFZO1lBQ1pFLFFBQVE7Z0JBQ04sZ0JBQWdCO29CQUNkSCxTQUFTO29CQUNUQyxZQUFZO29CQUNaRyxPQUFPO2dCQUNUO2dCQUNBQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxLQUFLO1lBQ0hOLFNBQ0U7WUFDRkMsWUFBWTtZQUNaRyxPQUFPO1FBQ1Q7UUFDQUcsT0FBTztZQUNMUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsT0FBTztZQUNQRCxRQUFRO2dCQUNOLGVBQWU7b0JBQ2JILFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7WUFDRjtRQUNGO1FBQ0FJLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2luaS5qcz85MGJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbmkuZGlzcGxheU5hbWUgPSAnaW5pJ1xuaW5pLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaW5pID0ge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb21wb25lbnQgbWltaWNzIHRoZSBiZWhhdmlvciBvZiB0aGUgV2luMzIgQVBJIHBhcnNlci5cbiAgICAgKlxuICAgICAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9QcmlzbUpTL3ByaXNtL2lzc3Vlcy8yNzc1I2lzc3VlY29tbWVudC03ODc0Nzc3MjN9XG4gICAgICovXG5cbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcZlxcdFxcdl0qKVsjO11bXlxcblxccl0qL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBzZWN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcZlxcdFxcdl0qKVxcW1teXFxuXFxyXFxdXSpcXF0/L20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdzZWN0aW9uLW5hbWUnOiB7XG4gICAgICAgICAgcGF0dGVybjogLyheXFxbWyBcXGZcXHRcXHZdKilbXiBcXGZcXHRcXHZcXF1dKyg/OlsgXFxmXFx0XFx2XStbXiBcXGZcXHRcXHZcXF1dKykqLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnc2VsZWN0b3InXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFxbfFxcXS9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheWyBcXGZcXHRcXHZdKilbXiBcXGZcXG5cXHJcXHRcXHY9XSsoPzpbIFxcZlxcdFxcdl0rW14gXFxmXFxuXFxyXFx0XFx2PV0rKSooPz1bIFxcZlxcdFxcdl0qPSkvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICB9LFxuICAgIHZhbHVlOiB7XG4gICAgICBwYXR0ZXJuOiAvKD1bIFxcZlxcdFxcdl0qKVteIFxcZlxcblxcclxcdFxcdl0rKD86WyBcXGZcXHRcXHZdK1teIFxcZlxcblxcclxcdFxcdl0rKSovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnYXR0ci12YWx1ZScsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ2lubmVyLXZhbHVlJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFwifCcpLisoPz1cXDEkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogLz0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJpbmkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInNlY3Rpb24iLCJpbnNpZGUiLCJhbGlhcyIsInB1bmN0dWF0aW9uIiwia2V5IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ini.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/io.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/io.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ io)\n/* harmony export */ });\n// @ts-nocheck\nio.displayName = \"io\";\nio.aliases = [];\n/** @type {import('../core.js').Syntax} */ function io(Prism) {\n    Prism.languages.io = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"triple-quoted-string\": {\n            pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n        builtin: /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n        boolean: /\\b(?:false|nil|true)\\b/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n        operator: /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9pby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxHQUFHQyxXQUFXLEdBQUc7QUFDakJELEdBQUdFLE9BQU8sR0FBRyxFQUFFO0FBRWYsd0NBQXdDLEdBQ3pCLFNBQVNGLEdBQUdHLEtBQUs7SUFDOUJBLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRSxHQUFHO1FBQ25CSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQSx3QkFBd0I7WUFDdEJGLFNBQVM7WUFDVEUsUUFBUTtZQUNSQyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOSixTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBRyxTQUNFO1FBQ0ZDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLFVBQ0U7UUFDRkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvaW8uanM/ZmYzNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW8uZGlzcGxheU5hbWUgPSAnaW8nXG5pby5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuaW8gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKXxcXC9cXC8uKnwjLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICd0cmlwbGUtcXVvdGVkLXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlwiXCIoPzpcXFxcW1xcc1xcU118KD8hXCJcIlwiKVteXFxcXF0pKlwiXCJcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXC58W15cXFxcXFxyXFxuXCJdKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWN0aXZhdGV8YWN0aXZlQ29yb0NvdW50fGFzU3RyaW5nfGJsb2NrfGJyZWFrfGNhbGx8Y2F0Y2h8Y2xvbmV8Y29sbGVjdEdhcmJhZ2V8Y29tcGlsZVN0cmluZ3xjb250aW51ZXxkb3xkb0ZpbGV8ZG9NZXNzYWdlfGRvU3RyaW5nfGVsc2V8ZWxzZWlmfGV4aXR8Zm9yfGZvcmVhY2h8Zm9yd2FyZHxnZXRFbnZpcm9ubWVudFZhcmlhYmxlfGdldFNsb3R8aGFzU2xvdHxpZnxpZkZhbHNlfGlmTmlsfGlmTmlsRXZhbHxpZlRydWV8aXNBY3RpdmV8aXNOaWx8aXNSZXN1bWFibGV8bGlzdHxtZXNzYWdlfG1ldGhvZHxwYXJlbnR8cGFzc3xwYXVzZXxwZXJmb3JtfHBlcmZvcm1XaXRoQXJnTGlzdHxwcmludHxwcmludGxufHByb3RvfHJhaXNlfHJhaXNlUmVzdW1hYmxlfHJlbW92ZVNsb3R8cmVzZW5kfHJlc3VtZXxzY2hlZHVsZXJTbGVlcFNlY29uZHN8c2VsZnxzZW5kZXJ8c2V0U2NoZWR1bGVyU2xlZXBTZWNvbmRzfHNldFNsb3R8c2hhbGxvd0NvcHl8c2xvdE5hbWVzfHN1cGVyfHN5c3RlbXx0aGVufHRoaXNCbG9ja3x0aGlzQ29udGV4dHx0cnl8dHlwZXx1bmlxdWVJZHx1cGRhdGVTbG90fHdhaXR8d2hpbGV8d3JpdGV8eWllbGQpXFxiLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/OkFycmF5fEF1ZGlvRGV2aWNlfEF1ZGlvTWl4ZXJ8QmlnTnVtfEJsb2NrfEJveHxCdWZmZXJ8Q0Z1bmN0aW9ufENHSXxDb2xvcnxDdXJzZXN8REJNfEROU1Jlc29sdmVyfERPQ29ubmVjdGlvbnxET1Byb3h5fERPU2VydmVyfERhdGV8RGlyZWN0b3J5fER1cmF0aW9ufER5bkxpYnxFcnJvcnxFeGNlcHRpb258RkZUfEZpbGV8Rm5tYXRjaHxGb250fEZ1dHVyZXxHTHxHTEV8R0xTY2lzc29yfEdMVXxHTFVDeWxpbmRlcnxHTFVRdWFkcmljfEdMVVNwaGVyZXxHTFVUfEhvc3R8SW1hZ2V8SW1wb3J0ZXJ8TGlua0xpc3R8TGlzdHxMb2JieXxMb2NhbHN8TUQ1fE1QM0RlY29kZXJ8TVAzRW5jb2RlcnxNYXB8TWVzc2FnZXxNb3ZpZXxOb3RpZmljYXRpb258TnVtYmVyfE9iamVjdHxPcGVuR0x8UG9pbnR8UHJvdG9zfFJhbmRvbXxSZWdleHxTR01MfFNHTUxFbGVtZW50fFNHTUxQYXJzZXJ8U1FMaXRlfFNlcXVlbmNlfFNlcnZlcnxTaG93TWVzc2FnZXxTbGVlcHlDYXR8U2xlZXB5Q2F0Q3Vyc29yfFNvY2tldHxTb2NrZXRNYW5hZ2VyfFNvdW5kfFNvdXB8U3RvcmV8U3RyaW5nfFRyZWV8VURQU2VuZGVyfFVQRFJlY2VpdmVyfFVSTHxVc2VyfFdhcm5pbmd8V2Vha0xpbmspXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8bmlsfHRydWUpXFxiLyxcbiAgICBudW1iZXI6IC9cXGIweFtcXGRhLWZdK1xcYnwoPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZS0/XFxkKyk/L2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWz0hKi8lK1xcLV4mfF09fD4+Pz0/fDw8Pz0/fDo/Oj89fFxcK1xcKz98LS0/fFxcKlxcKj98XFwvXFwvP3wlfFxcfFxcfD98JiY/fFxcYig/OmFuZHxub3R8b3J8cmV0dXJuKVxcYnxAQD98XFw/XFw/P3xcXC5cXC4vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJpbyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiYWxpYXMiLCJzdHJpbmciLCJrZXl3b3JkIiwiYnVpbHRpbiIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/io.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/j.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/j.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ j)\n/* harmony export */ });\n// @ts-nocheck\nj.displayName = \"j\";\nj.aliases = [];\n/** @type {import('../core.js').Syntax} */ function j(Prism) {\n    Prism.languages.j = {\n        comment: {\n            pattern: /\\bNB\\..*/,\n            greedy: true\n        },\n        string: {\n            pattern: /'(?:''|[^'\\r\\n])*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n        verb: {\n            // Negative look-ahead prevents bad highlighting\n            // of ^: ;. =. =: !. !:\n            pattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n            alias: \"keyword\"\n        },\n        number: /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n        adverb: {\n            pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n            alias: \"builtin\"\n        },\n        operator: /[=a][.:]|_\\./,\n        conjunction: {\n            pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n            alias: \"variable\"\n        },\n        punctuation: /[()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEVBQUVDLFdBQVcsR0FBRztBQUNoQkQsRUFBRUUsT0FBTyxHQUFHLEVBQUU7QUFFZCx3Q0FBd0MsR0FDekIsU0FBU0YsRUFBRUcsS0FBSztJQUM3QkEsTUFBTUMsU0FBUyxDQUFDSixDQUFDLEdBQUc7UUFDbEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxTQUNFO1FBQ0ZDLE1BQU07WUFDSixnREFBZ0Q7WUFDaEQsdUJBQXVCO1lBQ3ZCSixTQUNFO1lBQ0ZLLE9BQU87UUFDVDtRQUNBQyxRQUNFO1FBQ0ZDLFFBQVE7WUFDTlAsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQUcsVUFBVTtRQUNWQyxhQUFhO1lBQ1hULFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FLLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2ouanM/MmRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuai5kaXNwbGF5TmFtZSA9ICdqJ1xuai5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5qID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJOQlxcLi4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvJyg/OicnfFteJ1xcclxcbl0pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/Oig/OkNSfExGfGFkdmVyYnxjb25qdW5jdGlvbnxkZWZ8ZGVmaW5lfGR5YWR8bW9uYWR8bm91bnx2ZXJiKVxcYnwoPzphc3NlcnR8YnJlYWt8Y2FzZXxjYXRjaFtkdF0/fGNvbnRpbnVlfGRvfGVsc2V8ZWxzZWlmfGVuZHxmY2FzZXxmb3J8Zm9yX1xcdyt8Z290b19cXHcrfGlmfGxhYmVsX1xcdyt8cmV0dXJufHNlbGVjdHx0aHJvd3x0cnl8d2hpbGV8d2hpbHN0KVxcLikvLFxuICAgIHZlcmI6IHtcbiAgICAgIC8vIE5lZ2F0aXZlIGxvb2stYWhlYWQgcHJldmVudHMgYmFkIGhpZ2hsaWdodGluZ1xuICAgICAgLy8gb2YgXjogOy4gPS4gPTogIS4gITpcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oPyFcXF46fDtcXC58Wz0hXVsuOl0pKD86XFx7KD86XFwufDo6Pyk/fHAoPzpcXC5cXC4/fDopfFs9IVxcXV18Wzw+KypcXC0lJHwsI11bLjpdP3xbP15dXFwuP3xbO1xcW106P3xbfn1cImldWy46XXxbQUNlRUlqTG9yXVxcLnwoPzpbX1xcL1xcXFxxc3V4XXxfP1xcZCk6KS8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBudW1iZXI6XG4gICAgICAvXFxiXz8oPzooPyFcXGQ6KVxcZCsoPzpcXC5cXGQrKT8oPzooPzphZHxhcnxbZWpweF0pXz9cXGQrKD86XFwuXFxkKyk/KSooPzpiXz9bXFxkYS16XSsoPzpcXC5bXFxkYS16XSspPyk/fF9cXGIoPyFcXC4pKS8sXG4gICAgYWR2ZXJiOiB7XG4gICAgICBwYXR0ZXJuOiAvW359XXxbXFwvXFxcXF1cXC4/fFtiZk1dXFwufHRbLjpdLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9LFxuICAgIG9wZXJhdG9yOiAvWz1hXVsuOl18X1xcLi8sXG4gICAgY29uanVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8mKD86XFwuOj98Oik/fFsuOkBdWy46XT98WyFEXVsuOl18WztkSFRdXFwufGA6P3xbXFxeTFNdOnxcIi8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9bKCldL1xuICB9XG59XG4iXSwibmFtZXMiOlsiaiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJrZXl3b3JkIiwidmVyYiIsImFsaWFzIiwibnVtYmVyIiwiYWR2ZXJiIiwib3BlcmF0b3IiLCJjb25qdW5jdGlvbiIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/j.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ java)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\njava.displayName = \"java\";\njava.aliases = [];\n/** @type {import('../core.js').Syntax} */ function java(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n        // full package (optional) + parent classes (optional)\n        var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n        // based on the java naming conventions\n        var className = {\n            pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n            lookbehind: true,\n            inside: {\n                namespace: {\n                    pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                punctuation: /\\./\n            }\n        };\n        Prism.languages.java = Prism.languages.extend(\"clike\", {\n            string: {\n                pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n                lookbehind: true,\n                greedy: true\n            },\n            \"class-name\": [\n                className,\n                {\n                    // variables, parameters, and constructor references\n                    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n                    pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n                    lookbehind: true,\n                    inside: className.inside\n                },\n                {\n                    // class names based on keyword\n                    // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n                    pattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n                    lookbehind: true,\n                    inside: className.inside\n                }\n            ],\n            keyword: keywords,\n            function: [\n                Prism.languages.clike.function,\n                {\n                    pattern: /(::\\s*)[a-z_]\\w*/,\n                    lookbehind: true\n                }\n            ],\n            number: /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n            operator: {\n                pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n                lookbehind: true\n            },\n            constant: /\\b[A-Z][A-Z_\\d]+\\b/\n        });\n        Prism.languages.insertBefore(\"java\", \"string\", {\n            \"triple-quoted-string\": {\n                // http://openjdk.java.net/jeps/355#Description\n                pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n                greedy: true,\n                alias: \"string\"\n            },\n            char: {\n                pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n                greedy: true\n            }\n        });\n        Prism.languages.insertBefore(\"java\", \"class-name\", {\n            annotation: {\n                pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            generics: {\n                pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n                inside: {\n                    \"class-name\": className,\n                    keyword: keywords,\n                    punctuation: /[<>(),.:]/,\n                    operator: /[?&|]/\n                }\n            },\n            import: [\n                {\n                    pattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n                    lookbehind: true,\n                    inside: {\n                        namespace: className.inside.namespace,\n                        punctuation: /\\./,\n                        operator: /\\*/,\n                        \"class-name\": /\\w+/\n                    }\n                },\n                {\n                    pattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n                    lookbehind: true,\n                    alias: \"static\",\n                    inside: {\n                        namespace: className.inside.namespace,\n                        static: /\\b\\w+$/,\n                        punctuation: /\\./,\n                        operator: /\\*/,\n                        \"class-name\": /\\w+/\n                    }\n                }\n            ],\n            namespace: {\n                pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function() {\n                    return keywords.source;\n                })),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoc.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoc.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ javadoc)\n/* harmony export */ });\n/* harmony import */ var _java_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./java.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js\");\n/* harmony import */ var _javadoclike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./javadoclike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js\");\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\n\n\njavadoc.displayName = \"javadoc\";\njavadoc.aliases = [];\n/** @type {import('../core.js').Syntax} */ function javadoc(Prism) {\n    Prism.register(_java_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_javadoclike_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    (function(Prism) {\n        var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m;\n        var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source;\n        var reference = /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(/<mem>/g, function() {\n            return memberReference;\n        });\n        Prism.languages.javadoc = Prism.languages.extend(\"javadoclike\", {});\n        Prism.languages.insertBefore(\"javadoc\", \"keyword\", {\n            reference: {\n                pattern: RegExp(/(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/.source + \"(?:\" + reference + \")\"),\n                lookbehind: true,\n                inside: {\n                    function: {\n                        pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n                        lookbehind: true\n                    },\n                    field: {\n                        pattern: /(#\\s*)\\w+/,\n                        lookbehind: true\n                    },\n                    namespace: {\n                        pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    \"class-name\": /\\b[A-Z]\\w*/,\n                    keyword: Prism.languages.java.keyword,\n                    punctuation: /[#()[\\],.]/\n                }\n            },\n            \"class-name\": {\n                // @param <T> the first generic type parameter\n                pattern: /(@param\\s+)<[A-Z]\\w*>/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[.<>]/\n                }\n            },\n            \"code-section\": [\n                {\n                    pattern: /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n                    lookbehind: true,\n                    inside: {\n                        code: {\n                            // there can't be any HTML inside of {@code} tags\n                            pattern: codeLinePattern,\n                            lookbehind: true,\n                            inside: Prism.languages.java,\n                            alias: \"language-java\"\n                        }\n                    }\n                },\n                {\n                    pattern: /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n                    lookbehind: true,\n                    inside: {\n                        line: {\n                            pattern: codeLinePattern,\n                            lookbehind: true,\n                            inside: {\n                                // highlight HTML tags and entities\n                                tag: Prism.languages.markup.tag,\n                                entity: Prism.languages.markup.entity,\n                                code: {\n                                    // everything else is Java code\n                                    pattern: /.+/,\n                                    inside: Prism.languages.java,\n                                    alias: \"language-java\"\n                                }\n                            }\n                        }\n                    }\n                }\n            ],\n            tag: Prism.languages.markup.tag,\n            entity: Prism.languages.markup.entity\n        });\n        Prism.languages.javadoclike.addSupport(\"java\", Prism.languages.javadoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qYXZhZG9jLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxjQUFjO0FBQ3VCO0FBQ2M7QUFDVjtBQUN6Q0csUUFBUUMsV0FBVyxHQUFHO0FBQ3RCRCxRQUFRRSxPQUFPLEdBQUcsRUFBRTtBQUVwQix3Q0FBd0MsR0FDekIsU0FBU0YsUUFBUUcsS0FBSztJQUNuQ0EsTUFBTUMsUUFBUSxDQUFDUCxnREFBYUE7SUFDNUJNLE1BQU1DLFFBQVEsQ0FBQ04sdURBQW9CQTtJQUNuQ0ssTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDNUIsVUFBVUksS0FBSztRQUNmLElBQUlFLGtCQUFrQjtRQUN0QixJQUFJQyxrQkFBa0IsNEJBQTRCQyxNQUFNO1FBQ3hELElBQUlDLFlBQ0YsMERBQTBERCxNQUFNLENBQUNFLE9BQU8sQ0FDdEUsVUFDQTtZQUNFLE9BQU9IO1FBQ1Q7UUFFSkgsTUFBTU8sU0FBUyxDQUFDVixPQUFPLEdBQUdHLE1BQU1PLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGVBQWUsQ0FBQztRQUNqRVIsTUFBTU8sU0FBUyxDQUFDRSxZQUFZLENBQUMsV0FBVyxXQUFXO1lBQ2pESixXQUFXO2dCQUNUSyxTQUFTQyxPQUNQLGdFQUNHUCxNQUFNLEdBQ1AsUUFDQUMsWUFDQTtnQkFFSk8sWUFBWTtnQkFDWkMsUUFBUTtvQkFDTkMsVUFBVTt3QkFDUkosU0FBUzt3QkFDVEUsWUFBWTtvQkFDZDtvQkFDQUcsT0FBTzt3QkFDTEwsU0FBUzt3QkFDVEUsWUFBWTtvQkFDZDtvQkFDQUksV0FBVzt3QkFDVE4sU0FBUzt3QkFDVEcsUUFBUTs0QkFDTkksYUFBYTt3QkFDZjtvQkFDRjtvQkFDQSxjQUFjO29CQUNkQyxTQUFTbEIsTUFBTU8sU0FBUyxDQUFDWSxJQUFJLENBQUNELE9BQU87b0JBQ3JDRCxhQUFhO2dCQUNmO1lBQ0Y7WUFDQSxjQUFjO2dCQUNaLDhDQUE4QztnQkFDOUNQLFNBQVM7Z0JBQ1RFLFlBQVk7Z0JBQ1pDLFFBQVE7b0JBQ05JLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBLGdCQUFnQjtnQkFDZDtvQkFDRVAsU0FDRTtvQkFDRkUsWUFBWTtvQkFDWkMsUUFBUTt3QkFDTk8sTUFBTTs0QkFDSixpREFBaUQ7NEJBQ2pEVixTQUFTUjs0QkFDVFUsWUFBWTs0QkFDWkMsUUFBUWIsTUFBTU8sU0FBUyxDQUFDWSxJQUFJOzRCQUM1QkUsT0FBTzt3QkFDVDtvQkFDRjtnQkFDRjtnQkFDQTtvQkFDRVgsU0FDRTtvQkFDRkUsWUFBWTtvQkFDWkMsUUFBUTt3QkFDTlMsTUFBTTs0QkFDSlosU0FBU1I7NEJBQ1RVLFlBQVk7NEJBQ1pDLFFBQVE7Z0NBQ04sbUNBQW1DO2dDQUNuQ1UsS0FBS3ZCLE1BQU1PLFNBQVMsQ0FBQ2lCLE1BQU0sQ0FBQ0QsR0FBRztnQ0FDL0JFLFFBQVF6QixNQUFNTyxTQUFTLENBQUNpQixNQUFNLENBQUNDLE1BQU07Z0NBQ3JDTCxNQUFNO29DQUNKLCtCQUErQjtvQ0FDL0JWLFNBQVM7b0NBQ1RHLFFBQVFiLE1BQU1PLFNBQVMsQ0FBQ1ksSUFBSTtvQ0FDNUJFLE9BQU87Z0NBQ1Q7NEJBQ0Y7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7YUFDRDtZQUNERSxLQUFLdkIsTUFBTU8sU0FBUyxDQUFDaUIsTUFBTSxDQUFDRCxHQUFHO1lBQy9CRSxRQUFRekIsTUFBTU8sU0FBUyxDQUFDaUIsTUFBTSxDQUFDQyxNQUFNO1FBQ3ZDO1FBQ0F6QixNQUFNTyxTQUFTLENBQUNtQixXQUFXLENBQUNDLFVBQVUsQ0FBQyxRQUFRM0IsTUFBTU8sU0FBUyxDQUFDVixPQUFPO0lBQ3hFLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YWRvYy5qcz8xNmZkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9ySmF2YSBmcm9tICcuL2phdmEuanMnXG5pbXBvcnQgcmVmcmFjdG9ySmF2YWRvY2xpa2UgZnJvbSAnLi9qYXZhZG9jbGlrZS5qcydcbmltcG9ydCByZWZyYWN0b3JNYXJrdXAgZnJvbSAnLi9tYXJrdXAuanMnXG5qYXZhZG9jLmRpc3BsYXlOYW1lID0gJ2phdmFkb2MnXG5qYXZhZG9jLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGphdmFkb2MoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YWRvY2xpa2UpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgY29kZUxpbmVQYXR0ZXJuID0gLyheKD86W1xcdCBdKig/OlxcKlxccyopKikpW14qXFxzXS4qJC9tXG4gICAgdmFyIG1lbWJlclJlZmVyZW5jZSA9IC8jXFxzKlxcdysoPzpcXHMqXFwoW14oKV0qXFwpKT8vLnNvdXJjZVxuICAgIHZhciByZWZlcmVuY2UgPVxuICAgICAgLyg/OlxcYlthLXpBLVpdXFx3K1xccypcXC5cXHMqKSpcXGJbQS1aXVxcdyooPzpcXHMqPG1lbT4pP3w8bWVtPi8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgIC88bWVtPi9nLFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIG1lbWJlclJlZmVyZW5jZVxuICAgICAgICB9XG4gICAgICApXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmphdmFkb2MgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqYXZhZG9jbGlrZScsIHt9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2phdmFkb2MnLCAna2V5d29yZCcsIHtcbiAgICAgIHJlZmVyZW5jZToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgLyhAKD86ZXhjZXB0aW9ufGxpbmt8bGlua3BsYWlufHNlZXx0aHJvd3N8dmFsdWUpXFxzKyg/OlxcKlxccyopPykvXG4gICAgICAgICAgICAuc291cmNlICtcbiAgICAgICAgICAgICcoPzonICtcbiAgICAgICAgICAgIHJlZmVyZW5jZSArXG4gICAgICAgICAgICAnKSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oI1xccyopXFx3Kyg/PVxccypcXCgpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIGZpZWxkOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKCNcXHMqKVxcdysvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgbmFtZXNwYWNlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFxiKD86W2Etel1cXHcqXFxzKlxcLlxccyopKy8sXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICAnY2xhc3MtbmFtZSc6IC9cXGJbQS1aXVxcdyovLFxuICAgICAgICAgIGtleXdvcmQ6IFByaXNtLmxhbmd1YWdlcy5qYXZhLmtleXdvcmQsXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bIygpW1xcXSwuXS9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICAvLyBAcGFyYW0gPFQ+IHRoZSBmaXJzdCBnZW5lcmljIHR5cGUgcGFyYW1ldGVyXG4gICAgICAgIHBhdHRlcm46IC8oQHBhcmFtXFxzKyk8W0EtWl1cXHcqPi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWy48Pl0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY29kZS1zZWN0aW9uJzogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oXFx7QGNvZGVcXHMrKD8hXFxzKSkoPzpbXlxcc3t9XXxcXHMrKD8hW1xcc31dKXxcXHsoPzpbXnt9XXxcXHsoPzpbXnt9XXxcXHsoPzpbXnt9XXxcXHtbXnt9XSpcXH0pKlxcfSkqXFx9KSpcXH0pKyg/PVxccypcXH0pLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgICAvLyB0aGVyZSBjYW4ndCBiZSBhbnkgSFRNTCBpbnNpZGUgb2Yge0Bjb2RlfSB0YWdzXG4gICAgICAgICAgICAgIHBhdHRlcm46IGNvZGVMaW5lUGF0dGVybixcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuamF2YSxcbiAgICAgICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1qYXZhJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKDwoY29kZXxwcmV8dHQpPig/ITxjb2RlPilcXHMqKVxcUyg/OlxcU3xcXHMrXFxTKSo/KD89XFxzKjxcXC9cXDI+KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGxpbmU6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogY29kZUxpbmVQYXR0ZXJuLFxuICAgICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICAvLyBoaWdobGlnaHQgSFRNTCB0YWdzIGFuZCBlbnRpdGllc1xuICAgICAgICAgICAgICAgIHRhZzogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cC50YWcsXG4gICAgICAgICAgICAgICAgZW50aXR5OiBQcmlzbS5sYW5ndWFnZXMubWFya3VwLmVudGl0eSxcbiAgICAgICAgICAgICAgICBjb2RlOiB7XG4gICAgICAgICAgICAgICAgICAvLyBldmVyeXRoaW5nIGVsc2UgaXMgSmF2YSBjb2RlXG4gICAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvLisvLFxuICAgICAgICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuamF2YSxcbiAgICAgICAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtamF2YSdcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICB0YWc6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXAudGFnLFxuICAgICAgZW50aXR5OiBQcmlzbS5sYW5ndWFnZXMubWFya3VwLmVudGl0eVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmphdmFkb2NsaWtlLmFkZFN1cHBvcnQoJ2phdmEnLCBQcmlzbS5sYW5ndWFnZXMuamF2YWRvYylcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YSIsInJlZnJhY3RvckphdmFkb2NsaWtlIiwicmVmcmFjdG9yTWFya3VwIiwiamF2YWRvYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJjb2RlTGluZVBhdHRlcm4iLCJtZW1iZXJSZWZlcmVuY2UiLCJzb3VyY2UiLCJyZWZlcmVuY2UiLCJyZXBsYWNlIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiaW5zZXJ0QmVmb3JlIiwicGF0dGVybiIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJmdW5jdGlvbiIsImZpZWxkIiwibmFtZXNwYWNlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiamF2YSIsImNvZGUiLCJhbGlhcyIsImxpbmUiLCJ0YWciLCJtYXJrdXAiLCJlbnRpdHkiLCJqYXZhZG9jbGlrZSIsImFkZFN1cHBvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ javadoclike)\n/* harmony export */ });\n// @ts-nocheck\njavadoclike.displayName = \"javadoclike\";\njavadoclike.aliases = [];\n/** @type {import('../core.js').Syntax} */ function javadoclike(Prism) {\n    ;\n    (function(Prism) {\n        var javaDocLike = Prism.languages.javadoclike = {\n            parameter: {\n                pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n                lookbehind: true\n            },\n            keyword: {\n                // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n                // @word, {@word}\n                pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n                lookbehind: true\n            },\n            punctuation: /[{}]/\n        };\n        /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */ function docCommentSupport(lang, callback) {\n            var tokenName = \"doc-comment\";\n            var grammar = Prism.languages[lang];\n            if (!grammar) {\n                return;\n            }\n            var token = grammar[tokenName];\n            if (!token) {\n                // add doc comment: /** */\n                var definition = {};\n                definition[tokenName] = {\n                    pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true,\n                    alias: \"comment\"\n                };\n                grammar = Prism.languages.insertBefore(lang, \"comment\", definition);\n                token = grammar[tokenName];\n            }\n            if (token instanceof RegExp) {\n                // convert regex to object\n                token = grammar[tokenName] = {\n                    pattern: token\n                };\n            }\n            if (Array.isArray(token)) {\n                for(var i = 0, l = token.length; i < l; i++){\n                    if (token[i] instanceof RegExp) {\n                        token[i] = {\n                            pattern: token[i]\n                        };\n                    }\n                    callback(token[i]);\n                }\n            } else {\n                callback(token);\n            }\n        }\n        /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */ function addSupport(languages, docLanguage) {\n            if (typeof languages === \"string\") {\n                languages = [\n                    languages\n                ];\n            }\n            languages.forEach(function(lang) {\n                docCommentSupport(lang, function(pattern) {\n                    if (!pattern.inside) {\n                        pattern.inside = {};\n                    }\n                    pattern.inside.rest = docLanguage;\n                });\n            });\n        }\n        Object.defineProperty(javaDocLike, \"addSupport\", {\n            value: addSupport\n        });\n        javaDocLike.addSupport([\n            \"java\",\n            \"javascript\",\n            \"php\"\n        ], javaDocLike);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qYXZhZG9jbGlrZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxZQUFZQyxXQUFXLEdBQUc7QUFDMUJELFlBQVlFLE9BQU8sR0FBRyxFQUFFO0FBRXhCLHdDQUF3QyxHQUN6QixTQUFTRixZQUFZRyxLQUFLOztJQUNyQyxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsY0FBZUQsTUFBTUUsU0FBUyxDQUFDTCxXQUFXLEdBQUc7WUFDL0NNLFdBQVc7Z0JBQ1RDLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBQyxTQUFTO2dCQUNQLDBGQUEwRjtnQkFDMUYsaUJBQWlCO2dCQUNqQkYsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0FFLGFBQWE7UUFDZjtRQUVBOzs7OztLQUtDLEdBQ0QsU0FBU0Msa0JBQWtCQyxJQUFJLEVBQUVDLFFBQVE7WUFDdkMsSUFBSUMsWUFBWTtZQUNoQixJQUFJQyxVQUFVWixNQUFNRSxTQUFTLENBQUNPLEtBQUs7WUFDbkMsSUFBSSxDQUFDRyxTQUFTO2dCQUNaO1lBQ0Y7WUFDQSxJQUFJQyxRQUFRRCxPQUFPLENBQUNELFVBQVU7WUFDOUIsSUFBSSxDQUFDRSxPQUFPO2dCQUNWLDBCQUEwQjtnQkFDMUIsSUFBSUMsYUFBYSxDQUFDO2dCQUNsQkEsVUFBVSxDQUFDSCxVQUFVLEdBQUc7b0JBQ3RCUCxTQUFTO29CQUNUQyxZQUFZO29CQUNaVSxPQUFPO2dCQUNUO2dCQUNBSCxVQUFVWixNQUFNRSxTQUFTLENBQUNjLFlBQVksQ0FBQ1AsTUFBTSxXQUFXSztnQkFDeERELFFBQVFELE9BQU8sQ0FBQ0QsVUFBVTtZQUM1QjtZQUNBLElBQUlFLGlCQUFpQkksUUFBUTtnQkFDM0IsMEJBQTBCO2dCQUMxQkosUUFBUUQsT0FBTyxDQUFDRCxVQUFVLEdBQUc7b0JBQzNCUCxTQUFTUztnQkFDWDtZQUNGO1lBQ0EsSUFBSUssTUFBTUMsT0FBTyxDQUFDTixRQUFRO2dCQUN4QixJQUFLLElBQUlPLElBQUksR0FBR0MsSUFBSVIsTUFBTVMsTUFBTSxFQUFFRixJQUFJQyxHQUFHRCxJQUFLO29CQUM1QyxJQUFJUCxLQUFLLENBQUNPLEVBQUUsWUFBWUgsUUFBUTt3QkFDOUJKLEtBQUssQ0FBQ08sRUFBRSxHQUFHOzRCQUNUaEIsU0FBU1MsS0FBSyxDQUFDTyxFQUFFO3dCQUNuQjtvQkFDRjtvQkFDQVYsU0FBU0csS0FBSyxDQUFDTyxFQUFFO2dCQUNuQjtZQUNGLE9BQU87Z0JBQ0xWLFNBQVNHO1lBQ1g7UUFDRjtRQUVBOzs7OztLQUtDLEdBQ0QsU0FBU1UsV0FBV3JCLFNBQVMsRUFBRXNCLFdBQVc7WUFDeEMsSUFBSSxPQUFPdEIsY0FBYyxVQUFVO2dCQUNqQ0EsWUFBWTtvQkFBQ0E7aUJBQVU7WUFDekI7WUFDQUEsVUFBVXVCLE9BQU8sQ0FBQyxTQUFVaEIsSUFBSTtnQkFDOUJELGtCQUFrQkMsTUFBTSxTQUFVTCxPQUFPO29CQUN2QyxJQUFJLENBQUNBLFFBQVFzQixNQUFNLEVBQUU7d0JBQ25CdEIsUUFBUXNCLE1BQU0sR0FBRyxDQUFDO29CQUNwQjtvQkFDQXRCLFFBQVFzQixNQUFNLENBQUNDLElBQUksR0FBR0g7Z0JBQ3hCO1lBQ0Y7UUFDRjtRQUNBSSxPQUFPQyxjQUFjLENBQUM1QixhQUFhLGNBQWM7WUFDL0M2QixPQUFPUDtRQUNUO1FBQ0F0QixZQUFZc0IsVUFBVSxDQUFDO1lBQUM7WUFBUTtZQUFjO1NBQU0sRUFBRXRCO0lBQ3hELEdBQUdEO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamF2YWRvY2xpa2UuanM/MzNhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuamF2YWRvY2xpa2UuZGlzcGxheU5hbWUgPSAnamF2YWRvY2xpa2UnXG5qYXZhZG9jbGlrZS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqYXZhZG9jbGlrZShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBqYXZhRG9jTGlrZSA9IChQcmlzbS5sYW5ndWFnZXMuamF2YWRvY2xpa2UgPSB7XG4gICAgICBwYXJhbWV0ZXI6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF5bXFx0IF0qKD86XFwvezN9fFxcKnxcXC9cXCpcXCopXFxzKkAoPzphcmd8YXJndW1lbnRzfHBhcmFtKVxccyspXFx3Ky9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDoge1xuICAgICAgICAvLyBrZXl3b3JkcyBhcmUgdGhlIGZpcnN0IHdvcmQgaW4gYSBsaW5lIHByZWNlZGVkIGJlIGFuIGBAYCBvciBzdXJyb3VuZGVkIGJ5IGN1cmx5IGJyYWNlcy5cbiAgICAgICAgLy8gQHdvcmQsIHtAd29yZH1cbiAgICAgICAgcGF0dGVybjogLyheW1xcdCBdKig/OlxcL3szfXxcXCp8XFwvXFwqXFwqKVxccyp8XFx7KUBbYS16XVthLXpBLVotXStcXGIvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9XS9cbiAgICB9KVxuXG4gICAgLyoqXG4gICAgICogQWRkcyBkb2MgY29tbWVudCBzdXBwb3J0IHRvIHRoZSBnaXZlbiBsYW5ndWFnZSBhbmQgY2FsbHMgYSBnaXZlbiBjYWxsYmFjayBvbiBlYWNoIGRvYyBjb21tZW50IHBhdHRlcm4uXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZyB0aGUgbGFuZ3VhZ2UgYWRkIGRvYyBjb21tZW50IHN1cHBvcnQgdG8uXG4gICAgICogQHBhcmFtIHsocGF0dGVybjoge2luc2lkZToge3Jlc3Q6IHVuZGVmaW5lZH19KSA9PiB2b2lkfSBjYWxsYmFjayB0aGUgZnVuY3Rpb24gY2FsbGVkIHdpdGggZWFjaCBkb2MgY29tbWVudCBwYXR0ZXJuIGFzIGFyZ3VtZW50LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGRvY0NvbW1lbnRTdXBwb3J0KGxhbmcsIGNhbGxiYWNrKSB7XG4gICAgICB2YXIgdG9rZW5OYW1lID0gJ2RvYy1jb21tZW50J1xuICAgICAgdmFyIGdyYW1tYXIgPSBQcmlzbS5sYW5ndWFnZXNbbGFuZ11cbiAgICAgIGlmICghZ3JhbW1hcikge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cbiAgICAgIHZhciB0b2tlbiA9IGdyYW1tYXJbdG9rZW5OYW1lXVxuICAgICAgaWYgKCF0b2tlbikge1xuICAgICAgICAvLyBhZGQgZG9jIGNvbW1lbnQ6IC8qKiAqL1xuICAgICAgICB2YXIgZGVmaW5pdGlvbiA9IHt9XG4gICAgICAgIGRlZmluaXRpb25bdG9rZW5OYW1lXSA9IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXC9cXCpcXCpbXi9dW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgICAgIH1cbiAgICAgICAgZ3JhbW1hciA9IFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUobGFuZywgJ2NvbW1lbnQnLCBkZWZpbml0aW9uKVxuICAgICAgICB0b2tlbiA9IGdyYW1tYXJbdG9rZW5OYW1lXVxuICAgICAgfVxuICAgICAgaWYgKHRva2VuIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgICAgIC8vIGNvbnZlcnQgcmVnZXggdG8gb2JqZWN0XG4gICAgICAgIHRva2VuID0gZ3JhbW1hclt0b2tlbk5hbWVdID0ge1xuICAgICAgICAgIHBhdHRlcm46IHRva2VuXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChBcnJheS5pc0FycmF5KHRva2VuKSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRva2VuLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgIGlmICh0b2tlbltpXSBpbnN0YW5jZW9mIFJlZ0V4cCkge1xuICAgICAgICAgICAgdG9rZW5baV0gPSB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IHRva2VuW2ldXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhbGxiYWNrKHRva2VuW2ldKVxuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjYWxsYmFjayh0b2tlbilcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIGRvYy1jb21tZW50IHN1cHBvcnQgdG8gdGhlIGdpdmVuIGxhbmd1YWdlcyBmb3IgdGhlIGdpdmVuIGRvY3VtZW50YXRpb24gbGFuZ3VhZ2UuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ1tdfHN0cmluZ30gbGFuZ3VhZ2VzXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGRvY0xhbmd1YWdlXG4gICAgICovXG4gICAgZnVuY3Rpb24gYWRkU3VwcG9ydChsYW5ndWFnZXMsIGRvY0xhbmd1YWdlKSB7XG4gICAgICBpZiAodHlwZW9mIGxhbmd1YWdlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgbGFuZ3VhZ2VzID0gW2xhbmd1YWdlc11cbiAgICAgIH1cbiAgICAgIGxhbmd1YWdlcy5mb3JFYWNoKGZ1bmN0aW9uIChsYW5nKSB7XG4gICAgICAgIGRvY0NvbW1lbnRTdXBwb3J0KGxhbmcsIGZ1bmN0aW9uIChwYXR0ZXJuKSB7XG4gICAgICAgICAgaWYgKCFwYXR0ZXJuLmluc2lkZSkge1xuICAgICAgICAgICAgcGF0dGVybi5pbnNpZGUgPSB7fVxuICAgICAgICAgIH1cbiAgICAgICAgICBwYXR0ZXJuLmluc2lkZS5yZXN0ID0gZG9jTGFuZ3VhZ2VcbiAgICAgICAgfSlcbiAgICAgIH0pXG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShqYXZhRG9jTGlrZSwgJ2FkZFN1cHBvcnQnLCB7XG4gICAgICB2YWx1ZTogYWRkU3VwcG9ydFxuICAgIH0pXG4gICAgamF2YURvY0xpa2UuYWRkU3VwcG9ydChbJ2phdmEnLCAnamF2YXNjcmlwdCcsICdwaHAnXSwgamF2YURvY0xpa2UpXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImphdmFkb2NsaWtlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJqYXZhRG9jTGlrZSIsImxhbmd1YWdlcyIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwia2V5d29yZCIsInB1bmN0dWF0aW9uIiwiZG9jQ29tbWVudFN1cHBvcnQiLCJsYW5nIiwiY2FsbGJhY2siLCJ0b2tlbk5hbWUiLCJncmFtbWFyIiwidG9rZW4iLCJkZWZpbml0aW9uIiwiYWxpYXMiLCJpbnNlcnRCZWZvcmUiLCJSZWdFeHAiLCJBcnJheSIsImlzQXJyYXkiLCJpIiwibCIsImxlbmd0aCIsImFkZFN1cHBvcnQiLCJkb2NMYW5ndWFnZSIsImZvckVhY2giLCJpbnNpZGUiLCJyZXN0IiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ javascript)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\njavascript.displayName = \"javascript\";\njavascript.aliases = [\n    \"js\"\n];\n/** @type {import('../core.js').Syntax} */ function javascript(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.javascript = Prism.languages.extend(\"clike\", {\n        \"class-name\": [\n            Prism.languages.clike[\"class-name\"],\n            {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n                lookbehind: true\n            }\n        ],\n        keyword: [\n            {\n                pattern: /((?:^|\\})\\s*)catch\\b/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n                lookbehind: true\n            }\n        ],\n        // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n        function: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n        number: {\n            pattern: RegExp(/(^|[^\\w$])/.source + \"(?:\" + // constant\n            (/NaN|Infinity/.source + \"|\" + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source + \"|\" + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source + \"|\" + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + \"|\" + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source + \"|\" + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + \")\" + /(?![\\w$])/.source),\n            lookbehind: true\n        },\n        operator: /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n    });\n    Prism.languages.javascript[\"class-name\"][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n    Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n        regex: {\n            pattern: RegExp(// lookbehind\n            // eslint-disable-next-line regexp/no-dupe-characters-character-class\n            /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source + // Regex pattern:\n            // There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n            // classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n            // with the only syntax, so we have to define 2 different regex patterns.\n            /\\//.source + \"(?:\" + /(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source + \"|\" + // `v` flag syntax. This supports 3 levels of nested character classes.\n            /(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source + \")\" + // lookahead\n            /(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                \"regex-source\": {\n                    pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                    lookbehind: true,\n                    alias: \"language-regex\",\n                    inside: Prism.languages.regex\n                },\n                \"regex-delimiter\": /^\\/|\\/$/,\n                \"regex-flags\": /^[a-z]+$/\n            }\n        },\n        // This must be declared before keyword because we use \"function\" inside the look-forward\n        \"function-variable\": {\n            pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n            alias: \"function\"\n        },\n        parameter: [\n            {\n                pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            {\n                pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            {\n                pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            }\n        ],\n        constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n    });\n    Prism.languages.insertBefore(\"javascript\", \"string\", {\n        hashbang: {\n            pattern: /^#!.*/,\n            greedy: true,\n            alias: \"comment\"\n        },\n        \"template-string\": {\n            pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n            greedy: true,\n            inside: {\n                \"template-punctuation\": {\n                    pattern: /^`|`$/,\n                    alias: \"string\"\n                },\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"punctuation\"\n                        },\n                        rest: Prism.languages.javascript\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        \"string-property\": {\n            pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        }\n    });\n    Prism.languages.insertBefore(\"javascript\", \"operator\", {\n        \"literal-property\": {\n            pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n            lookbehind: true,\n            alias: \"property\"\n        }\n    });\n    if (Prism.languages.markup) {\n        Prism.languages.markup.tag.addInlined(\"script\", \"javascript\");\n        // add attribute support for all DOM events.\n        // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n        Prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, \"javascript\");\n    }\n    Prism.languages.js = Prism.languages.javascript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javastacktrace.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javastacktrace.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ javastacktrace)\n/* harmony export */ });\n// @ts-nocheck\njavastacktrace.displayName = \"javastacktrace\";\njavastacktrace.aliases = [];\n/** @type {import('../core.js').Syntax} */ function javastacktrace(Prism) {\n    // Specification:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n    Prism.languages.javastacktrace = {\n        // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n        // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n        // Caused by: com.example.myproject.MyProjectServletException\n        // Caused by: MidLevelException: LowLevelException\n        // Suppressed: Resource$CloseFailException: Resource ID = 0\n        summary: {\n            pattern: /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n            lookbehind: true,\n            inside: {\n                keyword: {\n                    pattern: /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n                    lookbehind: true\n                },\n                // the current thread if the summary starts with 'Exception in thread'\n                string: {\n                    pattern: /^(\\s*)\"[^\"]*\"/,\n                    lookbehind: true\n                },\n                exceptions: {\n                    pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n                    lookbehind: true,\n                    inside: {\n                        \"class-name\": /[\\w$]+$/,\n                        namespace: /\\b[a-z]\\w*\\b/,\n                        punctuation: /\\./\n                    }\n                },\n                message: {\n                    pattern: /(:\\s*)\\S.*/,\n                    lookbehind: true,\n                    alias: \"string\"\n                },\n                punctuation: /:/\n            }\n        },\n        // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n        // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n        // at java.base/java.lang.Class.forName0(Native Method)\n        // at Util.<init>(Unknown Source)\n        // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n        // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n        // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n        // at MyClass.mash(MyClass.java:9)\n        //\n        // More information:\n        // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n        //\n        // A valid Java module name is defined as:\n        //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n        // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n        //\n        // A Java module version is defined by this class:\n        // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n        // This is the implementation of the `parse` method in JDK13:\n        // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n        // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n        \"stack-frame\": {\n            pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n            lookbehind: true,\n            inside: {\n                keyword: {\n                    pattern: /^(\\s*)at(?= )/,\n                    lookbehind: true\n                },\n                source: [\n                    // (Main.java:15)\n                    // (Main.scala:15)\n                    {\n                        pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n                        lookbehind: true,\n                        inside: {\n                            file: /^\\w+\\.\\w+/,\n                            punctuation: /:/,\n                            \"line-number\": {\n                                pattern: /\\b\\d+\\b/,\n                                alias: \"number\"\n                            }\n                        }\n                    },\n                    // (Unknown Source)\n                    // (Native Method)\n                    // (...something...)\n                    {\n                        pattern: /(\\()[^()]*(?=\\))/,\n                        lookbehind: true,\n                        inside: {\n                            keyword: /^(?:Native Method|Unknown Source)$/\n                        }\n                    }\n                ],\n                \"class-name\": /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n                function: /(?:<init>|[\\w$]+)(?=\\()/,\n                \"class-loader\": {\n                    pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n                    lookbehind: true,\n                    alias: \"namespace\",\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                module: {\n                    pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n                    lookbehind: true,\n                    inside: {\n                        version: {\n                            pattern: /(@)[\\s\\S]+/,\n                            lookbehind: true,\n                            alias: \"number\"\n                        },\n                        punctuation: /[@.]/\n                    }\n                },\n                namespace: {\n                    pattern: /(?:\\b[a-z]\\w*\\.)+/,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                punctuation: /[()/.]/\n            }\n        },\n        // ... 32 more\n        // ... 32 common frames omitted\n        more: {\n            pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n            lookbehind: true,\n            inside: {\n                punctuation: /\\.{3}/,\n                number: /\\d+/,\n                keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javastacktrace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jexl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jexl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jexl)\n/* harmony export */ });\n// @ts-nocheck\njexl.displayName = \"jexl\";\njexl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jexl(Prism) {\n    Prism.languages.jexl = {\n        string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        transform: {\n            pattern: /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n            alias: \"function\",\n            lookbehind: true\n        },\n        function: /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n        number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n        operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\bin\\b/,\n        punctuation: /[{}[\\](),.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qZXhsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxRQUFRO1FBQ1JDLFdBQVc7WUFDVEMsU0FDRTtZQUNGQyxPQUFPO1lBQ1BDLFlBQVk7UUFDZDtRQUNBQyxVQUNFO1FBQ0ZDLFFBQVE7UUFDUkMsVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvamV4bC5qcz82ZjEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5qZXhsLmRpc3BsYXlOYW1lID0gJ2pleGwnXG5qZXhsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGpleGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmpleGwgPSB7XG4gICAgc3RyaW5nOiAvKFtcIiddKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkqXFwxLyxcbiAgICB0cmFuc2Zvcm06IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFx8XFxzKilbYS16QS1a0LAt0Y/QkC3Qr19cXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAwRkYkXVtcXHfQsC3Rj9CQLdCvXFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMEZGJF0qLyxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgZnVuY3Rpb246XG4gICAgICAvW2EtekEtWtCwLdGP0JAt0K9fXFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMEZGJF1bXFx30LAt0Y/QkC3Qr1xcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDBGRiRdKlxccyooPz1cXCgpLyxcbiAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKyk/XFxifFxcQlxcLlxcZCtcXGIvLFxuICAgIG9wZXJhdG9yOiAvWzw+IV09P3wtfFxcK3wmJnw9PXxcXHxcXHw/fFxcL1xcLz98Wz86Kl4lXS8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBrZXl3b3JkOiAvXFxiaW5cXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXSgpLC5dL1xuICB9XG59XG4iXSwibmFtZXMiOlsiamV4bCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic3RyaW5nIiwidHJhbnNmb3JtIiwicGF0dGVybiIsImFsaWFzIiwibG9va2JlaGluZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJib29sZWFuIiwia2V5d29yZCIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jexl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jolie.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jolie.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jolie)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\njolie.displayName = \"jolie\";\njolie.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jolie(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.jolie = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n        function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n        operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n        punctuation: /[()[\\]{},;.:]/,\n        builtin: /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n    });\n    Prism.languages.insertBefore(\"jolie\", \"keyword\", {\n        aggregates: {\n            pattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n            lookbehind: true,\n            inside: {\n                keyword: /\\bwith\\b/,\n                \"class-name\": /\\w+/,\n                punctuation: /,/\n            }\n        },\n        redirects: {\n            pattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n            lookbehind: true,\n            inside: {\n                punctuation: /,/,\n                \"class-name\": /\\w+/,\n                operator: /=>/\n            }\n        },\n        property: {\n            pattern: /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qb2xpZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsaURBQWNBO0lBQzdCSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUN0REMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaRixTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBRSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZDLGFBQWE7UUFDYkMsU0FDRTtJQUNKO0lBQ0FiLE1BQU1FLFNBQVMsQ0FBQ1ksWUFBWSxDQUFDLFNBQVMsV0FBVztRQUMvQ0MsWUFBWTtZQUNWVixTQUNFO1lBQ0ZDLFlBQVk7WUFDWlUsUUFBUTtnQkFDTlIsU0FBUztnQkFDVCxjQUFjO2dCQUNkSSxhQUFhO1lBQ2Y7UUFDRjtRQUNBSyxXQUFXO1lBQ1RaLFNBQ0U7WUFDRkMsWUFBWTtZQUNaVSxRQUFRO2dCQUNOSixhQUFhO2dCQUNiLGNBQWM7Z0JBQ2RELFVBQVU7WUFDWjtRQUNGO1FBQ0FPLFVBQVU7WUFDUmIsU0FDRTtRQUNKO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qb2xpZS5qcz9lMTE1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmpvbGllLmRpc3BsYXlOYW1lID0gJ2pvbGllJ1xuam9saWUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gam9saWUoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIFByaXNtLmxhbmd1YWdlcy5qb2xpZSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpcXFxcW1xcc1xcU118W15cIlxcXFxdKSpcIi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86XFxiKD86YXN8Y291cmllcnxlbWJlZHxpbnxpbnB1dFBvcnR8b3V0cHV0UG9ydHxzZXJ2aWNlKVxcYnxAKVsgXFx0XSopXFx3Ky8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFzfGNIfGNvbXB8Y29uY3VycmVudHxjb25zdGFudHN8Y291cmllcnxjc2V0fGNzZXRzfGRlZmF1bHR8ZGVmaW5lfGVsc2V8ZW1iZWR8ZW1iZWRkZWR8ZXhlY3V0aW9ufGV4aXR8ZXh0ZW5kZXJ8Zm9yfGZvcmVhY2h8Zm9yd2FyZHxmcm9tfGdsb2JhbHxpZnxpbXBvcnR8aW58aW5jbHVkZXxpbml0fGlucHV0UG9ydHxpbnN0YWxsfGluc3RhbmNlb2Z8aW50ZXJmYWNlfGlzX2RlZmluZWR8bGlua0lufGxpbmtPdXR8bWFpbnxuZXd8bnVsbFByb2Nlc3N8b3V0cHV0UG9ydHxvdmVyfHByaXZhdGV8cHJvdmlkZXxwdWJsaWN8c2NvcGV8c2VxdWVudGlhbHxzZXJ2aWNlfHNpbmdsZXxzcGF3bnxzeW5jaHJvbml6ZWR8dGhpc3x0aHJvd3x0aHJvd3N8dHlwZXx1bmRlZnx1bnRpbHx3aGlsZXx3aXRoKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89WyBcXHRdKltAKF0pL2ksXG4gICAgbnVtYmVyOiAvKD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspP2w/L2ksXG4gICAgb3BlcmF0b3I6IC8tWy09Pl0/fFxcK1srPV0/fDxbPD1dP3xbPj0qIV09P3wmJnxcXHxcXHx8Wz9cXC8lXkB8XS8sXG4gICAgcHVuY3R1YXRpb246IC9bKClbXFxde30sOy46XS8sXG4gICAgYnVpbHRpbjpcbiAgICAgIC9cXGIoPzpCeXRlfGFueXxib29sfGNoYXJ8ZG91YmxlfGVudW18ZmxvYXR8aW50fGxlbmd0aHxsb25nfHJhbmdlc3xyZWdleHxzdHJpbmd8dW5kZWZpbmVkfHZvaWQpXFxiL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdqb2xpZScsICdrZXl3b3JkJywge1xuICAgIGFnZ3JlZ2F0ZXM6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiQWdncmVnYXRlc1xccyo6XFxzKikoPzpcXHcrKD86XFxzK3dpdGhcXHMrXFx3Kyk/XFxzKixcXHMqKSpcXHcrKD86XFxzK3dpdGhcXHMrXFx3Kyk/LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYndpdGhcXGIvLFxuICAgICAgICAnY2xhc3MtbmFtZSc6IC9cXHcrLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC8sL1xuICAgICAgfVxuICAgIH0sXG4gICAgcmVkaXJlY3RzOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFxcYlJlZGlyZWN0c1xccyo6XFxzKikoPzpcXHcrXFxzKj0+XFxzKlxcdytcXHMqLFxccyopKig/OlxcdytcXHMqPT5cXHMqXFx3KykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogLywvLFxuICAgICAgICAnY2xhc3MtbmFtZSc6IC9cXHcrLyxcbiAgICAgICAgb3BlcmF0b3I6IC89Pi9cbiAgICAgIH1cbiAgICB9LFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86QWdncmVnYXRlc3xbSWldbnRlcmZhY2VzfEphdmF8SmF2YXNjcmlwdHxKb2xpZXxbTGxdb2NhdGlvbnxPbmVXYXl8W1BwXXJvdG9jb2x8UmVkaXJlY3RzfFJlcXVlc3RSZXNwb25zZSlcXGIoPz1bIFxcdF0qOikvXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwiam9saWUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwic3RyaW5nIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiYnVpbHRpbiIsImluc2VydEJlZm9yZSIsImFnZ3JlZ2F0ZXMiLCJpbnNpZGUiLCJyZWRpcmVjdHMiLCJwcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jolie.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jq.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jq.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jq)\n/* harmony export */ });\n// @ts-nocheck\njq.displayName = \"jq\";\njq.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jq(Prism) {\n    ;\n    (function(Prism) {\n        var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n        var string = RegExp(/(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function() {\n            return interpolation;\n        }));\n        var stringInterpolation = {\n            interpolation: {\n                pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n                lookbehind: true,\n                inside: {\n                    content: {\n                        pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    punctuation: /^\\\\\\(|\\)$/\n                }\n            }\n        };\n        var jq = Prism.languages.jq = {\n            comment: /#.*/,\n            property: {\n                pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: stringInterpolation\n            },\n            string: {\n                pattern: string,\n                lookbehind: true,\n                greedy: true,\n                inside: stringInterpolation\n            },\n            function: {\n                pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n                lookbehind: true\n            },\n            variable: /\\B\\$\\w+/,\n            \"property-literal\": {\n                pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n                alias: \"property\"\n            },\n            keyword: /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n            operator: [\n                {\n                    pattern: /\\|=?/,\n                    alias: \"pipe\"\n                },\n                /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n            ],\n            \"c-style-function\": {\n                pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n                alias: \"function\"\n            },\n            punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n            dot: {\n                pattern: /\\./,\n                alias: \"important\"\n            }\n        };\n        stringInterpolation.interpolation.inside.content.inside = jq;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qcS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxHQUFHQyxXQUFXLEdBQUc7QUFDakJELEdBQUdFLE9BQU8sR0FBRyxFQUFFO0FBRWYsd0NBQXdDLEdBQ3pCLFNBQVNGLEdBQUdHLEtBQUs7O0lBQzVCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxnQkFBZ0IsOEJBQThCQyxNQUFNO1FBQ3hELElBQUlDLFNBQVNDLE9BQ1gsMkNBQTJDRixNQUFNLENBQUNHLE9BQU8sQ0FDdkQsT0FDQTtZQUNFLE9BQU9KO1FBQ1Q7UUFHSixJQUFJSyxzQkFBc0I7WUFDeEJMLGVBQWU7Z0JBQ2JNLFNBQVNILE9BQU8sMEJBQTBCRixNQUFNLEdBQUdEO2dCQUNuRE8sWUFBWTtnQkFDWkMsUUFBUTtvQkFDTkMsU0FBUzt3QkFDUEgsU0FBUzt3QkFDVEMsWUFBWTt3QkFDWkMsUUFBUSxLQUFLLFlBQVk7b0JBQzNCO29CQUVBRSxhQUFhO2dCQUNmO1lBQ0Y7UUFDRjtRQUNBLElBQUlkLEtBQU1HLE1BQU1ZLFNBQVMsQ0FBQ2YsRUFBRSxHQUFHO1lBQzdCZ0IsU0FBUztZQUNUQyxVQUFVO2dCQUNSUCxTQUFTSCxPQUFPRCxPQUFPRCxNQUFNLEdBQUcsZ0JBQWdCQSxNQUFNO2dCQUN0RE0sWUFBWTtnQkFDWk8sUUFBUTtnQkFDUk4sUUFBUUg7WUFDVjtZQUNBSCxRQUFRO2dCQUNOSSxTQUFTSjtnQkFDVEssWUFBWTtnQkFDWk8sUUFBUTtnQkFDUk4sUUFBUUg7WUFDVjtZQUNBVSxVQUFVO2dCQUNSVCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQVMsVUFBVTtZQUNWLG9CQUFvQjtnQkFDbEJWLFNBQVM7Z0JBQ1RXLE9BQU87WUFDVDtZQUNBQyxTQUNFO1lBQ0ZDLFNBQVM7WUFDVEMsUUFBUTtZQUNSQyxVQUFVO2dCQUNSO29CQUNFZixTQUFTO29CQUNUVyxPQUFPO2dCQUNUO2dCQUNBO2FBQ0Q7WUFDRCxvQkFBb0I7Z0JBQ2xCWCxTQUFTO2dCQUNUVyxPQUFPO1lBQ1Q7WUFDQVAsYUFBYTtZQUNiWSxLQUFLO2dCQUNIaEIsU0FBUztnQkFDVFcsT0FBTztZQUNUO1FBQ0Y7UUFDQVosb0JBQW9CTCxhQUFhLENBQUNRLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDRCxNQUFNLEdBQUdaO0lBQzVELEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanEuanM/ODdlOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuanEuZGlzcGxheU5hbWUgPSAnanEnXG5qcS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqcShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBpbnRlcnBvbGF0aW9uID0gL1xcXFxcXCgoPzpbXigpXXxcXChbXigpXSpcXCkpKlxcKS8uc291cmNlXG4gICAgdmFyIHN0cmluZyA9IFJlZ0V4cChcbiAgICAgIC8oXnxbXlxcXFxdKVwiKD86W15cIlxcclxcblxcXFxdfFxcXFxbXlxcclxcbihdfF9fKSpcIi8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgIC9fXy9nLFxuICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGludGVycG9sYXRpb25cbiAgICAgICAgfVxuICAgICAgKVxuICAgIClcbiAgICB2YXIgc3RyaW5nSW50ZXJwb2xhdGlvbiA9IHtcbiAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKikvLnNvdXJjZSArIGludGVycG9sYXRpb24pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBjb250ZW50OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXihcXFxcXFwoKVtcXHNcXFNdKyg/PVxcKSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgICAgfSxcblxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcXFxcXCh8XFwpJC9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIganEgPSAoUHJpc20ubGFuZ3VhZ2VzLmpxID0ge1xuICAgICAgY29tbWVudDogLyMuKi8sXG4gICAgICBwcm9wZXJ0eToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoc3RyaW5nLnNvdXJjZSArIC8oPz1cXHMqOig/ITopKS8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHN0cmluZ0ludGVycG9sYXRpb25cbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogc3RyaW5nLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZTogc3RyaW5nSW50ZXJwb2xhdGlvblxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiZGVmXFxzKylbYS16X11cXHcrL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB2YXJpYWJsZTogL1xcQlxcJFxcdysvLFxuICAgICAgJ3Byb3BlcnR5LWxpdGVyYWwnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89XFxzKjooPyE6KSkvaSxcbiAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86YXN8YnJlYWt8Y2F0Y2h8ZGVmfGVsaWZ8ZWxzZXxlbmR8Zm9yZWFjaHxpZnxpbXBvcnR8aW5jbHVkZXxsYWJlbHxtb2R1bGV8bW9kdWxlbWV0YXxudWxsfHJlZHVjZXx0aGVufHRyeXx3aGlsZSlcXGIvLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgIG51bWJlcjogLyg/OlxcYlxcZCtcXC58XFxCXFwuKT9cXGJcXGQrKD86W2VFXVsrLV0/XFxkKyk/XFxiLyxcbiAgICAgIG9wZXJhdG9yOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFx8PT8vLFxuICAgICAgICAgIGFsaWFzOiAncGlwZSdcbiAgICAgICAgfSxcbiAgICAgICAgL1xcLlxcLnxbIT08Pl0/PXxcXD9cXC9cXC98XFwvXFwvPT98Wy0rKi8lXT0/fFs8Pj9dfFxcYig/OmFuZHxub3R8b3IpXFxiL1xuICAgICAgXSxcbiAgICAgICdjLXN0eWxlLWZ1bmN0aW9uJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgcHVuY3R1YXRpb246IC86OnxbKClcXFtcXF17fSw6O118XFwuKD89XFxzKltcXFtcXHckXSkvLFxuICAgICAgZG90OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC4vLFxuICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgIH1cbiAgICB9KVxuICAgIHN0cmluZ0ludGVycG9sYXRpb24uaW50ZXJwb2xhdGlvbi5pbnNpZGUuY29udGVudC5pbnNpZGUgPSBqcVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJqcSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiaW50ZXJwb2xhdGlvbiIsInNvdXJjZSIsInN0cmluZyIsIlJlZ0V4cCIsInJlcGxhY2UiLCJzdHJpbmdJbnRlcnBvbGF0aW9uIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJjb250ZW50IiwicHVuY3R1YXRpb24iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicHJvcGVydHkiLCJncmVlZHkiLCJmdW5jdGlvbiIsInZhcmlhYmxlIiwiYWxpYXMiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiZG90Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jq.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-extras.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-extras.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jsExtras)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\njsExtras.displayName = \"js-extras\";\njsExtras.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jsExtras(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.insertBefore(\"javascript\", \"function-variable\", {\n            \"method-variable\": {\n                pattern: RegExp(\"(\\\\.\\\\s*)\" + Prism.languages.javascript[\"function-variable\"].pattern.source),\n                lookbehind: true,\n                alias: [\n                    \"function-variable\",\n                    \"method\",\n                    \"function\",\n                    \"property-access\"\n                ]\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"function\", {\n            method: {\n                pattern: RegExp(\"(\\\\.\\\\s*)\" + Prism.languages.javascript[\"function\"].source),\n                lookbehind: true,\n                alias: [\n                    \"function\",\n                    \"property-access\"\n                ]\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"constant\", {\n            \"known-class-name\": [\n                {\n                    // standard built-ins\n                    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n                    pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n                    alias: \"class-name\"\n                },\n                {\n                    // errors\n                    pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n                    alias: \"class-name\"\n                }\n            ]\n        });\n        /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function withId(source, flags) {\n            return RegExp(source.replace(/<ID>/g, function() {\n                return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n            }), flags);\n        }\n        Prism.languages.insertBefore(\"javascript\", \"keyword\", {\n            imports: {\n                // https://tc39.es/ecma262/#sec-imports\n                pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            exports: {\n                // https://tc39.es/ecma262/#sec-exports\n                pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            }\n        });\n        Prism.languages.javascript[\"keyword\"].unshift({\n            pattern: /\\b(?:as|default|export|from|import)\\b/,\n            alias: \"module\"\n        }, {\n            pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n            alias: \"control-flow\"\n        }, {\n            pattern: /\\bnull\\b/,\n            alias: [\n                \"null\",\n                \"nil\"\n            ]\n        }, {\n            pattern: /\\bundefined\\b/,\n            alias: \"nil\"\n        });\n        Prism.languages.insertBefore(\"javascript\", \"operator\", {\n            spread: {\n                pattern: /\\.{3}/,\n                alias: \"operator\"\n            },\n            arrow: {\n                pattern: /=>/,\n                alias: \"operator\"\n            }\n        });\n        Prism.languages.insertBefore(\"javascript\", \"punctuation\", {\n            \"property-access\": {\n                pattern: withId(/(\\.\\s*)#?<ID>/.source),\n                lookbehind: true\n            },\n            \"maybe-class-name\": {\n                pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n                lookbehind: true\n            },\n            dom: {\n                // this contains only a few commonly used DOM variables\n                pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n                alias: \"variable\"\n            },\n            console: {\n                pattern: /\\bconsole(?=\\s*\\.)/,\n                alias: \"class-name\"\n            }\n        });\n        // add 'maybe-class-name' to tokens which might be a class name\n        var maybeClassNameTokens = [\n            \"function\",\n            \"function-variable\",\n            \"method\",\n            \"method-variable\",\n            \"property-access\"\n        ];\n        for(var i = 0; i < maybeClassNameTokens.length; i++){\n            var token = maybeClassNameTokens[i];\n            var value = Prism.languages.javascript[token];\n            // convert regex to object\n            if (Prism.util.type(value) === \"RegExp\") {\n                value = Prism.languages.javascript[token] = {\n                    pattern: value\n                };\n            }\n            // keep in mind that we don't support arrays\n            var inside = value.inside || {};\n            value.inside = inside;\n            inside[\"maybe-class-name\"] = /^[A-Z][\\s\\S]*/;\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-extras.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-templates.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-templates.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jsTemplates)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\njsTemplates.displayName = \"js-templates\";\njsTemplates.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jsTemplates(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var templateString = Prism.languages.javascript[\"template-string\"];\n        // see the pattern in prism-javascript.js\n        var templateLiteralPattern = templateString.pattern.source;\n        var interpolationObject = templateString.inside[\"interpolation\"];\n        var interpolationPunctuationObject = interpolationObject.inside[\"interpolation-punctuation\"];\n        var interpolationPattern = interpolationObject.pattern.source;\n        /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */ function createTemplate(language, tag) {\n            if (!Prism.languages[language]) {\n                return undefined;\n            }\n            return {\n                pattern: RegExp(\"((?:\" + tag + \")\\\\s*)\" + templateLiteralPattern),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    \"template-punctuation\": {\n                        pattern: /^`|`$/,\n                        alias: \"string\"\n                    },\n                    \"embedded-code\": {\n                        pattern: /[\\s\\S]+/,\n                        alias: language\n                    }\n                }\n            };\n        }\n        Prism.languages.javascript[\"template-string\"] = [\n            // styled-jsx:\n            //   css`a { color: #25F; }`\n            // styled-components:\n            //   styled.h1`color: red;`\n            createTemplate(\"css\", /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\n            // html`<p></p>`\n            // div.innerHTML = `<p></p>`\n            createTemplate(\"html\", /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\n            // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n            createTemplate(\"svg\", /\\bsvg/.source),\n            // md`# h1`, markdown`## h2`\n            createTemplate(\"markdown\", /\\b(?:markdown|md)/.source),\n            // gql`...`, graphql`...`, graphql.experimental`...`\n            createTemplate(\"graphql\", /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\n            // sql`...`\n            createTemplate(\"sql\", /\\bsql/.source),\n            // vanilla template string\n            templateString\n        ].filter(Boolean);\n        /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */ function getPlaceholder(counter, language) {\n            return \"___\" + language.toUpperCase() + \"_\" + counter + \"___\";\n        }\n        /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */ function tokenizeWithHooks(code, grammar, language) {\n            var env = {\n                code: code,\n                grammar: grammar,\n                language: language\n            };\n            Prism.hooks.run(\"before-tokenize\", env);\n            env.tokens = Prism.tokenize(env.code, env.grammar);\n            Prism.hooks.run(\"after-tokenize\", env);\n            return env.tokens;\n        }\n        /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */ function tokenizeInterpolationExpression(expression) {\n            var tempGrammar = {};\n            tempGrammar[\"interpolation-punctuation\"] = interpolationPunctuationObject;\n            /** @type {Array} */ var tokens = Prism.tokenize(expression, tempGrammar);\n            if (tokens.length === 3) {\n                /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */ var args = [\n                    1,\n                    1\n                ];\n                args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, \"javascript\"));\n                tokens.splice.apply(tokens, args);\n            }\n            return new Prism.Token(\"interpolation\", tokens, interpolationObject.alias, expression);\n        }\n        /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */ function tokenizeEmbedded(code, grammar, language) {\n            // 1. First filter out all interpolations\n            // because they might be escaped, we need a lookbehind, so we use Prism\n            /** @type {(Token|string)[]} */ var _tokens = Prism.tokenize(code, {\n                interpolation: {\n                    pattern: RegExp(interpolationPattern),\n                    lookbehind: true\n                }\n            });\n            // replace all interpolations with a placeholder which is not in the code already\n            var placeholderCounter = 0;\n            /** @type {Object<string, string>} */ var placeholderMap = {};\n            var embeddedCode = _tokens.map(function(token) {\n                if (typeof token === \"string\") {\n                    return token;\n                } else {\n                    var interpolationExpression = token.content;\n                    var placeholder;\n                    while(code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1){\n                    /* noop */ }\n                    placeholderMap[placeholder] = interpolationExpression;\n                    return placeholder;\n                }\n            }).join(\"\");\n            // 2. Tokenize the embedded code\n            var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language);\n            // 3. Re-insert the interpolation\n            var placeholders = Object.keys(placeholderMap);\n            placeholderCounter = 0;\n            /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */ function walkTokens(tokens) {\n                for(var i = 0; i < tokens.length; i++){\n                    if (placeholderCounter >= placeholders.length) {\n                        return;\n                    }\n                    var token = tokens[i];\n                    if (typeof token === \"string\" || typeof token.content === \"string\") {\n                        var placeholder = placeholders[placeholderCounter];\n                        var s = typeof token === \"string\" ? token : /** @type {string} */ token.content;\n                        var index = s.indexOf(placeholder);\n                        if (index !== -1) {\n                            ++placeholderCounter;\n                            var before = s.substring(0, index);\n                            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n                            var after = s.substring(index + placeholder.length);\n                            var replacement = [];\n                            if (before) {\n                                replacement.push(before);\n                            }\n                            replacement.push(middle);\n                            if (after) {\n                                var afterTokens = [\n                                    after\n                                ];\n                                walkTokens(afterTokens);\n                                replacement.push.apply(replacement, afterTokens);\n                            }\n                            if (typeof token === \"string\") {\n                                tokens.splice.apply(tokens, [\n                                    i,\n                                    1\n                                ].concat(replacement));\n                                i += replacement.length - 1;\n                            } else {\n                                token.content = replacement;\n                            }\n                        }\n                    } else {\n                        var content = token.content;\n                        if (Array.isArray(content)) {\n                            walkTokens(content);\n                        } else {\n                            walkTokens([\n                                content\n                            ]);\n                        }\n                    }\n                }\n            }\n            walkTokens(embeddedTokens);\n            return new Prism.Token(language, embeddedTokens, \"language-\" + language, code);\n        }\n        /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */ var supportedLanguages = {\n            javascript: true,\n            js: true,\n            typescript: true,\n            ts: true,\n            jsx: true,\n            tsx: true\n        };\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (!(env.language in supportedLanguages)) {\n                return;\n            }\n            /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */ function findTemplateStrings(tokens) {\n                for(var i = 0, l = tokens.length; i < l; i++){\n                    var token = tokens[i];\n                    if (typeof token === \"string\") {\n                        continue;\n                    }\n                    var content = token.content;\n                    if (!Array.isArray(content)) {\n                        if (typeof content !== \"string\") {\n                            findTemplateStrings([\n                                content\n                            ]);\n                        }\n                        continue;\n                    }\n                    if (token.type === \"template-string\") {\n                        /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */ var embedded = content[1];\n                        if (content.length === 3 && typeof embedded !== \"string\" && embedded.type === \"embedded-code\") {\n                            // get string content\n                            var code = stringContent(embedded);\n                            var alias = embedded.alias;\n                            var language = Array.isArray(alias) ? alias[0] : alias;\n                            var grammar = Prism.languages[language];\n                            if (!grammar) {\n                                continue;\n                            }\n                            content[1] = tokenizeEmbedded(code, grammar, language);\n                        }\n                    } else {\n                        findTemplateStrings(content);\n                    }\n                }\n            }\n            findTemplateStrings(env.tokens);\n        });\n        /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */ function stringContent(value) {\n            if (typeof value === \"string\") {\n                return value;\n            } else if (Array.isArray(value)) {\n                return value.map(stringContent).join(\"\");\n            } else {\n                return stringContent(value.content);\n            }\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qcy10ZW1wbGF0ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ21DO0FBQ2pEQyxZQUFZQyxXQUFXLEdBQUc7QUFDMUJELFlBQVlFLE9BQU8sR0FBRyxFQUFFO0FBRXhCLHdDQUF3QyxHQUN6QixTQUFTRixZQUFZRyxLQUFLO0lBQ3ZDQSxNQUFNQyxRQUFRLENBQUNMLHNEQUFtQkE7SUFDaEMsVUFBVUksS0FBSztRQUNmLElBQUlFLGlCQUFpQkYsTUFBTUcsU0FBUyxDQUFDQyxVQUFVLENBQUMsa0JBQWtCO1FBRWxFLHlDQUF5QztRQUN6QyxJQUFJQyx5QkFBeUJILGVBQWVJLE9BQU8sQ0FBQ0MsTUFBTTtRQUMxRCxJQUFJQyxzQkFBc0JOLGVBQWVPLE1BQU0sQ0FBQyxnQkFBZ0I7UUFDaEUsSUFBSUMsaUNBQ0ZGLG9CQUFvQkMsTUFBTSxDQUFDLDRCQUE0QjtRQUN6RCxJQUFJRSx1QkFBdUJILG9CQUFvQkYsT0FBTyxDQUFDQyxNQUFNO1FBRTdEOzs7Ozs7Ozs7O0tBVUMsR0FDRCxTQUFTSyxlQUFlQyxRQUFRLEVBQUVDLEdBQUc7WUFDbkMsSUFBSSxDQUFDZCxNQUFNRyxTQUFTLENBQUNVLFNBQVMsRUFBRTtnQkFDOUIsT0FBT0U7WUFDVDtZQUNBLE9BQU87Z0JBQ0xULFNBQVNVLE9BQU8sU0FBU0YsTUFBTSxXQUFXVDtnQkFDMUNZLFlBQVk7Z0JBQ1pDLFFBQVE7Z0JBQ1JULFFBQVE7b0JBQ04sd0JBQXdCO3dCQUN0QkgsU0FBUzt3QkFDVGEsT0FBTztvQkFDVDtvQkFDQSxpQkFBaUI7d0JBQ2ZiLFNBQVM7d0JBQ1RhLE9BQU9OO29CQUNUO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBYixNQUFNRyxTQUFTLENBQUNDLFVBQVUsQ0FBQyxrQkFBa0IsR0FBRztZQUM5QyxjQUFjO1lBQ2QsNEJBQTRCO1lBQzVCLHFCQUFxQjtZQUNyQiwyQkFBMkI7WUFDM0JRLGVBQ0UsT0FDQSwwSEFDR0wsTUFBTTtZQUVYLGdCQUFnQjtZQUNoQiw0QkFBNEI7WUFDNUJLLGVBQWUsUUFBUSx5Q0FBeUNMLE1BQU07WUFDdEUsMENBQTBDO1lBQzFDSyxlQUFlLE9BQU8sUUFBUUwsTUFBTTtZQUNwQyw0QkFBNEI7WUFDNUJLLGVBQWUsWUFBWSxvQkFBb0JMLE1BQU07WUFDckQsb0RBQW9EO1lBQ3BESyxlQUNFLFdBQ0EsNkNBQTZDTCxNQUFNO1lBRXJELFdBQVc7WUFDWEssZUFBZSxPQUFPLFFBQVFMLE1BQU07WUFDcEMsMEJBQTBCO1lBQzFCTDtTQUNELENBQUNrQixNQUFNLENBQUNDO1FBRVQ7Ozs7OztLQU1DLEdBQ0QsU0FBU0MsZUFBZUMsT0FBTyxFQUFFVixRQUFRO1lBQ3ZDLE9BQU8sUUFBUUEsU0FBU1csV0FBVyxLQUFLLE1BQU1ELFVBQVU7UUFDMUQ7UUFFQTs7Ozs7OztLQU9DLEdBQ0QsU0FBU0Usa0JBQWtCQyxJQUFJLEVBQUVDLE9BQU8sRUFBRWQsUUFBUTtZQUNoRCxJQUFJZSxNQUFNO2dCQUNSRixNQUFNQTtnQkFDTkMsU0FBU0E7Z0JBQ1RkLFVBQVVBO1lBQ1o7WUFDQWIsTUFBTTZCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQkY7WUFDbkNBLElBQUlHLE1BQU0sR0FBRy9CLE1BQU1nQyxRQUFRLENBQUNKLElBQUlGLElBQUksRUFBRUUsSUFBSUQsT0FBTztZQUNqRDNCLE1BQU02QixLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0JGO1lBQ2xDLE9BQU9BLElBQUlHLE1BQU07UUFDbkI7UUFFQTs7Ozs7S0FLQyxHQUNELFNBQVNFLGdDQUFnQ0MsVUFBVTtZQUNqRCxJQUFJQyxjQUFjLENBQUM7WUFDbkJBLFdBQVcsQ0FBQyw0QkFBNEIsR0FBR3pCO1lBRTNDLGtCQUFrQixHQUNsQixJQUFJcUIsU0FBUy9CLE1BQU1nQyxRQUFRLENBQUNFLFlBQVlDO1lBQ3hDLElBQUlKLE9BQU9LLE1BQU0sS0FBSyxHQUFHO2dCQUN2Qjs7Ozs7OztTQU9DLEdBRUQsSUFBSUMsT0FBTztvQkFBQztvQkFBRztpQkFBRTtnQkFDakJBLEtBQUtDLElBQUksQ0FBQ0MsS0FBSyxDQUNiRixNQUNBWixrQkFBa0JNLE1BQU0sQ0FBQyxFQUFFLEVBQUUvQixNQUFNRyxTQUFTLENBQUNDLFVBQVUsRUFBRTtnQkFFM0QyQixPQUFPUyxNQUFNLENBQUNELEtBQUssQ0FBQ1IsUUFBUU07WUFDOUI7WUFDQSxPQUFPLElBQUlyQyxNQUFNeUMsS0FBSyxDQUNwQixpQkFDQVYsUUFDQXZCLG9CQUFvQlcsS0FBSyxFQUN6QmU7UUFFSjtRQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0tBZ0JDLEdBQ0QsU0FBU1EsaUJBQWlCaEIsSUFBSSxFQUFFQyxPQUFPLEVBQUVkLFFBQVE7WUFDL0MseUNBQXlDO1lBRXpDLHVFQUF1RTtZQUN2RSw2QkFBNkIsR0FDN0IsSUFBSThCLFVBQVUzQyxNQUFNZ0MsUUFBUSxDQUFDTixNQUFNO2dCQUNqQ2tCLGVBQWU7b0JBQ2J0QyxTQUFTVSxPQUFPTDtvQkFDaEJNLFlBQVk7Z0JBQ2Q7WUFDRjtZQUVBLGlGQUFpRjtZQUNqRixJQUFJNEIscUJBQXFCO1lBQ3pCLG1DQUFtQyxHQUNuQyxJQUFJQyxpQkFBaUIsQ0FBQztZQUN0QixJQUFJQyxlQUFlSixRQUNoQkssR0FBRyxDQUFDLFNBQVVDLEtBQUs7Z0JBQ2xCLElBQUksT0FBT0EsVUFBVSxVQUFVO29CQUM3QixPQUFPQTtnQkFDVCxPQUFPO29CQUNMLElBQUlDLDBCQUEwQkQsTUFBTUUsT0FBTztvQkFDM0MsSUFBSUM7b0JBQ0osTUFDRTFCLEtBQUsyQixPQUFPLENBQ1RELGNBQWM5QixlQUFldUIsc0JBQXNCaEMsZUFDaEQsQ0FBQyxFQUNQO29CQUNBLFFBQVEsR0FDVjtvQkFDQWlDLGNBQWMsQ0FBQ00sWUFBWSxHQUFHRjtvQkFDOUIsT0FBT0U7Z0JBQ1Q7WUFDRixHQUNDRSxJQUFJLENBQUM7WUFFUixnQ0FBZ0M7WUFFaEMsSUFBSUMsaUJBQWlCOUIsa0JBQWtCc0IsY0FBY3BCLFNBQVNkO1lBRTlELGlDQUFpQztZQUVqQyxJQUFJMkMsZUFBZUMsT0FBT0MsSUFBSSxDQUFDWjtZQUMvQkQscUJBQXFCO1lBRXJCOzs7O09BSUMsR0FDRCxTQUFTYyxXQUFXNUIsTUFBTTtnQkFDeEIsSUFBSyxJQUFJNkIsSUFBSSxHQUFHQSxJQUFJN0IsT0FBT0ssTUFBTSxFQUFFd0IsSUFBSztvQkFDdEMsSUFBSWYsc0JBQXNCVyxhQUFhcEIsTUFBTSxFQUFFO3dCQUM3QztvQkFDRjtvQkFDQSxJQUFJYSxRQUFRbEIsTUFBTSxDQUFDNkIsRUFBRTtvQkFDckIsSUFBSSxPQUFPWCxVQUFVLFlBQVksT0FBT0EsTUFBTUUsT0FBTyxLQUFLLFVBQVU7d0JBQ2xFLElBQUlDLGNBQWNJLFlBQVksQ0FBQ1gsbUJBQW1CO3dCQUNsRCxJQUFJZ0IsSUFDRixPQUFPWixVQUFVLFdBQ2JBLFFBQ0EsbUJBQW1CLEdBQUdBLE1BQU1FLE9BQU87d0JBQ3pDLElBQUlXLFFBQVFELEVBQUVSLE9BQU8sQ0FBQ0Q7d0JBQ3RCLElBQUlVLFVBQVUsQ0FBQyxHQUFHOzRCQUNoQixFQUFFakI7NEJBQ0YsSUFBSWtCLFNBQVNGLEVBQUVHLFNBQVMsQ0FBQyxHQUFHRjs0QkFDNUIsSUFBSUcsU0FBU2hDLGdDQUNYYSxjQUFjLENBQUNNLFlBQVk7NEJBRTdCLElBQUljLFFBQVFMLEVBQUVHLFNBQVMsQ0FBQ0YsUUFBUVYsWUFBWWhCLE1BQU07NEJBQ2xELElBQUkrQixjQUFjLEVBQUU7NEJBQ3BCLElBQUlKLFFBQVE7Z0NBQ1ZJLFlBQVk3QixJQUFJLENBQUN5Qjs0QkFDbkI7NEJBQ0FJLFlBQVk3QixJQUFJLENBQUMyQjs0QkFDakIsSUFBSUMsT0FBTztnQ0FDVCxJQUFJRSxjQUFjO29DQUFDRjtpQ0FBTTtnQ0FDekJQLFdBQVdTO2dDQUNYRCxZQUFZN0IsSUFBSSxDQUFDQyxLQUFLLENBQUM0QixhQUFhQzs0QkFDdEM7NEJBQ0EsSUFBSSxPQUFPbkIsVUFBVSxVQUFVO2dDQUM3QmxCLE9BQU9TLE1BQU0sQ0FBQ0QsS0FBSyxDQUFDUixRQUFRO29DQUFDNkI7b0NBQUc7aUNBQUUsQ0FBQ1MsTUFBTSxDQUFDRjtnQ0FDMUNQLEtBQUtPLFlBQVkvQixNQUFNLEdBQUc7NEJBQzVCLE9BQU87Z0NBQ0xhLE1BQU1FLE9BQU8sR0FBR2dCOzRCQUNsQjt3QkFDRjtvQkFDRixPQUFPO3dCQUNMLElBQUloQixVQUFVRixNQUFNRSxPQUFPO3dCQUMzQixJQUFJbUIsTUFBTUMsT0FBTyxDQUFDcEIsVUFBVTs0QkFDMUJRLFdBQVdSO3dCQUNiLE9BQU87NEJBQ0xRLFdBQVc7Z0NBQUNSOzZCQUFRO3dCQUN0QjtvQkFDRjtnQkFDRjtZQUNGO1lBQ0FRLFdBQVdKO1lBQ1gsT0FBTyxJQUFJdkQsTUFBTXlDLEtBQUssQ0FDcEI1QixVQUNBMEMsZ0JBQ0EsY0FBYzFDLFVBQ2RhO1FBRUo7UUFFQTs7OztLQUlDLEdBQ0QsSUFBSThDLHFCQUFxQjtZQUN2QnBFLFlBQVk7WUFDWnFFLElBQUk7WUFDSkMsWUFBWTtZQUNaQyxJQUFJO1lBQ0pDLEtBQUs7WUFDTEMsS0FBSztRQUNQO1FBQ0E3RSxNQUFNNkIsS0FBSyxDQUFDaUQsR0FBRyxDQUFDLGtCQUFrQixTQUFVbEQsR0FBRztZQUM3QyxJQUFJLENBQUVBLENBQUFBLElBQUlmLFFBQVEsSUFBSTJELGtCQUFpQixHQUFJO2dCQUN6QztZQUNGO1lBRUE7Ozs7O09BS0MsR0FDRCxTQUFTTyxvQkFBb0JoRCxNQUFNO2dCQUNqQyxJQUFLLElBQUk2QixJQUFJLEdBQUdvQixJQUFJakQsT0FBT0ssTUFBTSxFQUFFd0IsSUFBSW9CLEdBQUdwQixJQUFLO29CQUM3QyxJQUFJWCxRQUFRbEIsTUFBTSxDQUFDNkIsRUFBRTtvQkFDckIsSUFBSSxPQUFPWCxVQUFVLFVBQVU7d0JBQzdCO29CQUNGO29CQUNBLElBQUlFLFVBQVVGLE1BQU1FLE9BQU87b0JBQzNCLElBQUksQ0FBQ21CLE1BQU1DLE9BQU8sQ0FBQ3BCLFVBQVU7d0JBQzNCLElBQUksT0FBT0EsWUFBWSxVQUFVOzRCQUMvQjRCLG9CQUFvQjtnQ0FBQzVCOzZCQUFRO3dCQUMvQjt3QkFDQTtvQkFDRjtvQkFDQSxJQUFJRixNQUFNZ0MsSUFBSSxLQUFLLG1CQUFtQjt3QkFDcEM7Ozs7Ozs7Ozs7Ozs7YUFhQyxHQUVELElBQUlDLFdBQVcvQixPQUFPLENBQUMsRUFBRTt3QkFDekIsSUFDRUEsUUFBUWYsTUFBTSxLQUFLLEtBQ25CLE9BQU84QyxhQUFhLFlBQ3BCQSxTQUFTRCxJQUFJLEtBQUssaUJBQ2xCOzRCQUNBLHFCQUFxQjs0QkFDckIsSUFBSXZELE9BQU95RCxjQUFjRDs0QkFDekIsSUFBSS9ELFFBQVErRCxTQUFTL0QsS0FBSzs0QkFDMUIsSUFBSU4sV0FBV3lELE1BQU1DLE9BQU8sQ0FBQ3BELFNBQVNBLEtBQUssQ0FBQyxFQUFFLEdBQUdBOzRCQUNqRCxJQUFJUSxVQUFVM0IsTUFBTUcsU0FBUyxDQUFDVSxTQUFTOzRCQUN2QyxJQUFJLENBQUNjLFNBQVM7Z0NBRVo7NEJBQ0Y7NEJBQ0F3QixPQUFPLENBQUMsRUFBRSxHQUFHVCxpQkFBaUJoQixNQUFNQyxTQUFTZDt3QkFDL0M7b0JBQ0YsT0FBTzt3QkFDTGtFLG9CQUFvQjVCO29CQUN0QjtnQkFDRjtZQUNGO1lBQ0E0QixvQkFBb0JuRCxJQUFJRyxNQUFNO1FBQ2hDO1FBRUE7Ozs7O0tBS0MsR0FDRCxTQUFTb0QsY0FBY0MsS0FBSztZQUMxQixJQUFJLE9BQU9BLFVBQVUsVUFBVTtnQkFDN0IsT0FBT0E7WUFDVCxPQUFPLElBQUlkLE1BQU1DLE9BQU8sQ0FBQ2EsUUFBUTtnQkFDL0IsT0FBT0EsTUFBTXBDLEdBQUcsQ0FBQ21DLGVBQWU3QixJQUFJLENBQUM7WUFDdkMsT0FBTztnQkFDTCxPQUFPNkIsY0FBY0MsTUFBTWpDLE9BQU87WUFDcEM7UUFDRjtJQUNGLEdBQUduRDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzLXRlbXBsYXRlcy5qcz80MzFkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9ySmF2YXNjcmlwdCBmcm9tICcuL2phdmFzY3JpcHQuanMnXG5qc1RlbXBsYXRlcy5kaXNwbGF5TmFtZSA9ICdqcy10ZW1wbGF0ZXMnXG5qc1RlbXBsYXRlcy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqc1RlbXBsYXRlcyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhc2NyaXB0KVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciB0ZW1wbGF0ZVN0cmluZyA9IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0Wyd0ZW1wbGF0ZS1zdHJpbmcnXVxuXG4gICAgLy8gc2VlIHRoZSBwYXR0ZXJuIGluIHByaXNtLWphdmFzY3JpcHQuanNcbiAgICB2YXIgdGVtcGxhdGVMaXRlcmFsUGF0dGVybiA9IHRlbXBsYXRlU3RyaW5nLnBhdHRlcm4uc291cmNlXG4gICAgdmFyIGludGVycG9sYXRpb25PYmplY3QgPSB0ZW1wbGF0ZVN0cmluZy5pbnNpZGVbJ2ludGVycG9sYXRpb24nXVxuICAgIHZhciBpbnRlcnBvbGF0aW9uUHVuY3R1YXRpb25PYmplY3QgPVxuICAgICAgaW50ZXJwb2xhdGlvbk9iamVjdC5pbnNpZGVbJ2ludGVycG9sYXRpb24tcHVuY3R1YXRpb24nXVxuICAgIHZhciBpbnRlcnBvbGF0aW9uUGF0dGVybiA9IGludGVycG9sYXRpb25PYmplY3QucGF0dGVybi5zb3VyY2VcblxuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgcGF0dGVybiB0byBtYXRjaCBhIHRlbXBsYXRlIHN0cmluZyB3aXRoIGEgc3BlY2lhbCB0YWcuXG4gICAgICpcbiAgICAgKiBUaGlzIHdpbGwgcmV0dXJuIGB1bmRlZmluZWRgIGlmIHRoZXJlIGlzIG5vIGdyYW1tYXIgd2l0aCB0aGUgZ2l2ZW4gbGFuZ3VhZ2UgaWQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZ3VhZ2UgVGhlIGxhbmd1YWdlIGlkIG9mIHRoZSBlbWJlZGRlZCBsYW5ndWFnZS4gRS5nLiBgbWFya2Rvd25gLlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0YWcgVGhlIHJlZ2V4IHBhdHRlcm4gdG8gbWF0Y2ggdGhlIHRhZy5cbiAgICAgKiBAcmV0dXJucyB7b2JqZWN0IHwgdW5kZWZpbmVkfVxuICAgICAqIEBleGFtcGxlXG4gICAgICogY3JlYXRlVGVtcGxhdGUoJ2NzcycsIC9cXGJjc3MvLnNvdXJjZSk7XG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlVGVtcGxhdGUobGFuZ3VhZ2UsIHRhZykge1xuICAgICAgaWYgKCFQcmlzbS5sYW5ndWFnZXNbbGFuZ3VhZ2VdKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWRcbiAgICAgIH1cbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cCgnKCg/OicgKyB0YWcgKyAnKVxcXFxzKiknICsgdGVtcGxhdGVMaXRlcmFsUGF0dGVybiksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgJ3RlbXBsYXRlLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL15gfGAkLyxcbiAgICAgICAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgJ2VtYmVkZGVkLWNvZGUnOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgIGFsaWFzOiBsYW5ndWFnZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdFsndGVtcGxhdGUtc3RyaW5nJ10gPSBbXG4gICAgICAvLyBzdHlsZWQtanN4OlxuICAgICAgLy8gICBjc3NgYSB7IGNvbG9yOiAjMjVGOyB9YFxuICAgICAgLy8gc3R5bGVkLWNvbXBvbmVudHM6XG4gICAgICAvLyAgIHN0eWxlZC5oMWBjb2xvcjogcmVkO2BcbiAgICAgIGNyZWF0ZVRlbXBsYXRlKFxuICAgICAgICAnY3NzJyxcbiAgICAgICAgL1xcYig/OnN0eWxlZCg/OlxcKFteKV0qXFwpKT8oPzpcXHMqXFwuXFxzKlxcdysoPzpcXChbXildKlxcKSkqKSp8Y3NzKD86XFxzKlxcLlxccyooPzpnbG9iYWx8cmVzb2x2ZSkpP3xjcmVhdGVHbG9iYWxTdHlsZXxrZXlmcmFtZXMpL1xuICAgICAgICAgIC5zb3VyY2VcbiAgICAgICksXG4gICAgICAvLyBodG1sYDxwPjwvcD5gXG4gICAgICAvLyBkaXYuaW5uZXJIVE1MID0gYDxwPjwvcD5gXG4gICAgICBjcmVhdGVUZW1wbGF0ZSgnaHRtbCcsIC9cXGJodG1sfFxcLlxccyooPzppbm5lcnxvdXRlcilIVE1MXFxzKlxcKz89Ly5zb3VyY2UpLFxuICAgICAgLy8gc3ZnYDxwYXRoIGZpbGw9XCIjZmZmXCIgZD1cIk01NS4zNyAuLi5cIi8+YFxuICAgICAgY3JlYXRlVGVtcGxhdGUoJ3N2ZycsIC9cXGJzdmcvLnNvdXJjZSksXG4gICAgICAvLyBtZGAjIGgxYCwgbWFya2Rvd25gIyMgaDJgXG4gICAgICBjcmVhdGVUZW1wbGF0ZSgnbWFya2Rvd24nLCAvXFxiKD86bWFya2Rvd258bWQpLy5zb3VyY2UpLFxuICAgICAgLy8gZ3FsYC4uLmAsIGdyYXBocWxgLi4uYCwgZ3JhcGhxbC5leHBlcmltZW50YWxgLi4uYFxuICAgICAgY3JlYXRlVGVtcGxhdGUoXG4gICAgICAgICdncmFwaHFsJyxcbiAgICAgICAgL1xcYig/OmdxbHxncmFwaHFsKD86XFxzKlxcLlxccypleHBlcmltZW50YWwpPykvLnNvdXJjZVxuICAgICAgKSxcbiAgICAgIC8vIHNxbGAuLi5gXG4gICAgICBjcmVhdGVUZW1wbGF0ZSgnc3FsJywgL1xcYnNxbC8uc291cmNlKSxcbiAgICAgIC8vIHZhbmlsbGEgdGVtcGxhdGUgc3RyaW5nXG4gICAgICB0ZW1wbGF0ZVN0cmluZ1xuICAgIF0uZmlsdGVyKEJvb2xlYW4pXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc3BlY2lmaWMgcGxhY2Vob2xkZXIgbGl0ZXJhbCBmb3IgdGhlIGdpdmVuIGxhbmd1YWdlLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGNvdW50ZXJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZ3VhZ2VcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGdldFBsYWNlaG9sZGVyKGNvdW50ZXIsIGxhbmd1YWdlKSB7XG4gICAgICByZXR1cm4gJ19fXycgKyBsYW5ndWFnZS50b1VwcGVyQ2FzZSgpICsgJ18nICsgY291bnRlciArICdfX18nXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgdG9rZW5zIG9mIGBQcmlzbS50b2tlbml6ZWAgYnV0IGFsc28gcnVucyB0aGUgYGJlZm9yZS10b2tlbml6ZWAgYW5kIGBhZnRlci10b2tlbml6ZWAgaG9va3MuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY29kZVxuICAgICAqIEBwYXJhbSB7YW55fSBncmFtbWFyXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGxhbmd1YWdlXG4gICAgICogQHJldHVybnMgeyhzdHJpbmd8VG9rZW4pW119XG4gICAgICovXG4gICAgZnVuY3Rpb24gdG9rZW5pemVXaXRoSG9va3MoY29kZSwgZ3JhbW1hciwgbGFuZ3VhZ2UpIHtcbiAgICAgIHZhciBlbnYgPSB7XG4gICAgICAgIGNvZGU6IGNvZGUsXG4gICAgICAgIGdyYW1tYXI6IGdyYW1tYXIsXG4gICAgICAgIGxhbmd1YWdlOiBsYW5ndWFnZVxuICAgICAgfVxuICAgICAgUHJpc20uaG9va3MucnVuKCdiZWZvcmUtdG9rZW5pemUnLCBlbnYpXG4gICAgICBlbnYudG9rZW5zID0gUHJpc20udG9rZW5pemUoZW52LmNvZGUsIGVudi5ncmFtbWFyKVxuICAgICAgUHJpc20uaG9va3MucnVuKCdhZnRlci10b2tlbml6ZScsIGVudilcbiAgICAgIHJldHVybiBlbnYudG9rZW5zXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyB0aGUgdG9rZW4gb2YgdGhlIGdpdmVuIEphdmFTY3JpcHQgaW50ZXJwb2xhdGlvbiBleHByZXNzaW9uLlxuICAgICAqXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV4cHJlc3Npb24gVGhlIGNvZGUgb2YgdGhlIGV4cHJlc3Npb24uIEUuZy4gYFwiJHs0Mn1cImBcbiAgICAgKiBAcmV0dXJucyB7VG9rZW59XG4gICAgICovXG4gICAgZnVuY3Rpb24gdG9rZW5pemVJbnRlcnBvbGF0aW9uRXhwcmVzc2lvbihleHByZXNzaW9uKSB7XG4gICAgICB2YXIgdGVtcEdyYW1tYXIgPSB7fVxuICAgICAgdGVtcEdyYW1tYXJbJ2ludGVycG9sYXRpb24tcHVuY3R1YXRpb24nXSA9IGludGVycG9sYXRpb25QdW5jdHVhdGlvbk9iamVjdFxuXG4gICAgICAvKiogQHR5cGUge0FycmF5fSAqL1xuICAgICAgdmFyIHRva2VucyA9IFByaXNtLnRva2VuaXplKGV4cHJlc3Npb24sIHRlbXBHcmFtbWFyKVxuICAgICAgaWYgKHRva2Vucy5sZW5ndGggPT09IDMpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFRoZSB0b2tlbiBhcnJheSB3aWxsIGxvb2sgbGlrZSB0aGlzXG4gICAgICAgICAqIFtcbiAgICAgICAgICogICAgIFtcImludGVycG9sYXRpb24tcHVuY3R1YXRpb25cIiwgXCIke1wiXVxuICAgICAgICAgKiAgICAgXCIuLi5cIiAvLyBKYXZhU2NyaXB0IGV4cHJlc3Npb24gb2YgdGhlIGludGVycG9sYXRpb25cbiAgICAgICAgICogICAgIFtcImludGVycG9sYXRpb24tcHVuY3R1YXRpb25cIiwgXCJ9XCJdXG4gICAgICAgICAqIF1cbiAgICAgICAgICovXG5cbiAgICAgICAgdmFyIGFyZ3MgPSBbMSwgMV1cbiAgICAgICAgYXJncy5wdXNoLmFwcGx5KFxuICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgdG9rZW5pemVXaXRoSG9va3ModG9rZW5zWzFdLCBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdCwgJ2phdmFzY3JpcHQnKVxuICAgICAgICApXG4gICAgICAgIHRva2Vucy5zcGxpY2UuYXBwbHkodG9rZW5zLCBhcmdzKVxuICAgICAgfVxuICAgICAgcmV0dXJuIG5ldyBQcmlzbS5Ub2tlbihcbiAgICAgICAgJ2ludGVycG9sYXRpb24nLFxuICAgICAgICB0b2tlbnMsXG4gICAgICAgIGludGVycG9sYXRpb25PYmplY3QuYWxpYXMsXG4gICAgICAgIGV4cHJlc3Npb25cbiAgICAgIClcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUb2tlbml6ZXMgdGhlIGdpdmVuIGNvZGUgd2l0aCBzdXBwb3J0IGZvciBKYXZhU2NyaXB0IGludGVycG9sYXRpb24gZXhwcmVzc2lvbnMgbWl4ZWQgaW4uXG4gICAgICpcbiAgICAgKiBUaGlzIGZ1bmN0aW9uIGhhcyAzIHBoYXNlczpcbiAgICAgKlxuICAgICAqIDEuIFJlcGxhY2UgYWxsIEphdmFTY3JpcHQgaW50ZXJwb2xhdGlvbiBleHByZXNzaW9uIHdpdGggYSBwbGFjZWhvbGRlci5cbiAgICAgKiAgICBUaGUgcGxhY2Vob2xkZXIgd2lsbCBoYXZlIHRoZSBzeW50YXggb2YgYSBpZGVudGlmeSBvZiB0aGUgdGFyZ2V0IGxhbmd1YWdlLlxuICAgICAqIDIuIFRva2VuaXplIHRoZSBjb2RlIHdpdGggcGxhY2Vob2xkZXJzLlxuICAgICAqIDMuIFRva2VuaXplIHRoZSBpbnRlcnBvbGF0aW9uIGV4cHJlc3Npb25zIGFuZCByZS1pbnNlcnQgdGhlbSBpbnRvIHRoZSB0b2tlbml6ZSBjb2RlLlxuICAgICAqICAgIFRoZSBpbnNlcnRpb24gb25seSB3b3JrcyBpZiBhIHBsYWNlaG9sZGVyIGhhc24ndCBiZWVuIFwicmlwcGVkIGFwYXJ0XCIgbWVhbmluZyB0aGF0IHRoZSBwbGFjZWhvbGRlciBoYXMgYmVlblxuICAgICAqICAgIHRva2VuaXplZCBhcyB0d28gdG9rZW5zIGJ5IHRoZSBncmFtbWFyIG9mIHRoZSBlbWJlZGRlZCBsYW5ndWFnZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb2RlXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGdyYW1tYXJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbGFuZ3VhZ2VcbiAgICAgKiBAcmV0dXJucyB7VG9rZW59XG4gICAgICovXG4gICAgZnVuY3Rpb24gdG9rZW5pemVFbWJlZGRlZChjb2RlLCBncmFtbWFyLCBsYW5ndWFnZSkge1xuICAgICAgLy8gMS4gRmlyc3QgZmlsdGVyIG91dCBhbGwgaW50ZXJwb2xhdGlvbnNcblxuICAgICAgLy8gYmVjYXVzZSB0aGV5IG1pZ2h0IGJlIGVzY2FwZWQsIHdlIG5lZWQgYSBsb29rYmVoaW5kLCBzbyB3ZSB1c2UgUHJpc21cbiAgICAgIC8qKiBAdHlwZSB7KFRva2VufHN0cmluZylbXX0gKi9cbiAgICAgIHZhciBfdG9rZW5zID0gUHJpc20udG9rZW5pemUoY29kZSwge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKGludGVycG9sYXRpb25QYXR0ZXJuKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH0pXG5cbiAgICAgIC8vIHJlcGxhY2UgYWxsIGludGVycG9sYXRpb25zIHdpdGggYSBwbGFjZWhvbGRlciB3aGljaCBpcyBub3QgaW4gdGhlIGNvZGUgYWxyZWFkeVxuICAgICAgdmFyIHBsYWNlaG9sZGVyQ291bnRlciA9IDBcbiAgICAgIC8qKiBAdHlwZSB7T2JqZWN0PHN0cmluZywgc3RyaW5nPn0gKi9cbiAgICAgIHZhciBwbGFjZWhvbGRlck1hcCA9IHt9XG4gICAgICB2YXIgZW1iZWRkZWRDb2RlID0gX3Rva2Vuc1xuICAgICAgICAubWFwKGZ1bmN0aW9uICh0b2tlbikge1xuICAgICAgICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICByZXR1cm4gdG9rZW5cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGludGVycG9sYXRpb25FeHByZXNzaW9uID0gdG9rZW4uY29udGVudFxuICAgICAgICAgICAgdmFyIHBsYWNlaG9sZGVyXG4gICAgICAgICAgICB3aGlsZSAoXG4gICAgICAgICAgICAgIGNvZGUuaW5kZXhPZihcbiAgICAgICAgICAgICAgICAocGxhY2Vob2xkZXIgPSBnZXRQbGFjZWhvbGRlcihwbGFjZWhvbGRlckNvdW50ZXIrKywgbGFuZ3VhZ2UpKVxuICAgICAgICAgICAgICApICE9PSAtMVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIC8qIG5vb3AgKi9cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHBsYWNlaG9sZGVyTWFwW3BsYWNlaG9sZGVyXSA9IGludGVycG9sYXRpb25FeHByZXNzaW9uXG4gICAgICAgICAgICByZXR1cm4gcGxhY2Vob2xkZXJcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKCcnKVxuXG4gICAgICAvLyAyLiBUb2tlbml6ZSB0aGUgZW1iZWRkZWQgY29kZVxuXG4gICAgICB2YXIgZW1iZWRkZWRUb2tlbnMgPSB0b2tlbml6ZVdpdGhIb29rcyhlbWJlZGRlZENvZGUsIGdyYW1tYXIsIGxhbmd1YWdlKVxuXG4gICAgICAvLyAzLiBSZS1pbnNlcnQgdGhlIGludGVycG9sYXRpb25cblxuICAgICAgdmFyIHBsYWNlaG9sZGVycyA9IE9iamVjdC5rZXlzKHBsYWNlaG9sZGVyTWFwKVxuICAgICAgcGxhY2Vob2xkZXJDb3VudGVyID0gMFxuXG4gICAgICAvKipcbiAgICAgICAqXG4gICAgICAgKiBAcGFyYW0geyhUb2tlbnxzdHJpbmcpW119IHRva2Vuc1xuICAgICAgICogQHJldHVybnMge3ZvaWR9XG4gICAgICAgKi9cbiAgICAgIGZ1bmN0aW9uIHdhbGtUb2tlbnModG9rZW5zKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgaWYgKHBsYWNlaG9sZGVyQ291bnRlciA+PSBwbGFjZWhvbGRlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIHRva2VuID0gdG9rZW5zW2ldXG4gICAgICAgICAgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHRva2VuLmNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB2YXIgcGxhY2Vob2xkZXIgPSBwbGFjZWhvbGRlcnNbcGxhY2Vob2xkZXJDb3VudGVyXVxuICAgICAgICAgICAgdmFyIHMgPVxuICAgICAgICAgICAgICB0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnXG4gICAgICAgICAgICAgICAgPyB0b2tlblxuICAgICAgICAgICAgICAgIDogLyoqIEB0eXBlIHtzdHJpbmd9ICovIHRva2VuLmNvbnRlbnRcbiAgICAgICAgICAgIHZhciBpbmRleCA9IHMuaW5kZXhPZihwbGFjZWhvbGRlcilcbiAgICAgICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgKytwbGFjZWhvbGRlckNvdW50ZXJcbiAgICAgICAgICAgICAgdmFyIGJlZm9yZSA9IHMuc3Vic3RyaW5nKDAsIGluZGV4KVxuICAgICAgICAgICAgICB2YXIgbWlkZGxlID0gdG9rZW5pemVJbnRlcnBvbGF0aW9uRXhwcmVzc2lvbihcbiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlck1hcFtwbGFjZWhvbGRlcl1cbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICB2YXIgYWZ0ZXIgPSBzLnN1YnN0cmluZyhpbmRleCArIHBsYWNlaG9sZGVyLmxlbmd0aClcbiAgICAgICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gW11cbiAgICAgICAgICAgICAgaWYgKGJlZm9yZSkge1xuICAgICAgICAgICAgICAgIHJlcGxhY2VtZW50LnB1c2goYmVmb3JlKVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJlcGxhY2VtZW50LnB1c2gobWlkZGxlKVxuICAgICAgICAgICAgICBpZiAoYWZ0ZXIpIHtcbiAgICAgICAgICAgICAgICB2YXIgYWZ0ZXJUb2tlbnMgPSBbYWZ0ZXJdXG4gICAgICAgICAgICAgICAgd2Fsa1Rva2VucyhhZnRlclRva2VucylcbiAgICAgICAgICAgICAgICByZXBsYWNlbWVudC5wdXNoLmFwcGx5KHJlcGxhY2VtZW50LCBhZnRlclRva2VucylcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIHRva2Vucy5zcGxpY2UuYXBwbHkodG9rZW5zLCBbaSwgMV0uY29uY2F0KHJlcGxhY2VtZW50KSlcbiAgICAgICAgICAgICAgICBpICs9IHJlcGxhY2VtZW50Lmxlbmd0aCAtIDFcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0b2tlbi5jb250ZW50ID0gcmVwbGFjZW1lbnRcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHRva2VuLmNvbnRlbnRcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICAgIHdhbGtUb2tlbnMoY29udGVudClcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHdhbGtUb2tlbnMoW2NvbnRlbnRdKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgd2Fsa1Rva2VucyhlbWJlZGRlZFRva2VucylcbiAgICAgIHJldHVybiBuZXcgUHJpc20uVG9rZW4oXG4gICAgICAgIGxhbmd1YWdlLFxuICAgICAgICBlbWJlZGRlZFRva2VucyxcbiAgICAgICAgJ2xhbmd1YWdlLScgKyBsYW5ndWFnZSxcbiAgICAgICAgY29kZVxuICAgICAgKVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFRoZSBsYW5ndWFnZXMgZm9yIHdoaWNoIEpTIHRlbXBsYXRpbmcgd2lsbCBoYW5kbGUgdGFnZ2VkIHRlbXBsYXRlIGxpdGVyYWxzLlxuICAgICAqXG4gICAgICogSlMgdGVtcGxhdGluZyBpc24ndCBhY3RpdmUgZm9yIG9ubHkgSmF2YVNjcmlwdCBidXQgYWxzbyByZWxhdGVkIGxhbmd1YWdlcyBsaWtlIFR5cGVTY3JpcHQsIEpTWCwgYW5kIFRTWC5cbiAgICAgKi9cbiAgICB2YXIgc3VwcG9ydGVkTGFuZ3VhZ2VzID0ge1xuICAgICAgamF2YXNjcmlwdDogdHJ1ZSxcbiAgICAgIGpzOiB0cnVlLFxuICAgICAgdHlwZXNjcmlwdDogdHJ1ZSxcbiAgICAgIHRzOiB0cnVlLFxuICAgICAganN4OiB0cnVlLFxuICAgICAgdHN4OiB0cnVlXG4gICAgfVxuICAgIFByaXNtLmhvb2tzLmFkZCgnYWZ0ZXItdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICBpZiAoIShlbnYubGFuZ3VhZ2UgaW4gc3VwcG9ydGVkTGFuZ3VhZ2VzKSkge1xuICAgICAgICByZXR1cm5cbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBGaW5kcyBhbmQgdG9rZW5pemVzIGFsbCB0ZW1wbGF0ZSBzdHJpbmdzIHdpdGggYW4gZW1iZWRkZWQgbGFuZ3VhZ2VzLlxuICAgICAgICpcbiAgICAgICAqIEBwYXJhbSB7KFRva2VuIHwgc3RyaW5nKVtdfSB0b2tlbnNcbiAgICAgICAqIEByZXR1cm5zIHt2b2lkfVxuICAgICAgICovXG4gICAgICBmdW5jdGlvbiBmaW5kVGVtcGxhdGVTdHJpbmdzKHRva2Vucykge1xuICAgICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHRva2Vucy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICB2YXIgdG9rZW4gPSB0b2tlbnNbaV1cbiAgICAgICAgICBpZiAodHlwZW9mIHRva2VuID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIGNvbnRlbnQgPSB0b2tlbi5jb250ZW50XG4gICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGNvbnRlbnQpKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGZpbmRUZW1wbGF0ZVN0cmluZ3MoW2NvbnRlbnRdKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHRva2VuLnR5cGUgPT09ICd0ZW1wbGF0ZS1zdHJpbmcnKSB7XG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIEEgSmF2YVNjcmlwdCB0ZW1wbGF0ZS1zdHJpbmcgdG9rZW4gd2lsbCBsb29rIGxpa2UgdGhpczpcbiAgICAgICAgICAgICAqXG4gICAgICAgICAgICAgKiBbXCJ0ZW1wbGF0ZS1zdHJpbmdcIiwgW1xuICAgICAgICAgICAgICogICAgIFtcInRlbXBsYXRlLXB1bmN0dWF0aW9uXCIsIFwiYFwiXSxcbiAgICAgICAgICAgICAqICAgICAoXG4gICAgICAgICAgICAgKiAgICAgICAgIEFuIGFycmF5IG9mIFwic3RyaW5nXCIgYW5kIFwiaW50ZXJwb2xhdGlvblwiIHRva2Vucy4gVGhpcyBpcyB0aGUgc2ltcGxlIHN0cmluZyBjYXNlLlxuICAgICAgICAgICAgICogICAgICAgICBvclxuICAgICAgICAgICAgICogICAgICAgICBbXCJlbWJlZGRlZC1jb2RlXCIsIFwiLi4uXCJdIFRoaXMgaXMgdGhlIHRva2VuIGNvbnRhaW5pbmcgdGhlIGVtYmVkZGVkIGNvZGUuXG4gICAgICAgICAgICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJdCBhbHNvIGhhcyBhbiBhbGlhcyB3aGljaCBpcyB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIGVtYmVkZGVkIGNvZGUuXG4gICAgICAgICAgICAgKiAgICAgKSxcbiAgICAgICAgICAgICAqICAgICBbXCJ0ZW1wbGF0ZS1wdW5jdHVhdGlvblwiLCBcImBcIl1cbiAgICAgICAgICAgICAqIF1dXG4gICAgICAgICAgICAgKi9cblxuICAgICAgICAgICAgdmFyIGVtYmVkZGVkID0gY29udGVudFsxXVxuICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICBjb250ZW50Lmxlbmd0aCA9PT0gMyAmJlxuICAgICAgICAgICAgICB0eXBlb2YgZW1iZWRkZWQgIT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICAgIGVtYmVkZGVkLnR5cGUgPT09ICdlbWJlZGRlZC1jb2RlJ1xuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgIC8vIGdldCBzdHJpbmcgY29udGVudFxuICAgICAgICAgICAgICB2YXIgY29kZSA9IHN0cmluZ0NvbnRlbnQoZW1iZWRkZWQpXG4gICAgICAgICAgICAgIHZhciBhbGlhcyA9IGVtYmVkZGVkLmFsaWFzXG4gICAgICAgICAgICAgIHZhciBsYW5ndWFnZSA9IEFycmF5LmlzQXJyYXkoYWxpYXMpID8gYWxpYXNbMF0gOiBhbGlhc1xuICAgICAgICAgICAgICB2YXIgZ3JhbW1hciA9IFByaXNtLmxhbmd1YWdlc1tsYW5ndWFnZV1cbiAgICAgICAgICAgICAgaWYgKCFncmFtbWFyKSB7XG4gICAgICAgICAgICAgICAgLy8gdGhlIGVtYmVkZGVkIGxhbmd1YWdlIGlzbid0IHJlZ2lzdGVyZWQuXG4gICAgICAgICAgICAgICAgY29udGludWVcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBjb250ZW50WzFdID0gdG9rZW5pemVFbWJlZGRlZChjb2RlLCBncmFtbWFyLCBsYW5ndWFnZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZmluZFRlbXBsYXRlU3RyaW5ncyhjb250ZW50KVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZmluZFRlbXBsYXRlU3RyaW5ncyhlbnYudG9rZW5zKVxuICAgIH0pXG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRoZSBzdHJpbmcgY29udGVudCBvZiBhIHRva2VuIG9yIHRva2VuIHN0cmVhbS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nIHwgVG9rZW4gfCAoc3RyaW5nIHwgVG9rZW4pW119IHZhbHVlXG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBzdHJpbmdDb250ZW50KHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdmFsdWVcbiAgICAgIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLm1hcChzdHJpbmdDb250ZW50KS5qb2luKCcnKVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZ0NvbnRlbnQodmFsdWUuY29udGVudClcbiAgICAgIH1cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckphdmFzY3JpcHQiLCJqc1RlbXBsYXRlcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJ0ZW1wbGF0ZVN0cmluZyIsImxhbmd1YWdlcyIsImphdmFzY3JpcHQiLCJ0ZW1wbGF0ZUxpdGVyYWxQYXR0ZXJuIiwicGF0dGVybiIsInNvdXJjZSIsImludGVycG9sYXRpb25PYmplY3QiLCJpbnNpZGUiLCJpbnRlcnBvbGF0aW9uUHVuY3R1YXRpb25PYmplY3QiLCJpbnRlcnBvbGF0aW9uUGF0dGVybiIsImNyZWF0ZVRlbXBsYXRlIiwibGFuZ3VhZ2UiLCJ0YWciLCJ1bmRlZmluZWQiLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiYWxpYXMiLCJmaWx0ZXIiLCJCb29sZWFuIiwiZ2V0UGxhY2Vob2xkZXIiLCJjb3VudGVyIiwidG9VcHBlckNhc2UiLCJ0b2tlbml6ZVdpdGhIb29rcyIsImNvZGUiLCJncmFtbWFyIiwiZW52IiwiaG9va3MiLCJydW4iLCJ0b2tlbnMiLCJ0b2tlbml6ZSIsInRva2VuaXplSW50ZXJwb2xhdGlvbkV4cHJlc3Npb24iLCJleHByZXNzaW9uIiwidGVtcEdyYW1tYXIiLCJsZW5ndGgiLCJhcmdzIiwicHVzaCIsImFwcGx5Iiwic3BsaWNlIiwiVG9rZW4iLCJ0b2tlbml6ZUVtYmVkZGVkIiwiX3Rva2VucyIsImludGVycG9sYXRpb24iLCJwbGFjZWhvbGRlckNvdW50ZXIiLCJwbGFjZWhvbGRlck1hcCIsImVtYmVkZGVkQ29kZSIsIm1hcCIsInRva2VuIiwiaW50ZXJwb2xhdGlvbkV4cHJlc3Npb24iLCJjb250ZW50IiwicGxhY2Vob2xkZXIiLCJpbmRleE9mIiwiam9pbiIsImVtYmVkZGVkVG9rZW5zIiwicGxhY2Vob2xkZXJzIiwiT2JqZWN0Iiwia2V5cyIsIndhbGtUb2tlbnMiLCJpIiwicyIsImluZGV4IiwiYmVmb3JlIiwic3Vic3RyaW5nIiwibWlkZGxlIiwiYWZ0ZXIiLCJyZXBsYWNlbWVudCIsImFmdGVyVG9rZW5zIiwiY29uY2F0IiwiQXJyYXkiLCJpc0FycmF5Iiwic3VwcG9ydGVkTGFuZ3VhZ2VzIiwianMiLCJ0eXBlc2NyaXB0IiwidHMiLCJqc3giLCJ0c3giLCJhZGQiLCJmaW5kVGVtcGxhdGVTdHJpbmdzIiwibCIsInR5cGUiLCJlbWJlZGRlZCIsInN0cmluZ0NvbnRlbnQiLCJ2YWx1ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-templates.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsdoc.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsdoc.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jsdoc)\n/* harmony export */ });\n/* harmony import */ var _javadoclike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javadoclike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js\");\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n/* harmony import */ var _typescript_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js\");\n// @ts-nocheck\n\n\n\njsdoc.displayName = \"jsdoc\";\njsdoc.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jsdoc(Prism) {\n    Prism.register(_javadoclike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.register(_typescript_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    (function(Prism) {\n        var javascript = Prism.languages.javascript;\n        var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source;\n        var parameterPrefix = \"(@(?:arg|argument|param|property)\\\\s+(?:\" + type + \"\\\\s+)?)\";\n        Prism.languages.jsdoc = Prism.languages.extend(\"javadoclike\", {\n            parameter: {\n                // @param {string} foo - foo bar\n                pattern: RegExp(parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source),\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"jsdoc\", \"keyword\", {\n            \"optional-parameter\": {\n                // @param {string} [baz.foo=\"bar\"] foo bar\n                pattern: RegExp(parameterPrefix + /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source),\n                lookbehind: true,\n                inside: {\n                    parameter: {\n                        pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /\\./\n                        }\n                    },\n                    code: {\n                        pattern: /(=)[\\s\\S]*(?=\\]$)/,\n                        lookbehind: true,\n                        inside: javascript,\n                        alias: \"language-javascript\"\n                    },\n                    punctuation: /[=[\\]]/\n                }\n            },\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(/<TYPE>/g, function() {\n                        return type;\n                    })),\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                {\n                    pattern: RegExp(\"(@[a-z]+\\\\s+)\" + type),\n                    lookbehind: true,\n                    inside: {\n                        string: javascript.string,\n                        number: javascript.number,\n                        boolean: javascript.boolean,\n                        keyword: Prism.languages.typescript.keyword,\n                        operator: /=>|\\.\\.\\.|[&|?:*]/,\n                        punctuation: /[.,;=<>{}()[\\]]/\n                    }\n                }\n            ],\n            example: {\n                pattern: /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n                lookbehind: true,\n                inside: {\n                    code: {\n                        pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n                        lookbehind: true,\n                        inside: javascript,\n                        alias: \"language-javascript\"\n                    }\n                }\n            }\n        });\n        Prism.languages.javadoclike.addSupport(\"javascript\", Prism.languages.jsdoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc2RvYy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsY0FBYztBQUNxQztBQUNGO0FBQ0E7QUFDakRHLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ1AsdURBQW9CQTtJQUNuQ00sTUFBTUMsUUFBUSxDQUFDTixzREFBbUJBO0lBQ2xDSyxNQUFNQyxRQUFRLENBQUNMLHNEQUFtQkE7SUFDaEMsVUFBVUksS0FBSztRQUNmLElBQUlFLGFBQWFGLE1BQU1HLFNBQVMsQ0FBQ0QsVUFBVTtRQUMzQyxJQUFJRSxPQUFPLDJDQUEyQ0MsTUFBTTtRQUM1RCxJQUFJQyxrQkFDRiw2Q0FBNkNGLE9BQU87UUFDdERKLE1BQU1HLFNBQVMsQ0FBQ04sS0FBSyxHQUFHRyxNQUFNRyxTQUFTLENBQUNJLE1BQU0sQ0FBQyxlQUFlO1lBQzVEQyxXQUFXO2dCQUNULGdDQUFnQztnQkFDaENDLFNBQVNDLE9BQ1BKLGtCQUFrQix1Q0FBdUNELE1BQU07Z0JBRWpFTSxZQUFZO2dCQUNaQyxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7UUFDRjtRQUNBYixNQUFNRyxTQUFTLENBQUNXLFlBQVksQ0FBQyxTQUFTLFdBQVc7WUFDL0Msc0JBQXNCO2dCQUNwQiwwQ0FBMEM7Z0JBQzFDTCxTQUFTQyxPQUNQSixrQkFDRSx3REFBd0RELE1BQU07Z0JBRWxFTSxZQUFZO2dCQUNaQyxRQUFRO29CQUNOSixXQUFXO3dCQUNUQyxTQUFTO3dCQUNURSxZQUFZO3dCQUNaQyxRQUFROzRCQUNOQyxhQUFhO3dCQUNmO29CQUNGO29CQUNBRSxNQUFNO3dCQUNKTixTQUFTO3dCQUNURSxZQUFZO3dCQUNaQyxRQUFRVjt3QkFDUmMsT0FBTztvQkFDVDtvQkFDQUgsYUFBYTtnQkFDZjtZQUNGO1lBQ0EsY0FBYztnQkFDWjtvQkFDRUosU0FBU0MsT0FDUCxtSEFBbUhMLE1BQU0sQ0FBQ1ksT0FBTyxDQUMvSCxXQUNBO3dCQUNFLE9BQU9iO29CQUNUO29CQUdKTyxZQUFZO29CQUNaQyxRQUFRO3dCQUNOQyxhQUFhO29CQUNmO2dCQUNGO2dCQUNBO29CQUNFSixTQUFTQyxPQUFPLGtCQUFrQk47b0JBQ2xDTyxZQUFZO29CQUNaQyxRQUFRO3dCQUNOTSxRQUFRaEIsV0FBV2dCLE1BQU07d0JBQ3pCQyxRQUFRakIsV0FBV2lCLE1BQU07d0JBQ3pCQyxTQUFTbEIsV0FBV2tCLE9BQU87d0JBQzNCQyxTQUFTckIsTUFBTUcsU0FBUyxDQUFDbUIsVUFBVSxDQUFDRCxPQUFPO3dCQUMzQ0UsVUFBVTt3QkFDVlYsYUFBYTtvQkFDZjtnQkFDRjthQUNEO1lBQ0RXLFNBQVM7Z0JBQ1BmLFNBQ0U7Z0JBQ0ZFLFlBQVk7Z0JBQ1pDLFFBQVE7b0JBQ05HLE1BQU07d0JBQ0pOLFNBQVM7d0JBQ1RFLFlBQVk7d0JBQ1pDLFFBQVFWO3dCQUNSYyxPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBaEIsTUFBTUcsU0FBUyxDQUFDc0IsV0FBVyxDQUFDQyxVQUFVLENBQUMsY0FBYzFCLE1BQU1HLFNBQVMsQ0FBQ04sS0FBSztJQUM1RSxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzZG9jLmpzPzU3OGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKYXZhZG9jbGlrZSBmcm9tICcuL2phdmFkb2NsaWtlLmpzJ1xuaW1wb3J0IHJlZnJhY3RvckphdmFzY3JpcHQgZnJvbSAnLi9qYXZhc2NyaXB0LmpzJ1xuaW1wb3J0IHJlZnJhY3RvclR5cGVzY3JpcHQgZnJvbSAnLi90eXBlc2NyaXB0LmpzJ1xuanNkb2MuZGlzcGxheU5hbWUgPSAnanNkb2MnXG5qc2RvYy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqc2RvYyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhZG9jbGlrZSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YXNjcmlwdClcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVHlwZXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgamF2YXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy5qYXZhc2NyaXB0XG4gICAgdmFyIHR5cGUgPSAvXFx7KD86W157fV18XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pK1xcfS8uc291cmNlXG4gICAgdmFyIHBhcmFtZXRlclByZWZpeCA9XG4gICAgICAnKEAoPzphcmd8YXJndW1lbnR8cGFyYW18cHJvcGVydHkpXFxcXHMrKD86JyArIHR5cGUgKyAnXFxcXHMrKT8pJ1xuICAgIFByaXNtLmxhbmd1YWdlcy5qc2RvYyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFkb2NsaWtlJywge1xuICAgICAgcGFyYW1ldGVyOiB7XG4gICAgICAgIC8vIEBwYXJhbSB7c3RyaW5nfSBmb28gLSBmb28gYmFyXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBwYXJhbWV0ZXJQcmVmaXggKyAvKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRi5dKSsoPz1cXHN8JCkvLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnanNkb2MnLCAna2V5d29yZCcsIHtcbiAgICAgICdvcHRpb25hbC1wYXJhbWV0ZXInOiB7XG4gICAgICAgIC8vIEBwYXJhbSB7c3RyaW5nfSBbYmF6LmZvbz1cImJhclwiXSBmb28gYmFyXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBwYXJhbWV0ZXJQcmVmaXggK1xuICAgICAgICAgICAgL1xcWyg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkYuXSkrKD86PVteW1xcXV0rKT9cXF0oPz1cXHN8JCkvLnNvdXJjZVxuICAgICAgICApLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwYXJhbWV0ZXI6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXlxcWylbJFxcd1xceEEwLVxcdUZGRkZcXC5dKy8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgcGF0dGVybjogLyg9KVtcXHNcXFNdKig/PVxcXSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IGphdmFzY3JpcHQsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1s9W1xcXV0vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oQCg/OmF1Z21lbnRzfGNsYXNzfGV4dGVuZHN8aW50ZXJmYWNlfG1lbWJlcm9mIT98dGVtcGxhdGV8dGhpc3x0eXBlZGVmKVxccysoPzo8VFlQRT5cXHMrKT8pW0EtWl1cXHcqKD86XFwuW0EtWl1cXHcqKSovLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAvPFRZUEU+L2csXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKCcoQFthLXpdK1xcXFxzKyknICsgdHlwZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHN0cmluZzogamF2YXNjcmlwdC5zdHJpbmcsXG4gICAgICAgICAgICBudW1iZXI6IGphdmFzY3JpcHQubnVtYmVyLFxuICAgICAgICAgICAgYm9vbGVhbjogamF2YXNjcmlwdC5ib29sZWFuLFxuICAgICAgICAgICAga2V5d29yZDogUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHQua2V5d29yZCxcbiAgICAgICAgICAgIG9wZXJhdG9yOiAvPT58XFwuXFwuXFwufFsmfD86Kl0vLFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bLiw7PTw+e30oKVtcXF1dL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGV4YW1wbGU6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKEBleGFtcGxlXFxzKyg/IVxccykpKD86W15AXFxzXXxcXHMrKD8hXFxzKSkrPyg/PVxccyooPzpcXCpcXHMqKT8oPzpAXFx3fFxcKlxcLykpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgY29kZToge1xuICAgICAgICAgICAgcGF0dGVybjogL14oW1xcdCBdKig/OlxcKlxccyopPylcXFMuKiQvbSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IGphdmFzY3JpcHQsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWphdmFzY3JpcHQnXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YWRvY2xpa2UuYWRkU3VwcG9ydCgnamF2YXNjcmlwdCcsIFByaXNtLmxhbmd1YWdlcy5qc2RvYylcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YWRvY2xpa2UiLCJyZWZyYWN0b3JKYXZhc2NyaXB0IiwicmVmcmFjdG9yVHlwZXNjcmlwdCIsImpzZG9jIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImphdmFzY3JpcHQiLCJsYW5ndWFnZXMiLCJ0eXBlIiwic291cmNlIiwicGFyYW1ldGVyUHJlZml4IiwiZXh0ZW5kIiwicGFyYW1ldGVyIiwicGF0dGVybiIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImluc2VydEJlZm9yZSIsImNvZGUiLCJhbGlhcyIsInJlcGxhY2UiLCJzdHJpbmciLCJudW1iZXIiLCJib29sZWFuIiwia2V5d29yZCIsInR5cGVzY3JpcHQiLCJvcGVyYXRvciIsImV4YW1wbGUiLCJqYXZhZG9jbGlrZSIsImFkZFN1cHBvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsdoc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ json)\n/* harmony export */ });\n// @ts-nocheck\njson.displayName = \"json\";\njson.aliases = [\n    \"webmanifest\"\n];\n/** @type {import('../core.js').Syntax} */ function json(Prism) {\n    // https://www.json.org/json-en.html\n    Prism.languages.json = {\n        property: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n            lookbehind: true,\n            greedy: true\n        },\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n        },\n        number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n        punctuation: /[{}[\\],]/,\n        operator: /:/,\n        boolean: /\\b(?:false|true)\\b/,\n        null: {\n            pattern: /\\bnull\\b/,\n            alias: \"keyword\"\n        }\n    };\n    Prism.languages.webmanifest = Prism.languages.json;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc29uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHO0lBQUM7Q0FBYztBQUU5Qix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQyxvQ0FBb0M7SUFDcENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxVQUFVO1lBQ1JDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FFLFNBQVM7WUFDUEosU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUcsUUFBUTtRQUNSQyxhQUFhO1FBQ2JDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxNQUFNO1lBQ0pULFNBQVM7WUFDVFUsT0FBTztRQUNUO0lBQ0Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDYSxXQUFXLEdBQUdkLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSTtBQUNwRCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc29uLmpzP2NlMmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmpzb24uZGlzcGxheU5hbWUgPSAnanNvbidcbmpzb24uYWxpYXNlcyA9IFsnd2VibWFuaWZlc3QnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGpzb24oUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly93d3cuanNvbi5vcmcvanNvbi1lbi5odG1sXG4gIFByaXNtLmxhbmd1YWdlcy5qc29uID0ge1xuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIoPz1cXHMqOikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIoPyFcXHMqOikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj8oPzpcXCpcXC98JCkvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBudW1iZXI6IC8tP1xcYlxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT9cXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF0sXS8sXG4gICAgb3BlcmF0b3I6IC86LyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIG51bGw6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJudWxsXFxiLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9XG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLndlYm1hbmlmZXN0ID0gUHJpc20ubGFuZ3VhZ2VzLmpzb25cbn1cbiJdLCJuYW1lcyI6WyJqc29uIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJwcm9wZXJ0eSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwiY29tbWVudCIsIm51bWJlciIsInB1bmN0dWF0aW9uIiwib3BlcmF0b3IiLCJib29sZWFuIiwibnVsbCIsImFsaWFzIiwid2VibWFuaWZlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json5.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json5.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ json5)\n/* harmony export */ });\n/* harmony import */ var _json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js\");\n// @ts-nocheck\n\njson5.displayName = \"json5\";\njson5.aliases = [];\n/** @type {import('../core.js').Syntax} */ function json5(Prism) {\n    Prism.register(_json_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        Prism.languages.json5 = Prism.languages.extend(\"json\", {\n            property: [\n                {\n                    pattern: RegExp(string.source + \"(?=\\\\s*:)\"),\n                    greedy: true\n                },\n                {\n                    pattern: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n                    alias: \"unquoted\"\n                }\n            ],\n            string: {\n                pattern: string,\n                greedy: true\n            },\n            number: /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc29uNS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDdUI7QUFDckNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsZ0RBQWFBO0lBQzFCLFVBQVVJLEtBQUs7UUFDZixJQUFJRSxTQUFTO1FBQ2JGLE1BQU1HLFNBQVMsQ0FBQ04sS0FBSyxHQUFHRyxNQUFNRyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxRQUFRO1lBQ3JEQyxVQUFVO2dCQUNSO29CQUNFQyxTQUFTQyxPQUFPTCxPQUFPTSxNQUFNLEdBQUc7b0JBQ2hDQyxRQUFRO2dCQUNWO2dCQUNBO29CQUNFSCxTQUNFO29CQUNGSSxPQUFPO2dCQUNUO2FBQ0Q7WUFDRFIsUUFBUTtnQkFDTkksU0FBU0o7Z0JBQ1RPLFFBQVE7WUFDVjtZQUNBRSxRQUNFO1FBQ0o7SUFDRixHQUFHWDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2pzb241LmpzPzQ0MTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKc29uIGZyb20gJy4vanNvbi5qcydcbmpzb241LmRpc3BsYXlOYW1lID0gJ2pzb241J1xuanNvbjUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ganNvbjUoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySnNvbilcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgc3RyaW5nID0gLyhcInwnKSg/OlxcXFwoPzpcXHJcXG4/fFxcbnwuKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxL1xuICAgIFByaXNtLmxhbmd1YWdlcy5qc29uNSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2pzb24nLCB7XG4gICAgICBwcm9wZXJ0eTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKHN0cmluZy5zb3VyY2UgKyAnKD89XFxcXHMqOiknKSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdKD86KD8hXFxzKVskXFx3XFx4QTAtXFx1RkZGRl0pKig/PVxccyo6KS8sXG4gICAgICAgICAgYWxpYXM6ICd1bnF1b3RlZCdcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiBzdHJpbmcsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1srLV0/XFxiKD86TmFOfEluZmluaXR5fDB4W2EtZkEtRlxcZF0rKVxcYnxbKy1dPyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbZUVdWystXT9cXGQrXFxiKT8vXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySnNvbiIsImpzb241IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsInN0cmluZyIsImxhbmd1YWdlcyIsImV4dGVuZCIsInByb3BlcnR5IiwicGF0dGVybiIsIlJlZ0V4cCIsInNvdXJjZSIsImdyZWVkeSIsImFsaWFzIiwibnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json5.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsonp.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsonp.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jsonp)\n/* harmony export */ });\n/* harmony import */ var _json_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./json.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js\");\n// @ts-nocheck\n\njsonp.displayName = \"jsonp\";\njsonp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jsonp(Prism) {\n    Prism.register(_json_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.jsonp = Prism.languages.extend(\"json\", {\n        punctuation: /[{}[\\]();,.]/\n    });\n    Prism.languages.insertBefore(\"jsonp\", \"punctuation\", {\n        function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc29ucC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDdUI7QUFDckNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsZ0RBQWFBO0lBQzVCSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsUUFBUTtRQUNyREMsYUFBYTtJQUNmO0lBQ0FKLE1BQU1FLFNBQVMsQ0FBQ0csWUFBWSxDQUFDLFNBQVMsZUFBZTtRQUNuREMsVUFBVTtJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanNvbnAuanM/NGIwZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3Rvckpzb24gZnJvbSAnLi9qc29uLmpzJ1xuanNvbnAuZGlzcGxheU5hbWUgPSAnanNvbnAnXG5qc29ucC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqc29ucChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKc29uKVxuICBQcmlzbS5sYW5ndWFnZXMuanNvbnAgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqc29uJywge1xuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXSgpOywuXS9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnanNvbnAnLCAncHVuY3R1YXRpb24nLCB7XG4gICAgZnVuY3Rpb246IC8oPyFcXHMpW18kYS16QS1aXFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWyRcXHdcXHhBMC1cXHVGRkZGXSkqKD89XFxzKlxcKCkvXG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySnNvbiIsImpzb25wIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInB1bmN0dWF0aW9uIiwiaW5zZXJ0QmVmb3JlIiwiZnVuY3Rpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsonp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsstacktrace.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsstacktrace.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jsstacktrace)\n/* harmony export */ });\n// @ts-nocheck\njsstacktrace.displayName = \"jsstacktrace\";\njsstacktrace.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jsstacktrace(Prism) {\n    Prism.languages.jsstacktrace = {\n        \"error-message\": {\n            pattern: /^\\S.*/m,\n            alias: \"string\"\n        },\n        \"stack-frame\": {\n            pattern: /(^[ \\t]+)at[ \\t].*/m,\n            lookbehind: true,\n            inside: {\n                \"not-my-code\": {\n                    pattern: /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n                    alias: \"comment\"\n                },\n                filename: {\n                    pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n                    lookbehind: true,\n                    alias: \"url\"\n                },\n                function: {\n                    pattern: /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\./\n                    }\n                },\n                punctuation: /[()]/,\n                keyword: /\\b(?:at|new)\\b/,\n                alias: {\n                    pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n                    alias: \"variable\"\n                },\n                \"line-number\": {\n                    pattern: /:\\d+(?::\\d+)?\\b/,\n                    alias: \"number\",\n                    inside: {\n                        punctuation: /:/\n                    }\n                }\n            }\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc3N0YWNrdHJhY2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsYUFBYUMsV0FBVyxHQUFHO0FBQzNCRCxhQUFhRSxPQUFPLEdBQUcsRUFBRTtBQUV6Qix3Q0FBd0MsR0FDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN4Q0EsTUFBTUMsU0FBUyxDQUFDSixZQUFZLEdBQUc7UUFDN0IsaUJBQWlCO1lBQ2ZLLFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsZUFBZTtZQUNiRCxTQUFTO1lBQ1RFLFlBQVk7WUFDWkMsUUFBUTtnQkFDTixlQUFlO29CQUNiSCxTQUNFO29CQUNGQyxPQUFPO2dCQUNUO2dCQUNBRyxVQUFVO29CQUNSSixTQUFTO29CQUNURSxZQUFZO29CQUNaRCxPQUFPO2dCQUNUO2dCQUNBSSxVQUFVO29CQUNSTCxTQUNFO29CQUNGRSxZQUFZO29CQUNaQyxRQUFRO3dCQUNORyxhQUFhO29CQUNmO2dCQUNGO2dCQUNBQSxhQUFhO2dCQUNiQyxTQUFTO2dCQUNUTixPQUFPO29CQUNMRCxTQUFTO29CQUNUQyxPQUFPO2dCQUNUO2dCQUNBLGVBQWU7b0JBQ2JELFNBQVM7b0JBQ1RDLE9BQU87b0JBQ1BFLFFBQVE7d0JBQ05HLGFBQWE7b0JBQ2Y7Z0JBQ0Y7WUFDRjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qc3N0YWNrdHJhY2UuanM/YTBjYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuanNzdGFja3RyYWNlLmRpc3BsYXlOYW1lID0gJ2pzc3RhY2t0cmFjZSdcbmpzc3RhY2t0cmFjZS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqc3N0YWNrdHJhY2UoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmpzc3RhY2t0cmFjZSA9IHtcbiAgICAnZXJyb3ItbWVzc2FnZSc6IHtcbiAgICAgIHBhdHRlcm46IC9eXFxTLiovbSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgJ3N0YWNrLWZyYW1lJzoge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKylhdFsgXFx0XS4qL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdub3QtbXktY29kZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL15hdFsgXFx0XSsoPyFcXHMpKD86bm9kZVxcLmpzfDx1bmtub3duPnwuKig/Om5vZGVfbW9kdWxlc3xcXCg8YW5vbnltb3VzPlxcKXxcXCg8dW5rbm93bj58PGFub255bW91cz4kfFxcKGludGVybmFsXFwvfFxcKG5vZGVcXC5qcykpLiovbSxcbiAgICAgICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgICAgIH0sXG4gICAgICAgIGZpbGVuYW1lOiB7XG4gICAgICAgICAgcGF0dGVybjogLyhcXGJhdFxccysoPyFcXHMpfFxcKCkoPzpbYS16QS1aXTopP1teKCk6XSsoPz06KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ3VybCdcbiAgICAgICAgfSxcbiAgICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhcXGJhdFxccysoPzpuZXdcXHMrKT8pKD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkY8XVsuJFxcd1xceEEwLVxcdUZGRkY8Pl0qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBwdW5jdHVhdGlvbjogL1soKV0vLFxuICAgICAgICBrZXl3b3JkOiAvXFxiKD86YXR8bmV3KVxcYi8sXG4gICAgICAgIGFsaWFzOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcWyg/OmFzXFxzKyk/KD8hXFxzKVtfJGEtekEtWlxceEEwLVxcdUZGRkZdWyRcXHdcXHhBMC1cXHVGRkZGXSpcXF0vLFxuICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgIH0sXG4gICAgICAgICdsaW5lLW51bWJlcic6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvOlxcZCsoPzo6XFxkKyk/XFxiLyxcbiAgICAgICAgICBhbGlhczogJ251bWJlcicsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogLzovXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsianNzdGFja3RyYWNlIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJwYXR0ZXJuIiwiYWxpYXMiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwiZmlsZW5hbWUiLCJmdW5jdGlvbiIsInB1bmN0dWF0aW9uIiwia2V5d29yZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsstacktrace.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsx.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsx.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ jsx)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\n\njsx.displayName = \"jsx\";\njsx.aliases = [];\n/** @type {import('../core.js').Syntax} */ function jsx(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        var javascript = Prism.util.clone(Prism.languages.javascript);\n        var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n        var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n        var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n        /**\n     * @param {string} source\n     * @param {string} [flags]\n     */ function re(source, flags) {\n            source = source.replace(/<S>/g, function() {\n                return space;\n            }).replace(/<BRACES>/g, function() {\n                return braces;\n            }).replace(/<SPREAD>/g, function() {\n                return spread;\n            });\n            return RegExp(source, flags);\n        }\n        spread = re(spread).source;\n        Prism.languages.jsx = Prism.languages.extend(\"markup\", javascript);\n        Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n        Prism.languages.jsx.tag.inside[\"tag\"].pattern = /^<\\/?[^\\s>\\/]*/;\n        Prism.languages.jsx.tag.inside[\"attr-value\"].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n        Prism.languages.jsx.tag.inside[\"tag\"].inside[\"class-name\"] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n        Prism.languages.jsx.tag.inside[\"comment\"] = javascript[\"comment\"];\n        Prism.languages.insertBefore(\"inside\", \"attr-name\", {\n            spread: {\n                pattern: re(/<SPREAD>/.source),\n                inside: Prism.languages.jsx\n            }\n        }, Prism.languages.jsx.tag);\n        Prism.languages.insertBefore(\"inside\", \"special-attr\", {\n            script: {\n                // Allow for two levels of nesting\n                pattern: re(/=<BRACES>/.source),\n                alias: \"language-javascript\",\n                inside: {\n                    \"script-punctuation\": {\n                        pattern: /^=(?=\\{)/,\n                        alias: \"punctuation\"\n                    },\n                    rest: Prism.languages.jsx\n                }\n            }\n        }, Prism.languages.jsx.tag);\n        // The following will handle plain text inside tags\n        var stringifyToken = function(token) {\n            if (!token) {\n                return \"\";\n            }\n            if (typeof token === \"string\") {\n                return token;\n            }\n            if (typeof token.content === \"string\") {\n                return token.content;\n            }\n            return token.content.map(stringifyToken).join(\"\");\n        };\n        var walkTokens = function(tokens) {\n            var openedTags = [];\n            for(var i = 0; i < tokens.length; i++){\n                var token = tokens[i];\n                var notTagNorBrace = false;\n                if (typeof token !== \"string\") {\n                    if (token.type === \"tag\" && token.content[0] && token.content[0].type === \"tag\") {\n                        // We found a tag, now find its kind\n                        if (token.content[0].content[0].content === \"</\") {\n                            // Closing tag\n                            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                                // Pop matching opening tag\n                                openedTags.pop();\n                            }\n                        } else {\n                            if (token.content[token.content.length - 1].content === \"/>\") {\n                            // Autoclosed tag, ignore\n                            } else {\n                                // Opening tag\n                                openedTags.push({\n                                    tagName: stringifyToken(token.content[0].content[1]),\n                                    openedBraces: 0\n                                });\n                            }\n                        }\n                    } else if (openedTags.length > 0 && token.type === \"punctuation\" && token.content === \"{\") {\n                        // Here we might have entered a JSX context inside a tag\n                        openedTags[openedTags.length - 1].openedBraces++;\n                    } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === \"punctuation\" && token.content === \"}\") {\n                        // Here we might have left a JSX context inside a tag\n                        openedTags[openedTags.length - 1].openedBraces--;\n                    } else {\n                        notTagNorBrace = true;\n                    }\n                }\n                if (notTagNorBrace || typeof token === \"string\") {\n                    if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n                        // Here we are inside a tag, and not inside a JSX context.\n                        // That's plain text: drop any tokens matched.\n                        var plainText = stringifyToken(token);\n                        // And merge text with adjacent text\n                        if (i < tokens.length - 1 && (typeof tokens[i + 1] === \"string\" || tokens[i + 1].type === \"plain-text\")) {\n                            plainText += stringifyToken(tokens[i + 1]);\n                            tokens.splice(i + 1, 1);\n                        }\n                        if (i > 0 && (typeof tokens[i - 1] === \"string\" || tokens[i - 1].type === \"plain-text\")) {\n                            plainText = stringifyToken(tokens[i - 1]) + plainText;\n                            tokens.splice(i - 1, 1);\n                            i--;\n                        }\n                        tokens[i] = new Prism.Token(\"plain-text\", plainText, null, plainText);\n                    }\n                }\n                if (token.content && typeof token.content !== \"string\") {\n                    walkTokens(token.content);\n                }\n            }\n        };\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (env.language !== \"jsx\" && env.language !== \"tsx\") {\n                return;\n            }\n            walkTokens(env.tokens);\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/julia.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/julia.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ julia)\n/* harmony export */ });\n// @ts-nocheck\njulia.displayName = \"julia\";\njulia.aliases = [];\n/** @type {import('../core.js').Syntax} */ function julia(Prism) {\n    Prism.languages.julia = {\n        comment: {\n            // support one level of nested comments\n            // https://github.com/JuliaLang/julia/pull/6128\n            pattern: /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n            lookbehind: true\n        },\n        regex: {\n            // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n            pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n            greedy: true\n        },\n        string: {\n            // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n            // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n            // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n            pattern: /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n            greedy: true\n        },\n        char: {\n            // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n            pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n        // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n        // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n        operator: /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n        punctuation: /::?|[{}[\\]();,.?]/,\n        // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n        constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9qdWxpYS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQLHVDQUF1QztZQUN2QywrQ0FBK0M7WUFDL0NDLFNBQ0U7WUFDRkMsWUFBWTtRQUNkO1FBQ0FDLE9BQU87WUFDTCx5RUFBeUU7WUFDekVGLFNBQVM7WUFDVEcsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTixtRUFBbUU7WUFDbkUsa0ZBQWtGO1lBQ2xGLGlHQUFpRztZQUNqR0osU0FDRTtZQUNGRyxRQUFRO1FBQ1Y7UUFDQUUsTUFBTTtZQUNKLG9FQUFvRTtZQUNwRUwsU0FBUztZQUNUQyxZQUFZO1lBQ1pFLFFBQVE7UUFDVjtRQUNBRyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFDRTtRQUNGLG1FQUFtRTtRQUNuRSwyR0FBMkc7UUFDM0dDLFVBQ0U7UUFDRkMsYUFBYTtRQUNiLHlEQUF5RDtRQUN6REMsVUFBVTtJQUNaO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvanVsaWEuanM/ZjVkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuanVsaWEuZGlzcGxheU5hbWUgPSAnanVsaWEnXG5qdWxpYS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqdWxpYShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuanVsaWEgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgLy8gc3VwcG9ydCBvbmUgbGV2ZWwgb2YgbmVzdGVkIGNvbW1lbnRzXG4gICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vSnVsaWFMYW5nL2p1bGlhL3B1bGwvNjEyOFxuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFxcXF0pKD86Iz0oPzpbXiM9XXw9KD8hIyl8Iyg/IT0pfCM9KD86W14jPV18PSg/ISMpfCMoPyE9KSkqPSMpKj0jfCMuKikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgcmVnZXg6IHtcbiAgICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL21hbnVhbC9zdHJpbmdzLyNSZWd1bGFyLUV4cHJlc3Npb25zLTFcbiAgICAgIHBhdHRlcm46IC9yXCIoPzpcXFxcLnxbXlwiXFxcXFxcclxcbl0pKlwiW2ltc3hdezAsNH0vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL21hbnVhbC9zdHJpbmdzLyNTdHJpbmctQmFzaWNzLTFcbiAgICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL21hbnVhbC9zdHJpbmdzLyNub24tc3RhbmRhcmQtc3RyaW5nLWxpdGVyYWxzLTFcbiAgICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL21hbnVhbC9ydW5uaW5nLWV4dGVybmFsLXByb2dyYW1zLyNSdW5uaW5nLUV4dGVybmFsLVByb2dyYW1zLTFcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cIlwiXCJbXFxzXFxTXSs/XCJcIlwifCg/OlxcYlxcdyspP1wiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcInxgKD86W15cXFxcYFxcclxcbl18XFxcXC4pKmAvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjaGFyOiB7XG4gICAgICAvLyBodHRwczovL2RvY3MuanVsaWFsYW5nLm9yZy9lbi92MS9tYW51YWwvc3RyaW5ncy8jbWFuLWNoYXJhY3RlcnMtMVxuICAgICAgcGF0dGVybjogLyhefFteXFx3J10pJyg/OlxcXFxbXlxcclxcbl1bXidcXHJcXG5dKnxbXlxcXFxcXHJcXG5dKScvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxiYXJlbW9kdWxlfGJlZ2lufGJpdHN0eXBlfGJyZWFrfGNhdGNofGNjYWxsfGNvbnN0fGNvbnRpbnVlfGRvfGVsc2V8ZWxzZWlmfGVuZHxleHBvcnR8ZmluYWxseXxmb3J8ZnVuY3Rpb258Z2xvYmFsfGlmfGltbXV0YWJsZXxpbXBvcnR8aW1wb3J0YWxsfGlufGxldHxsb2NhbHxtYWNyb3xtb2R1bGV8cHJpbnR8cHJpbnRsbnxxdW90ZXxyZXR1cm58c3RydWN0fHRyeXx0eXBlfHR5cGVhbGlhc3x1c2luZ3x3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYig/PVxcZCl8XFxCKD89XFwuKSkoPzowW2JveF0pPyg/OltcXGRhLWZdKyg/Ol9bXFxkYS1mXSspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXC5cXGQrKD86X1xcZCspKikoPzpbZWZwXVsrLV0/XFxkKyg/Ol9cXGQrKSopP2o/L2ksXG4gICAgLy8gaHR0cHM6Ly9kb2NzLmp1bGlhbGFuZy5vcmcvZW4vdjEvbWFudWFsL21hdGhlbWF0aWNhbC1vcGVyYXRpb25zL1xuICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL21hbnVhbC9tYXRoZW1hdGljYWwtb3BlcmF0aW9ucy8jT3BlcmF0b3ItUHJlY2VkZW5jZS1hbmQtQXNzb2NpYXRpdml0eS0xXG4gICAgb3BlcmF0b3I6XG4gICAgICAvJiZ8XFx8XFx8fFstKypeJcO34oq7JiRcXFxcXT0/fFxcL1tcXC89XT98IT0/PT98XFx8Wz0+XT98PCg/Ojw9P3xbPTp8XSk/fD4oPzo9fD4+Pz0/KT98PT0/PT98W37iiaDiiaTiiaUn4oia4oibXS8sXG4gICAgcHVuY3R1YXRpb246IC86Oj98W3t9W1xcXSgpOywuP10vLFxuICAgIC8vIGh0dHBzOi8vZG9jcy5qdWxpYWxhbmcub3JnL2VuL3YxL2Jhc2UvbnVtYmVycy8jQmFzZS5pbVxuICAgIGNvbnN0YW50OiAvXFxiKD86KD86SW5mfE5hTikoPzoxNnwzMnw2NCk/fGltfHBpKVxcYnxbz4DihK9dL1xuICB9XG59XG4iXSwibmFtZXMiOlsianVsaWEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInJlZ2V4IiwiZ3JlZWR5Iiwic3RyaW5nIiwiY2hhciIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImNvbnN0YW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/julia.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keepalived.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keepalived.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ keepalived)\n/* harmony export */ });\n// @ts-nocheck\nkeepalived.displayName = \"keepalived\";\nkeepalived.aliases = [];\n/** @type {import('../core.js').Syntax} */ function keepalived(Prism) {\n    Prism.languages.keepalived = {\n        comment: {\n            pattern: /[#!].*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n            lookbehind: true,\n            greedy: true\n        },\n        // support IPv4, IPv6, subnet mask\n        ip: {\n            pattern: RegExp(/\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(/<ipv4>/g, function() {\n                return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/.source;\n            }), \"i\"),\n            alias: \"number\"\n        },\n        // support *nix / Windows, directory / file\n        path: {\n            pattern: /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        variable: /\\$\\{?\\w+\\}?/,\n        email: {\n            pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n            alias: \"string\"\n        },\n        \"conditional-configuration\": {\n            pattern: /@\\^?[\\w-]+/,\n            alias: \"variable\"\n        },\n        operator: /=/,\n        property: /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n        constant: /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n        number: {\n            pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n            lookbehind: true\n        },\n        boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n        punctuation: /[\\{\\}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keepalived.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keyman.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keyman.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ keyman)\n/* harmony export */ });\n// @ts-nocheck\nkeyman.displayName = \"keyman\";\nkeyman.aliases = [];\n/** @type {import('../core.js').Syntax} */ function keyman(Prism) {\n    Prism.languages.keyman = {\n        comment: {\n            pattern: /\\bc .*/i,\n            greedy: true\n        },\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n            greedy: true\n        },\n        \"virtual-key\": {\n            pattern: /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n            greedy: true,\n            alias: \"function\" // alias for styles\n        },\n        // https://help.keyman.com/developer/language/guide/headers\n        \"header-keyword\": {\n            pattern: /&\\w+/,\n            alias: \"bold\" // alias for styles\n        },\n        \"header-statement\": {\n            pattern: /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n            alias: \"bold\" // alias for styles\n        },\n        \"rule-keyword\": {\n            pattern: /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n            alias: \"keyword\"\n        },\n        \"structural-keyword\": {\n            pattern: /\\b(?:ansi|begin|group|match|newcontext|nomatch|postkeystroke|readonly|unicode|using keys)\\b/i,\n            alias: \"keyword\"\n        },\n        \"compile-target\": {\n            pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n            alias: \"property\"\n        },\n        // U+####, x###, d### characters and numbers\n        number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n        operator: /[+>\\\\$]|\\.\\./,\n        punctuation: /[()=,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9rZXltYW4uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGVBQWU7WUFDYkQsU0FDRTtZQUNGQyxRQUFRO1lBQ1JFLE9BQU8sV0FBVyxtQkFBbUI7UUFDdkM7UUFFQSwyREFBMkQ7UUFDM0Qsa0JBQWtCO1lBQ2hCSCxTQUFTO1lBQ1RHLE9BQU8sT0FBTyxtQkFBbUI7UUFDbkM7UUFFQSxvQkFBb0I7WUFDbEJILFNBQ0U7WUFDRkcsT0FBTyxPQUFPLG1CQUFtQjtRQUNuQztRQUVBLGdCQUFnQjtZQUNkSCxTQUNFO1lBQ0ZHLE9BQU87UUFDVDtRQUNBLHNCQUFzQjtZQUNwQkgsU0FDRTtZQUNGRyxPQUFPO1FBQ1Q7UUFDQSxrQkFBa0I7WUFDaEJILFNBQVM7WUFDVEcsT0FBTztRQUNUO1FBQ0EsNENBQTRDO1FBQzVDQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva2V5bWFuLmpzPzJjZGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmtleW1hbi5kaXNwbGF5TmFtZSA9ICdrZXltYW4nXG5rZXltYW4uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ga2V5bWFuKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5rZXltYW4gPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcYmMgLiovaSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3ZpcnR1YWwta2V5Jzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcW1xccyooPzooPzpBTFR8Q0FQU3xDVFJMfExBTFR8TENUUkx8TkNBUFN8UkFMVHxSQ1RSTHxTSElGVClcXHMrKSooPzpbVEtVXV9bXFx3P10rfFtBLUVdXFxkXFxkP3xcIlteXCJcXHJcXG5dKlwifCdbXidcXHJcXG5dKicpXFxzKlxcXS9pLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbicgLy8gYWxpYXMgZm9yIHN0eWxlc1xuICAgIH0sXG5cbiAgICAvLyBodHRwczovL2hlbHAua2V5bWFuLmNvbS9kZXZlbG9wZXIvbGFuZ3VhZ2UvZ3VpZGUvaGVhZGVyc1xuICAgICdoZWFkZXIta2V5d29yZCc6IHtcbiAgICAgIHBhdHRlcm46IC8mXFx3Ky8sXG4gICAgICBhbGlhczogJ2JvbGQnIC8vIGFsaWFzIGZvciBzdHlsZXNcbiAgICB9LFxuXG4gICAgJ2hlYWRlci1zdGF0ZW1lbnQnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86Yml0bWFwfGJpdG1hcHN8Y2FwcyBhbHdheXMgb2ZmfGNhcHMgb24gb25seXxjb3B5cmlnaHR8aG90a2V5fGxhbmd1YWdlfGxheW91dHxtZXNzYWdlfG5hbWV8c2hpZnQgZnJlZXMgY2Fwc3x2ZXJzaW9uKVxcYi9pLFxuICAgICAgYWxpYXM6ICdib2xkJyAvLyBhbGlhcyBmb3Igc3R5bGVzXG4gICAgfSxcblxuICAgICdydWxlLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YW55fGJhc2VsYXlvdXR8YmVlcHxjYWxsfGNvbnRleHR8ZGVhZGtleXxka3xpZnxpbmRleHxsYXllcnxub3Rhbnl8bnVsfG91dHN8cGxhdGZvcm18cmVzZXR8cmV0dXJufHNhdmV8c2V0fHN0b3JlfHVzZSlcXGIvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdzdHJ1Y3R1cmFsLWtleXdvcmQnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YW5zaXxiZWdpbnxncm91cHxtYXRjaHxuZXdjb250ZXh0fG5vbWF0Y2h8cG9zdGtleXN0cm9rZXxyZWFkb25seXx1bmljb2RlfHVzaW5nIGtleXMpXFxiL2ksXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICAnY29tcGlsZS10YXJnZXQnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwkKD86a2V5bWFufGtleW1hbm9ubHl8a2V5bWFud2VifGttZmx8d2VhdmVyKTovaSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICAvLyBVKyMjIyMsIHgjIyMsIGQjIyMgY2hhcmFjdGVycyBhbmQgbnVtYmVyc1xuICAgIG51bWJlcjogL1xcYig/OlVcXCtbXFxkQS1GXSt8ZFxcZCt8eFtcXGRhLWZdK3xcXGQrKVxcYi9pLFxuICAgIG9wZXJhdG9yOiAvWys+XFxcXCRdfFxcLlxcLi8sXG4gICAgcHVuY3R1YXRpb246IC9bKCk9LF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJrZXltYW4iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYWxpYXMiLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keyman.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kotlin.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kotlin.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kotlin)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nkotlin.displayName = \"kotlin\";\nkotlin.aliases = [\n    \"kt\",\n    \"kts\"\n];\n/** @type {import('../core.js').Syntax} */ function kotlin(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.kotlin = Prism.languages.extend(\"clike\", {\n            keyword: {\n                // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n                pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n                lookbehind: true\n            },\n            function: [\n                {\n                    pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n                    greedy: true\n                },\n                {\n                    pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n            operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n        });\n        delete Prism.languages.kotlin[\"class-name\"];\n        var interpolationInside = {\n            \"interpolation-punctuation\": {\n                pattern: /^\\$\\{?|\\}$/,\n                alias: \"punctuation\"\n            },\n            expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.kotlin\n            }\n        };\n        Prism.languages.insertBefore(\"kotlin\", \"string\", {\n            // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n            \"string-literal\": [\n                {\n                    pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n                    alias: \"multiline\",\n                    inside: {\n                        interpolation: {\n                            pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n                            inside: interpolationInside\n                        },\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n                    alias: \"singleline\",\n                    inside: {\n                        interpolation: {\n                            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n                            lookbehind: true,\n                            inside: interpolationInside\n                        },\n                        string: /[\\s\\S]+/\n                    }\n                }\n            ],\n            char: {\n                // https://kotlinlang.org/spec/expressions.html#character-literals\n                pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n                greedy: true\n            }\n        });\n        delete Prism.languages.kotlin[\"string\"];\n        Prism.languages.insertBefore(\"kotlin\", \"keyword\", {\n            annotation: {\n                pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n                alias: \"builtin\"\n            }\n        });\n        Prism.languages.insertBefore(\"kotlin\", \"function\", {\n            label: {\n                pattern: /\\b\\w+@|@\\w+\\b/,\n                alias: \"symbol\"\n            }\n        });\n        Prism.languages.kt = Prism.languages.kotlin;\n        Prism.languages.kts = Prism.languages.kotlin;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9rb3RsaW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRztJQUFDO0lBQU07Q0FBTTtBQUU5Qix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDM0IsVUFBVUksS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLE1BQU0sR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUN2REMsU0FBUztnQkFDUCwyRUFBMkU7Z0JBQzNFQyxTQUNFO2dCQUNGQyxZQUFZO1lBQ2Q7WUFDQUMsVUFBVTtnQkFDUjtvQkFDRUYsU0FBUztvQkFDVEcsUUFBUTtnQkFDVjtnQkFDQTtvQkFDRUgsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkUsUUFBUTtnQkFDVjthQUNEO1lBQ0RDLFFBQ0U7WUFDRkMsVUFDRTtRQUNKO1FBQ0EsT0FBT1YsTUFBTUUsU0FBUyxDQUFDTCxNQUFNLENBQUMsYUFBYTtRQUMzQyxJQUFJYyxzQkFBc0I7WUFDeEIsNkJBQTZCO2dCQUMzQk4sU0FBUztnQkFDVE8sT0FBTztZQUNUO1lBQ0FDLFlBQVk7Z0JBQ1ZSLFNBQVM7Z0JBQ1RTLFFBQVFkLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTTtZQUNoQztRQUNGO1FBQ0FHLE1BQU1FLFNBQVMsQ0FBQ2EsWUFBWSxDQUFDLFVBQVUsVUFBVTtZQUMvQyxnRkFBZ0Y7WUFDaEYsa0JBQWtCO2dCQUNoQjtvQkFDRVYsU0FBUztvQkFDVE8sT0FBTztvQkFDUEUsUUFBUTt3QkFDTkUsZUFBZTs0QkFDYlgsU0FBUzs0QkFDVFMsUUFBUUg7d0JBQ1Y7d0JBQ0FNLFFBQVE7b0JBQ1Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0VaLFNBQVM7b0JBQ1RPLE9BQU87b0JBQ1BFLFFBQVE7d0JBQ05FLGVBQWU7NEJBQ2JYLFNBQVM7NEJBQ1RDLFlBQVk7NEJBQ1pRLFFBQVFIO3dCQUNWO3dCQUNBTSxRQUFRO29CQUNWO2dCQUNGO2FBQ0Q7WUFDREMsTUFBTTtnQkFDSixrRUFBa0U7Z0JBQ2xFYixTQUFTO2dCQUNURyxRQUFRO1lBQ1Y7UUFDRjtRQUNBLE9BQU9SLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxDQUFDLFNBQVM7UUFDdkNHLE1BQU1FLFNBQVMsQ0FBQ2EsWUFBWSxDQUFDLFVBQVUsV0FBVztZQUNoREksWUFBWTtnQkFDVmQsU0FBUztnQkFDVE8sT0FBTztZQUNUO1FBQ0Y7UUFDQVosTUFBTUUsU0FBUyxDQUFDYSxZQUFZLENBQUMsVUFBVSxZQUFZO1lBQ2pESyxPQUFPO2dCQUNMZixTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7UUFDRjtRQUNBWixNQUFNRSxTQUFTLENBQUNtQixFQUFFLEdBQUdyQixNQUFNRSxTQUFTLENBQUNMLE1BQU07UUFDM0NHLE1BQU1FLFNBQVMsQ0FBQ29CLEdBQUcsR0FBR3RCLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTTtJQUM5QyxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2tvdGxpbi5qcz9kZjMzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmtvdGxpbi5kaXNwbGF5TmFtZSA9ICdrb3RsaW4nXG5rb3RsaW4uYWxpYXNlcyA9IFsna3QnLCAna3RzJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBrb3RsaW4oUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmtvdGxpbiA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgICAga2V5d29yZDoge1xuICAgICAgICAvLyBUaGUgbG9va2JlaGluZCBwcmV2ZW50cyB3cm9uZyBoaWdobGlnaHRpbmcgb2YgZS5nLiBrb3RsaW4ucHJvcGVydGllcy5nZXRcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14uXSlcXGIoPzphYnN0cmFjdHxhY3R1YWx8YW5ub3RhdGlvbnxhc3xicmVha3xieXxjYXRjaHxjbGFzc3xjb21wYW5pb258Y29uc3R8Y29uc3RydWN0b3J8Y29udGludWV8Y3Jvc3NpbmxpbmV8ZGF0YXxkb3xkeW5hbWljfGVsc2V8ZW51bXxleHBlY3R8ZXh0ZXJuYWx8ZmluYWx8ZmluYWxseXxmb3J8ZnVufGdldHxpZnxpbXBvcnR8aW58aW5maXh8aW5pdHxpbmxpbmV8aW5uZXJ8aW50ZXJmYWNlfGludGVybmFsfGlzfGxhdGVpbml0fG5vaW5saW5lfG51bGx8b2JqZWN0fG9wZW58b3BlcmF0b3J8b3V0fG92ZXJyaWRlfHBhY2thZ2V8cHJpdmF0ZXxwcm90ZWN0ZWR8cHVibGljfHJlaWZpZWR8cmV0dXJufHNlYWxlZHxzZXR8c3VwZXJ8c3VzcGVuZHx0YWlscmVjfHRoaXN8dGhyb3d8dG98dHJ5fHR5cGVhbGlhc3x2YWx8dmFyfHZhcmFyZ3x3aGVufHdoZXJlfHdoaWxlKVxcYi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyg/OmBbXlxcclxcbmBdK2B8XFxiXFx3KykoPz1cXHMqXFwoKS8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFxcLikoPzpgW15cXHJcXG5gXStgfFxcdyspKD89XFxzKlxceykvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBudW1iZXI6XG4gICAgICAgIC9cXGIoPzowW3hYXVtcXGRhLWZBLUZdKyg/Ol9bXFxkYS1mQS1GXSspKnwwW2JCXVswMV0rKD86X1swMV0rKSp8XFxkKyg/Ol9cXGQrKSooPzpcXC5cXGQrKD86X1xcZCspKik/KD86W2VFXVsrLV0/XFxkKyg/Ol9cXGQrKSopP1tmRkxdPylcXGIvLFxuICAgICAgb3BlcmF0b3I6XG4gICAgICAgIC9cXCtbKz1dP3wtWy09Pl0/fD09Pz0/fCEoPzohfD09Pyk/fFtcXC8qJTw+XT0/fFs/Ol06P3xcXC5cXC58JiZ8XFx8XFx8fFxcYig/OmFuZHxpbnZ8b3J8c2hsfHNocnx1c2hyfHhvcilcXGIvXG4gICAgfSlcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLmtvdGxpblsnY2xhc3MtbmFtZSddXG4gICAgdmFyIGludGVycG9sYXRpb25JbnNpZGUgPSB7XG4gICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogL15cXCRcXHs/fFxcfSQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmtvdGxpblxuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdrb3RsaW4nLCAnc3RyaW5nJywge1xuICAgICAgLy8gaHR0cHM6Ly9rb3RsaW5sYW5nLm9yZy9zcGVjL2V4cHJlc3Npb25zLmh0bWwjc3RyaW5nLWludGVycG9sYXRpb24tZXhwcmVzc2lvbnNcbiAgICAgICdzdHJpbmctbGl0ZXJhbCc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cIlwiXCIoPzpbXiRdfFxcJCg/Oig/IVxceyl8XFx7W157fV0qXFx9KSkqP1wiXCJcIi8sXG4gICAgICAgICAgYWxpYXM6ICdtdWx0aWxpbmUnLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXFwkKD86W2Etel9dXFx3KnxcXHtbXnt9XSpcXH0pL2ksXG4gICAgICAgICAgICAgIGluc2lkZTogaW50ZXJwb2xhdGlvbkluc2lkZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXFxcclxcbiRdfFxcXFwufFxcJCg/Oig/IVxceyl8XFx7W157fV0qXFx9KSkqXCIvLFxuICAgICAgICAgIGFsaWFzOiAnc2luZ2xlbGluZScsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcXFxdKSg/OlxcXFx7Mn0pKilcXCQoPzpbYS16X11cXHcqfFxce1tee31dKlxcfSkvaSxcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgICAgaW5zaWRlOiBpbnRlcnBvbGF0aW9uSW5zaWRlXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGNoYXI6IHtcbiAgICAgICAgLy8gaHR0cHM6Ly9rb3RsaW5sYW5nLm9yZy9zcGVjL2V4cHJlc3Npb25zLmh0bWwjY2hhcmFjdGVyLWxpdGVyYWxzXG4gICAgICAgIHBhdHRlcm46IC8nKD86W14nXFxcXFxcclxcbl18XFxcXCg/Oi58dVthLWZBLUYwLTldezAsNH0pKScvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICB9KVxuICAgIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMua290bGluWydzdHJpbmcnXVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2tvdGxpbicsICdrZXl3b3JkJywge1xuICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxCQCg/Olxcdys6KT8oPzpbQS1aXVxcdyp8XFxbW15cXF1dK1xcXSkvLFxuICAgICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdrb3RsaW4nLCAnZnVuY3Rpb24nLCB7XG4gICAgICBsYWJlbDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiXFx3K0B8QFxcdytcXGIvLFxuICAgICAgICBhbGlhczogJ3N5bWJvbCdcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5rdCA9IFByaXNtLmxhbmd1YWdlcy5rb3RsaW5cbiAgICBQcmlzbS5sYW5ndWFnZXMua3RzID0gUHJpc20ubGFuZ3VhZ2VzLmtvdGxpblxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsImtvdGxpbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJmdW5jdGlvbiIsImdyZWVkeSIsIm51bWJlciIsIm9wZXJhdG9yIiwiaW50ZXJwb2xhdGlvbkluc2lkZSIsImFsaWFzIiwiZXhwcmVzc2lvbiIsImluc2lkZSIsImluc2VydEJlZm9yZSIsImludGVycG9sYXRpb24iLCJzdHJpbmciLCJjaGFyIiwiYW5ub3RhdGlvbiIsImxhYmVsIiwia3QiLCJrdHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kotlin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kumir.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kumir.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kumir)\n/* harmony export */ });\n// @ts-nocheck\nkumir.displayName = \"kumir\";\nkumir.aliases = [\n    \"kum\"\n];\n/** @type {import('../core.js').Syntax} */ function kumir(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */ var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source;\n        /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */ function wrapId(pattern, flags) {\n            return RegExp(pattern.replace(/<nonId>/g, nonId), flags);\n        }\n        Prism.languages.kumir = {\n            comment: {\n                pattern: /\\|.*/\n            },\n            prolog: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n                greedy: true\n            },\n            boolean: {\n                pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n                lookbehind: true\n            },\n            \"operator-word\": {\n                pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            \"system-variable\": {\n                pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            type: [\n                {\n                    pattern: wrapId(/(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/.source),\n                    lookbehind: true,\n                    alias: \"builtin\"\n                },\n                {\n                    pattern: wrapId(/(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source),\n                    lookbehind: true,\n                    alias: \"important\"\n                }\n            ],\n            /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */ keyword: {\n                pattern: wrapId(/(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/.source),\n                lookbehind: true\n            },\n            /** Should be performed after searching for reserved words. */ name: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: wrapId(/(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/.source),\n                lookbehind: true\n            },\n            /** Should be performed after searching for names. */ number: {\n                pattern: wrapId(/(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/.source, \"i\"),\n                lookbehind: true\n            },\n            /** Should be performed after searching for words. */ punctuation: /:=|[(),:;\\[\\]]/,\n            /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */ \"operator-char\": {\n                pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n                alias: \"operator\"\n            }\n        };\n        Prism.languages.kum = Prism.languages.kumir;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9rdW1pci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRztJQUFDO0NBQU07QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7O0lBRS9CLFVBQVVBLEtBQUs7UUFDZjs7OztLQUlDLEdBQ0QsSUFBSUMsUUFBUSxzREFBc0RDLE1BQU07UUFFeEU7Ozs7OztLQU1DLEdBQ0QsU0FBU0MsT0FBT0MsT0FBTyxFQUFFQyxLQUFLO1lBQzVCLE9BQU9DLE9BQU9GLFFBQVFHLE9BQU8sQ0FBQyxZQUFZTixRQUFRSTtRQUNwRDtRQUNBTCxNQUFNUSxTQUFTLENBQUNYLEtBQUssR0FBRztZQUN0QlksU0FBUztnQkFDUEwsU0FBUztZQUNYO1lBQ0FNLFFBQVE7Z0JBQ05OLFNBQVM7Z0JBQ1RPLFFBQVE7WUFDVjtZQUNBQyxRQUFRO2dCQUNOUixTQUFTO2dCQUNUTyxRQUFRO1lBQ1Y7WUFDQUUsU0FBUztnQkFDUFQsU0FBU0QsT0FBTyx5Q0FBeUNELE1BQU07Z0JBQy9EWSxZQUFZO1lBQ2Q7WUFDQSxpQkFBaUI7Z0JBQ2ZWLFNBQVNELE9BQU8sMkNBQTJDRCxNQUFNO2dCQUNqRVksWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0EsbUJBQW1CO2dCQUNqQlgsU0FBU0QsT0FBTyxtQ0FBbUNELE1BQU07Z0JBQ3pEWSxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQUMsTUFBTTtnQkFDSjtvQkFDRVosU0FBU0QsT0FDUCxtRUFDR0QsTUFBTTtvQkFFWFksWUFBWTtvQkFDWkMsT0FBTztnQkFDVDtnQkFDQTtvQkFDRVgsU0FBU0QsT0FDUCwwREFBMERELE1BQU07b0JBRWxFWSxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2FBQ0Q7WUFDRDs7OztPQUlDLEdBQ0RFLFNBQVM7Z0JBQ1BiLFNBQVNELE9BQ1AscVBBQ0dELE1BQU07Z0JBRVhZLFlBQVk7WUFDZDtZQUNBLDREQUE0RCxHQUM1REksTUFBTTtnQkFDSiwrREFBK0Q7Z0JBQy9EZCxTQUFTRCxPQUNQLDJFQUNHRCxNQUFNO2dCQUVYWSxZQUFZO1lBQ2Q7WUFDQSxtREFBbUQsR0FDbkRLLFFBQVE7Z0JBQ05mLFNBQVNELE9BQ1AsMkZBQ0dELE1BQU0sRUFDVDtnQkFFRlksWUFBWTtZQUNkO1lBQ0EsbURBQW1ELEdBQ25ETSxhQUFhO1lBQ2I7Ozs7T0FJQyxHQUNELGlCQUFpQjtnQkFDZmhCLFNBQVM7Z0JBQ1RXLE9BQU87WUFDVDtRQUNGO1FBQ0FmLE1BQU1RLFNBQVMsQ0FBQ2EsR0FBRyxHQUFHckIsTUFBTVEsU0FBUyxDQUFDWCxLQUFLO0lBQzdDLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcva3VtaXIuanM/MmFjNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xua3VtaXIuZGlzcGxheU5hbWUgPSAna3VtaXInXG5rdW1pci5hbGlhc2VzID0gWydrdW0nXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGt1bWlyKFByaXNtKSB7XG4gIC8qIGVzbGludC1kaXNhYmxlIHJlZ2V4cC9uby1kdXBlLWNoYXJhY3RlcnMtY2hhcmFjdGVyLWNsYXNzICovXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgLyoqXG4gICAgICogUmVndWxhciBleHByZXNzaW9uIGZvciBjaGFyYWN0ZXJzIHRoYXQgYXJlIG5vdCBhbGxvd2VkIGluIGlkZW50aWZpZXJzLlxuICAgICAqXG4gICAgICogQHR5cGUge3N0cmluZ31cbiAgICAgKi9cbiAgICB2YXIgbm9uSWQgPSAvXFxzXFx4MDAtXFx4MWZcXHgyMi1cXHgyZlxceDNhLVxceDNmXFx4NWItXFx4NWVcXHg2MFxceDdiLVxceDdlLy5zb3VyY2VcblxuICAgIC8qKlxuICAgICAqIFN1cnJvdW5kIGEgcmVndWxhciBleHByZXNzaW9uIGZvciBJRHMgd2l0aCBwYXR0ZXJucyBmb3Igbm9uLUlEIHNlcXVlbmNlcy5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuIEEgcmVndWxhciBleHByZXNzaW9uIGZvciBpZGVudGlmaWVycy5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gW2ZsYWdzXSBUaGUgcmVndWxhciBleHByZXNzaW9uIGZsYWdzLlxuICAgICAqIEByZXR1cm5zIHtSZWdFeHB9IEEgd3JhcHBlZCByZWd1bGFyIGV4cHJlc3Npb24gZm9yIGlkZW50aWZpZXJzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHdyYXBJZChwYXR0ZXJuLCBmbGFncykge1xuICAgICAgcmV0dXJuIFJlZ0V4cChwYXR0ZXJuLnJlcGxhY2UoLzxub25JZD4vZywgbm9uSWQpLCBmbGFncylcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmt1bWlyID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx8LiovXG4gICAgICB9LFxuICAgICAgcHJvbG9nOiB7XG4gICAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cXG5cXHJcIl0qXCJ8J1teXFxuXFxyJ10qJy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGJvb2xlYW46IHtcbiAgICAgICAgcGF0dGVybjogd3JhcElkKC8oXnxbPG5vbklkPl0pKD860LTQsHzQvdC10YIpKD89Wzxub25JZD5dfCQpLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgJ29wZXJhdG9yLXdvcmQnOiB7XG4gICAgICAgIHBhdHRlcm46IHdyYXBJZCgvKF58Wzxub25JZD5dKSg/OtC4fNC40LvQuHzQvdC1KSg/PVs8bm9uSWQ+XXwkKS8uc291cmNlKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdzeXN0ZW0tdmFyaWFibGUnOiB7XG4gICAgICAgIHBhdHRlcm46IHdyYXBJZCgvKF58Wzxub25JZD5dKdC30L3QsNGHKD89Wzxub25JZD5dfCQpLy5zb3VyY2UpLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9LFxuICAgICAgdHlwZTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgICAgLyhefFs8bm9uSWQ+XSkoPzrQstC10Yl80LvQuNGCfNC70L7Qs3zRgdC40Lx80YbQtdC7KSg/OlxceDIwKtGC0LDQsSk/KD89Wzxub25JZD5dfCQpL1xuICAgICAgICAgICAgICAuc291cmNlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IHdyYXBJZChcbiAgICAgICAgICAgIC8oXnxbPG5vbklkPl0pKD860LrQvtC80L/Qu3zRgdC60LDQvdC60L7QtHzRhNCw0LnQu3zRhtCy0LXRgikoPz1bPG5vbklkPl18JCkvLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIC8qKlxuICAgICAgICogU2hvdWxkIGJlIHBlcmZvcm1lZCBhZnRlciBzZWFyY2hpbmcgZm9yIHR5cGUgbmFtZXMgYmVjYXVzZSBvZiBcItGC0LDQsVwiLlxuICAgICAgICogXCLRgtCw0LFcIiBpcyBhIHJlc2VydmVkIHdvcmQsIGJ1dCBuZXZlciB1c2VkIHdpdGhvdXQgYSBwcmVjZWRpbmcgdHlwZSBuYW1lLlxuICAgICAgICogXCLQndCQ0JfQndCQ0KfQmNCi0KxcIiwgXCLQpNCy0LLQvtC0XCIsIGFuZCBcItCk0LLRi9Cy0L7QtFwiIGFyZSBub3QgcmVzZXJ2ZWQgd29yZHMuXG4gICAgICAgKi9cbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgIC8oXnxbPG5vbklkPl0pKD860LDQu9CzfNCw0YDQsyg/OlxceDIwKtGA0LXQtyk/fNCy0LLQvtC0fNCS0JrQm9Cu0KfQmNCi0Kx80LLRgVvQtdGRXXzQstGL0LHQvtGAfNCy0YvQstC+0LR80LLRi9GF0L7QtHzQtNCw0L3QvnzQtNC70Y980LTQvnzQtNGBfNC10YHQu9C4fNC40L3QsNGH0LV80LjRgdC/fNC40YHQv9C+0LvRjNC30L7QstCw0YLRjHzQutC+0L0oPzooPzpcXHgyMCt8XynQuNGB0L8pP3zQutGGKD86KD86XFx4MjArfF8p0L/RgNC4KT980L3QsNC00L580L3QsNGHfNC90YF80L3RhnzQvtGCfNC/0LDRg9C30LB80L/QvtC60LB80L/RgNC4fNGA0LDQt9CwP3zRgNC10Ld80YHRgtC+0L980YLQsNCxfNGC0L580YPRgtCyfNGI0LDQsykoPz1bPG5vbklkPl18JCkvXG4gICAgICAgICAgICAuc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvKiogU2hvdWxkIGJlIHBlcmZvcm1lZCBhZnRlciBzZWFyY2hpbmcgZm9yIHJlc2VydmVkIHdvcmRzLiAqL1xuICAgICAgbmFtZToge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVnZXhwL25vLXN1cGVyLWxpbmVhci1iYWNrdHJhY2tpbmdcbiAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgIC8oXnxbPG5vbklkPl0pW15cXGQ8bm9uSWQ+XVtePG5vbklkPl0qKD86XFx4MjArW148bm9uSWQ+XSspKig/PVs8bm9uSWQ+XXwkKS9cbiAgICAgICAgICAgIC5zb3VyY2VcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8qKiBTaG91bGQgYmUgcGVyZm9ybWVkIGFmdGVyIHNlYXJjaGluZyBmb3IgbmFtZXMuICovXG4gICAgICBudW1iZXI6IHtcbiAgICAgICAgcGF0dGVybjogd3JhcElkKFxuICAgICAgICAgIC8oXnxbPG5vbklkPl0pKD86XFxCXFwkW1xcZGEtZl0rXFxifCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzplWystXT9cXGQrKT8pKD89Wzxub25JZD5dfCQpL1xuICAgICAgICAgICAgLnNvdXJjZSxcbiAgICAgICAgICAnaSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8qKiBTaG91bGQgYmUgcGVyZm9ybWVkIGFmdGVyIHNlYXJjaGluZyBmb3Igd29yZHMuICovXG4gICAgICBwdW5jdHVhdGlvbjogLzo9fFsoKSw6O1xcW1xcXV0vLFxuICAgICAgLyoqXG4gICAgICAgKiBTaG91bGQgYmUgcGVyZm9ybWVkIGFmdGVyIHNlYXJjaGluZyBmb3JcbiAgICAgICAqIC0gbnVtZXJpYyBjb25zdGFudHMgKGJlY2F1c2Ugb2YgXCIrXCIgYW5kIFwiLVwiKTtcbiAgICAgICAqIC0gcHVuY3R1YXRpb24gbWFya3MgKGJlY2F1c2Ugb2YgXCI6PVwiIGFuZCBcIj1cIikuXG4gICAgICAgKi9cbiAgICAgICdvcGVyYXRvci1jaGFyJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwqXFwqP3w8Wz0+XT98Pj0/fFstKy89XS8sXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5rdW0gPSBQcmlzbS5sYW5ndWFnZXMua3VtaXJcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsia3VtaXIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsIm5vbklkIiwic291cmNlIiwid3JhcElkIiwicGF0dGVybiIsImZsYWdzIiwiUmVnRXhwIiwicmVwbGFjZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwcm9sb2ciLCJncmVlZHkiLCJzdHJpbmciLCJib29sZWFuIiwibG9va2JlaGluZCIsImFsaWFzIiwidHlwZSIsImtleXdvcmQiLCJuYW1lIiwibnVtYmVyIiwicHVuY3R1YXRpb24iLCJrdW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kumir.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kusto.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kusto.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ kusto)\n/* harmony export */ });\n// @ts-nocheck\nkusto.displayName = \"kusto\";\nkusto.aliases = [];\n/** @type {import('../core.js').Syntax} */ function kusto(Prism) {\n    Prism.languages.kusto = {\n        comment: {\n            pattern: /\\/\\/.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n            greedy: true\n        },\n        verb: {\n            pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        command: {\n            pattern: /\\.[a-z][a-z\\d-]*\\b/,\n            alias: \"keyword\"\n        },\n        \"class-name\": /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n        keyword: /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n        boolean: /\\b(?:false|null|true)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n        datetime: [\n            {\n                // RFC 822 + RFC 850\n                pattern: /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n                alias: \"number\"\n            },\n            {\n                // ISO 8601\n                pattern: /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n                alias: \"number\"\n            }\n        ],\n        number: /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n        operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n        punctuation: /[()\\[\\]{},;.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9rdXN0by5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQ0U7WUFDRkMsUUFBUTtRQUNWO1FBQ0FFLE1BQU07WUFDSkgsU0FBUztZQUNUSSxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxTQUFTO1lBQ1BOLFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0EsY0FDRTtRQUNGRSxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxVQUFVO1lBQ1I7Z0JBQ0Usb0JBQW9CO2dCQUNwQlYsU0FDRTtnQkFDRkssT0FBTztZQUNUO1lBQ0E7Z0JBQ0UsV0FBVztnQkFDWEwsU0FDRTtnQkFDRkssT0FBTztZQUNUO1NBQ0Q7UUFDRE0sUUFDRTtRQUNGQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2t1c3RvLmpzPzg1NzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmt1c3RvLmRpc3BsYXlOYW1lID0gJ2t1c3RvJ1xua3VzdG8uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ga3VzdG8oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmt1c3RvID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL2BgYFtcXHNcXFNdKj9gYGB8W2hIXT8oPzpcIig/OlteXFxyXFxuXFxcXFwiXXxcXFxcLikqXCJ8Jyg/OlteXFxyXFxuXFxcXCddfFxcXFwuKSonfEAoPzpcIlteXFxyXFxuXCJdKlwifCdbXlxcclxcbiddKicpKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHZlcmI6IHtcbiAgICAgIHBhdHRlcm46IC8oXFx8XFxzKilbYS16XVtcXHctXSovaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBjb21tYW5kOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwuW2Etel1bYS16XFxkLV0qXFxiLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzpcbiAgICAgIC9cXGIoPzpib29sfGRhdGV0aW1lfGRlY2ltYWx8ZHluYW1pY3xndWlkfGludHxsb25nfHJlYWx8c3RyaW5nfHRpbWVzcGFuKVxcYi8sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphY2Nlc3N8YWxpYXN8YW5kfGFudGl8YXN8YXNjfGF1dG98YmV0d2VlbnxieXwoPzpjb250YWluc3woPzplbmRzfHN0YXJ0cyl3aXRofGhhcyg/OnBlcmZpeHxzdWZmaXgpPykoPzpfY3MpP3xkYXRhYmFzZXxkZWNsYXJlfGRlc2N8ZXh0ZXJuYWx8ZnJvbXxmdWxsb3V0ZXJ8aGFzX2FsbHxpbnxpbmdlc3Rpb258aW5saW5lfGlubmVyfGlubmVydW5pcXVlfGludG98KD86bGVmdHxyaWdodCkoPzphbnRpKD86c2VtaSk/fGlubmVyfG91dGVyfHNlbWkpP3xsZXR8bGlrZXxsb2NhbHxub3R8b2Z8b258b3J8cGF0dGVybnxwcmludHxxdWVyeV9wYXJhbWV0ZXJzfHJhbmdlfHJlc3RyaWN0fHNjaGVtYXxzZXR8c3RlcHx0YWJsZXx0YWJsZXN8dG98dmlld3x3aGVyZXx3aXRofG1hdGNoZXNcXHMrcmVnZXh8bnVsbHNcXHMrKD86Zmlyc3R8bGFzdCkpKD8hW1xcdy1dKS8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpLyxcbiAgICBkYXRldGltZTogW1xuICAgICAge1xuICAgICAgICAvLyBSRkMgODIyICsgUkZDIDg1MFxuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXGIoPzooPzpGcml8RnJpZGF5fE1vbnxNb25kYXl8U2F0fFNhdHVyZGF5fFN1bnxTdW5kYXl8VGh1fFRodXJzZGF5fFR1ZXxUdWVzZGF5fFdlZHxXZWRuZXNkYXkpXFxzKixcXHMqKT9cXGR7MSwyfSg/Olxccyt8LSkoPzpBcHJ8QXVnfERlY3xGZWJ8SmFufEp1bHxKdW58TWFyfE1heXxOb3Z8T2N0fFNlcCkoPzpcXHMrfC0pXFxkezJ9XFxzK1xcZHsyfTpcXGR7Mn0oPzo6XFxkezJ9KT8oPzpcXHMqKD86XFxiKD86W0EtWl18KD86W0VDTVRdW0RTXXxHTXxVKVQpfFsrLV1cXGR7NH0pKT9cXGIvLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIElTTyA4NjAxXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1srLV0/XFxiKD86XFxkezR9LVxcZHsyfS1cXGR7Mn0oPzpbIFRdXFxkezJ9OlxcZHsyfSg/OjpcXGR7Mn0oPzpcXC5cXGQrKT8pPyk/fFxcZHsyfTpcXGR7Mn0oPzo6XFxkezJ9KD86XFwuXFxkKyk/KT8pWj8vLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH1cbiAgICBdLFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPzoweFswLTlBLUZhLWZdK3xcXGQrKD86XFwuXFxkKyk/KD86W0VlXVsrLV0/XFxkKyk/KSg/Oig/Om1pbnxzZWN8W21uwrVdc3xbZGhtc118bWljcm9zZWNvbmR8dGljaylcXGIpP3xbKy1dP1xcYmluZlxcYi8sXG4gICAgb3BlcmF0b3I6IC89PnxbIT1dfnxbIT08Pl09P3xbLSsqLyV8XXxcXC5cXC4vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde30sOy46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImt1c3RvIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsInZlcmIiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJjb21tYW5kIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsImRhdGV0aW1lIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kusto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latex.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latex.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ latex)\n/* harmony export */ });\n// @ts-nocheck\nlatex.displayName = \"latex\";\nlatex.aliases = [\n    \"context\",\n    \"tex\"\n];\n/** @type {import('../core.js').Syntax} */ function latex(Prism) {\n    ;\n    (function(Prism) {\n        var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i;\n        var insideEqu = {\n            \"equation-command\": {\n                pattern: funcPattern,\n                alias: \"regex\"\n            }\n        };\n        Prism.languages.latex = {\n            comment: /%.*/,\n            // the verbatim environment prints whitespace to the document\n            cdata: {\n                pattern: /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n                lookbehind: true\n            },\n            /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */ equation: [\n                {\n                    pattern: /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n                    inside: insideEqu,\n                    alias: \"string\"\n                },\n                {\n                    pattern: /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n                    lookbehind: true,\n                    inside: insideEqu,\n                    alias: \"string\"\n                }\n            ],\n            /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */ keyword: {\n                pattern: /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n                lookbehind: true\n            },\n            url: {\n                pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n                lookbehind: true\n            },\n            /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */ headline: {\n                pattern: /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            function: {\n                pattern: funcPattern,\n                alias: \"selector\"\n            },\n            punctuation: /[[\\]{}&]/\n        };\n        Prism.languages.tex = Prism.languages.latex;\n        Prism.languages.context = Prism.languages.latex;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sYXRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRztJQUFDO0lBQVc7Q0FBTTtBQUVsQyx3Q0FBd0MsR0FDekIsU0FBU0YsTUFBTUcsS0FBSzs7SUFDL0IsVUFBVUEsS0FBSztRQUNmLElBQUlDLGNBQWM7UUFDbEIsSUFBSUMsWUFBWTtZQUNkLG9CQUFvQjtnQkFDbEJDLFNBQVNGO2dCQUNURyxPQUFPO1lBQ1Q7UUFDRjtRQUNBSixNQUFNSyxTQUFTLENBQUNSLEtBQUssR0FBRztZQUN0QlMsU0FBUztZQUNULDZEQUE2RDtZQUM3REMsT0FBTztnQkFDTEosU0FDRTtnQkFDRkssWUFBWTtZQUNkO1lBQ0E7OztPQUdDLEdBQ0RDLFVBQVU7Z0JBQ1I7b0JBQ0VOLFNBQ0U7b0JBQ0ZPLFFBQVFSO29CQUNSRSxPQUFPO2dCQUNUO2dCQUNBO29CQUNFRCxTQUNFO29CQUNGSyxZQUFZO29CQUNaRSxRQUFRUjtvQkFDUkUsT0FBTztnQkFDVDthQUNEO1lBQ0Q7OztPQUdDLEdBQ0RPLFNBQVM7Z0JBQ1BSLFNBQ0U7Z0JBQ0ZLLFlBQVk7WUFDZDtZQUNBSSxLQUFLO2dCQUNIVCxTQUFTO2dCQUNUSyxZQUFZO1lBQ2Q7WUFDQTs7O09BR0MsR0FDREssVUFBVTtnQkFDUlYsU0FDRTtnQkFDRkssWUFBWTtnQkFDWkosT0FBTztZQUNUO1lBQ0FVLFVBQVU7Z0JBQ1JYLFNBQVNGO2dCQUNURyxPQUFPO1lBQ1Q7WUFDQVcsYUFBYTtRQUNmO1FBQ0FmLE1BQU1LLFNBQVMsQ0FBQ1csR0FBRyxHQUFHaEIsTUFBTUssU0FBUyxDQUFDUixLQUFLO1FBQzNDRyxNQUFNSyxTQUFTLENBQUNZLE9BQU8sR0FBR2pCLE1BQU1LLFNBQVMsQ0FBQ1IsS0FBSztJQUNqRCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2xhdGV4LmpzP2ZkZTYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmxhdGV4LmRpc3BsYXlOYW1lID0gJ2xhdGV4J1xubGF0ZXguYWxpYXNlcyA9IFsnY29udGV4dCcsICd0ZXgnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxhdGV4KFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGZ1bmNQYXR0ZXJuID0gL1xcXFwoPzpbXmEteigpW1xcXV18W2EteipdKykvaVxuICAgIHZhciBpbnNpZGVFcXUgPSB7XG4gICAgICAnZXF1YXRpb24tY29tbWFuZCc6IHtcbiAgICAgICAgcGF0dGVybjogZnVuY1BhdHRlcm4sXG4gICAgICAgIGFsaWFzOiAncmVnZXgnXG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5sYXRleCA9IHtcbiAgICAgIGNvbW1lbnQ6IC8lLiovLFxuICAgICAgLy8gdGhlIHZlcmJhdGltIGVudmlyb25tZW50IHByaW50cyB3aGl0ZXNwYWNlIHRvIHRoZSBkb2N1bWVudFxuICAgICAgY2RhdGE6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxcXFxiZWdpblxceygoPzpsc3RsaXN0aW5nfHZlcmJhdGltKVxcKj8pXFx9KVtcXHNcXFNdKj8oPz1cXFxcZW5kXFx7XFwyXFx9KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvKlxuICAgICAgICogZXF1YXRpb25zIGNhbiBiZSBiZXR3ZWVuICQkICQkIG9yICQgJCBvciBcXCggXFwpIG9yIFxcWyBcXF1cbiAgICAgICAqIChhbGwgYXJlIG11bHRpbGluZSlcbiAgICAgICAqL1xuICAgICAgZXF1YXRpb246IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvXFwkXFwkKD86XFxcXFtcXHNcXFNdfFteXFxcXCRdKStcXCRcXCR8XFwkKD86XFxcXFtcXHNcXFNdfFteXFxcXCRdKStcXCR8XFxcXFxcKFtcXHNcXFNdKj9cXFxcXFwpfFxcXFxcXFtbXFxzXFxTXSo/XFxcXFxcXS8sXG4gICAgICAgICAgaW5zaWRlOiBpbnNpZGVFcXUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhcXFxcYmVnaW5cXHsoKD86YWxpZ258ZXFuYXJyYXl8ZXF1YXRpb258Z2F0aGVyfG1hdGh8bXVsdGxpbmUpXFwqPylcXH0pW1xcc1xcU10qPyg/PVxcXFxlbmRcXHtcXDJcXH0pLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogaW5zaWRlRXF1LFxuICAgICAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgLypcbiAgICAgICAqIGFyZ3VtZW50cyB3aGljaCBhcmUga2V5d29yZHMgb3IgcmVmZXJlbmNlcyBhcmUgaGlnaGxpZ2h0ZWRcbiAgICAgICAqIGFzIGtleXdvcmRzXG4gICAgICAgKi9cbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxcXFwoPzpiZWdpbnxjaXRlfGRvY3VtZW50Y2xhc3N8ZW5kfGxhYmVsfHJlZnx1c2VwYWNrYWdlKSg/OlxcW1teXFxdXStcXF0pP1xceylbXn1dKyg/PVxcfSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgdXJsOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxcXHVybFxceylbXn1dKyg/PVxcfSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgLypcbiAgICAgICAqIHNlY3Rpb24gb3IgY2hhcHRlciBoZWFkbGluZXMgYXJlIGhpZ2hsaWdodGVkIGFzIGJvbGQgc28gdGhhdFxuICAgICAgICogdGhleSBzdGFuZCBvdXQgbW9yZVxuICAgICAgICovXG4gICAgICBoZWFkbGluZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXFxcXCg/OmNoYXB0ZXJ8ZnJhbWV0aXRsZXxwYXJhZ3JhcGh8cGFydHxzZWN0aW9ufHN1YnBhcmFncmFwaHxzdWJzZWN0aW9ufHN1YnN1YnBhcmFncmFwaHxzdWJzdWJzZWN0aW9ufHN1YnN1YnN1YnBhcmFncmFwaClcXCo/KD86XFxbW15cXF1dK1xcXSk/XFx7KVtefV0rKD89XFx9KS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiBmdW5jUGF0dGVybixcbiAgICAgICAgYWxpYXM6ICdzZWxlY3RvcidcbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1tbXFxde30mXS9cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRleCA9IFByaXNtLmxhbmd1YWdlcy5sYXRleFxuICAgIFByaXNtLmxhbmd1YWdlcy5jb250ZXh0ID0gUHJpc20ubGFuZ3VhZ2VzLmxhdGV4XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbImxhdGV4IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJmdW5jUGF0dGVybiIsImluc2lkZUVxdSIsInBhdHRlcm4iLCJhbGlhcyIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJjZGF0YSIsImxvb2tiZWhpbmQiLCJlcXVhdGlvbiIsImluc2lkZSIsImtleXdvcmQiLCJ1cmwiLCJoZWFkbGluZSIsImZ1bmN0aW9uIiwicHVuY3R1YXRpb24iLCJ0ZXgiLCJjb250ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latte.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latte.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ latte)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n/* harmony import */ var _php_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./php.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js\");\n// @ts-nocheck\n\n\n\nlatte.displayName = \"latte\";\nlatte.aliases = [];\n/** @type {import('../core.js').Syntax} */ function latte(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.register(_php_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.latte = {\n            comment: /^\\{\\*[\\s\\S]*/,\n            \"latte-tag\": {\n                // https://latte.nette.org/en/tags\n                pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n                lookbehind: true,\n                alias: \"important\"\n            },\n            delimiter: {\n                pattern: /^\\{\\/?|\\}$/,\n                alias: \"punctuation\"\n            },\n            php: {\n                pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                alias: \"language-php\",\n                inside: Prism.languages.php\n            }\n        };\n        var markupLatte = Prism.languages.extend(\"markup\", {});\n        Prism.languages.insertBefore(\"inside\", \"attr-value\", {\n            \"n-attr\": {\n                pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n                inside: {\n                    \"attr-name\": {\n                        pattern: /^[^\\s=]+/,\n                        alias: \"important\"\n                    },\n                    \"attr-value\": {\n                        pattern: /=[\\s\\S]+/,\n                        inside: {\n                            punctuation: [\n                                /^=/,\n                                {\n                                    pattern: /^(\\s*)[\"']|[\"']$/,\n                                    lookbehind: true\n                                }\n                            ],\n                            php: {\n                                pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                                inside: Prism.languages.php\n                            }\n                        }\n                    }\n                }\n            }\n        }, markupLatte.tag);\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            if (env.language !== \"latte\") {\n                return;\n            }\n            var lattePattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"latte\", lattePattern);\n            env.grammar = markupLatte;\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"latte\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sYXR0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN1QjtBQUMzQjtBQUNuQ0csTUFBTUMsV0FBVyxHQUFHO0FBQ3BCRCxNQUFNRSxPQUFPLEdBQUcsRUFBRTtBQUVsQix3Q0FBd0MsR0FDekIsU0FBU0YsTUFBTUcsS0FBSztJQUNqQ0EsTUFBTUMsUUFBUSxDQUFDUCxpREFBY0E7SUFDN0JNLE1BQU1DLFFBQVEsQ0FBQ04sNkRBQXlCQTtJQUN4Q0ssTUFBTUMsUUFBUSxDQUFDTCwrQ0FBWUE7SUFDekIsVUFBVUksS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBRztZQUN0Qk0sU0FBUztZQUNULGFBQWE7Z0JBQ1gsa0NBQWtDO2dCQUNsQ0MsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FDLFdBQVc7Z0JBQ1RILFNBQVM7Z0JBQ1RFLE9BQU87WUFDVDtZQUNBRSxLQUFLO2dCQUNISixTQUFTO2dCQUNURSxPQUFPO2dCQUNQRyxRQUFRVCxNQUFNRSxTQUFTLENBQUNNLEdBQUc7WUFDN0I7UUFDRjtRQUNBLElBQUlFLGNBQWNWLE1BQU1FLFNBQVMsQ0FBQ1MsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUNwRFgsTUFBTUUsU0FBUyxDQUFDVSxZQUFZLENBQzFCLFVBQ0EsY0FDQTtZQUNFLFVBQVU7Z0JBQ1JSLFNBQVM7Z0JBQ1RLLFFBQVE7b0JBQ04sYUFBYTt3QkFDWEwsU0FBUzt3QkFDVEUsT0FBTztvQkFDVDtvQkFDQSxjQUFjO3dCQUNaRixTQUFTO3dCQUNUSyxRQUFROzRCQUNOSSxhQUFhO2dDQUNYO2dDQUNBO29DQUNFVCxTQUFTO29DQUNUQyxZQUFZO2dDQUNkOzZCQUNEOzRCQUNERyxLQUFLO2dDQUNISixTQUFTO2dDQUNUSyxRQUFRVCxNQUFNRSxTQUFTLENBQUNNLEdBQUc7NEJBQzdCO3dCQUNGO29CQUNGO2dCQUNGO1lBQ0Y7UUFDRixHQUNBRSxZQUFZSSxHQUFHO1FBRWpCZCxNQUFNZSxLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5QyxJQUFJQSxJQUFJQyxRQUFRLEtBQUssU0FBUztnQkFDNUI7WUFDRjtZQUNBLElBQUlDLGVBQ0Y7WUFDRm5CLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ2tCLGlCQUFpQixDQUNwREgsS0FDQSxTQUNBRTtZQUVGRixJQUFJSSxPQUFPLEdBQUdYO1FBQ2hCO1FBQ0FWLE1BQU1lLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDakIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDb0Isb0JBQW9CLENBQUNMLEtBQUs7UUFDakU7SUFDRixHQUFHakI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sYXR0ZS5qcz8zMTQzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbmltcG9ydCByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIGZyb20gJy4vbWFya3VwLXRlbXBsYXRpbmcuanMnXG5pbXBvcnQgcmVmcmFjdG9yUGhwIGZyb20gJy4vcGhwLmpzJ1xubGF0dGUuZGlzcGxheU5hbWUgPSAnbGF0dGUnXG5sYXR0ZS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsYXR0ZShQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZylcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yUGhwKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5sYXR0ZSA9IHtcbiAgICAgIGNvbW1lbnQ6IC9eXFx7XFwqW1xcc1xcU10qLyxcbiAgICAgICdsYXR0ZS10YWcnOiB7XG4gICAgICAgIC8vIGh0dHBzOi8vbGF0dGUubmV0dGUub3JnL2VuL3RhZ3NcbiAgICAgICAgcGF0dGVybjogLyheXFx7KD86XFwvKD89W2Etel0pKT8pKD86Wz1fXXxbYS16XVxcdypcXGIoPyFcXCgpKS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgIH0sXG4gICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgcGF0dGVybjogL15cXHtcXC8/fFxcfSQvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIHBocDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxTKD86W1xcc1xcU10qXFxTKT8vLFxuICAgICAgICBhbGlhczogJ2xhbmd1YWdlLXBocCcsXG4gICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnBocFxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgbWFya3VwTGF0dGUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdtYXJrdXAnLCB7fSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFxuICAgICAgJ2luc2lkZScsXG4gICAgICAnYXR0ci12YWx1ZScsXG4gICAgICB7XG4gICAgICAgICduLWF0dHInOiB7XG4gICAgICAgICAgcGF0dGVybjogL246W1xcdy1dKyg/Olxccyo9XFxzKig/OlwiW15cIl0qXCJ8J1teJ10qJ3xbXlxccydcIj49XSspKT8vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2F0dHItbmFtZSc6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL15bXlxccz1dKy8sXG4gICAgICAgICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdhdHRyLXZhbHVlJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvPVtcXHNcXFNdKy8sXG4gICAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiBbXG4gICAgICAgICAgICAgICAgICAvXj0vLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvXihcXHMqKVtcIiddfFtcIiddJC8sXG4gICAgICAgICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgIHBocDoge1xuICAgICAgICAgICAgICAgICAgcGF0dGVybjogL1xcUyg/OltcXHNcXFNdKlxcUyk/LyxcbiAgICAgICAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnBocFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG1hcmt1cExhdHRlLnRhZ1xuICAgIClcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIGlmIChlbnYubGFuZ3VhZ2UgIT09ICdsYXR0ZScpIHtcbiAgICAgICAgcmV0dXJuXG4gICAgICB9XG4gICAgICB2YXIgbGF0dGVQYXR0ZXJuID1cbiAgICAgICAgL1xce1xcKltcXHNcXFNdKj9cXCpcXH18XFx7W14nXCJcXHN7fSpdKD86W15cIicve31dfFxcLyg/IVsqL10pfChcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkqXFwxfFxcL1xcKig/OlteKl18XFwqKD8hXFwvKSkqXFwqXFwvKSpcXH0vZ1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgICBlbnYsXG4gICAgICAgICdsYXR0ZScsXG4gICAgICAgIGxhdHRlUGF0dGVyblxuICAgICAgKVxuICAgICAgZW52LmdyYW1tYXIgPSBtYXJrdXBMYXR0ZVxuICAgIH0pXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdsYXR0ZScpXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwicmVmcmFjdG9yUGhwIiwibGF0dGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJkZWxpbWl0ZXIiLCJwaHAiLCJpbnNpZGUiLCJtYXJrdXBMYXR0ZSIsImV4dGVuZCIsImluc2VydEJlZm9yZSIsInB1bmN0dWF0aW9uIiwidGFnIiwiaG9va3MiLCJhZGQiLCJlbnYiLCJsYW5ndWFnZSIsImxhdHRlUGF0dGVybiIsImJ1aWxkUGxhY2Vob2xkZXJzIiwiZ3JhbW1hciIsInRva2VuaXplUGxhY2Vob2xkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latte.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/less.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/less.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ less)\n/* harmony export */ });\n/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\");\n// @ts-nocheck\n\nless.displayName = \"less\";\nless.aliases = [];\n/** @type {import('../core.js').Syntax} */ function less(Prism) {\n    Prism.register(_css_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/ Prism.languages.less = Prism.languages.extend(\"css\", {\n        comment: [\n            /\\/\\*[\\s\\S]*?\\*\\//,\n            {\n                pattern: /(^|[^\\\\])\\/\\/.*/,\n                lookbehind: true\n            }\n        ],\n        atrule: {\n            pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n            inside: {\n                punctuation: /[:()]/\n            }\n        },\n        // selectors and mixins are considered the same\n        selector: {\n            pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n            inside: {\n                // mixin parameters\n                variable: /@+[\\w-]+/\n            }\n        },\n        property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n        operator: /[+\\-*\\/]/\n    });\n    Prism.languages.insertBefore(\"less\", \"property\", {\n        variable: [\n            // Variable declaration (the colon must be consumed!)\n            {\n                pattern: /@[\\w-]+\\s*:/,\n                inside: {\n                    punctuation: /:/\n                }\n            },\n            // Variable usage\n            /@@?[\\w-]+/\n        ],\n        \"mixin-usage\": {\n            pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n            lookbehind: true,\n            alias: \"function\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sZXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNuQ0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCwrQ0FBWUE7SUFDM0I7Ozs7OztBQU1GLEdBRUVJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxPQUFPO1FBQ25EQyxTQUFTO1lBQ1A7WUFDQTtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7UUFDREMsUUFBUTtZQUNORixTQUNFO1lBQ0ZHLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0EsK0NBQStDO1FBQy9DQyxVQUFVO1lBQ1JMLFNBQ0U7WUFDRkcsUUFBUTtnQkFDTixtQkFBbUI7Z0JBQ25CRyxVQUFVO1lBQ1o7UUFDRjtRQUNBQyxVQUFVO1FBQ1ZDLFVBQVU7SUFDWjtJQUNBYixNQUFNRSxTQUFTLENBQUNZLFlBQVksQ0FBQyxRQUFRLFlBQVk7UUFDL0NILFVBQVU7WUFDUixxREFBcUQ7WUFDckQ7Z0JBQ0VOLFNBQVM7Z0JBQ1RHLFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBLGlCQUFpQjtZQUNqQjtTQUNEO1FBQ0QsZUFBZTtZQUNiSixTQUFTO1lBQ1RDLFlBQVk7WUFDWlMsT0FBTztRQUNUO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sZXNzLmpzP2E5YjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDc3MgZnJvbSAnLi9jc3MuanMnXG5sZXNzLmRpc3BsYXlOYW1lID0gJ2xlc3MnXG5sZXNzLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxlc3MoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ3NzKVxuICAvKiBGSVhNRSA6XG46ZXh0ZW5kKCkgaXMgbm90IGhhbmRsZWQgc3BlY2lmaWNhbGx5IDogaXRzIGhpZ2hsaWdodGluZyBpcyBidWdneS5cbk1peGluIHVzYWdlIG11c3QgYmUgaW5zaWRlIGEgcnVsZXNldCB0byBiZSBoaWdobGlnaHRlZC5cbkF0LXJ1bGVzIChlLmcuIGltcG9ydCkgY29udGFpbmluZyBpbnRlcnBvbGF0aW9ucyBhcmUgYnVnZ3kuXG5EZXRhY2hlZCBydWxlc2V0cyBhcmUgaGlnaGxpZ2h0ZWQgYXMgYXQtcnVsZXMuXG5BIGNvbW1lbnQgYmVmb3JlIGEgbWl4aW4gdXNhZ2UgcHJldmVudHMgdGhlIGxhdHRlciB0byBiZSBwcm9wZXJseSBoaWdobGlnaHRlZC5cbiovXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLmxlc3MgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjc3MnLCB7XG4gICAgY29tbWVudDogW1xuICAgICAgL1xcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGF0cnVsZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL0BbXFx3LV0oPzpcXCgoPzpbXigpe31dfFxcKFteKCl7fV0qXFwpKSpcXCl8W14oKXt9O1xcc118XFxzKyg/IVxccykpKj8oPz1cXHMqXFx7KS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9bOigpXS9cbiAgICAgIH1cbiAgICB9LFxuICAgIC8vIHNlbGVjdG9ycyBhbmQgbWl4aW5zIGFyZSBjb25zaWRlcmVkIHRoZSBzYW1lXG4gICAgc2VsZWN0b3I6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oPzpAXFx7W1xcdy1dK1xcfXxbXnt9O1xcc0BdKSg/OkBcXHtbXFx3LV0rXFx9fFxcKCg/OlteKCl7fV18XFwoW14oKXt9XSpcXCkpKlxcKXxbXigpe307QFxcc118XFxzKyg/IVxccykpKj8oPz1cXHMqXFx7KS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgLy8gbWl4aW4gcGFyYW1ldGVyc1xuICAgICAgICB2YXJpYWJsZTogL0ArW1xcdy1dKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIHByb3BlcnR5OiAvKD86QFxce1tcXHctXStcXH18W1xcdy1dKSsoPzpcXCtfPyk/KD89XFxzKjopLyxcbiAgICBvcGVyYXRvcjogL1srXFwtKlxcL10vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ2xlc3MnLCAncHJvcGVydHknLCB7XG4gICAgdmFyaWFibGU6IFtcbiAgICAgIC8vIFZhcmlhYmxlIGRlY2xhcmF0aW9uICh0aGUgY29sb24gbXVzdCBiZSBjb25zdW1lZCEpXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9AW1xcdy1dK1xccyo6LyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC86L1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgLy8gVmFyaWFibGUgdXNhZ2VcbiAgICAgIC9AQD9bXFx3LV0rL1xuICAgIF0sXG4gICAgJ21peGluLXVzYWdlJzoge1xuICAgICAgcGF0dGVybjogLyhbeztdXFxzKilbLiNdKD8hXFxkKVtcXHctXS4qPyg/PVsoO10pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDc3MiLCJsZXNzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImF0cnVsZSIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwic2VsZWN0b3IiLCJ2YXJpYWJsZSIsInByb3BlcnR5Iiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJhbGlhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/less.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lilypond.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lilypond.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ lilypond)\n/* harmony export */ });\n/* harmony import */ var _scheme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheme.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scheme.js\");\n// @ts-nocheck\n\nlilypond.displayName = \"lilypond\";\nlilypond.aliases = [\n    \"ly\"\n];\n/** @type {import('../core.js').Syntax} */ function lilypond(Prism) {\n    Prism.register(_scheme_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source;\n        // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n        // For some reason, this can't be 4\n        var recursivenessLog2 = 5;\n        for(var i = 0; i < recursivenessLog2; i++){\n            schemeExpression = schemeExpression.replace(/<expr>/g, function() {\n                return schemeExpression;\n            });\n        }\n        schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n        var lilypond = Prism.languages.lilypond = {\n            comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n            \"embedded-scheme\": {\n                pattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function() {\n                    return schemeExpression;\n                }), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    scheme: {\n                        pattern: /^(#)[\\s\\S]+$/,\n                        lookbehind: true,\n                        alias: \"language-scheme\",\n                        inside: {\n                            \"embedded-lilypond\": {\n                                pattern: /#\\{[\\s\\S]*?#\\}/,\n                                greedy: true,\n                                inside: {\n                                    punctuation: /^#\\{|#\\}$/,\n                                    lilypond: {\n                                        pattern: /[\\s\\S]+/,\n                                        alias: \"language-lilypond\",\n                                        inside: null // see below\n                                    }\n                                }\n                            },\n                            rest: Prism.languages.scheme\n                        }\n                    },\n                    punctuation: /#/\n                }\n            },\n            string: {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true\n            },\n            \"class-name\": {\n                pattern: /(\\\\new\\s+)[\\w-]+/,\n                lookbehind: true\n            },\n            keyword: {\n                pattern: /\\\\[a-z][-\\w]*/i,\n                inside: {\n                    punctuation: /^\\\\/\n                }\n            },\n            operator: /[=|]|<<|>>/,\n            punctuation: {\n                pattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n                lookbehind: true\n            },\n            number: /\\b\\d+(?:\\/\\d+)?\\b/\n        };\n        lilypond[\"embedded-scheme\"].inside[\"scheme\"].inside[\"embedded-lilypond\"].inside[\"lilypond\"].inside = lilypond;\n        Prism.languages.ly = lilypond;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9saWx5cG9uZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDMkI7QUFDekNDLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUV6Qix3Q0FBd0MsR0FDekIsU0FBU0YsU0FBU0csS0FBSztJQUNwQ0EsTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDNUIsVUFBVUksS0FBSztRQUNmLElBQUlFLG1CQUNGLG1HQUNHQyxNQUFNO1FBQ1gsdUZBQXVGO1FBQ3ZGLG1DQUFtQztRQUNuQyxJQUFJQyxvQkFBb0I7UUFDeEIsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlELG1CQUFtQkMsSUFBSztZQUMxQ0gsbUJBQW1CQSxpQkFBaUJJLE9BQU8sQ0FBQyxXQUFXO2dCQUNyRCxPQUFPSjtZQUNUO1FBQ0Y7UUFDQUEsbUJBQW1CQSxpQkFBaUJJLE9BQU8sQ0FBQyxXQUFXLFVBQVVILE1BQU07UUFDdkUsSUFBSU4sV0FBWUcsTUFBTU8sU0FBUyxDQUFDVixRQUFRLEdBQUc7WUFDekNXLFNBQVM7WUFDVCxtQkFBbUI7Z0JBQ2pCQyxTQUFTQyxPQUNQLDhEQUE4RFAsTUFBTSxDQUFDRyxPQUFPLENBQzFFLFdBQ0E7b0JBQ0UsT0FBT0o7Z0JBQ1QsSUFFRjtnQkFFRlMsWUFBWTtnQkFDWkMsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTkMsUUFBUTt3QkFDTkwsU0FBUzt3QkFDVEUsWUFBWTt3QkFDWkksT0FBTzt3QkFDUEYsUUFBUTs0QkFDTixxQkFBcUI7Z0NBQ25CSixTQUFTO2dDQUNURyxRQUFRO2dDQUNSQyxRQUFRO29DQUNORyxhQUFhO29DQUNibkIsVUFBVTt3Q0FDUlksU0FBUzt3Q0FDVE0sT0FBTzt3Q0FDUEYsUUFBUSxLQUFLLFlBQVk7b0NBQzNCO2dDQUNGOzRCQUNGOzRCQUVBSSxNQUFNakIsTUFBTU8sU0FBUyxDQUFDTyxNQUFNO3dCQUM5QjtvQkFDRjtvQkFDQUUsYUFBYTtnQkFDZjtZQUNGO1lBQ0FFLFFBQVE7Z0JBQ05ULFNBQVM7Z0JBQ1RHLFFBQVE7WUFDVjtZQUNBLGNBQWM7Z0JBQ1pILFNBQVM7Z0JBQ1RFLFlBQVk7WUFDZDtZQUNBUSxTQUFTO2dCQUNQVixTQUFTO2dCQUNUSSxRQUFRO29CQUNORyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUksVUFBVTtZQUNWSixhQUFhO2dCQUNYUCxTQUNFO2dCQUNGRSxZQUFZO1lBQ2Q7WUFDQVUsUUFBUTtRQUNWO1FBQ0F4QixRQUFRLENBQUMsa0JBQWtCLENBQUNnQixNQUFNLENBQUMsU0FBUyxDQUFDQSxNQUFNLENBQ2pELG9CQUNELENBQUNBLE1BQU0sQ0FBQyxXQUFXLENBQUNBLE1BQU0sR0FBR2hCO1FBQzlCRyxNQUFNTyxTQUFTLENBQUNlLEVBQUUsR0FBR3pCO0lBQ3ZCLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGlseXBvbmQuanM/YWNmZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvclNjaGVtZSBmcm9tICcuL3NjaGVtZS5qcydcbmxpbHlwb25kLmRpc3BsYXlOYW1lID0gJ2xpbHlwb25kJ1xubGlseXBvbmQuYWxpYXNlcyA9IFsnbHknXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpbHlwb25kKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclNjaGVtZSlcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgc2NoZW1lRXhwcmVzc2lvbiA9XG4gICAgICAvXFwoKD86W14oKTtcIiNcXFxcXXxcXFxcW1xcc1xcU118Oy4qKD8hLil8XCIoPzpbXlwiXFxcXF18XFxcXC4pKlwifCMoPzpcXHsoPzooPyEjXFx9KVtcXHNcXFNdKSojXFx9fFtee10pfDxleHByPikqXFwpL1xuICAgICAgICAuc291cmNlXG4gICAgLy8gYWxsb3cgZm9yIHVwIHRvIHBvdygyLCByZWN1cnNpdmVuZXNzTG9nMikgbWFueSBsZXZlbHMgb2YgcmVjdXJzaXZlIGJyYWNlIGV4cHJlc3Npb25zXG4gICAgLy8gRm9yIHNvbWUgcmVhc29uLCB0aGlzIGNhbid0IGJlIDRcbiAgICB2YXIgcmVjdXJzaXZlbmVzc0xvZzIgPSA1XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCByZWN1cnNpdmVuZXNzTG9nMjsgaSsrKSB7XG4gICAgICBzY2hlbWVFeHByZXNzaW9uID0gc2NoZW1lRXhwcmVzc2lvbi5yZXBsYWNlKC88ZXhwcj4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gc2NoZW1lRXhwcmVzc2lvblxuICAgICAgfSlcbiAgICB9XG4gICAgc2NoZW1lRXhwcmVzc2lvbiA9IHNjaGVtZUV4cHJlc3Npb24ucmVwbGFjZSgvPGV4cHI+L2csIC9bXlxcc1xcU10vLnNvdXJjZSlcbiAgICB2YXIgbGlseXBvbmQgPSAoUHJpc20ubGFuZ3VhZ2VzLmxpbHlwb25kID0ge1xuICAgICAgY29tbWVudDogLyUoPzooPyFcXHspLip8XFx7W1xcc1xcU10qPyVcXH0pLyxcbiAgICAgICdlbWJlZGRlZC1zY2hlbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKF58Wz1cXHNdKSMoPzpcIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8W15cXHMoKVwiXSooPzpbXlxccygpXXw8ZXhwcj4pKS8uc291cmNlLnJlcGxhY2UoXG4gICAgICAgICAgICAvPGV4cHI+L2csXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzY2hlbWVFeHByZXNzaW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBzY2hlbWU6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eKCMpW1xcc1xcU10rJC8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1zY2hlbWUnLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICdlbWJlZGRlZC1saWx5cG9uZCc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xce1tcXHNcXFNdKj8jXFx9LyxcbiAgICAgICAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogL14jXFx7fCNcXH0kLyxcbiAgICAgICAgICAgICAgICAgIGxpbHlwb25kOiB7XG4gICAgICAgICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWxpbHlwb25kJyxcbiAgICAgICAgICAgICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICByZXN0OiBQcmlzbS5sYW5ndWFnZXMuc2NoZW1lXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLyMvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiKD86W15cIlxcXFxdfFxcXFwuKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcXFxuZXdcXHMrKVtcXHctXSsvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxcXFthLXpdWy1cXHddKi9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXFxcL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgb3BlcmF0b3I6IC9bPXxdfDw8fD4+LyxcbiAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFthLXpcXGRdKSg/OicrfCwrfFtfXl0/LVtfXl0/KD86Wy0rXiE+Ll9dfCg/PVxcZCkpfFtfXl1cXC4/fFsuIV0pfFt7fSgpW1xcXTw+Xn5dfFxcXFxbKClbXFxdPD5cXFxcIV18LS18X18vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcL1xcZCspP1xcYi9cbiAgICB9KVxuICAgIGxpbHlwb25kWydlbWJlZGRlZC1zY2hlbWUnXS5pbnNpZGVbJ3NjaGVtZSddLmluc2lkZVtcbiAgICAgICdlbWJlZGRlZC1saWx5cG9uZCdcbiAgICBdLmluc2lkZVsnbGlseXBvbmQnXS5pbnNpZGUgPSBsaWx5cG9uZFxuICAgIFByaXNtLmxhbmd1YWdlcy5seSA9IGxpbHlwb25kXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvclNjaGVtZSIsImxpbHlwb25kIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsInNjaGVtZUV4cHJlc3Npb24iLCJzb3VyY2UiLCJyZWN1cnNpdmVuZXNzTG9nMiIsImkiLCJyZXBsYWNlIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwic2NoZW1lIiwiYWxpYXMiLCJwdW5jdHVhdGlvbiIsInJlc3QiLCJzdHJpbmciLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJudW1iZXIiLCJseSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lilypond.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/linker-script.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/linker-script.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ linkerScript)\n/* harmony export */ });\n// @ts-nocheck\nlinkerScript.displayName = \"linker-script\";\nlinkerScript.aliases = [\n    \"ld\"\n];\n/** @type {import('../core.js').Syntax} */ function linkerScript(Prism) {\n    Prism.languages[\"linker-script\"] = {\n        comment: {\n            pattern: /(^|\\s)\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n            lookbehind: true,\n            greedy: true\n        },\n        identifier: {\n            pattern: /\"[^\"\\r\\n]*\"/,\n            greedy: true\n        },\n        \"location-counter\": {\n            pattern: /\\B\\.\\B/,\n            alias: \"important\"\n        },\n        section: {\n            pattern: /(^|[^\\w*])\\.\\w+\\b/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        function: /\\b[A-Z][A-Z_]*(?=\\s*\\()/,\n        number: /\\b(?:0[xX][a-fA-F0-9]+|\\d+)[KM]?\\b/,\n        operator: />>=?|<<=?|->|\\+\\+|--|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?/,\n        punctuation: /[(){},;]/\n    };\n    Prism.languages[\"ld\"] = Prism.languages[\"linker-script\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9saW5rZXItc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUU3Qix3Q0FBd0MsR0FDekIsU0FBU0YsYUFBYUcsS0FBSztJQUN4Q0EsTUFBTUMsU0FBUyxDQUFDLGdCQUFnQixHQUFHO1FBQ2pDQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQUMsWUFBWTtZQUNWSCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBLG9CQUFvQjtZQUNsQkYsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQUMsU0FBUztZQUNQTCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsT0FBTztRQUNUO1FBQ0FFLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtJQUNBWixNQUFNQyxTQUFTLENBQUMsS0FBSyxHQUFHRCxNQUFNQyxTQUFTLENBQUMsZ0JBQWdCO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL2xpbmtlci1zY3JpcHQuanM/MzVkZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubGlua2VyU2NyaXB0LmRpc3BsYXlOYW1lID0gJ2xpbmtlci1zY3JpcHQnXG5saW5rZXJTY3JpcHQuYWxpYXNlcyA9IFsnbGQnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpbmtlclNjcmlwdChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXNbJ2xpbmtlci1zY3JpcHQnXSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58XFxzKVxcL1xcKltcXHNcXFNdKj8oPzokfFxcKlxcLykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgaWRlbnRpZmllcjoge1xuICAgICAgcGF0dGVybjogL1wiW15cIlxcclxcbl0qXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnbG9jYXRpb24tY291bnRlcic6IHtcbiAgICAgIHBhdHRlcm46IC9cXEJcXC5cXEIvLFxuICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgfSxcbiAgICBzZWN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXHcqXSlcXC5cXHcrXFxiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBmdW5jdGlvbjogL1xcYltBLVpdW0EtWl9dKig/PVxccypcXCgpLyxcbiAgICBudW1iZXI6IC9cXGIoPzowW3hYXVthLWZBLUYwLTldK3xcXGQrKVtLTV0/XFxiLyxcbiAgICBvcGVyYXRvcjogLz4+PT98PDw9P3wtPnxcXCtcXCt8LS18JiZ8XFx8XFx8fDo6fFs/On5dfFstKyovJSZ8XiE9PD5dPT8vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe30sO10vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzWydsZCddID0gUHJpc20ubGFuZ3VhZ2VzWydsaW5rZXItc2NyaXB0J11cbn1cbiJdLCJuYW1lcyI6WyJsaW5rZXJTY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImlkZW50aWZpZXIiLCJhbGlhcyIsInNlY3Rpb24iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/linker-script.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/liquid.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/liquid.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ liquid)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\nliquid.displayName = \"liquid\";\nliquid.aliases = [];\n/** @type {import('../core.js').Syntax} */ function liquid(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.liquid = {\n        comment: {\n            pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n            lookbehind: true\n        },\n        delimiter: {\n            pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n            alias: \"punctuation\"\n        },\n        string: {\n            pattern: /\"[^\"]*\"|'[^']*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n        object: /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n        function: [\n            {\n                pattern: /(\\|\\s*)\\w+/,\n                lookbehind: true,\n                alias: \"filter\"\n            },\n            {\n                // array functions\n                pattern: /(\\.\\s*)(?:first|last|size)/,\n                lookbehind: true\n            }\n        ],\n        boolean: /\\b(?:false|nil|true)\\b/,\n        range: {\n            pattern: /\\.\\./,\n            alias: \"operator\"\n        },\n        // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n        punctuation: /[.,\\[\\]()]/,\n        empty: {\n            pattern: /\\bempty\\b/,\n            alias: \"keyword\"\n        }\n    };\n    Prism.hooks.add(\"before-tokenize\", function(env) {\n        var liquidPattern = /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g;\n        var insideRaw = false;\n        Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"liquid\", liquidPattern, function(match) {\n            var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match);\n            if (tagMatch) {\n                var tag = tagMatch[1];\n                if (tag === \"raw\" && !insideRaw) {\n                    insideRaw = true;\n                    return true;\n                } else if (tag === \"endraw\") {\n                    insideRaw = false;\n                    return true;\n                }\n            }\n            return !insideRaw;\n        });\n    });\n    Prism.hooks.add(\"after-tokenize\", function(env) {\n        Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"liquid\");\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9saXF1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ2dEO0FBQzlEQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNMLDZEQUF5QkE7SUFDeENJLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxHQUFHO1FBQ3ZCTSxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFdBQVc7WUFDVEYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOSixTQUFTO1lBQ1RLLFFBQVE7UUFDVjtRQUNBQyxTQUNFO1FBQ0ZDLFFBQ0U7UUFDRkMsVUFBVTtZQUNSO2dCQUNFUixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaRSxPQUFPO1lBQ1Q7WUFDQTtnQkFDRSxrQkFBa0I7Z0JBQ2xCSCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7U0FDRDtRQUNEUSxTQUFTO1FBQ1RDLE9BQU87WUFDTFYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQSwwR0FBMEc7UUFDMUdRLFFBQVE7UUFDUkMsVUFBVTtRQUNWQyxhQUFhO1FBQ2JDLE9BQU87WUFDTGQsU0FBUztZQUNURyxPQUFPO1FBQ1Q7SUFDRjtJQUNBUCxNQUFNbUIsS0FBSyxDQUFDQyxHQUFHLENBQUMsbUJBQW1CLFNBQVVDLEdBQUc7UUFDOUMsSUFBSUMsZ0JBQ0Y7UUFDRixJQUFJQyxZQUFZO1FBQ2hCdkIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDc0IsaUJBQWlCLENBQ3BESCxLQUNBLFVBQ0FDLGVBQ0EsU0FBVUcsS0FBSztZQUNiLElBQUlDLFdBQVcsaUJBQWlCQyxJQUFJLENBQUNGO1lBQ3JDLElBQUlDLFVBQVU7Z0JBQ1osSUFBSUUsTUFBTUYsUUFBUSxDQUFDLEVBQUU7Z0JBQ3JCLElBQUlFLFFBQVEsU0FBUyxDQUFDTCxXQUFXO29CQUMvQkEsWUFBWTtvQkFDWixPQUFPO2dCQUNULE9BQU8sSUFBSUssUUFBUSxVQUFVO29CQUMzQkwsWUFBWTtvQkFDWixPQUFPO2dCQUNUO1lBQ0Y7WUFDQSxPQUFPLENBQUNBO1FBQ1Y7SUFFSjtJQUNBdkIsTUFBTW1CLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1FBQzdDckIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDMkIsb0JBQW9CLENBQUNSLEtBQUs7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9saXF1aWQuanM/OTE5MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgZnJvbSAnLi9tYXJrdXAtdGVtcGxhdGluZy5qcydcbmxpcXVpZC5kaXNwbGF5TmFtZSA9ICdsaXF1aWQnXG5saXF1aWQuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGlxdWlkKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIFByaXNtLmxhbmd1YWdlcy5saXF1aWQgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyheXFx7JVxccypjb21tZW50XFxzKiVcXH0pW1xcc1xcU10rKD89XFx7JVxccyplbmRjb21tZW50XFxzKiVcXH0kKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBkZWxpbWl0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC9eXFx7KD86XFx7XFx7fFslXFx7XSktP3wtPyg/OlxcfVxcfXxbJVxcfV0pXFx9JC8sXG4gICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJbXlwiXSpcInwnW14nXSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphc3xhc3NpZ258YnJlYWt8KD86ZW5kKT8oPzpjYXB0dXJlfGNhc2V8Y29tbWVudHxmb3J8Zm9ybXxpZnxwYWdpbmF0ZXxyYXd8c3R5bGV8dGFibGVyb3d8dW5sZXNzKXxjb250aW51ZXxjeWNsZXxkZWNyZW1lbnR8ZWNob3xlbHNlfGVsc2lmfGlufGluY2x1ZGV8aW5jcmVtZW50fGxpbWl0fGxpcXVpZHxvZmZzZXR8cmFuZ2V8cmVuZGVyfHJldmVyc2VkfHNlY3Rpb258d2hlbnx3aXRoKVxcYi8sXG4gICAgb2JqZWN0OlxuICAgICAgL1xcYig/OmFkZHJlc3N8YWxsX2NvdW50cnlfb3B0aW9uX3RhZ3N8YXJ0aWNsZXxibG9ja3xibG9nfGNhcnR8Y2hlY2tvdXR8Y29sbGVjdGlvbnxjb2xvcnxjb3VudHJ5fGNvdW50cnlfb3B0aW9uX3RhZ3N8Y3VycmVuY3l8Y3VycmVudF9wYWdlfGN1cnJlbnRfdGFnc3xjdXN0b21lcnxjdXN0b21lcl9hZGRyZXNzfGRhdGV8ZGlzY291bnRfYWxsb2NhdGlvbnxkaXNjb3VudF9hcHBsaWNhdGlvbnxleHRlcm5hbF92aWRlb3xmaWx0ZXJ8ZmlsdGVyX3ZhbHVlfGZvbnR8Zm9ybG9vcHxmdWxmaWxsbWVudHxnZW5lcmljX2ZpbGV8Z2lmdF9jYXJkfGdyb3VwfGhhbmRsZXxpbWFnZXxsaW5lX2l0ZW18bGlua3xsaW5rbGlzdHxsb2NhbGl6YXRpb258bG9jYXRpb258bWVhc3VyZW1lbnR8bWVkaWF8bWV0YWZpZWxkfG1vZGVsfG1vZGVsX3NvdXJjZXxvcmRlcnxwYWdlfHBhZ2VfZGVzY3JpcHRpb258cGFnZV9pbWFnZXxwYWdlX3RpdGxlfHBhcnR8cG9saWN5fHByb2R1Y3R8cHJvZHVjdF9vcHRpb258cmVjb21tZW5kYXRpb25zfHJlcXVlc3R8cm9ib3RzfHJvdXRlc3xydWxlfHNjcmlwdHxzZWFyY2h8c2VsbGluZ19wbGFufHNlbGxpbmdfcGxhbl9hbGxvY2F0aW9ufHNlbGxpbmdfcGxhbl9ncm91cHxzaGlwcGluZ19tZXRob2R8c2hvcHxzaG9wX2xvY2FsZXxzaXRlbWFwfHN0b3JlX2F2YWlsYWJpbGl0eXx0YXhfbGluZXx0ZW1wbGF0ZXx0aGVtZXx0cmFuc2FjdGlvbnx1bml0X3ByaWNlX21lYXN1cmVtZW50fHVzZXJfYWdlbnR8dmFyaWFudHx2aWRlb3x2aWRlb19zb3VyY2UpXFxiLyxcbiAgICBmdW5jdGlvbjogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcfFxccyopXFx3Ky8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnZmlsdGVyJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gYXJyYXkgZnVuY3Rpb25zXG4gICAgICAgIHBhdHRlcm46IC8oXFwuXFxzKikoPzpmaXJzdHxsYXN0fHNpemUpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG5pbHx0cnVlKVxcYi8sXG4gICAgcmFuZ2U6IHtcbiAgICAgIHBhdHRlcm46IC9cXC5cXC4vLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9TaG9waWZ5L2xpcXVpZC9ibG9iLzY5OGY1ZTBkOTY3NDIzZTAxM2Y2MTY5ZDkxMTFiZDk2OWJkNzgzMzcvbGliL2xpcXVpZC9sZXhlci5yYiNMMjFcbiAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKyk/XFxiLyxcbiAgICBvcGVyYXRvcjogL1shPV09fDw+fFs8Pl09P3xbfD86PS1dfFxcYig/OmFuZHxjb250YWlucyg/PVxccyl8b3IpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1suLFxcW1xcXSgpXS8sXG4gICAgZW1wdHk6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJlbXB0eVxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfVxuICB9XG4gIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgIHZhciBsaXF1aWRQYXR0ZXJuID1cbiAgICAgIC9cXHslXFxzKmNvbW1lbnRcXHMqJVxcfVtcXHNcXFNdKj9cXHslXFxzKmVuZGNvbW1lbnRcXHMqJVxcfXxcXHsoPzolW1xcc1xcU10qPyV8XFx7XFx7W1xcc1xcU10qP1xcfVxcfXxcXHtbXFxzXFxTXSo/XFx9KVxcfS9nXG4gICAgdmFyIGluc2lkZVJhdyA9IGZhbHNlXG4gICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgZW52LFxuICAgICAgJ2xpcXVpZCcsXG4gICAgICBsaXF1aWRQYXR0ZXJuLFxuICAgICAgZnVuY3Rpb24gKG1hdGNoKSB7XG4gICAgICAgIHZhciB0YWdNYXRjaCA9IC9eXFx7JS0/XFxzKihcXHcrKS8uZXhlYyhtYXRjaClcbiAgICAgICAgaWYgKHRhZ01hdGNoKSB7XG4gICAgICAgICAgdmFyIHRhZyA9IHRhZ01hdGNoWzFdXG4gICAgICAgICAgaWYgKHRhZyA9PT0gJ3JhdycgJiYgIWluc2lkZVJhdykge1xuICAgICAgICAgICAgaW5zaWRlUmF3ID0gdHJ1ZVxuICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICB9IGVsc2UgaWYgKHRhZyA9PT0gJ2VuZHJhdycpIHtcbiAgICAgICAgICAgIGluc2lkZVJhdyA9IGZhbHNlXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gIWluc2lkZVJhd1xuICAgICAgfVxuICAgIClcbiAgfSlcbiAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAnbGlxdWlkJylcbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwibGlxdWlkIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImRlbGltaXRlciIsImFsaWFzIiwic3RyaW5nIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm9iamVjdCIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsInJhbmdlIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImVtcHR5IiwiaG9va3MiLCJhZGQiLCJlbnYiLCJsaXF1aWRQYXR0ZXJuIiwiaW5zaWRlUmF3IiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJtYXRjaCIsInRhZ01hdGNoIiwiZXhlYyIsInRhZyIsInRva2VuaXplUGxhY2Vob2xkZXJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/liquid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lisp.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lisp.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ lisp)\n/* harmony export */ });\n// @ts-nocheck\nlisp.displayName = \"lisp\";\nlisp.aliases = [\n    \"elisp\",\n    \"emacs\",\n    \"emacs-lisp\"\n];\n/** @type {import('../core.js').Syntax} */ function lisp(Prism) {\n    ;\n    (function(Prism) {\n        /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */ function simple_form(name) {\n            return RegExp(/(\\()/.source + \"(?:\" + name + \")\" + /(?=[\\s\\)])/.source);\n        }\n        /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */ function primitive(pattern) {\n            return RegExp(/([\\s([])/.source + \"(?:\" + pattern + \")\" + /(?=[\\s)])/.source);\n        }\n        // Patterns in regular expressions\n        // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n        // & and : are excluded as they are usually used for special purposes\n        var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source;\n        // symbol starting with & used in function arguments\n        var marker = \"&\" + symbol;\n        // Open parenthesis for look-behind\n        var par = \"(\\\\()\";\n        var endpar = \"(?=\\\\))\";\n        // End the pattern with look-ahead space\n        var space = \"(?=\\\\s)\";\n        var nestedPar = /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/.source;\n        var language = {\n            // Three or four semicolons are considered a heading.\n            // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n            heading: {\n                pattern: /;;;.*/,\n                alias: [\n                    \"comment\",\n                    \"title\"\n                ]\n            },\n            comment: /;.*/,\n            string: {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true,\n                inside: {\n                    argument: /[-A-Z]+(?=[.,\\s])/,\n                    symbol: RegExp(\"`\" + symbol + \"'\")\n                }\n            },\n            \"quoted-symbol\": {\n                pattern: RegExp(\"#?'\" + symbol),\n                alias: [\n                    \"variable\",\n                    \"symbol\"\n                ]\n            },\n            \"lisp-property\": {\n                pattern: RegExp(\":\" + symbol),\n                alias: \"property\"\n            },\n            splice: {\n                pattern: RegExp(\",@?\" + symbol),\n                alias: [\n                    \"symbol\",\n                    \"variable\"\n                ]\n            },\n            keyword: [\n                {\n                    pattern: RegExp(par + \"(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)\" + space),\n                    lookbehind: true\n                },\n                {\n                    pattern: RegExp(par + \"(?:append|by|collect|concat|do|finally|for|in|return)\" + space),\n                    lookbehind: true\n                }\n            ],\n            declare: {\n                pattern: simple_form(/declare/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            interactive: {\n                pattern: simple_form(/interactive/.source),\n                lookbehind: true,\n                alias: \"keyword\"\n            },\n            boolean: {\n                pattern: primitive(/nil|t/.source),\n                lookbehind: true\n            },\n            number: {\n                pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n                lookbehind: true\n            },\n            defvar: {\n                pattern: RegExp(par + \"def(?:const|custom|group|var)\\\\s+\" + symbol),\n                lookbehind: true,\n                inside: {\n                    keyword: /^def[a-z]+/,\n                    variable: RegExp(symbol)\n                }\n            },\n            defun: {\n                pattern: RegExp(par + /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source + symbol + /\\s+\\(/.source + nestedPar + /\\)/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^(?:cl-)?def\\S+/,\n                    // See below, this property needs to be defined later so that it can\n                    // reference the language object.\n                    arguments: null,\n                    function: {\n                        pattern: RegExp(\"(^\\\\s)\" + symbol),\n                        lookbehind: true\n                    },\n                    punctuation: /[()]/\n                }\n            },\n            lambda: {\n                pattern: RegExp(par + \"lambda\\\\s+\\\\(\\\\s*(?:&?\" + symbol + \"(?:\\\\s+&?\" + symbol + \")*\\\\s*)?\\\\)\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    keyword: /^lambda/,\n                    // See below, this property needs to be defined later so that it can\n                    // reference the language object.\n                    arguments: null,\n                    punctuation: /[()]/\n                }\n            },\n            car: {\n                pattern: RegExp(par + symbol),\n                lookbehind: true\n            },\n            punctuation: [\n                // open paren, brackets, and close paren\n                /(?:['`,]?\\(|[)\\[\\]])/,\n                // cons\n                {\n                    pattern: /(\\s)\\.(?=\\s)/,\n                    lookbehind: true\n                }\n            ]\n        };\n        var arg = {\n            \"lisp-marker\": RegExp(marker),\n            varform: {\n                pattern: RegExp(/\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source),\n                inside: language\n            },\n            argument: {\n                pattern: RegExp(/(^|[\\s(])/.source + symbol),\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            rest: language\n        };\n        var forms = \"\\\\S+(?:\\\\s+\\\\S+)*\";\n        var arglist = {\n            pattern: RegExp(par + nestedPar + endpar),\n            lookbehind: true,\n            inside: {\n                \"rest-vars\": {\n                    pattern: RegExp(\"&(?:body|rest)\\\\s+\" + forms),\n                    inside: arg\n                },\n                \"other-marker-vars\": {\n                    pattern: RegExp(\"&(?:aux|optional)\\\\s+\" + forms),\n                    inside: arg\n                },\n                keys: {\n                    pattern: RegExp(\"&key\\\\s+\" + forms + \"(?:\\\\s+&allow-other-keys)?\"),\n                    inside: arg\n                },\n                argument: {\n                    pattern: RegExp(symbol),\n                    alias: \"variable\"\n                },\n                punctuation: /[()]/\n            }\n        };\n        language[\"lambda\"].inside.arguments = arglist;\n        language[\"defun\"].inside.arguments = Prism.util.clone(arglist);\n        language[\"defun\"].inside.arguments.inside.sublist = arglist;\n        Prism.languages.lisp = language;\n        Prism.languages.elisp = language;\n        Prism.languages.emacs = language;\n        Prism.languages[\"emacs-lisp\"] = language;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lisp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/livescript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/livescript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ livescript)\n/* harmony export */ });\n// @ts-nocheck\nlivescript.displayName = \"livescript\";\nlivescript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function livescript(Prism) {\n    Prism.languages.livescript = {\n        comment: [\n            {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true\n            }\n        ],\n        \"interpolated-string\": {\n            /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */ pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                variable: {\n                    pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n                    lookbehind: true\n                },\n                interpolation: {\n                    pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^#\\{|\\}$/,\n                            alias: \"variable\"\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        string: [\n            {\n                pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                greedy: true\n            },\n            {\n                pattern: /<\\[[\\s\\S]*?\\]>/,\n                greedy: true\n            },\n            /\\\\[^\\s,;\\])}]+/\n        ],\n        regex: [\n            {\n                pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n                greedy: true,\n                inside: {\n                    comment: {\n                        pattern: /(^|[^\\\\])#.*/,\n                        lookbehind: true\n                    }\n                }\n            },\n            {\n                pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n                greedy: true\n            }\n        ],\n        keyword: {\n            pattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n            lookbehind: true\n        },\n        \"keyword-operator\": {\n            pattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n            lookbehind: true,\n            alias: \"operator\"\n        },\n        boolean: {\n            pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n            lookbehind: true\n        },\n        argument: {\n            // Don't match .&. nor &&\n            pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n        identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n        operator: [\n            // Spaced .\n            {\n                pattern: /( )\\.(?= )/,\n                lookbehind: true\n            },\n            // Full list, in order:\n            // .= .~ .. ...\n            // .&. .^. .<<. .>>. .>>>.\n            // := :: ::=\n            // &&\n            // || |>\n            // < << <<< <<<<\n            // <- <-- <-! <--!\n            // <~ <~~ <~! <~~!\n            // <| <= <?\n            // > >> >= >?\n            // - -- -> -->\n            // + ++\n            // @ @@\n            // % %%\n            // * **\n            // ! != !~=\n            // !~> !~~>\n            // !-> !-->\n            // ~ ~> ~~> ~=\n            // = ==\n            // ^ ^^\n            // / ?\n            /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n        ],\n        punctuation: /[(){}\\[\\]|.,:;`]/\n    };\n    Prism.languages.livescript[\"interpolated-string\"].inside[\"interpolation\"].inside.rest = Prism.languages.livescript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9saXZlc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHLEVBQUU7QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdENBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHO1FBQzNCSyxTQUFTO1lBQ1A7Z0JBQ0VDLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7U0FDRDtRQUNELHVCQUF1QjtZQUNyQjs2RkFDdUYsR0FDdkZELFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05DLFVBQVU7b0JBQ1JKLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0FJLGVBQWU7b0JBQ2JMLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7d0JBQ04sNkJBQTZCOzRCQUMzQkgsU0FBUzs0QkFDVE0sT0FBTzt3QkFDVDtvQkFFRjtnQkFDRjtnQkFFQUMsUUFBUTtZQUNWO1FBQ0Y7UUFDQUEsUUFBUTtZQUNOO2dCQUNFUCxTQUFTO2dCQUNURSxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEUsUUFBUTtZQUNWO1lBQ0E7U0FDRDtRQUNETSxPQUFPO1lBQ0w7Z0JBQ0VSLFNBQVM7Z0JBQ1RFLFFBQVE7Z0JBQ1JDLFFBQVE7b0JBQ05KLFNBQVM7d0JBQ1BDLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7Z0JBQ0Y7WUFDRjtZQUNBO2dCQUNFRCxTQUFTO2dCQUNURSxRQUFRO1lBQ1Y7U0FDRDtRQUNETyxTQUFTO1lBQ1BULFNBQ0U7WUFDRkMsWUFBWTtRQUNkO1FBQ0Esb0JBQW9CO1lBQ2xCRCxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkssT0FBTztRQUNUO1FBQ0FJLFNBQVM7WUFDUFYsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQVUsVUFBVTtZQUNSLHlCQUF5QjtZQUN6QlgsU0FBUztZQUNUQyxZQUFZO1lBQ1pLLE9BQU87UUFDVDtRQUNBTSxRQUFRO1FBQ1JDLFlBQVk7UUFDWkMsVUFBVTtZQUNSLFdBQVc7WUFDWDtnQkFDRWQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0EsdUJBQXVCO1lBQ3ZCLGVBQWU7WUFDZiwwQkFBMEI7WUFDMUIsWUFBWTtZQUNaLEtBQUs7WUFDTCxRQUFRO1lBQ1IsZ0JBQWdCO1lBQ2hCLGtCQUFrQjtZQUNsQixrQkFBa0I7WUFDbEIsV0FBVztZQUNYLGFBQWE7WUFDYixjQUFjO1lBQ2QsT0FBTztZQUNQLE9BQU87WUFDUCxPQUFPO1lBQ1AsT0FBTztZQUNQLFdBQVc7WUFDWCxXQUFXO1lBQ1gsV0FBVztZQUNYLGNBQWM7WUFDZCxPQUFPO1lBQ1AsT0FBTztZQUNQLE1BQU07WUFDTjtTQUNEO1FBQ0RjLGFBQWE7SUFDZjtJQUNBbEIsTUFBTUMsU0FBUyxDQUFDSixVQUFVLENBQUMsc0JBQXNCLENBQUNTLE1BQU0sQ0FDdEQsZ0JBQ0QsQ0FBQ0EsTUFBTSxDQUFDYSxJQUFJLEdBQUduQixNQUFNQyxTQUFTLENBQUNKLFVBQVU7QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbGl2ZXNjcmlwdC5qcz9hZWQwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5saXZlc2NyaXB0LmRpc3BsYXlOYW1lID0gJ2xpdmVzY3JpcHQnXG5saXZlc2NyaXB0LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxpdmVzY3JpcHQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLmxpdmVzY3JpcHQgPSB7XG4gICAgY29tbWVudDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pIy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgJ2ludGVycG9sYXRlZC1zdHJpbmcnOiB7XG4gICAgICAvKiBMb29rLWJlaGluZCBhbmQgbG9vay1haGVhZCBwcmV2ZW50cyB3cm9uZyBiZWhhdmlvciBvZiB0aGUgZ3JlZWR5IHBhdHRlcm5cbiAgICAgICAqIGZvcmNpbmcgaXQgdG8gbWF0Y2ggXCJcIlwiLXF1b3RlZCBzdHJpbmcgd2hlbiBpdCB3b3VsZCBvdGhlcndpc2UgbWF0Y2ggXCItcXVvdGVkIGZpcnN0LiAqL1xuICAgICAgcGF0dGVybjogLyhefFteXCJdKShcIlwiXCJ8XCIpKD86XFxcXFtcXHNcXFNdfCg/IVxcMilbXlxcXFxdKSpcXDIoPyFcIikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZToge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSNbYS16X10oPzotP1thLXpdfFtcXGRfXSkqL20sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pI1xce1tefV0rXFx9L20sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXiNcXHt8XFx9JC8sXG4gICAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBTZWUgcmVzdCBiZWxvd1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfSxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLygnJyd8JykoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLzxcXFtbXFxzXFxTXSo/XFxdPi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC9cXFxcW15cXHMsO1xcXSl9XSsvXG4gICAgXSxcbiAgICByZWdleDogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvXFwvKD86XFxbW15cXHJcXG5cXF1dKlxcXXxcXFxcLnwoPyFcXC9cXC8pW15cXFxcXFxbXSkrXFwvXFwvW2dpbXl1XXswLDV9LyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBjb21tZW50OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjLiovLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcLyg/OlxcW1teXFxyXFxuXFxdXSpcXF18XFxcXC58W14vXFxcXFxcclxcblxcW10pK1xcL1tnaW15dV17MCw1fS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefCg/IS0pLilcXGIoPzpicmVha3xjYXNlfGNhdGNofGNsYXNzfGNvbnN0fGNvbnRpbnVlfGRlZmF1bHR8ZG98ZWxzZXxleHRlbmRzfGZhbGx0aHJvdWdofGZpbmFsbHl8Zm9yKD86IGV2ZXIpP3xmdW5jdGlvbnxpZnxpbXBsZW1lbnRzfGl0fGxldHxsb29wfG5ld3xudWxsfG90aGVyd2lzZXxvd258cmV0dXJufHN1cGVyfHN3aXRjaHx0aGF0fHRoZW58dGhpc3x0aHJvd3x0cnl8dW5sZXNzfHVudGlsfHZhcnx2b2lkfHdoZW58d2hpbGV8eWllbGQpKD8hLSlcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgICdrZXl3b3JkLW9wZXJhdG9yJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLV0pXFxiKD86KD86ZGVsZXRlfHJlcXVpcmV8dHlwZW9mKSF8KD86YW5kfGJ5fGRlbGV0ZXxleHBvcnR8ZnJvbXxpbXBvcnQoPzogYWxsKT98aW58aW5zdGFuY2VvZnxpcyg/OiBub3R8bnQpP3xub3R8b2Z8b3J8dGlsfHRvfHR5cGVvZnx3aXRofHhvcikoPyEtKVxcYikvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgYm9vbGVhbjoge1xuICAgICAgcGF0dGVybjogLyhefFteLV0pXFxiKD86ZmFsc2V8bm98b2ZmfG9ufHRydWV8eWVzKSg/IS0pXFxiL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBhcmd1bWVudDoge1xuICAgICAgLy8gRG9uJ3QgbWF0Y2ggLiYuIG5vciAmJlxuICAgICAgcGF0dGVybjogLyhefCg/IVxcLiZcXC4pW14mXSkmKD8hJilcXGQqL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd2YXJpYWJsZSdcbiAgICB9LFxuICAgIG51bWJlcjogL1xcYig/OlxcZCt+W1xcZGEtel0rfFxcZFtcXGRfXSooPzpcXC5cXGRbXFxkX10qKT8oPzpbYS16XVxcdyopPykvaSxcbiAgICBpZGVudGlmaWVyOiAvW2Etel9dKD86LT9bYS16XXxbXFxkX10pKi9pLFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICAvLyBTcGFjZWQgLlxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKCApXFwuKD89ICkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gRnVsbCBsaXN0LCBpbiBvcmRlcjpcbiAgICAgIC8vIC49IC5+IC4uIC4uLlxuICAgICAgLy8gLiYuIC5eLiAuPDwuIC4+Pi4gLj4+Pi5cbiAgICAgIC8vIDo9IDo6IDo6PVxuICAgICAgLy8gJiZcbiAgICAgIC8vIHx8IHw+XG4gICAgICAvLyA8IDw8IDw8PCA8PDw8XG4gICAgICAvLyA8LSA8LS0gPC0hIDwtLSFcbiAgICAgIC8vIDx+IDx+fiA8fiEgPH5+IVxuICAgICAgLy8gPHwgPD0gPD9cbiAgICAgIC8vID4gPj4gPj0gPj9cbiAgICAgIC8vIC0gLS0gLT4gLS0+XG4gICAgICAvLyArICsrXG4gICAgICAvLyBAIEBAXG4gICAgICAvLyAlICUlXG4gICAgICAvLyAqICoqXG4gICAgICAvLyAhICE9ICF+PVxuICAgICAgLy8gIX4+ICF+fj5cbiAgICAgIC8vICEtPiAhLS0+XG4gICAgICAvLyB+IH4+IH5+PiB+PVxuICAgICAgLy8gPSA9PVxuICAgICAgLy8gXiBeXlxuICAgICAgLy8gLyA/XG4gICAgICAvXFwuKD86Wz1+XXxcXC5cXC4/KXxcXC4oPzpbJnxeXXw8PHw+Pj4/KVxcLnw6KD86PXw6PT8pfCYmfFxcfFt8Pl18PCg/Ojw8Pzw/fC0tPyE/fH5+PyE/fFt8PT9dKT98Pls+PT9dP3wtKD86LT4/fD4pP3xcXCtcXCs/fEBAP3wlJT98XFwqXFwqP3whKD86fj89fC0tPz58fj9+Pik/fH4oPzp+Pz58PSk/fD09P3xcXF5cXF4/fFtcXC8/XS9cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31cXFtcXF18Liw6O2BdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5saXZlc2NyaXB0WydpbnRlcnBvbGF0ZWQtc3RyaW5nJ10uaW5zaWRlW1xuICAgICdpbnRlcnBvbGF0aW9uJ1xuICBdLmluc2lkZS5yZXN0ID0gUHJpc20ubGFuZ3VhZ2VzLmxpdmVzY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJsaXZlc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJpbnNpZGUiLCJ2YXJpYWJsZSIsImludGVycG9sYXRpb24iLCJhbGlhcyIsInN0cmluZyIsInJlZ2V4Iiwia2V5d29yZCIsImJvb2xlYW4iLCJhcmd1bWVudCIsIm51bWJlciIsImlkZW50aWZpZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwicmVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/livescript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/llvm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/llvm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ llvm)\n/* harmony export */ });\n// @ts-nocheck\nllvm.displayName = \"llvm\";\nllvm.aliases = [];\n/** @type {import('../core.js').Syntax} */ function llvm(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.llvm = {\n            comment: /;.*/,\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            boolean: /\\b(?:false|true)\\b/,\n            variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n            label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n            type: {\n                pattern: /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n                alias: \"class-name\"\n            },\n            keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n            number: /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n            punctuation: /[{}[\\];(),.!*=<>]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sbHZtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZkEsTUFBTUMsU0FBUyxDQUFDSixJQUFJLEdBQUc7WUFDckJLLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0FDLFNBQVM7WUFDVEMsVUFBVTtZQUNWQyxPQUFPO1lBQ1BDLE1BQU07Z0JBQ0pMLFNBQ0U7Z0JBQ0ZNLE9BQU87WUFDVDtZQUNBQyxTQUFTO1lBQ1RDLFFBQ0U7WUFDRkMsYUFBYTtRQUNmO0lBQ0YsR0FBR2I7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sbHZtLmpzPzdjZTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmxsdm0uZGlzcGxheU5hbWUgPSAnbGx2bSdcbmxsdm0uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbGx2bShQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy5sbHZtID0ge1xuICAgICAgY29tbWVudDogLzsuKi8sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cIl0qXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgdmFyaWFibGU6IC9bJUAhI10oPzooPyFcXGQpKD86Wy0kLlxcd118XFxcXFthLWZcXGRdezJ9KSt8XFxkKykvaSxcbiAgICAgIGxhYmVsOiAvKD8hXFxkKSg/OlstJC5cXHddfFxcXFxbYS1mXFxkXXsyfSkrOi9pLFxuICAgICAgdHlwZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXGIoPzpkb3VibGV8ZmxvYXR8ZnAxMjh8aGFsZnxpWzEtOV1cXGQqfGxhYmVsfG1ldGFkYXRhfHBwY19mcDEyOHx0b2tlbnx2b2lkfHg4Nl9mcDgwfHg4Nl9tbXgpXFxiLyxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IC9cXGJbYS16X11bYS16XzAtOV0qXFxiLyxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1srLV0/XFxiXFxkKyg/OlxcLlxcZCspPyg/OltlRV1bKy1dP1xcZCspP1xcYnxcXGIweFtcXGRBLUZhLWZdK1xcYnxcXGIweEtbXFxkQS1GYS1mXXsyMH1cXGJ8XFxiMHhbTUxdW1xcZEEtRmEtZl17MzJ9XFxifFxcYjB4SFtcXGRBLUZhLWZdezR9XFxiLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSwuISo9PD5dL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibGx2bSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJib29sZWFuIiwidmFyaWFibGUiLCJsYWJlbCIsInR5cGUiLCJhbGlhcyIsImtleXdvcmQiLCJudW1iZXIiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/llvm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/log.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/log.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ log)\n/* harmony export */ });\n// @ts-nocheck\nlog.displayName = \"log\";\nlog.aliases = [];\n/** @type {import('../core.js').Syntax} */ function log(Prism) {\n    // This is a language definition for generic log files.\n    // Since there is no one log format, this language definition has to support all formats to some degree.\n    //\n    // Based on https://github.com/MTDL9/vim-log-highlighting\n    Prism.languages.log = {\n        string: {\n            // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n            greedy: true\n        },\n        exception: {\n            pattern: /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n            lookbehind: true,\n            greedy: true,\n            alias: [\n                \"javastacktrace\",\n                \"language-javastacktrace\"\n            ],\n            inside: Prism.languages[\"javastacktrace\"] || {\n                keyword: /\\bat\\b/,\n                function: /[a-z_][\\w$]*(?=\\()/,\n                punctuation: /[.:()]/\n            }\n        },\n        level: [\n            {\n                pattern: /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n                alias: [\n                    \"error\",\n                    \"important\"\n                ]\n            },\n            {\n                pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n                alias: [\n                    \"warning\",\n                    \"important\"\n                ]\n            },\n            {\n                pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n                alias: [\n                    \"info\",\n                    \"keyword\"\n                ]\n            },\n            {\n                pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n                alias: [\n                    \"debug\",\n                    \"keyword\"\n                ]\n            },\n            {\n                pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n                alias: [\n                    \"trace\",\n                    \"comment\"\n                ]\n            }\n        ],\n        property: {\n            pattern: /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n            lookbehind: true\n        },\n        separator: {\n            pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n        email: {\n            pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n            lookbehind: true,\n            alias: \"url\"\n        },\n        \"ip-address\": {\n            pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n            alias: \"constant\"\n        },\n        \"mac-address\": {\n            pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n            alias: \"constant\"\n        },\n        domain: {\n            pattern: /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n            lookbehind: true,\n            alias: \"constant\"\n        },\n        uuid: {\n            pattern: /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n            alias: \"constant\"\n        },\n        hash: {\n            pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n            alias: \"constant\"\n        },\n        \"file-path\": {\n            pattern: /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n            lookbehind: true,\n            greedy: true,\n            alias: \"string\"\n        },\n        date: {\n            pattern: RegExp(/\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source + \"|\" + /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/.source + \"|\" + /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/.source, \"i\"),\n            alias: \"number\"\n        },\n        time: {\n            pattern: /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n            alias: \"number\"\n        },\n        boolean: /\\b(?:false|null|true)\\b/i,\n        number: {\n            pattern: /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n            lookbehind: true\n        },\n        operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n        punctuation: /[\\[\\].,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/log.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lolcode.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lolcode.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ lolcode)\n/* harmony export */ });\n// @ts-nocheck\nlolcode.displayName = \"lolcode\";\nlolcode.aliases = [];\n/** @type {import('../core.js').Syntax} */ function lolcode(Prism) {\n    Prism.languages.lolcode = {\n        comment: [\n            /\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/,\n            /\\bBTW.+/\n        ],\n        string: {\n            pattern: /\"(?::.|[^\":])*\"/,\n            inside: {\n                variable: /:\\{[^}]+\\}/,\n                symbol: [\n                    /:\\([a-f\\d]+\\)/i,\n                    /:\\[[^\\]]+\\]/,\n                    /:[)>o\":]/\n                ]\n            },\n            greedy: true\n        },\n        number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n        symbol: {\n            pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n            lookbehind: true,\n            inside: {\n                keyword: /A(?=\\s)/\n            }\n        },\n        label: {\n            pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        function: {\n            pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n            lookbehind: true\n        },\n        keyword: [\n            {\n                pattern: /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n                lookbehind: true\n            },\n            /'Z(?=\\s|,|$)/\n        ],\n        boolean: {\n            pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n            lookbehind: true\n        },\n        variable: {\n            pattern: /(^|\\s)IT(?=\\s|,|$)/,\n            lookbehind: true\n        },\n        operator: {\n            pattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n            lookbehind: true\n        },\n        punctuation: /\\.{3}|…|,|!/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sb2xjb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1lBQUM7WUFBNEI7U0FBVTtRQUNoREMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7Z0JBQ05DLFVBQVU7Z0JBQ1ZDLFFBQVE7b0JBQUM7b0JBQWtCO29CQUFlO2lCQUFXO1lBQ3ZEO1lBQ0FDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1FBQ1JGLFFBQVE7WUFDTkgsU0FBUztZQUNUTSxZQUFZO1lBQ1pMLFFBQVE7Z0JBQ05NLFNBQVM7WUFDWDtRQUNGO1FBQ0FDLE9BQU87WUFDTFIsU0FBUztZQUNUTSxZQUFZO1lBQ1pHLE9BQU87UUFDVDtRQUNBQyxVQUFVO1lBQ1JWLFNBQVM7WUFDVE0sWUFBWTtRQUNkO1FBQ0FDLFNBQVM7WUFDUDtnQkFDRVAsU0FDRTtnQkFDRk0sWUFBWTtZQUNkO1lBQ0E7U0FDRDtRQUNESyxTQUFTO1lBQ1BYLFNBQVM7WUFDVE0sWUFBWTtRQUNkO1FBQ0FKLFVBQVU7WUFDUkYsU0FBUztZQUNUTSxZQUFZO1FBQ2Q7UUFDQU0sVUFBVTtZQUNSWixTQUNFO1lBQ0ZNLFlBQVk7UUFDZDtRQUNBTyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sb2xjb2RlLmpzP2M4NjYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmxvbGNvZGUuZGlzcGxheU5hbWUgPSAnbG9sY29kZSdcbmxvbGNvZGUuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbG9sY29kZShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubG9sY29kZSA9IHtcbiAgICBjb21tZW50OiBbL1xcYk9CVFdcXHNbXFxzXFxTXSo/XFxzVExEUlxcYi8sIC9cXGJCVFcuKy9dLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86Oi58W15cIjpdKSpcIi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IC86XFx7W159XStcXH0vLFxuICAgICAgICBzeW1ib2w6IFsvOlxcKFthLWZcXGRdK1xcKS9pLCAvOlxcW1teXFxdXStcXF0vLCAvOlspPm9cIjpdL11cbiAgICAgIH0sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjogLyg/OlxcQi0pPyg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykvLFxuICAgIHN5bWJvbDoge1xuICAgICAgcGF0dGVybjogLyhefFxccykoPzpBICk/KD86QlVLS0lUfE5PT0J8TlVNQkFSfE5VTUJSfFRST09GfFlBUk4pKD89XFxzfCx8JCkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvQSg/PVxccykvXG4gICAgICB9XG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLygoPzpefFxccykoPzpJTSBJTiBZUnxJTSBPVVRUQSBZUikgKVthLXpBLVpdXFx3Ki8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfSxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjogLygoPzpefFxccykoPzpIT1cgSVogSXxJIElafElaKSApW2EtekEtWl1cXHcqLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58XFxzKSg/OkFOfEZPVU5EIFlSfEdJTU1FSHxHVEZPfEhBSXxIQVMgQXxIT1cgSVogSXxJIEhBUyBBfEkgSVp8SUYgVSBTQVkgU098SU0gSU4gWVJ8SU0gT1VUVEEgWVJ8SVMgTk9XKD86IEEpP3xJVFooPzogQSk/fElafEtUSFh8S1RIWEJZRXxMSUVLKD86IEEpP3xNQUVLfE1FQkJFfE1LQVl8TkVSRklOfE5PIFdBSXxPIEhBSSBJTXxPIFJMWVxcP3xPSUN8T01HfE9NR1dURnxSfFNNT09TSHxTUlN8VElMfFVQUElOfFZJU0lCTEV8V0lMRXxXVEZcXD98WUEgUkxZfFlSKSg/PVxcc3wsfCQpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8nWig/PVxcc3wsfCQpL1xuICAgIF0sXG4gICAgYm9vbGVhbjoge1xuICAgICAgcGF0dGVybjogLyhefFxccykoPzpGQUlMfFdJTikoPz1cXHN8LHwkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICB2YXJpYWJsZToge1xuICAgICAgcGF0dGVybjogLyhefFxccylJVCg/PVxcc3wsfCQpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58XFxzKSg/Ok5PVHxCT1RIIFNBRU18RElGRlJJTlR8KD86QUxMfEFOWXxCSUdHUnxCT1RIfERJRkZ8RUlUSEVSfE1PRHxQUk9EVUtUfFFVT1NIVU5UfFNNQUxMUnxTVU18V09OKSBPRikoPz1cXHN8LHwkKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1xcLnszfXzigKZ8LHwhL1xuICB9XG59XG4iXSwibmFtZXMiOlsibG9sY29kZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJpbnNpZGUiLCJ2YXJpYWJsZSIsInN5bWJvbCIsImdyZWVkeSIsIm51bWJlciIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwibGFiZWwiLCJhbGlhcyIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lolcode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lua.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lua.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ lua)\n/* harmony export */ });\n// @ts-nocheck\nlua.displayName = \"lua\";\nlua.aliases = [];\n/** @type {import('../core.js').Syntax} */ function lua(Prism) {\n    Prism.languages.lua = {\n        comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n        // \\z may be used to skip the following space\n        string: {\n            pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n            greedy: true\n        },\n        number: /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n        keyword: /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n        function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n        operator: [\n            /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n            {\n                // Match \"..\" but don't break \"...\"\n                pattern: /(^|[^.])\\.\\.(?!\\.)/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /[\\[\\](){},;]|\\.+|:+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9sdWEuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7UUFDVCw2Q0FBNkM7UUFDN0NDLFFBQVE7WUFDTkMsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUMsUUFDRTtRQUNGQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtZQUNSO1lBQ0E7Z0JBQ0UsbUNBQW1DO2dCQUNuQ0wsU0FBUztnQkFDVE0sWUFBWTtZQUNkO1NBQ0Q7UUFDREMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbHVhLmpzPzRiYmIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmx1YS5kaXNwbGF5TmFtZSA9ICdsdWEnXG5sdWEuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbHVhKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5sdWEgPSB7XG4gICAgY29tbWVudDogL14jIS4rfC0tKD86XFxbKD0qKVxcW1tcXHNcXFNdKj9cXF1cXDFcXF18LiopL20sXG4gICAgLy8gXFx6IG1heSBiZSB1c2VkIHRvIHNraXAgdGhlIGZvbGxvd2luZyBzcGFjZVxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhbXCInXSkoPzooPyFcXDEpW15cXFxcXFxyXFxuXXxcXFxceig/OlxcclxcbnxcXHMpfFxcXFwoPzpcXHJcXG58W156XSkpKlxcMXxcXFsoPSopXFxbW1xcc1xcU10qP1xcXVxcMlxcXS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIweFthLWZcXGRdKyg/OlxcLlthLWZcXGRdKik/KD86cFsrLV0/XFxkKyk/XFxifFxcYlxcZCsoPzpcXC5cXEJ8KD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/XFxiKXxcXEJcXC5cXGQrKD86ZVsrLV0/XFxkKyk/XFxiL2ksXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbmR8YnJlYWt8ZG98ZWxzZXxlbHNlaWZ8ZW5kfGZhbHNlfGZvcnxmdW5jdGlvbnxnb3RvfGlmfGlufGxvY2FsfG5pbHxub3R8b3J8cmVwZWF0fHJldHVybnx0aGVufHRydWV8dW50aWx8d2hpbGUpXFxiLyxcbiAgICBmdW5jdGlvbjogLyg/IVxcZClcXHcrKD89XFxzKig/Olsoe10pKS8sXG4gICAgb3BlcmF0b3I6IFtcbiAgICAgIC9bLSsqJV4mfCNdfFxcL1xcLz98PFs8PV0/fD5bPj1dP3xbPX5dPT8vLFxuICAgICAge1xuICAgICAgICAvLyBNYXRjaCBcIi4uXCIgYnV0IGRvbid0IGJyZWFrIFwiLi4uXCJcbiAgICAgICAgcGF0dGVybjogLyhefFteLl0pXFwuXFwuKD8hXFwuKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXSgpe30sO118XFwuK3w6Ky9cbiAgfVxufVxuIl0sIm5hbWVzIjpbImx1YSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJudW1iZXIiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsImxvb2tiZWhpbmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lua.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/magma.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/magma.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ magma)\n/* harmony export */ });\n// @ts-nocheck\nmagma.displayName = \"magma\";\nmagma.aliases = [];\n/** @type {import('../core.js').Syntax} */ function magma(Prism) {\n    Prism.languages.magma = {\n        output: {\n            pattern: /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n            lookbehind: true,\n            greedy: true\n        },\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n        keyword: /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        generator: {\n            pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n            alias: \"class-name\"\n        },\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        number: {\n            pattern: /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n            lookbehind: true\n        },\n        operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n        punctuation: /[()[\\]{}<>,;.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYWdtYS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssUUFBUTtZQUNOQyxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsUUFBUTtZQUNOSixTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0Esd0RBQXdEO1FBQ3hERyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsV0FBVztZQUNUUCxTQUFTO1lBQ1RRLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTlYsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVUsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYWdtYS5qcz9iOGE2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5tYWdtYS5kaXNwbGF5TmFtZSA9ICdtYWdtYSdcbm1hZ21hLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1hZ21hKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5tYWdtYSA9IHtcbiAgICBvdXRwdXQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9eKD4uKig/Olxccig/OlxcbnwoPyFcXG4pKXxcXG4pKSg/IT4pKD86Lit8KD86XFxyKD86XFxufCg/IVxcbikpfFxcbikoPyE+KS4qKSg/Oig/Olxccig/OlxcbnwoPyFcXG4pKXxcXG4pKD8hPikuKikqL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXFwiXSlcIig/OlteXFxyXFxuXFxcXFwiXXxcXFxcLikqXCIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gaHR0cDovL21hZ21hLm1hdGhzLnVzeWQuZWR1LmF1L21hZ21hL2hhbmRib29rL3RleHQvODJcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/Ol98YWRqfGFuZHxhc3NlcnR8YXNzZXJ0Mnxhc3NlcnQzfGFzc2lnbmVkfGJyZWFrfGJ5fGNhc2V8Y2F0fGNhdGNofGNsZWFyfGNtcGVxfGNtcG5lfGNvbnRpbnVlfGRlY2xhcmV8ZGVmYXVsdHxkZWxldGV8ZGlmZnxkaXZ8ZG98ZWxpZnxlbHNlfGVuZHxlcXxlcnJvcnxldmFsfGV4aXN0c3xleGl0fGZvcnxmb3JhbGx8Zm9yd2FyZHxmcHJpbnRmfGZyZWV6ZXxmdW5jdGlvbnxnZXxndHxpZnxpbG9hZHxpbXBvcnR8aW58aW50cmluc2ljfGlzfGpvaW58bGV8bG9hZHxsb2NhbHxsdHxtZWV0fG1vZHxuZXxub3R8bm90YWRqfG5vdGlufG5vdHN1YnNldHxvcnxwcmludHxwcmludGZ8cHJvY2VkdXJlfHF1aXR8cmFuZG9tfHJlYWR8cmVhZGl8cmVwZWF0fHJlcXVpcmV8cmVxdWlyZWdlfHJlcXVpcmVyYW5nZXxyZXN0b3JlfHJldHVybnxzYXZlfHNkaWZmfHNlbGVjdHxzdWJzZXR8dGhlbnx0aW1lfHRvfHRyeXx1bnRpbHx2cHJpbnR8dnByaW50Znx2dGltZXx3aGVufHdoZXJlfHdoaWxlfHhvcilcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgZ2VuZXJhdG9yOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW2Etel9dXFx3Kig/PVxccyo8KS9pLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlxcKCkvaSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXlxcdy5dfFxcLlxcLikoPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86W2VFXVsrLV0/XFxkKyk/KD86X1thLXpdPyk/KD89JHxbXlxcdy5dfFxcLlxcLikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC8tPnxbLSsqL15+IXwjPV18Oj18XFwuXFwuLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKVtcXF17fTw+LDsuOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtYWdtYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwib3V0cHV0IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJjb21tZW50Iiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJnZW5lcmF0b3IiLCJhbGlhcyIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/magma.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/makefile.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/makefile.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ makefile)\n/* harmony export */ });\n// @ts-nocheck\nmakefile.displayName = \"makefile\";\nmakefile.aliases = [];\n/** @type {import('../core.js').Syntax} */ function makefile(Prism) {\n    Prism.languages.makefile = {\n        comment: {\n            pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n            lookbehind: true\n        },\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        \"builtin-target\": {\n            pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n            alias: \"builtin\"\n        },\n        target: {\n            pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n            alias: \"symbol\",\n            inside: {\n                variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n            }\n        },\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n        // Directives\n        keyword: /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n        function: {\n            pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n            lookbehind: true\n        },\n        operator: /(?:::|[?:+!])?=|[|@]/,\n        punctuation: /[:;(){}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYWtlZmlsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRyxFQUFFO0FBRXJCLHdDQUF3QyxHQUN6QixTQUFTRixTQUFTRyxLQUFLO0lBQ3BDQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEcsUUFBUTtRQUNWO1FBQ0Esa0JBQWtCO1lBQ2hCSCxTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05MLFNBQVM7WUFDVEksT0FBTztZQUNQRSxRQUFRO2dCQUNOQyxVQUFVO1lBQ1o7UUFDRjtRQUNBQSxVQUFVO1FBQ1YsYUFBYTtRQUNiQyxTQUNFO1FBQ0ZDLFVBQVU7WUFDUlQsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYWtlZmlsZS5qcz82MjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5tYWtlZmlsZS5kaXNwbGF5TmFtZSA9ICdtYWtlZmlsZSdcbm1ha2VmaWxlLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1ha2VmaWxlKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5tYWtlZmlsZSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cXFxcXFxyXFxuXSkqLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2J1aWx0aW4tdGFyZ2V0Jzoge1xuICAgICAgcGF0dGVybjogL1xcLltBLVpdW146Iz1cXHNdKyg/PVxccyo6KD8hPSkpLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbidcbiAgICB9LFxuICAgIHRhcmdldDoge1xuICAgICAgcGF0dGVybjogL14oPzpbXjo9XFxzXXxbIFxcdF0rKD8hW1xcczpdKSkrKD89XFxzKjooPyE9KSkvbSxcbiAgICAgIGFsaWFzOiAnc3ltYm9sJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogL1xcJCsoPzooPyFcXCQpW14oKXt9OiM9XFxzXSt8KD89Wyh7XSkpL1xuICAgICAgfVxuICAgIH0sXG4gICAgdmFyaWFibGU6IC9cXCQrKD86KD8hXFwkKVteKCl7fTojPVxcc10rfFxcKFtAKiU8Xis/XVtERl1cXCl8KD89Wyh7XSkpLyxcbiAgICAvLyBEaXJlY3RpdmVzXG4gICAga2V5d29yZDpcbiAgICAgIC8taW5jbHVkZVxcYnxcXGIoPzpkZWZpbmV8ZWxzZXxlbmRlZnxlbmRpZnxleHBvcnR8aWZuP2RlZnxpZm4/ZXF8aW5jbHVkZXxvdmVycmlkZXxwcml2YXRlfHNpbmNsdWRlfHVuZGVmaW5lfHVuZXhwb3J0fHZwYXRoKVxcYi8sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFwoKSg/OmFic3BhdGh8YWRkc3VmZml4fGFuZHxiYXNlbmFtZXxjYWxsfGRpcnxlcnJvcnxldmFsfGZpbGV8ZmlsdGVyKD86LW91dCk/fGZpbmRzdHJpbmd8Zmlyc3R3b3JkfGZsYXZvcnxmb3JlYWNofGd1aWxlfGlmfGluZm98am9pbnxsYXN0d29yZHxsb2FkfG5vdGRpcnxvcnxvcmlnaW58cGF0c3Vic3R8cmVhbHBhdGh8c2hlbGx8c29ydHxzdHJpcHxzdWJzdHxzdWZmaXh8dmFsdWV8d2FybmluZ3x3aWxkY2FyZHx3b3JkKD86bGlzdHxzKT8pKD89WyBcXHRdKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLyg/Ojo6fFs/OishXSk/PXxbfEBdLyxcbiAgICBwdW5jdHVhdGlvbjogL1s6Oygpe31dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibWFrZWZpbGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsImFsaWFzIiwidGFyZ2V0IiwiaW5zaWRlIiwidmFyaWFibGUiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/makefile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markdown.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markdown.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ markdown)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nmarkdown.displayName = \"markdown\";\nmarkdown.aliases = [\n    \"md\"\n];\n/** @type {import('../core.js').Syntax} */ function markdown(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        // Allow only one line break\n        var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n        /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */ function createInline(pattern) {\n            pattern = pattern.replace(/<inner>/g, function() {\n                return inner;\n            });\n            return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + \"(?:\" + pattern + \")\");\n        }\n        var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n        var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function() {\n            return tableCell;\n        });\n        var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n        Prism.languages.markdown = Prism.languages.extend(\"markup\", {});\n        Prism.languages.insertBefore(\"markdown\", \"prolog\", {\n            \"front-matter-block\": {\n                pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    punctuation: /^---|---$/,\n                    \"front-matter\": {\n                        pattern: /\\S+(?:\\s+\\S+)*/,\n                        alias: [\n                            \"yaml\",\n                            \"language-yaml\"\n                        ],\n                        inside: Prism.languages.yaml\n                    }\n                }\n            },\n            blockquote: {\n                // > ...\n                pattern: /^>(?:[\\t ]*>)*/m,\n                alias: \"punctuation\"\n            },\n            table: {\n                pattern: RegExp(\"^\" + tableRow + tableLine + \"(?:\" + tableRow + \")*\", \"m\"),\n                inside: {\n                    \"table-data-rows\": {\n                        pattern: RegExp(\"^(\" + tableRow + tableLine + \")(?:\" + tableRow + \")*$\"),\n                        lookbehind: true,\n                        inside: {\n                            \"table-data\": {\n                                pattern: RegExp(tableCell),\n                                inside: Prism.languages.markdown\n                            },\n                            punctuation: /\\|/\n                        }\n                    },\n                    \"table-line\": {\n                        pattern: RegExp(\"^(\" + tableRow + \")\" + tableLine + \"$\"),\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /\\||:?-{3,}:?/\n                        }\n                    },\n                    \"table-header-row\": {\n                        pattern: RegExp(\"^\" + tableRow + \"$\"),\n                        inside: {\n                            \"table-header\": {\n                                pattern: RegExp(tableCell),\n                                alias: \"important\",\n                                inside: Prism.languages.markdown\n                            },\n                            punctuation: /\\|/\n                        }\n                    }\n                }\n            },\n            code: [\n                {\n                    // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n                    pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n                    lookbehind: true,\n                    alias: \"keyword\"\n                },\n                {\n                    // ```optional language\n                    // code block\n                    // ```\n                    pattern: /^```[\\s\\S]*?^```$/m,\n                    greedy: true,\n                    inside: {\n                        \"code-block\": {\n                            pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n                            lookbehind: true\n                        },\n                        \"code-language\": {\n                            pattern: /^(```).+/,\n                            lookbehind: true\n                        },\n                        punctuation: /```/\n                    }\n                }\n            ],\n            title: [\n                {\n                    // title 1\n                    // =======\n                    // title 2\n                    // -------\n                    pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n                    alias: \"important\",\n                    inside: {\n                        punctuation: /==+$|--+$/\n                    }\n                },\n                {\n                    // # title 1\n                    // ###### title 6\n                    pattern: /(^\\s*)#.+/m,\n                    lookbehind: true,\n                    alias: \"important\",\n                    inside: {\n                        punctuation: /^#+|#+$/\n                    }\n                }\n            ],\n            hr: {\n                // ***\n                // ---\n                // * * *\n                // -----------\n                pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            list: {\n                // * item\n                // + item\n                // - item\n                // 1. item\n                pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            \"url-reference\": {\n                // [id]: http://example.com \"Optional title\"\n                // [id]: http://example.com 'Optional title'\n                // [id]: http://example.com (Optional title)\n                // [id]: <http://example.com> \"Optional title\"\n                pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n                inside: {\n                    variable: {\n                        pattern: /^(!?\\[)[^\\]]+/,\n                        lookbehind: true\n                    },\n                    string: /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n                    punctuation: /^[\\[\\]!:]|[<>]/\n                },\n                alias: \"url\"\n            },\n            bold: {\n                // **strong**\n                // __strong__\n                // allow one nested instance of italic text using the same delimiter\n                pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /(^..)[\\s\\S]+(?=..$)/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    punctuation: /\\*\\*|__/\n                }\n            },\n            italic: {\n                // *em*\n                // _em_\n                // allow one nested instance of bold text using the same delimiter\n                pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /(^.)[\\s\\S]+(?=.$)/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    punctuation: /[*_]/\n                }\n            },\n            strike: {\n                // ~~strike through~~\n                // ~strike~\n                // eslint-disable-next-line regexp/strict\n                pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    content: {\n                        pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    punctuation: /~~?/\n                }\n            },\n            \"code-snippet\": {\n                // `code`\n                // ``code``\n                pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n                lookbehind: true,\n                greedy: true,\n                alias: [\n                    \"code\",\n                    \"keyword\"\n                ]\n            },\n            url: {\n                // [example](http://example.com \"Optional title\")\n                // [example][id]\n                // [example] [id]\n                pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    operator: /^!/,\n                    content: {\n                        pattern: /(^\\[)[^\\]]+(?=\\])/,\n                        lookbehind: true,\n                        inside: {} // see below\n                    },\n                    variable: {\n                        pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n                        lookbehind: true\n                    },\n                    url: {\n                        pattern: /(^\\]\\()[^\\s)]+/,\n                        lookbehind: true\n                    },\n                    string: {\n                        pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n                        lookbehind: true\n                    }\n                }\n            }\n        });\n        [\n            \"url\",\n            \"bold\",\n            \"italic\",\n            \"strike\"\n        ].forEach(function(token) {\n            ;\n            [\n                \"url\",\n                \"bold\",\n                \"italic\",\n                \"strike\",\n                \"code-snippet\"\n            ].forEach(function(inside) {\n                if (token !== inside) {\n                    Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n                }\n            });\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (env.language !== \"markdown\" && env.language !== \"md\") {\n                return;\n            }\n            function walkTokens(tokens) {\n                if (!tokens || typeof tokens === \"string\") {\n                    return;\n                }\n                for(var i = 0, l = tokens.length; i < l; i++){\n                    var token = tokens[i];\n                    if (token.type !== \"code\") {\n                        walkTokens(token.content);\n                        continue;\n                    }\n                    /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */ var codeLang = token.content[1];\n                    var codeBlock = token.content[3];\n                    if (codeLang && codeBlock && codeLang.type === \"code-language\" && codeBlock.type === \"code-block\" && typeof codeLang.content === \"string\") {\n                        // this might be a language that Prism does not support\n                        // do some replacements to support C++, C#, and F#\n                        var lang = codeLang.content.replace(/\\b#/g, \"sharp\").replace(/\\b\\+\\+/g, \"pp\");\n                        // only use the first word\n                        lang = (/[a-z][\\w-]*/i.exec(lang) || [\n                            \"\"\n                        ])[0].toLowerCase();\n                        var alias = \"language-\" + lang;\n                        // add alias\n                        if (!codeBlock.alias) {\n                            codeBlock.alias = [\n                                alias\n                            ];\n                        } else if (typeof codeBlock.alias === \"string\") {\n                            codeBlock.alias = [\n                                codeBlock.alias,\n                                alias\n                            ];\n                        } else {\n                            codeBlock.alias.push(alias);\n                        }\n                    }\n                }\n            }\n            walkTokens(env.tokens);\n        });\n        Prism.hooks.add(\"wrap\", function(env) {\n            if (env.type !== \"code-block\") {\n                return;\n            }\n            var codeLang = \"\";\n            for(var i = 0, l = env.classes.length; i < l; i++){\n                var cls = env.classes[i];\n                var match = /language-(.+)/.exec(cls);\n                if (match) {\n                    codeLang = match[1];\n                    break;\n                }\n            }\n            var grammar = Prism.languages[codeLang];\n            if (!grammar) {\n                if (codeLang && codeLang !== \"none\" && Prism.plugins.autoloader) {\n                    var id = \"md-\" + new Date().valueOf() + \"-\" + Math.floor(Math.random() * 1e16);\n                    env.attributes[\"id\"] = id;\n                    Prism.plugins.autoloader.loadLanguages(codeLang, function() {\n                        var ele = document.getElementById(id);\n                        if (ele) {\n                            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n                        }\n                    });\n                }\n            } else {\n                env.content = Prism.highlight(env.content.value, grammar, codeLang);\n            }\n        });\n        var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, \"gi\");\n        /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */ var KNOWN_ENTITY_NAMES = {\n            amp: \"&\",\n            lt: \"<\",\n            gt: \">\",\n            quot: '\"'\n        };\n        // IE 11 doesn't support `String.fromCodePoint`\n        var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n        /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */ function textContent(html) {\n            // remove all tags\n            var text = html.replace(tagPattern, \"\");\n            // decode known entities\n            text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function(m, code) {\n                code = code.toLowerCase();\n                if (code[0] === \"#\") {\n                    var value;\n                    if (code[1] === \"x\") {\n                        value = parseInt(code.slice(2), 16);\n                    } else {\n                        value = Number(code.slice(1));\n                    }\n                    return fromCodePoint(value);\n                } else {\n                    var known = KNOWN_ENTITY_NAMES[code];\n                    if (known) {\n                        return known;\n                    }\n                    // unable to decode\n                    return m;\n                }\n            });\n            return text;\n        }\n        Prism.languages.md = Prism.languages.markdown;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markdown.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ markupTemplating)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nmarkupTemplating.displayName = \"markup-templating\";\nmarkupTemplating.aliases = [];\n/** @type {import('../core.js').Syntax} */ function markupTemplating(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */ function getPlaceholder(language, index) {\n            return \"___\" + language.toUpperCase() + index + \"___\";\n        }\n        Object.defineProperties(Prism.languages[\"markup-templating\"] = {}, {\n            buildPlaceholders: {\n                /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */ value: function(env, language, placeholderPattern, replaceFilter) {\n                    if (env.language !== language) {\n                        return;\n                    }\n                    var tokenStack = env.tokenStack = [];\n                    env.code = env.code.replace(placeholderPattern, function(match) {\n                        if (typeof replaceFilter === \"function\" && !replaceFilter(match)) {\n                            return match;\n                        }\n                        var i = tokenStack.length;\n                        var placeholder;\n                        // Check for existing strings\n                        while(env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1){\n                            ++i;\n                        }\n                        // Create a sparse array\n                        tokenStack[i] = match;\n                        return placeholder;\n                    });\n                    // Switch the grammar to markup\n                    env.grammar = Prism.languages.markup;\n                }\n            },\n            tokenizePlaceholders: {\n                /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */ value: function(env, language) {\n                    if (env.language !== language || !env.tokenStack) {\n                        return;\n                    }\n                    // Switch the grammar back\n                    env.grammar = Prism.languages[language];\n                    var j = 0;\n                    var keys = Object.keys(env.tokenStack);\n                    function walkTokens(tokens) {\n                        for(var i = 0; i < tokens.length; i++){\n                            // all placeholders are replaced already\n                            if (j >= keys.length) {\n                                break;\n                            }\n                            var token = tokens[i];\n                            if (typeof token === \"string\" || token.content && typeof token.content === \"string\") {\n                                var k = keys[j];\n                                var t = env.tokenStack[k];\n                                var s = typeof token === \"string\" ? token : token.content;\n                                var placeholder = getPlaceholder(language, k);\n                                var index = s.indexOf(placeholder);\n                                if (index > -1) {\n                                    ++j;\n                                    var before = s.substring(0, index);\n                                    var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), \"language-\" + language, t);\n                                    var after = s.substring(index + placeholder.length);\n                                    var replacement = [];\n                                    if (before) {\n                                        replacement.push.apply(replacement, walkTokens([\n                                            before\n                                        ]));\n                                    }\n                                    replacement.push(middle);\n                                    if (after) {\n                                        replacement.push.apply(replacement, walkTokens([\n                                            after\n                                        ]));\n                                    }\n                                    if (typeof token === \"string\") {\n                                        tokens.splice.apply(tokens, [\n                                            i,\n                                            1\n                                        ].concat(replacement));\n                                    } else {\n                                        token.content = replacement;\n                                    }\n                                }\n                            } else if (token.content /* && typeof token.content !== 'string' */ ) {\n                                walkTokens(token.content);\n                            }\n                        }\n                        return tokens;\n                    }\n                    walkTokens(env.tokens);\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ markup)\n/* harmony export */ });\n// @ts-nocheck\nmarkup.displayName = \"markup\";\nmarkup.aliases = [\n    \"atom\",\n    \"html\",\n    \"mathml\",\n    \"rss\",\n    \"ssml\",\n    \"svg\",\n    \"xml\"\n];\n/** @type {import('../core.js').Syntax} */ function markup(Prism) {\n    Prism.languages.markup = {\n        comment: {\n            pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n            greedy: true\n        },\n        prolog: {\n            pattern: /<\\?[\\s\\S]+?\\?>/,\n            greedy: true\n        },\n        doctype: {\n            // https://www.w3.org/TR/xml/#NT-doctypedecl\n            pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n            greedy: true,\n            inside: {\n                \"internal-subset\": {\n                    pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: null // see below\n                },\n                string: {\n                    pattern: /\"[^\"]*\"|'[^']*'/,\n                    greedy: true\n                },\n                punctuation: /^<!|>$|[[\\]]/,\n                \"doctype-tag\": /^DOCTYPE/i,\n                name: /[^\\s<>'\"]+/\n            }\n        },\n        cdata: {\n            pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n            greedy: true\n        },\n        tag: {\n            pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n            greedy: true,\n            inside: {\n                tag: {\n                    pattern: /^<\\/?[^\\s>\\/]+/,\n                    inside: {\n                        punctuation: /^<\\/?/,\n                        namespace: /^[^\\s>\\/:]+:/\n                    }\n                },\n                \"special-attr\": [],\n                \"attr-value\": {\n                    pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n                    inside: {\n                        punctuation: [\n                            {\n                                pattern: /^=/,\n                                alias: \"attr-equals\"\n                            },\n                            {\n                                pattern: /^(\\s*)[\"']|[\"']$/,\n                                lookbehind: true\n                            }\n                        ]\n                    }\n                },\n                punctuation: /\\/?>/,\n                \"attr-name\": {\n                    pattern: /[^\\s>\\/]+/,\n                    inside: {\n                        namespace: /^[^\\s>\\/:]+:/\n                    }\n                }\n            }\n        },\n        entity: [\n            {\n                pattern: /&[\\da-z]{1,8};/i,\n                alias: \"named-entity\"\n            },\n            /&#x?[\\da-f]{1,8};/i\n        ]\n    };\n    Prism.languages.markup[\"tag\"].inside[\"attr-value\"].inside[\"entity\"] = Prism.languages.markup[\"entity\"];\n    Prism.languages.markup[\"doctype\"].inside[\"internal-subset\"].inside = Prism.languages.markup;\n    // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add(\"wrap\", function(env) {\n        if (env.type === \"entity\") {\n            env.attributes[\"title\"] = env.content.value.replace(/&amp;/, \"&\");\n        }\n    });\n    Object.defineProperty(Prism.languages.markup.tag, \"addInlined\", {\n        /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */ value: function addInlined(tagName, lang) {\n            var includedCdataInside = {};\n            includedCdataInside[\"language-\" + lang] = {\n                pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n                lookbehind: true,\n                inside: Prism.languages[lang]\n            };\n            includedCdataInside[\"cdata\"] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n            var inside = {\n                \"included-cdata\": {\n                    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n                    inside: includedCdataInside\n                }\n            };\n            inside[\"language-\" + lang] = {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages[lang]\n            };\n            var def = {};\n            def[tagName] = {\n                pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function() {\n                    return tagName;\n                }), \"i\"),\n                lookbehind: true,\n                greedy: true,\n                inside: inside\n            };\n            Prism.languages.insertBefore(\"markup\", \"cdata\", def);\n        }\n    });\n    Object.defineProperty(Prism.languages.markup.tag, \"addAttribute\", {\n        /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */ value: function(attrName, lang) {\n            Prism.languages.markup.tag.inside[\"special-attr\"].push({\n                pattern: RegExp(/(^|[\"'\\s])/.source + \"(?:\" + attrName + \")\" + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, \"i\"),\n                lookbehind: true,\n                inside: {\n                    \"attr-name\": /^[^\\s=]+/,\n                    \"attr-value\": {\n                        pattern: /=[\\s\\S]+/,\n                        inside: {\n                            value: {\n                                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                                lookbehind: true,\n                                alias: [\n                                    lang,\n                                    \"language-\" + lang\n                                ],\n                                inside: Prism.languages[lang]\n                            },\n                            punctuation: [\n                                {\n                                    pattern: /^=/,\n                                    alias: \"attr-equals\"\n                                },\n                                /\"|'/\n                            ]\n                        }\n                    }\n                }\n            });\n        }\n    });\n    Prism.languages.html = Prism.languages.markup;\n    Prism.languages.mathml = Prism.languages.markup;\n    Prism.languages.svg = Prism.languages.markup;\n    Prism.languages.xml = Prism.languages.extend(\"markup\", {});\n    Prism.languages.ssml = Prism.languages.xml;\n    Prism.languages.atom = Prism.languages.xml;\n    Prism.languages.rss = Prism.languages.xml;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mata.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mata.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mata)\n/* harmony export */ });\n// @ts-nocheck\nmata.displayName = \"mata\";\nmata.aliases = [];\n/** @type {import('../core.js').Syntax} */ function mata(Prism) {\n    // https://www.stata.com/manuals/m.pdf\n    ;\n    (function(Prism) {\n        var orgType = /\\b(?:(?:col|row)?vector|matrix|scalar)\\b/.source;\n        var type = /\\bvoid\\b|<org>|\\b(?:complex|numeric|pointer(?:\\s*\\([^()]*\\))?|real|string|(?:class|struct)\\s+\\w+|transmorphic)(?:\\s*<org>)?/.source.replace(/<org>/g, orgType);\n        Prism.languages.mata = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n                greedy: true\n            },\n            \"class-name\": {\n                pattern: /(\\b(?:class|extends|struct)\\s+)\\w+(?=\\s*(?:\\{|\\bextends\\b))/,\n                lookbehind: true\n            },\n            type: {\n                pattern: RegExp(type),\n                alias: \"class-name\",\n                inside: {\n                    punctuation: /[()]/,\n                    keyword: /\\b(?:class|function|struct|void)\\b/\n                }\n            },\n            keyword: /\\b(?:break|class|continue|do|else|end|extends|external|final|for|function|goto|if|pragma|private|protected|public|return|static|struct|unset|unused|version|virtual|while)\\b/,\n            constant: /\\bNULL\\b/,\n            number: {\n                pattern: /(^|[^\\w.])(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|\\d[a-f0-9]*(?:\\.[a-f0-9]+)?x[+-]?\\d+)i?(?![\\w.])/i,\n                lookbehind: true\n            },\n            missing: {\n                pattern: /(^|[^\\w.])(?:\\.[a-z]?)(?![\\w.])/,\n                lookbehind: true,\n                alias: \"symbol\"\n            },\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n            operator: /\\.\\.|\\+\\+|--|&&|\\|\\||:?(?:[!=<>]=|[+\\-*/^<>&|:])|[!?=\\\\#’`']/,\n            punctuation: /[()[\\]{},;.]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEMsc0NBQXNDOztJQUVwQyxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsVUFBVSwyQ0FBMkNDLE1BQU07UUFDL0QsSUFBSUMsT0FDRiw4SEFBOEhELE1BQU0sQ0FBQ0UsT0FBTyxDQUMxSSxVQUNBSDtRQUVKRCxNQUFNSyxTQUFTLENBQUNSLElBQUksR0FBRztZQUNyQlMsU0FBUztnQkFDUEMsU0FDRTtnQkFDRkMsUUFBUTtZQUNWO1lBQ0FDLFFBQVE7Z0JBQ05GLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBLGNBQWM7Z0JBQ1pELFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtZQUNBUCxNQUFNO2dCQUNKSSxTQUFTSSxPQUFPUjtnQkFDaEJTLE9BQU87Z0JBQ1BDLFFBQVE7b0JBQ05DLGFBQWE7b0JBQ2JDLFNBQVM7Z0JBQ1g7WUFDRjtZQUNBQSxTQUNFO1lBQ0ZDLFVBQVU7WUFDVkMsUUFBUTtnQkFDTlYsU0FDRTtnQkFDRkcsWUFBWTtZQUNkO1lBQ0FRLFNBQVM7Z0JBQ1BYLFNBQVM7Z0JBQ1RHLFlBQVk7Z0JBQ1pFLE9BQU87WUFDVDtZQUNBTyxVQUFVO1lBQ1ZDLFVBQVU7WUFDVk4sYUFBYTtRQUNmO0lBQ0YsR0FBR2Q7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYXRhLmpzPzVhNjciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbm1hdGEuZGlzcGxheU5hbWUgPSAnbWF0YSdcbm1hdGEuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbWF0YShQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5zdGF0YS5jb20vbWFudWFscy9tLnBkZlxuXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIG9yZ1R5cGUgPSAvXFxiKD86KD86Y29sfHJvdyk/dmVjdG9yfG1hdHJpeHxzY2FsYXIpXFxiLy5zb3VyY2VcbiAgICB2YXIgdHlwZSA9XG4gICAgICAvXFxidm9pZFxcYnw8b3JnPnxcXGIoPzpjb21wbGV4fG51bWVyaWN8cG9pbnRlcig/OlxccypcXChbXigpXSpcXCkpP3xyZWFsfHN0cmluZ3woPzpjbGFzc3xzdHJ1Y3QpXFxzK1xcdyt8dHJhbnNtb3JwaGljKSg/Olxccyo8b3JnPik/Ly5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgLzxvcmc+L2csXG4gICAgICAgIG9yZ1R5cGVcbiAgICAgIClcbiAgICBQcmlzbS5sYW5ndWFnZXMubWF0YSA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXFwvXFwvLip8XFwvXFwqKD86W14qL118XFwqKD8hXFwvKXxcXC8oPyFcXCopfFxcL1xcKig/OlteKl18XFwqKD8hXFwvKSkqXFwqXFwvKSpcXCpcXC8vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogL1wiW15cIlxcclxcbl0qXCJ8W+KAmGAnXVwiLio/XCJb4oCZYCddLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXFxiKD86Y2xhc3N8ZXh0ZW5kc3xzdHJ1Y3QpXFxzKylcXHcrKD89XFxzKig/Olxce3xcXGJleHRlbmRzXFxiKSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgdHlwZToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAodHlwZSksXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZScsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvWygpXS8sXG4gICAgICAgICAga2V5d29yZDogL1xcYig/OmNsYXNzfGZ1bmN0aW9ufHN0cnVjdHx2b2lkKVxcYi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6XG4gICAgICAgIC9cXGIoPzpicmVha3xjbGFzc3xjb250aW51ZXxkb3xlbHNlfGVuZHxleHRlbmRzfGV4dGVybmFsfGZpbmFsfGZvcnxmdW5jdGlvbnxnb3RvfGlmfHByYWdtYXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHN0YXRpY3xzdHJ1Y3R8dW5zZXR8dW51c2VkfHZlcnNpb258dmlydHVhbHx3aGlsZSlcXGIvLFxuICAgICAgY29uc3RhbnQ6IC9cXGJOVUxMXFxiLyxcbiAgICAgIG51bWJlcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcdy5dKSg/OlxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT98XFxkW2EtZjAtOV0qKD86XFwuW2EtZjAtOV0rKT94WystXT9cXGQrKWk/KD8hW1xcdy5dKS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgbWlzc2luZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXHcuXSkoPzpcXC5bYS16XT8pKD8hW1xcdy5dKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBvcGVyYXRvcjogL1xcLlxcLnxcXCtcXCt8LS18JiZ8XFx8XFx8fDo/KD86WyE9PD5dPXxbK1xcLSovXjw+Jnw6XSl8WyE/PVxcXFwj4oCZYCddLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9LDsuXS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIm1hdGEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsIm9yZ1R5cGUiLCJzb3VyY2UiLCJ0eXBlIiwicmVwbGFjZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwibG9va2JlaGluZCIsIlJlZ0V4cCIsImFsaWFzIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiY29uc3RhbnQiLCJudW1iZXIiLCJtaXNzaW5nIiwiZnVuY3Rpb24iLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/matlab.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/matlab.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ matlab)\n/* harmony export */ });\n// @ts-nocheck\nmatlab.displayName = \"matlab\";\nmatlab.aliases = [];\n/** @type {import('../core.js').Syntax} */ function matlab(Prism) {\n    Prism.languages.matlab = {\n        comment: [\n            /%\\{[\\s\\S]*?\\}%/,\n            /%.+/\n        ],\n        string: {\n            pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n            greedy: true\n        },\n        // FIXME We could handle imaginary numbers as a whole\n        number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n        keyword: /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n        function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n        operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n        punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYXRsYWIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFBQztZQUFrQjtTQUFNO1FBQ2xDQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EscURBQXFEO1FBQ3JEQyxRQUFRO1FBQ1JDLFNBQ0U7UUFDRkMsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL21hdGxhYi5qcz9jOGI4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5tYXRsYWIuZGlzcGxheU5hbWUgPSAnbWF0bGFiJ1xubWF0bGFiLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1hdGxhYihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubWF0bGFiID0ge1xuICAgIGNvbW1lbnQ6IFsvJVxce1tcXHNcXFNdKj9cXH0lLywgLyUuKy9dLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1xcQicoPzonJ3xbXidcXHJcXG5dKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gRklYTUUgV2UgY291bGQgaGFuZGxlIGltYWdpbmFyeSBudW1iZXJzIGFzIGEgd2hvbGVcbiAgICBudW1iZXI6IC8oPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86W2VFXVsrLV0/XFxkKyk/KD86W2lqXSk/fFxcYltpal1cXGIvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86TmFOfGJyZWFrfGNhc2V8Y2F0Y2h8Y29udGludWV8ZWxzZXxlbHNlaWZ8ZW5kfGZvcnxmdW5jdGlvbnxpZnxpbmZ8b3RoZXJ3aXNlfHBhcmZvcnxwYXVzZXxwaXxyZXR1cm58c3dpdGNofHRyeXx3aGlsZSlcXGIvLFxuICAgIGZ1bmN0aW9uOiAvXFxiKD8hXFxkKVxcdysoPz1cXHMqXFwoKS8sXG4gICAgb3BlcmF0b3I6IC9cXC4/WypeXFwvXFxcXCddfFsrXFwtOkBdfFs8Pj1+XT0/fCYmP3xcXHxcXHw/LyxcbiAgICBwdW5jdHVhdGlvbjogL1xcLnszfXxbLiw7XFxbXFxdKCl7fSFdL1xuICB9XG59XG4iXSwibmFtZXMiOlsibWF0bGFiIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsIm51bWJlciIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/matlab.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/maxscript.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/maxscript.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ maxscript)\n/* harmony export */ });\n// @ts-nocheck\nmaxscript.displayName = \"maxscript\";\nmaxscript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function maxscript(Prism) {\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i;\n        Prism.languages.maxscript = {\n            comment: {\n                pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n                greedy: true\n            },\n            string: {\n                pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n                lookbehind: true,\n                greedy: true\n            },\n            path: {\n                pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n                greedy: true,\n                alias: \"string\"\n            },\n            \"function-call\": {\n                pattern: RegExp(\"((?:\" + // start of line\n                (/^/.source + \"|\" + // operators and other language constructs\n                /[;=<>+\\-*/^({\\[]/.source + \"|\" + // keywords as part of statements\n                /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/.source) + \")[ \t]*)\" + \"(?!\" + keywords.source + \")\" + /[a-z_]\\w*\\b/.source + \"(?=[ \t]*(?:\" + // variable\n                (\"(?!\" + keywords.source + \")\" + /[a-z_]/.source + \"|\" + // number\n                /\\d|-\\.?\\d/.source + \"|\" + // other expressions or literals\n                /[({'\"$@#?]/.source) + \"))\", \"im\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"function\"\n            },\n            \"function-definition\": {\n                pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            argument: {\n                pattern: /\\b[a-z_]\\w*(?=:)/i,\n                alias: \"attr-name\"\n            },\n            keyword: keywords,\n            boolean: /\\b(?:false|true)\\b/,\n            time: {\n                pattern: /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n                lookbehind: true,\n                alias: \"number\"\n            },\n            number: [\n                {\n                    pattern: /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n                    lookbehind: true\n                },\n                /\\b(?:e|pi)\\b/\n            ],\n            constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n            color: {\n                pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n                alias: \"constant\"\n            },\n            operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n            punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tYXhzY3JpcHQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSzs7SUFDbkMsVUFBVUEsS0FBSztRQUNmLElBQUlDLFdBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxTQUFTLEdBQUc7WUFDMUJNLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBQyxRQUFRO2dCQUNORixTQUFTO2dCQUNURyxZQUFZO2dCQUNaRixRQUFRO1lBQ1Y7WUFDQUcsTUFBTTtnQkFDSkosU0FBUztnQkFDVEMsUUFBUTtnQkFDUkksT0FBTztZQUNUO1lBQ0EsaUJBQWlCO2dCQUNmTCxTQUFTTSxPQUNQLFNBQ0UsZ0JBQWdCO2dCQUNmLEtBQUlDLE1BQU0sR0FDVCxNQUNBLDBDQUEwQztnQkFDMUMsbUJBQW1CQSxNQUFNLEdBQ3pCLE1BQ0EsaUNBQWlDO2dCQUNqQyw2RkFDR0EsTUFBTSxJQUNYLFlBQ0EsUUFDQVYsU0FBU1UsTUFBTSxHQUNmLE1BQ0EsY0FBY0EsTUFBTSxHQUNwQixnQkFDQSxXQUFXO2dCQUNWLFNBQ0NWLFNBQVNVLE1BQU0sR0FDZixNQUNBLFNBQVNBLE1BQU0sR0FDZixNQUNBLFNBQVM7Z0JBQ1QsWUFBWUEsTUFBTSxHQUNsQixNQUNBLGdDQUFnQztnQkFDaEMsYUFBYUEsTUFBTSxJQUNyQixNQUNGO2dCQUVGSixZQUFZO2dCQUNaRixRQUFRO2dCQUNSSSxPQUFPO1lBQ1Q7WUFDQSx1QkFBdUI7Z0JBQ3JCTCxTQUFTO2dCQUNURyxZQUFZO2dCQUNaRSxPQUFPO1lBQ1Q7WUFDQUcsVUFBVTtnQkFDUlIsU0FBUztnQkFDVEssT0FBTztZQUNUO1lBQ0FJLFNBQVNaO1lBQ1RhLFNBQVM7WUFDVEMsTUFBTTtnQkFDSlgsU0FDRTtnQkFDRkcsWUFBWTtnQkFDWkUsT0FBTztZQUNUO1lBQ0FPLFFBQVE7Z0JBQ047b0JBQ0VaLFNBQ0U7b0JBQ0ZHLFlBQVk7Z0JBQ2Q7Z0JBQ0E7YUFDRDtZQUNEVSxVQUFVO1lBQ1ZDLE9BQU87Z0JBQ0xkLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBVSxVQUFVO1lBQ1ZDLGFBQWE7UUFDZjtJQUNGLEdBQUdwQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL21heHNjcmlwdC5qcz84ZTIxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5tYXhzY3JpcHQuZGlzcGxheU5hbWUgPSAnbWF4c2NyaXB0J1xubWF4c2NyaXB0LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1heHNjcmlwdChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBrZXl3b3JkcyA9XG4gICAgICAvXFxiKD86YWJvdXR8YW5kfGFuaW1hdGV8YXN8YXR8YXR0cmlidXRlc3xieXxjYXNlfGNhdGNofGNvbGxlY3R8Y29udGludWV8Y29vcmRzeXN8ZG98ZWxzZXxleGl0fGZufGZvcnxmcm9tfGZ1bmN0aW9ufGdsb2JhbHxpZnxpbnxsb2NhbHxtYWNyb3NjcmlwdHxtYXBwZWR8bWF4fG5vdHxvZnxvZmZ8b258b3J8cGFyYW1ldGVyc3xwZXJzaXN0ZW50fHBsdWdpbnxyY21lbnV8cmV0dXJufHJvbGxvdXR8c2V0fHN0cnVjdHx0aGVufHRocm93fHRvfHRvb2x8dHJ5fHVuZG98dXRpbGl0eXx3aGVufHdoZXJlfHdoaWxlfHdpdGgpXFxiL2lcbiAgICBQcmlzbS5sYW5ndWFnZXMubWF4c2NyaXB0ID0ge1xuICAgICAgY29tbWVudDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKXwtLS4qLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlwiXFxcXEBdKSg/OlwiKD86W15cIlxcXFxdfFxcXFxbXFxzXFxTXSkqXCJ8QFwiW15cIl0qXCIpLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgcGF0aDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwkKD86W1xcdy9cXFxcLio/XXwnW14nXSonKSovLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgICAgfSxcbiAgICAgICdmdW5jdGlvbi1jYWxsJzoge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJygoPzonICtcbiAgICAgICAgICAgIC8vIHN0YXJ0IG9mIGxpbmVcbiAgICAgICAgICAgICgvXi8uc291cmNlICtcbiAgICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgICAgLy8gb3BlcmF0b3JzIGFuZCBvdGhlciBsYW5ndWFnZSBjb25zdHJ1Y3RzXG4gICAgICAgICAgICAgIC9bOz08PitcXC0qL14oe1xcW10vLnNvdXJjZSArXG4gICAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICAgIC8vIGtleXdvcmRzIGFzIHBhcnQgb2Ygc3RhdGVtZW50c1xuICAgICAgICAgICAgICAvXFxiKD86YW5kfGJ5fGNhc2V8Y2F0Y2h8Y29sbGVjdHxkb3xlbHNlfGlmfGlufG5vdHxvcnxyZXR1cm58dGhlbnx0b3x0cnl8d2hlcmV8d2hpbGV8d2l0aClcXGIvXG4gICAgICAgICAgICAgICAgLnNvdXJjZSkgK1xuICAgICAgICAgICAgJylbIFxcdF0qKScgK1xuICAgICAgICAgICAgJyg/IScgK1xuICAgICAgICAgICAga2V5d29yZHMuc291cmNlICtcbiAgICAgICAgICAgICcpJyArXG4gICAgICAgICAgICAvW2Etel9dXFx3KlxcYi8uc291cmNlICtcbiAgICAgICAgICAgICcoPz1bIFxcdF0qKD86JyArXG4gICAgICAgICAgICAvLyB2YXJpYWJsZVxuICAgICAgICAgICAgKCcoPyEnICtcbiAgICAgICAgICAgICAga2V5d29yZHMuc291cmNlICtcbiAgICAgICAgICAgICAgJyknICtcbiAgICAgICAgICAgICAgL1thLXpfXS8uc291cmNlICtcbiAgICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgICAgLy8gbnVtYmVyXG4gICAgICAgICAgICAgIC9cXGR8LVxcLj9cXGQvLnNvdXJjZSArXG4gICAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICAgIC8vIG90aGVyIGV4cHJlc3Npb25zIG9yIGxpdGVyYWxzXG4gICAgICAgICAgICAgIC9bKHsnXCIkQCM/XS8uc291cmNlKSArXG4gICAgICAgICAgICAnKSknLFxuICAgICAgICAgICdpbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgICdmdW5jdGlvbi1kZWZpbml0aW9uJzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcYig/OmZufGZ1bmN0aW9uKVxccyspXFx3K1xcYi9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgIGFyZ3VtZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89OikvaSxcbiAgICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnXG4gICAgICB9LFxuICAgICAga2V5d29yZDoga2V5d29yZHMsXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgdGltZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcdy5dKSg/Oig/Oig/OlxcZCsoPzpcXC5cXGQqKT98XFwuXFxkKykoPzpbZUVkRF1bKy1dXFxkK3xbTFBdKT9bbXNmdF0pK3xcXGQrOlxcZCsoPzpcXC5cXGQqKT8pKD8hW1xcdy46XSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBudW1iZXI6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKF58W15cXHcuXSkoPzooPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86W2VFZERdWystXVxcZCt8W0xQXSk/fDB4W2EtZkEtRjAtOV0rKSg/IVtcXHcuOl0pLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIC9cXGIoPzplfHBpKVxcYi9cbiAgICAgIF0sXG4gICAgICBjb25zdGFudDogL1xcYig/OmRvbnRjb2xsZWN0fG9rfHNpbGVudFZhbHVlfHVuZGVmaW5lZHx1bnN1cHBsaWVkKVxcYi8sXG4gICAgICBjb2xvcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiKD86YmxhY2t8Ymx1ZXxicm93bnxncmF5fGdyZWVufG9yYW5nZXxyZWR8d2hpdGV8eWVsbG93KVxcYi9pLFxuICAgICAgICBhbGlhczogJ2NvbnN0YW50J1xuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvWy0rKi88Pj0hXT0/fFsmXj9dfCMoPyFcXCgpLyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde30uOiw7XXwjKD89XFwoKXxcXFxcJC9tXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJtYXhzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImtleXdvcmRzIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJsb29rYmVoaW5kIiwicGF0aCIsImFsaWFzIiwiUmVnRXhwIiwic291cmNlIiwiYXJndW1lbnQiLCJrZXl3b3JkIiwiYm9vbGVhbiIsInRpbWUiLCJudW1iZXIiLCJjb25zdGFudCIsImNvbG9yIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/maxscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mel.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mel.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mel)\n/* harmony export */ });\n// @ts-nocheck\nmel.displayName = \"mel\";\nmel.aliases = [];\n/** @type {import('../core.js').Syntax} */ function mel(Prism) {\n    Prism.languages.mel = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        code: {\n            pattern: /`(?:\\\\.|[^\\\\`])*`/,\n            greedy: true,\n            alias: \"italic\",\n            inside: {\n                delimiter: {\n                    pattern: /^`|`$/,\n                    alias: \"punctuation\"\n                },\n                statement: {\n                    pattern: /[\\s\\S]+/,\n                    inside: null // see below\n                }\n            }\n        },\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n            greedy: true\n        },\n        variable: /\\$\\w+/,\n        number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n        flag: {\n            pattern: /-[^\\d\\W]\\w*/,\n            alias: \"operator\"\n        },\n        keyword: /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n        function: {\n            pattern: /((?:^|[{;])[ \\t]*)[a-z_]\\w*\\b(?!\\s*(?:\\.(?!\\.)|[[{=]))|\\b[a-z_]\\w*(?=[ \\t]*\\()/im,\n            lookbehind: true,\n            greedy: true\n        },\n        \"tensor-punctuation\": {\n            pattern: /<<|>>/,\n            alias: \"punctuation\"\n        },\n        operator: /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=?|[*\\/!=]=?|[%^]/,\n        punctuation: /[.,:;?\\[\\](){}]/\n    };\n    Prism.languages.mel[\"code\"].inside[\"statement\"].inside = Prism.languages.mel;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tZWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsT0FBTztZQUNQQyxRQUFRO2dCQUNOQyxXQUFXO29CQUNUTCxTQUFTO29CQUNURyxPQUFPO2dCQUNUO2dCQUNBRyxXQUFXO29CQUNUTixTQUFTO29CQUNUSSxRQUFRLEtBQUssWUFBWTtnQkFDM0I7WUFDRjtRQUNGO1FBRUFHLFFBQVE7WUFDTlAsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQU8sVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLE1BQU07WUFDSlYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQVEsU0FDRTtRQUNGQyxVQUFVO1lBQ1JaLFNBQ0U7WUFDRmEsWUFBWTtZQUNaWixRQUFRO1FBQ1Y7UUFDQSxzQkFBc0I7WUFDcEJELFNBQVM7WUFDVEcsT0FBTztRQUNUO1FBQ0FXLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FsQixNQUFNQyxTQUFTLENBQUNKLEdBQUcsQ0FBQyxPQUFPLENBQUNVLE1BQU0sQ0FBQyxZQUFZLENBQUNBLE1BQU0sR0FBR1AsTUFBTUMsU0FBUyxDQUFDSixHQUFHO0FBQzlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL21lbC5qcz8wNmQyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5tZWwuZGlzcGxheU5hbWUgPSAnbWVsJ1xubWVsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubWVsID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY29kZToge1xuICAgICAgcGF0dGVybjogL2AoPzpcXFxcLnxbXlxcXFxgXSkqYC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ2l0YWxpYycsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgICAgcGF0dGVybjogL15gfGAkLyxcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICB9LFxuICAgICAgICBzdGF0ZW1lbnQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IC9cXCRcXHcrLyxcbiAgICBudW1iZXI6IC9cXGIweFtcXGRhLWZBLUZdK1xcYnxcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCsvLFxuICAgIGZsYWc6IHtcbiAgICAgIHBhdHRlcm46IC8tW15cXGRcXFddXFx3Ki8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpicmVha3xjYXNlfGNvbnRpbnVlfGRlZmF1bHR8ZG98ZWxzZXxmbG9hdHxmb3J8Z2xvYmFsfGlmfGlufGludHxtYXRyaXh8cHJvY3xyZXR1cm58c3RyaW5nfHN3aXRjaHx2ZWN0b3J8d2hpbGUpXFxiLyxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLygoPzpefFt7O10pWyBcXHRdKilbYS16X11cXHcqXFxiKD8hXFxzKig/OlxcLig/IVxcLil8W1t7PV0pKXxcXGJbYS16X11cXHcqKD89WyBcXHRdKlxcKCkvaW0sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAndGVuc29yLXB1bmN0dWF0aW9uJzoge1xuICAgICAgcGF0dGVybjogLzw8fD4+LyxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICBvcGVyYXRvcjogL1xcK1srPV0/fC1bLT1dP3wmJnxcXHxcXHx8Wzw+XT0/fFsqXFwvIT1dPT98WyVeXS8sXG4gICAgcHVuY3R1YXRpb246IC9bLiw6Oz9cXFtcXF0oKXt9XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMubWVsWydjb2RlJ10uaW5zaWRlWydzdGF0ZW1lbnQnXS5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMubWVsXG59XG4iXSwibmFtZXMiOlsibWVsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImNvZGUiLCJhbGlhcyIsImluc2lkZSIsImRlbGltaXRlciIsInN0YXRlbWVudCIsInN0cmluZyIsInZhcmlhYmxlIiwibnVtYmVyIiwiZmxhZyIsImtleXdvcmQiLCJmdW5jdGlvbiIsImxvb2tiZWhpbmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mermaid.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mermaid.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mermaid)\n/* harmony export */ });\n// @ts-nocheck\nmermaid.displayName = \"mermaid\";\nmermaid.aliases = [];\n/** @type {import('../core.js').Syntax} */ function mermaid(Prism) {\n    Prism.languages.mermaid = {\n        comment: {\n            pattern: /%%.*/,\n            greedy: true\n        },\n        style: {\n            pattern: /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n            lookbehind: true,\n            inside: {\n                property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n                operator: /:/,\n                punctuation: /,/\n            }\n        },\n        \"inter-arrow-label\": {\n            pattern: /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                arrow: {\n                    pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n                    alias: \"operator\"\n                },\n                label: {\n                    pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n                    lookbehind: true,\n                    alias: \"property\"\n                },\n                \"arrow-head\": {\n                    pattern: /^\\S+/,\n                    alias: [\n                        \"arrow\",\n                        \"operator\"\n                    ]\n                }\n            }\n        },\n        arrow: [\n            // This might look complex but it really isn't.\n            // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n            // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n            // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n            // arrows into different patterns.\n            {\n                // ER diagram\n                pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            {\n                // flow chart\n                // (?:==+|--+|-\\.*-)\n                pattern: /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            {\n                // sequence diagram\n                pattern: /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            {\n                // class diagram\n                pattern: /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            }\n        ],\n        label: {\n            pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        text: {\n            pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"/,\n            greedy: true\n        },\n        annotation: {\n            pattern: /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n            alias: \"important\"\n        },\n        keyword: [\n            // This language has both case-sensitive and case-insensitive keywords\n            {\n                pattern: /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        entity: /#[a-z0-9]+;/,\n        operator: {\n            pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n            lookbehind: true\n        },\n        punctuation: /[(){};]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tZXJtYWlkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLE9BQU87WUFDTEYsU0FDRTtZQUNGRyxZQUFZO1lBQ1pDLFFBQVE7Z0JBQ05DLFVBQVU7Z0JBQ1ZDLFVBQVU7Z0JBQ1ZDLGFBQWE7WUFDZjtRQUNGO1FBQ0EscUJBQXFCO1lBQ25CUCxTQUNFO1lBQ0ZHLFlBQVk7WUFDWkYsUUFBUTtZQUNSRyxRQUFRO2dCQUNOSSxPQUFPO29CQUNMUixTQUFTO29CQUNUUyxPQUFPO2dCQUNUO2dCQUNBQyxPQUFPO29CQUNMVixTQUFTO29CQUNURyxZQUFZO29CQUNaTSxPQUFPO2dCQUNUO2dCQUNBLGNBQWM7b0JBQ1pULFNBQVM7b0JBQ1RTLE9BQU87d0JBQUM7d0JBQVM7cUJBQVc7Z0JBQzlCO1lBQ0Y7UUFDRjtRQUNBRCxPQUFPO1lBQ0wsK0NBQStDO1lBQy9DLDBHQUEwRztZQUMxRyxzR0FBc0c7WUFDdEcsK0dBQStHO1lBQy9HLGtDQUFrQztZQUNsQztnQkFDRSxhQUFhO2dCQUNiUixTQUFTO2dCQUNURyxZQUFZO2dCQUNaTSxPQUFPO1lBQ1Q7WUFDQTtnQkFDRSxhQUFhO2dCQUNiLG9CQUFvQjtnQkFDcEJULFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtZQUNBO2dCQUNFLG1CQUFtQjtnQkFDbkJULFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtZQUNBO2dCQUNFLGdCQUFnQjtnQkFDaEJULFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtTQUNEO1FBQ0RDLE9BQU87WUFDTFYsU0FBUztZQUNURyxZQUFZO1lBQ1pGLFFBQVE7WUFDUlEsT0FBTztRQUNUO1FBQ0FFLE1BQU07WUFDSlgsU0FBUztZQUNUUyxPQUFPO1FBQ1Q7UUFDQUcsUUFBUTtZQUNOWixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBWSxZQUFZO1lBQ1ZiLFNBQ0U7WUFDRlMsT0FBTztRQUNUO1FBQ0FLLFNBQVM7WUFDUCxzRUFBc0U7WUFDdEU7Z0JBQ0VkLFNBQ0U7Z0JBQ0ZHLFlBQVk7Z0JBQ1pGLFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUNFO2dCQUNGRyxZQUFZO2dCQUNaRixRQUFRO1lBQ1Y7U0FDRDtRQUNEYyxRQUFRO1FBQ1JULFVBQVU7WUFDUk4sU0FBUztZQUNURyxZQUFZO1FBQ2Q7UUFDQUksYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWVybWFpZC5qcz9lYWI2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5tZXJtYWlkLmRpc3BsYXlOYW1lID0gJ21lcm1haWQnXG5tZXJtYWlkLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG1lcm1haWQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm1lcm1haWQgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyUlLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHlsZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL14oWyBcXHRdKig/OmNsYXNzRGVmfGxpbmtTdHlsZXxzdHlsZSlbIFxcdF0rW1xcdyQtXStbIFxcdF0rKVxcdy4qW15cXHM7XS9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwcm9wZXJ0eTogL1xcYlxcd1tcXHctXSooPz1bIFxcdF0qOikvLFxuICAgICAgICBvcGVyYXRvcjogLzovLFxuICAgICAgICBwdW5jdHVhdGlvbjogLywvXG4gICAgICB9XG4gICAgfSxcbiAgICAnaW50ZXItYXJyb3ctbGFiZWwnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKFtePD5veC49LV0pKD86LVstLl18PT0pKD8hWzw+b3guPS1dKVsgXFx0XSooPzpcIlteXCJcXHJcXG5dKlwifFteXFxzXCIuPS1dKD86W15cXHJcXG4uPS1dKlteXFxzLj0tXSk/KVsgXFx0XSooPzpcXC4rLT4/fC0tK1stPl18PT0rWz0+XSkoPyFbPD5veC49LV0pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgYXJyb3c6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKD86XFwuKy0+P3wtLStbLT5dfD09K1s9Pl0pJC8sXG4gICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgfSxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihbXFxzXFxTXXsyfVsgXFx0XSopXFxTKD86W1xcc1xcU10qXFxTKT8vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgICAgfSxcbiAgICAgICAgJ2Fycm93LWhlYWQnOiB7XG4gICAgICAgICAgcGF0dGVybjogL15cXFMrLyxcbiAgICAgICAgICBhbGlhczogWydhcnJvdycsICdvcGVyYXRvciddXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGFycm93OiBbXG4gICAgICAvLyBUaGlzIG1pZ2h0IGxvb2sgY29tcGxleCBidXQgaXQgcmVhbGx5IGlzbid0LlxuICAgICAgLy8gVGhlcmUgYXJlIG1hbnkgcG9zc2libGUgYXJyb3dzIChzZWUgdGVzdHMpIGFuZCBpdCdzIGltcG9zc2libGUgdG8gZml0IGFsbCBvZiB0aGVtIGludG8gb25lIHBhdHRlcm4uIFRoZVxuICAgICAgLy8gcHJvYmxlbSBpcyB0aGF0IHdlIG9ubHkgaGF2ZSBvbmUgbG9va2JlaGluZCBwZXIgcGF0dGVybi4gSG93ZXZlciwgd2UgY2Fubm90IGRpc2FsbG93IHRvbyBtYW55IGFycm93XG4gICAgICAvLyBjaGFyYWN0ZXJzIGluIHRoZSBvbmUgbG9va2JlaGluZCBiZWNhdXNlIHRoYXQgd291bGQgY3JlYXRlIHRvbyBtYW55IGZhbHNlIG5lZ2F0aXZlcy4gU28gd2UgaGF2ZSB0byBzcGxpdCB0aGVcbiAgICAgIC8vIGFycm93cyBpbnRvIGRpZmZlcmVudCBwYXR0ZXJucy5cbiAgICAgIHtcbiAgICAgICAgLy8gRVIgZGlhZ3JhbVxuICAgICAgICBwYXR0ZXJuOiAvKF58W157fXxvLi1dKVt8fV1bfG9dKD86LS18XFwuXFwuKVt8b11bfHtdKD8hW3t9fG8uLV0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIGZsb3cgY2hhcnRcbiAgICAgICAgLy8gKD86PT0rfC0tK3wtXFwuKi0pXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFtePD5veC49LV0pKD86WzxveF0oPzo9PSt8LS0rfC1cXC4qLSlbPm94XT98KD86PT0rfC0tK3wtXFwuKi0pWz5veF18PT09K3wtLS0rfC1cXC4rLSkoPyFbPD5veC49LV0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIHNlcXVlbmNlIGRpYWdyYW1cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W148PigpeC1dKSg/Oi0tPyg/Oj4+fFt4PildKSg/IVs8PigpeF0pfCg/Ojw8fFt4PChdKS0tPyg/IS0pKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBjbGFzcyBkaWFncmFtXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFtePD58Km8uLV0pKD86WypvXS0tfC0tWypvXXw8XFx8Pyg/Oi0tfFxcLlxcLil8KD86LS18XFwuXFwuKVxcfD8+fC0tfFxcLlxcLikoPyFbPD58Km8uLV0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgIH1cbiAgICBdLFxuICAgIGxhYmVsOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W158PF0pXFx8KD86W15cXHJcXG5cInxdfFwiW15cIlxcclxcbl0qXCIpK1xcfC8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgIHBhdHRlcm46IC8oPzpbKFxcW3tdK3xcXGI+KSg/OlteXFxyXFxuXCIoKVxcW1xcXXt9XXxcIlteXCJcXHJcXG5dKlwiKSsoPzpbKVxcXX1dK3w+KS8sXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiW15cIlxcclxcbl0qXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBhbm5vdGF0aW9uOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvPDwoPzphYnN0cmFjdHxjaG9pY2V8ZW51bWVyYXRpb258Zm9ya3xpbnRlcmZhY2V8am9pbnxzZXJ2aWNlKT4+fFxcW1xcWyg/OmNob2ljZXxmb3JrfGpvaW4pXFxdXFxdL2ksXG4gICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIC8vIFRoaXMgbGFuZ3VhZ2UgaGFzIGJvdGggY2FzZS1zZW5zaXRpdmUgYW5kIGNhc2UtaW5zZW5zaXRpdmUga2V5d29yZHNcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF5bIFxcdF0qKSg/OmFjdGlvbnxjYWxsYmFja3xjbGFzc3xjbGFzc0RlZnxjbGFzc0RpYWdyYW18Y2xpY2t8ZGlyZWN0aW9ufGVyRGlhZ3JhbXxmbG93Y2hhcnR8Z2FudHR8Z2l0R3JhcGh8Z3JhcGh8am91cm5leXxsaW5rfGxpbmtTdHlsZXxwaWV8cmVxdWlyZW1lbnREaWFncmFtfHNlcXVlbmNlRGlhZ3JhbXxzdGF0ZURpYWdyYW18c3RhdGVEaWFncmFtLXYyfHN0eWxlfHN1YmdyYXBoKSg/IVtcXHckLV0pL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF5bIFxcdF0qKSg/OmFjdGl2YXRlfGFsdHxhbmR8YXN8YXV0b251bWJlcnxkZWFjdGl2YXRlfGVsc2V8ZW5kKD86WyBcXHRdK25vdGUpP3xsb29wfG9wdHxwYXJ8cGFydGljaXBhbnR8cmVjdHxzdGF0ZXxub3RlWyBcXHRdKyg/Om92ZXJ8KD86bGVmdHxyaWdodClbIFxcdF0rb2YpKSg/IVtcXHckLV0pL2ltLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIGVudGl0eTogLyNbYS16MC05XSs7LyxcbiAgICBvcGVyYXRvcjoge1xuICAgICAgcGF0dGVybjogLyhcXHdbIFxcdF0qKSYoPz1bIFxcdF0qXFx3KXw6Ojp8Oi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9O10vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJtZXJtYWlkIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0eWxlIiwibG9va2JlaGluZCIsImluc2lkZSIsInByb3BlcnR5Iiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImFycm93IiwiYWxpYXMiLCJsYWJlbCIsInRleHQiLCJzdHJpbmciLCJhbm5vdGF0aW9uIiwia2V5d29yZCIsImVudGl0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mermaid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/metafont.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/metafont.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ metafont)\n/* harmony export */ });\n// @ts-nocheck\nmetafont.displayName = \"metafont\";\nmetafont.aliases = [];\n/** @type {import('../core.js').Syntax} */ function metafont(Prism) {\n    Prism.languages.metafont = {\n        // Syntax of METAFONT with the added (public) elements of PlainMETAFONT. Except for internal quantities they are expected to be rarely redefined. Freely inspired by the syntax of Christophe Grandsire for the Crimson Editor.\n        comment: {\n            pattern: /%.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"[^\\r\\n\"]*\"/,\n            greedy: true\n        },\n        number: /\\d*\\.?\\d+/,\n        boolean: /\\b(?:false|true)\\b/,\n        punctuation: [\n            /[,;()]/,\n            {\n                pattern: /(^|[^{}])(?:\\{|\\})(?![{}])/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^[])\\[(?!\\[)/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\]])\\](?!\\])/,\n                lookbehind: true\n            }\n        ],\n        constant: [\n            {\n                pattern: /(^|[^!?])\\?\\?\\?(?![!?])/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^/*\\\\])(?:\\\\|\\\\\\\\)(?![/*\\\\])/,\n                lookbehind: true\n            },\n            /\\b(?:_|blankpicture|bp|cc|cm|dd|ditto|down|eps|epsilon|fullcircle|halfcircle|identity|in|infinity|left|mm|nullpen|nullpicture|origin|pc|penrazor|penspeck|pensquare|penstroke|proof|pt|quartercircle|relax|right|smoke|unitpixel|unitsquare|up)\\b/\n        ],\n        quantity: {\n            pattern: /\\b(?:autorounding|blacker|boundarychar|charcode|chardp|chardx|chardy|charext|charht|charic|charwd|currentwindow|day|designsize|displaying|fillin|fontmaking|granularity|hppp|join_radius|month|o_correction|pausing|pen_(?:bot|lft|rt|top)|pixels_per_inch|proofing|showstopping|smoothing|time|tolerance|tracingcapsules|tracingchoices|tracingcommands|tracingedges|tracingequations|tracingmacros|tracingonline|tracingoutput|tracingpens|tracingrestores|tracingspecs|tracingstats|tracingtitles|turningcheck|vppp|warningcheck|xoffset|year|yoffset)\\b/,\n            alias: \"keyword\"\n        },\n        command: {\n            pattern: /\\b(?:addto|batchmode|charlist|cull|display|errhelp|errmessage|errorstopmode|everyjob|extensible|fontdimen|headerbyte|inner|interim|let|ligtable|message|newinternal|nonstopmode|numspecial|openwindow|outer|randomseed|save|scrollmode|shipout|show|showdependencies|showstats|showtoken|showvariable|special)\\b/,\n            alias: \"builtin\"\n        },\n        operator: [\n            {\n                pattern: /(^|[^>=<:|])(?:<|<=|=|=:|\\|=:|\\|=:>|=:\\|>|=:\\||\\|=:\\||\\|=:\\|>|\\|=:\\|>>|>|>=|:|:=|<>|::|\\|\\|:)(?![>=<:|])/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^+-])(?:\\+|\\+\\+|-{1,3}|\\+-\\+)(?![+-])/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^/*\\\\])(?:\\*|\\*\\*|\\/)(?![/*\\\\])/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^.])(?:\\.{2,3})(?!\\.)/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^@#&$])&(?![@#&$])/,\n                lookbehind: true\n            },\n            /\\b(?:and|not|or)\\b/\n        ],\n        macro: {\n            pattern: /\\b(?:abs|beginchar|bot|byte|capsule_def|ceiling|change_width|clear_pen_memory|clearit|clearpen|clearxy|counterclockwise|cullit|cutdraw|cutoff|decr|define_blacker_pixels|define_corrected_pixels|define_good_x_pixels|define_good_y_pixels|define_horizontal_corrected_pixels|define_pixels|define_whole_blacker_pixels|define_whole_pixels|define_whole_vertical_blacker_pixels|define_whole_vertical_pixels|dir|direction|directionpoint|div|dotprod|downto|draw|drawdot|endchar|erase|fill|filldraw|fix_units|flex|font_coding_scheme|font_extra_space|font_identifier|font_normal_shrink|font_normal_space|font_normal_stretch|font_quad|font_size|font_slant|font_x_height|gfcorners|gobble|gobbled|good\\.(?:bot|lft|rt|top|x|y)|grayfont|hide|hround|imagerules|incr|interact|interpath|intersectionpoint|inverse|italcorr|killtext|labelfont|labels|lft|loggingall|lowres_fix|makegrid|makelabel(?:\\.(?:bot|lft|rt|top)(?:\\.nodot)?)?|max|min|mod|mode_def|mode_setup|nodisplays|notransforms|numtok|openit|penlabels|penpos|pickup|proofoffset|proofrule|proofrulethickness|range|reflectedabout|rotatedabout|rotatedaround|round|rt|savepen|screenchars|screenrule|screenstrokes|shipit|showit|slantfont|softjoin|solve|stop|superellipse|tensepath|thru|titlefont|top|tracingall|tracingnone|undraw|undrawdot|unfill|unfilldraw|upto|vround)\\b/,\n            alias: \"function\"\n        },\n        builtin: /\\b(?:ASCII|angle|char|cosd|decimal|directiontime|floor|hex|intersectiontimes|jobname|known|length|makepath|makepen|mexp|mlog|normaldeviate|oct|odd|pencircle|penoffset|point|postcontrol|precontrol|reverse|rotated|sind|sqrt|str|subpath|substring|totalweight|turningnumber|uniformdeviate|unknown|xpart|xxpart|xypart|ypart|yxpart|yypart)\\b/,\n        keyword: /\\b(?:also|at|atleast|begingroup|charexists|contour|controls|curl|cycle|def|delimiters|doublepath|dropping|dump|else|elseif|end|enddef|endfor|endgroup|endinput|exitif|exitunless|expandafter|fi|for|forever|forsuffixes|from|if|input|inwindow|keeping|kern|of|primarydef|quote|readstring|scaled|scantokens|secondarydef|shifted|skipto|slanted|step|tension|tertiarydef|to|transformed|until|vardef|withpen|withweight|xscaled|yscaled|zscaled)\\b/,\n        type: {\n            pattern: /\\b(?:boolean|expr|numeric|pair|path|pen|picture|primary|secondary|string|suffix|tertiary|text|transform)\\b/,\n            alias: \"property\"\n        },\n        variable: {\n            pattern: /(^|[^@#&$])(?:@#|#@|#|@)(?![@#&$])|\\b(?:aspect_ratio|currentpen|currentpicture|currenttransform|d|extra_beginchar|extra_endchar|extra_setup|h|localfont|mag|mode|screen_cols|screen_rows|w|whatever|x|y|z)\\b/,\n            lookbehind: true\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/metafont.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mizar.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mizar.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mizar)\n/* harmony export */ });\n// @ts-nocheck\nmizar.displayName = \"mizar\";\nmizar.aliases = [];\n/** @type {import('../core.js').Syntax} */ function mizar(Prism) {\n    Prism.languages.mizar = {\n        comment: /::.+/,\n        keyword: /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n        parameter: {\n            pattern: /\\$(?:10|\\d)/,\n            alias: \"variable\"\n        },\n        variable: /\\b\\w+(?=:)/,\n        number: /(?:\\b|-)\\d+\\b/,\n        operator: /\\.\\.\\.|->|&|\\.?=/,\n        punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9taXphci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztRQUNUQyxTQUNFO1FBQ0ZDLFdBQVc7WUFDVEMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvbWl6YXIuanM/OWFmMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubWl6YXIuZGlzcGxheU5hbWUgPSAnbWl6YXInXG5taXphci5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtaXphcihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMubWl6YXIgPSB7XG4gICAgY29tbWVudDogLzo6LisvLFxuICAgIGtleXdvcmQ6XG4gICAgICAvQHByb29mXFxifFxcYig/OmFjY29yZGluZ3xhZ2dyZWdhdGV8YWxsfGFuZHxhbnRvbnltfGFyZXxhc3xhc3NvY2lhdGl2aXR5fGFzc3VtZXxhc3ltbWV0cnl8YXR0cnxiZXxiZWdpbnxiZWluZ3xieXxjYW5jZWxlZHxjYXNlfGNhc2VzfGNsdXN0ZXJzP3xjb2hlcmVuY2V8Y29tbXV0YXRpdml0eXxjb21wYXRpYmlsaXR5fGNvbm5lY3RlZG5lc3N8Y29uc2lkZXJ8Y29uc2lzdGVuY3l8Y29uc3RydWN0b3JzfGNvbnRyYWRpY3Rpb258Y29ycmVjdG5lc3N8ZGVmfGRlZmZ1bmN8ZGVmaW5lfGRlZmluaXRpb25zP3xkZWZwcmVkfGRvfGRvZXN8ZW5kfGVudmlyb258ZXF1YWxzfGV4fGV4YWN0bHl8ZXhpc3RlbmNlfGZvcnxmcm9tfGZ1bmN8Z2l2ZW58aGVuY2V8aGVyZWJ5fGhvbGRzfGlkZW1wb3RlbmNlfGlkZW50aXR5fGlmZj98aW1wbGllc3xpbnZvbHV0aXZlbmVzc3xpcnJlZmxleGl2aXR5fGlzfGl0fGxldHxtZWFuc3xtb2RlfG5vbnxub3R8bm90YXRpb25zP3xub3d8b2Z8b3J8b3RoZXJ3aXNlfG92ZXJ8cGVyfHByZWR8cHJlZml4fHByb2plY3Rpdml0eXxwcm9vZnxwcm92aWRlZHxxdWF8cmVjb25zaWRlcnxyZWRlZmluZXxyZWR1Y2V8cmVkdWNpYmlsaXR5fHJlZmxleGl2aXR5fHJlZ2lzdHJhdGlvbnM/fHJlcXVpcmVtZW50c3xyZXNlcnZlfHNjaHxzY2hlbWVzP3xzZWN0aW9ufHNlbGVjdG9yfHNldHxzZXRob29kfHN0fHN0cnVjdHxzdWNofHN1cHBvc2V8c3ltbWV0cnl8c3lub255bXx0YWtlfHRoYXR8dGhlfHRoZW58dGhlb3JlbXM/fHRoZXNpc3x0aHVzfHRvfHRyYW5zaXRpdml0eXx1bmlxdWVuZXNzfHZvY2FidWxhcig/Omllc3x5KXx3aGVufHdoZXJlfHdpdGh8d3J0KVxcYi8sXG4gICAgcGFyYW1ldGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwkKD86MTB8XFxkKS8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgdmFyaWFibGU6IC9cXGJcXHcrKD89OikvLFxuICAgIG51bWJlcjogLyg/OlxcYnwtKVxcZCtcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwuXFwuXFwufC0+fCZ8XFwuPz0vLFxuICAgIHB1bmN0dWF0aW9uOiAvXFwoI3wjXFwpfFssOjtcXFtcXF0oKXt9XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm1pemFyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwia2V5d29yZCIsInBhcmFtZXRlciIsInBhdHRlcm4iLCJhbGlhcyIsInZhcmlhYmxlIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mizar.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mongodb.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mongodb.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ mongodb)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\nmongodb.displayName = \"mongodb\";\nmongodb.aliases = [];\n/** @type {import('../core.js').Syntax} */ function mongodb(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var operators = [\n            // query and projection\n            \"$eq\",\n            \"$gt\",\n            \"$gte\",\n            \"$in\",\n            \"$lt\",\n            \"$lte\",\n            \"$ne\",\n            \"$nin\",\n            \"$and\",\n            \"$not\",\n            \"$nor\",\n            \"$or\",\n            \"$exists\",\n            \"$type\",\n            \"$expr\",\n            \"$jsonSchema\",\n            \"$mod\",\n            \"$regex\",\n            \"$text\",\n            \"$where\",\n            \"$geoIntersects\",\n            \"$geoWithin\",\n            \"$near\",\n            \"$nearSphere\",\n            \"$all\",\n            \"$elemMatch\",\n            \"$size\",\n            \"$bitsAllClear\",\n            \"$bitsAllSet\",\n            \"$bitsAnyClear\",\n            \"$bitsAnySet\",\n            \"$comment\",\n            \"$elemMatch\",\n            \"$meta\",\n            \"$slice\",\n            // update\n            \"$currentDate\",\n            \"$inc\",\n            \"$min\",\n            \"$max\",\n            \"$mul\",\n            \"$rename\",\n            \"$set\",\n            \"$setOnInsert\",\n            \"$unset\",\n            \"$addToSet\",\n            \"$pop\",\n            \"$pull\",\n            \"$push\",\n            \"$pullAll\",\n            \"$each\",\n            \"$position\",\n            \"$slice\",\n            \"$sort\",\n            \"$bit\",\n            // aggregation pipeline stages\n            \"$addFields\",\n            \"$bucket\",\n            \"$bucketAuto\",\n            \"$collStats\",\n            \"$count\",\n            \"$currentOp\",\n            \"$facet\",\n            \"$geoNear\",\n            \"$graphLookup\",\n            \"$group\",\n            \"$indexStats\",\n            \"$limit\",\n            \"$listLocalSessions\",\n            \"$listSessions\",\n            \"$lookup\",\n            \"$match\",\n            \"$merge\",\n            \"$out\",\n            \"$planCacheStats\",\n            \"$project\",\n            \"$redact\",\n            \"$replaceRoot\",\n            \"$replaceWith\",\n            \"$sample\",\n            \"$set\",\n            \"$skip\",\n            \"$sort\",\n            \"$sortByCount\",\n            \"$unionWith\",\n            \"$unset\",\n            \"$unwind\",\n            \"$setWindowFields\",\n            // aggregation pipeline operators\n            \"$abs\",\n            \"$accumulator\",\n            \"$acos\",\n            \"$acosh\",\n            \"$add\",\n            \"$addToSet\",\n            \"$allElementsTrue\",\n            \"$and\",\n            \"$anyElementTrue\",\n            \"$arrayElemAt\",\n            \"$arrayToObject\",\n            \"$asin\",\n            \"$asinh\",\n            \"$atan\",\n            \"$atan2\",\n            \"$atanh\",\n            \"$avg\",\n            \"$binarySize\",\n            \"$bsonSize\",\n            \"$ceil\",\n            \"$cmp\",\n            \"$concat\",\n            \"$concatArrays\",\n            \"$cond\",\n            \"$convert\",\n            \"$cos\",\n            \"$dateFromParts\",\n            \"$dateToParts\",\n            \"$dateFromString\",\n            \"$dateToString\",\n            \"$dayOfMonth\",\n            \"$dayOfWeek\",\n            \"$dayOfYear\",\n            \"$degreesToRadians\",\n            \"$divide\",\n            \"$eq\",\n            \"$exp\",\n            \"$filter\",\n            \"$first\",\n            \"$floor\",\n            \"$function\",\n            \"$gt\",\n            \"$gte\",\n            \"$hour\",\n            \"$ifNull\",\n            \"$in\",\n            \"$indexOfArray\",\n            \"$indexOfBytes\",\n            \"$indexOfCP\",\n            \"$isArray\",\n            \"$isNumber\",\n            \"$isoDayOfWeek\",\n            \"$isoWeek\",\n            \"$isoWeekYear\",\n            \"$last\",\n            \"$last\",\n            \"$let\",\n            \"$literal\",\n            \"$ln\",\n            \"$log\",\n            \"$log10\",\n            \"$lt\",\n            \"$lte\",\n            \"$ltrim\",\n            \"$map\",\n            \"$max\",\n            \"$mergeObjects\",\n            \"$meta\",\n            \"$min\",\n            \"$millisecond\",\n            \"$minute\",\n            \"$mod\",\n            \"$month\",\n            \"$multiply\",\n            \"$ne\",\n            \"$not\",\n            \"$objectToArray\",\n            \"$or\",\n            \"$pow\",\n            \"$push\",\n            \"$radiansToDegrees\",\n            \"$range\",\n            \"$reduce\",\n            \"$regexFind\",\n            \"$regexFindAll\",\n            \"$regexMatch\",\n            \"$replaceOne\",\n            \"$replaceAll\",\n            \"$reverseArray\",\n            \"$round\",\n            \"$rtrim\",\n            \"$second\",\n            \"$setDifference\",\n            \"$setEquals\",\n            \"$setIntersection\",\n            \"$setIsSubset\",\n            \"$setUnion\",\n            \"$size\",\n            \"$sin\",\n            \"$slice\",\n            \"$split\",\n            \"$sqrt\",\n            \"$stdDevPop\",\n            \"$stdDevSamp\",\n            \"$strcasecmp\",\n            \"$strLenBytes\",\n            \"$strLenCP\",\n            \"$substr\",\n            \"$substrBytes\",\n            \"$substrCP\",\n            \"$subtract\",\n            \"$sum\",\n            \"$switch\",\n            \"$tan\",\n            \"$toBool\",\n            \"$toDate\",\n            \"$toDecimal\",\n            \"$toDouble\",\n            \"$toInt\",\n            \"$toLong\",\n            \"$toObjectId\",\n            \"$toString\",\n            \"$toLower\",\n            \"$toUpper\",\n            \"$trim\",\n            \"$trunc\",\n            \"$type\",\n            \"$week\",\n            \"$year\",\n            \"$zip\",\n            \"$count\",\n            \"$dateAdd\",\n            \"$dateDiff\",\n            \"$dateSubtract\",\n            \"$dateTrunc\",\n            \"$getField\",\n            \"$rand\",\n            \"$sampleRate\",\n            \"$setField\",\n            \"$unsetField\",\n            // aggregation pipeline query modifiers\n            \"$comment\",\n            \"$explain\",\n            \"$hint\",\n            \"$max\",\n            \"$maxTimeMS\",\n            \"$min\",\n            \"$orderby\",\n            \"$query\",\n            \"$returnKey\",\n            \"$showDiskLoc\",\n            \"$natural\"\n        ];\n        var builtinFunctions = [\n            \"ObjectId\",\n            \"Code\",\n            \"BinData\",\n            \"DBRef\",\n            \"Timestamp\",\n            \"NumberLong\",\n            \"NumberDecimal\",\n            \"MaxKey\",\n            \"MinKey\",\n            \"RegExp\",\n            \"ISODate\",\n            \"UUID\"\n        ];\n        operators = operators.map(function(operator) {\n            return operator.replace(\"$\", \"\\\\$\");\n        });\n        var operatorsSource = \"(?:\" + operators.join(\"|\") + \")\\\\b\";\n        Prism.languages.mongodb = Prism.languages.extend(\"javascript\", {});\n        Prism.languages.insertBefore(\"mongodb\", \"string\", {\n            property: {\n                pattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n                greedy: true,\n                inside: {\n                    keyword: RegExp(\"^(['\\\"])?\" + operatorsSource + \"(?:\\\\1)?$\")\n                }\n            }\n        });\n        Prism.languages.mongodb.string.inside = {\n            url: {\n                // url pattern\n                pattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n                greedy: true\n            },\n            entity: {\n                // ipv4\n                pattern: /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n                greedy: true\n            }\n        };\n        Prism.languages.insertBefore(\"mongodb\", \"constant\", {\n            builtin: {\n                pattern: RegExp(\"\\\\b(?:\" + builtinFunctions.join(\"|\") + \")\\\\b\"),\n                alias: \"keyword\"\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mongodb.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/monkey.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/monkey.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ monkey)\n/* harmony export */ });\n// @ts-nocheck\nmonkey.displayName = \"monkey\";\nmonkey.aliases = [];\n/** @type {import('../core.js').Syntax} */ function monkey(Prism) {\n    Prism.languages.monkey = {\n        comment: {\n            pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n            greedy: true\n        },\n        string: {\n            pattern: /\"[^\"\\r\\n]*\"/,\n            greedy: true\n        },\n        preprocessor: {\n            pattern: /(^[ \\t]*)#.+/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        function: /\\b\\w+(?=\\()/,\n        \"type-char\": {\n            pattern: /\\b[?%#$]/,\n            alias: \"class-name\"\n        },\n        number: {\n            pattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n            lookbehind: true\n        },\n        keyword: /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n        operator: /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n        punctuation: /[.,:;()\\[\\]]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tb25rZXkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxjQUFjO1lBQ1pILFNBQVM7WUFDVEksWUFBWTtZQUNaSCxRQUFRO1lBQ1JJLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1YsYUFBYTtZQUNYTixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBRSxRQUFRO1lBQ05QLFNBQ0U7WUFDRkksWUFBWTtRQUNkO1FBQ0FJLFNBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tb25rZXkuanM/NTBlNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubW9ua2V5LmRpc3BsYXlOYW1lID0gJ21vbmtleSdcbm1vbmtleS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtb25rZXkoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm1vbmtleSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXiNSZW1cXHNbXFxzXFxTXSo/XiNFbmR8Jy4rL2ltLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5dKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgcHJlcHJvY2Vzc29yOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcdF0qKSMuKy9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdysoPz1cXCgpLyxcbiAgICAndHlwZS1jaGFyJzoge1xuICAgICAgcGF0dGVybjogL1xcYls/JSMkXS8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86XFwuXFwuKT8pKD86KD86XFxifFxcQi1cXC4/fFxcQlxcLilcXGQrKD86KD8hXFwuXFwuKVxcLlxcZCopP3xcXCRbXFxkYS1mXSspL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFic3RyYWN0fEFycmF5fEJvb2x8Q2FzZXxDYXRjaHxDbGFzc3xDb25zdHxDb250aW51ZXxEZWZhdWx0fEVhY2hpbnxFbHNlfEVsc2VJZnxFbmR8RW5kSWZ8RXhpdHxFeHRlbmRzfEV4dGVybnxGYWxzZXxGaWVsZHxGaW5hbHxGbG9hdHxGb3J8Rm9yZXZlcnxGdW5jdGlvbnxHbG9iYWx8SWZ8SW1wbGVtZW50c3xJbXBvcnR8SW5saW5lfEludHxJbnRlcmZhY2V8TG9jYWx8TWV0aG9kfE1vZHVsZXxOZXd8TmV4dHxOdWxsfE9iamVjdHxQcml2YXRlfFByb3BlcnR5fFB1YmxpY3xSZXBlYXR8UmV0dXJufFNlbGVjdHxTZWxmfFN0ZXB8U3RyaWN0fFN0cmluZ3xTdXBlcnxUaGVufFRocm93fFRvfFRydWV8VHJ5fFVudGlsfFZvaWR8V2VuZHxXaGlsZSlcXGIvaSxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXC5cXC58PFs9Pl0/fD49P3w6Pz18KD86WytcXC0qXFwvJn58XXxcXGIoPzpNb2R8U2hsfFNocilcXGIpPT98XFxiKD86QW5kfE5vdHxPcilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1suLDo7KClcXFtcXF1dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibW9ua2V5IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsInByZXByb2Nlc3NvciIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImZ1bmN0aW9uIiwibnVtYmVyIiwia2V5d29yZCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/monkey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/moonscript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/moonscript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ moonscript)\n/* harmony export */ });\n// @ts-nocheck\nmoonscript.displayName = \"moonscript\";\nmoonscript.aliases = [\n    \"moon\"\n];\n/** @type {import('../core.js').Syntax} */ function moonscript(Prism) {\n    Prism.languages.moonscript = {\n        comment: /--.*/,\n        string: [\n            {\n                pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n                greedy: true\n            },\n            {\n                pattern: /\"[^\"]*\"/,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /#\\{[^{}]*\\}/,\n                        inside: {\n                            moonscript: {\n                                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                                lookbehind: true,\n                                inside: null // see beow\n                            },\n                            \"interpolation-punctuation\": {\n                                pattern: /#\\{|\\}/,\n                                alias: \"punctuation\"\n                            }\n                        }\n                    }\n                }\n            }\n        ],\n        \"class-name\": [\n            {\n                pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n                lookbehind: true\n            },\n            // class-like names start with a capital letter\n            /\\b[A-Z]\\w*/\n        ],\n        keyword: /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n        variable: /@@?\\w*/,\n        property: {\n            pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n            lookbehind: true\n        },\n        function: {\n            pattern: /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        number: /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n        operator: /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n        punctuation: /[.,()[\\]{}\\\\]/\n    };\n    Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside = Prism.languages.moonscript;\n    Prism.languages.moon = Prism.languages.moonscript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9tb29uc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7Q0FBTztBQUU3Qix3Q0FBd0MsR0FDekIsU0FBU0YsV0FBV0csS0FBSztJQUN0Q0EsTUFBTUMsU0FBUyxDQUFDSixVQUFVLEdBQUc7UUFDM0JLLFNBQVM7UUFDVEMsUUFBUTtZQUNOO2dCQUNFQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkMsUUFBUTtvQkFDTkMsZUFBZTt3QkFDYkgsU0FBUzt3QkFDVEUsUUFBUTs0QkFDTlQsWUFBWTtnQ0FDVk8sU0FBUztnQ0FDVEksWUFBWTtnQ0FDWkYsUUFBUSxLQUFLLFdBQVc7NEJBQzFCOzRCQUVBLDZCQUE2QjtnQ0FDM0JGLFNBQVM7Z0NBQ1RLLE9BQU87NEJBQ1Q7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7WUFDRjtTQUNEO1FBQ0QsY0FBYztZQUNaO2dCQUNFTCxTQUFTO2dCQUNUSSxZQUFZO1lBQ2Q7WUFDQSwrQ0FBK0M7WUFDL0M7U0FDRDtRQUNERSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtZQUNSUixTQUFTO1lBQ1RJLFlBQVk7UUFDZDtRQUNBSyxVQUFVO1lBQ1JULFNBQ0U7WUFDRkUsUUFBUTtnQkFDTlEsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsU0FBUztRQUNUQyxRQUNFO1FBQ0ZDLFVBQ0U7UUFDRkgsYUFBYTtJQUNmO0lBQ0FkLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxDQUFDTSxNQUFNLENBQUMsRUFBRSxDQUFDRyxNQUFNLENBQUNDLGFBQWEsQ0FBQ0QsTUFBTSxDQUFDVCxVQUFVLENBQUNTLE1BQU0sR0FDaEZOLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVTtJQUM1QkcsTUFBTUMsU0FBUyxDQUFDaUIsSUFBSSxHQUFHbEIsTUFBTUMsU0FBUyxDQUFDSixVQUFVO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL21vb25zY3JpcHQuanM/OTQwNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubW9vbnNjcmlwdC5kaXNwbGF5TmFtZSA9ICdtb29uc2NyaXB0J1xubW9vbnNjcmlwdC5hbGlhc2VzID0gWydtb29uJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBtb29uc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5tb29uc2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IC8tLS4qLyxcbiAgICBzdHJpbmc6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLydbXiddKid8XFxbKD0qKVxcW1tcXHNcXFNdKj9cXF1cXDFcXF0vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvI1xce1tee31dKlxcfS8sXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgbW9vbnNjcmlwdDoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC8oXiNcXHspW1xcc1xcU10rKD89XFx9KS8sXG4gICAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlb3dcbiAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xce3xcXH0vLFxuICAgICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBdLFxuICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcYig/OmNsYXNzfGV4dGVuZHMpWyBcXHRdKylcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8vIGNsYXNzLWxpa2UgbmFtZXMgc3RhcnQgd2l0aCBhIGNhcGl0YWwgbGV0dGVyXG4gICAgICAvXFxiW0EtWl1cXHcqL1xuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpjbGFzc3xjb250aW51ZXxkb3xlbHNlfGVsc2VpZnxleHBvcnR8ZXh0ZW5kc3xmb3J8ZnJvbXxpZnxpbXBvcnR8aW58bG9jYWx8bmlsfHJldHVybnxzZWxmfHN1cGVyfHN3aXRjaHx0aGVufHVubGVzc3x1c2luZ3x3aGVufHdoaWxlfHdpdGgpXFxiLyxcbiAgICB2YXJpYWJsZTogL0BAP1xcdyovLFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiKD8hXFxkKVxcdysoPz06KXwoOikoPyFcXGQpXFx3Ky8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/Ol9HfF9WRVJTSU9OfGFzc2VydHxjb2xsZWN0Z2FyYmFnZXxjb3JvdXRpbmVcXC4oPzpjcmVhdGV8cmVzdW1lfHJ1bm5pbmd8c3RhdHVzfHdyYXB8eWllbGQpfGRlYnVnXFwuKD86ZGVidWd8Z2V0ZmVudnxnZXRob29rfGdldGluZm98Z2V0bG9jYWx8Z2V0bWV0YXRhYmxlfGdldHJlZ2lzdHJ5fGdldHVwdmFsdWV8c2V0ZmVudnxzZXRob29rfHNldGxvY2FsfHNldG1ldGF0YWJsZXxzZXR1cHZhbHVlfHRyYWNlYmFjayl8ZG9maWxlfGVycm9yfGdldGZlbnZ8Z2V0bWV0YXRhYmxlfGlvXFwuKD86Y2xvc2V8Zmx1c2h8aW5wdXR8bGluZXN8b3BlbnxvdXRwdXR8cG9wZW58cmVhZHxzdGRlcnJ8c3RkaW58c3Rkb3V0fHRtcGZpbGV8dHlwZXx3cml0ZSl8aXBhaXJzfGxvYWR8bG9hZGZpbGV8bG9hZHN0cmluZ3xtYXRoXFwuKD86YWJzfGFjb3N8YXNpbnxhdGFufGF0YW4yfGNlaWx8Y29zfGNvc2h8ZGVnfGV4cHxmbG9vcnxmbW9kfGZyZXhwfGxkZXhwfGxvZ3xsb2cxMHxtYXh8bWlufG1vZGZ8cGl8cG93fHJhZHxyYW5kb218cmFuZG9tc2VlZHxzaW58c2luaHxzcXJ0fHRhbnx0YW5oKXxtb2R1bGV8bmV4dHxvc1xcLig/OmNsb2NrfGRhdGV8ZGlmZnRpbWV8ZXhlY3V0ZXxleGl0fGdldGVudnxyZW1vdmV8cmVuYW1lfHNldGxvY2FsZXx0aW1lfHRtcG5hbWUpfHBhY2thZ2VcXC4oPzpjcGF0aHxsb2FkZWR8bG9hZGxpYnxwYXRofHByZWxvYWR8c2VlYWxsKXxwYWlyc3xwY2FsbHxwcmludHxyYXdlcXVhbHxyYXdnZXR8cmF3c2V0fHJlcXVpcmV8c2VsZWN0fHNldGZlbnZ8c2V0bWV0YXRhYmxlfHN0cmluZ1xcLig/OmJ5dGV8Y2hhcnxkdW1wfGZpbmR8Zm9ybWF0fGdtYXRjaHxnc3VifGxlbnxsb3dlcnxtYXRjaHxyZXB8cmV2ZXJzZXxzdWJ8dXBwZXIpfHRhYmxlXFwuKD86Y29uY2F0fGluc2VydHxtYXhufHJlbW92ZXxzb3J0KXx0b251bWJlcnx0b3N0cmluZ3x0eXBlfHVucGFja3x4cGNhbGwpXFxiLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcQlxcLlxcZCt8XFxiXFxkK1xcLlxcZCt8XFxiXFxkKyg/PVtlRV0pKSg/OltlRV1bLStdP1xcZCspP1xcYnxcXGIoPzoweFthLWZBLUZcXGRdK3xcXGQrKSg/OlU/TEwpP1xcYi8sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvXFwuezN9fFstPV0+fH49fCg/OlstKyovJTw+IT1dfFxcLlxcLik9P3xbOiNeXXxcXGIoPzphbmR8b3IpXFxiPT98XFxiKD86bm90KVxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9bLiwoKVtcXF17fVxcXFxdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5tb29uc2NyaXB0LnN0cmluZ1sxXS5pbnNpZGUuaW50ZXJwb2xhdGlvbi5pbnNpZGUubW9vbnNjcmlwdC5pbnNpZGUgPVxuICAgIFByaXNtLmxhbmd1YWdlcy5tb29uc2NyaXB0XG4gIFByaXNtLmxhbmd1YWdlcy5tb29uID0gUHJpc20ubGFuZ3VhZ2VzLm1vb25zY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJtb29uc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImluc2lkZSIsImludGVycG9sYXRpb24iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJrZXl3b3JkIiwidmFyaWFibGUiLCJwcm9wZXJ0eSIsImZ1bmN0aW9uIiwicHVuY3R1YXRpb24iLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJtb29uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/moonscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n1ql.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n1ql.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ n1ql)\n/* harmony export */ });\n// @ts-nocheck\nn1ql.displayName = \"n1ql\";\nn1ql.aliases = [];\n/** @type {import('../core.js').Syntax} */ function n1ql(Prism) {\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n    Prism.languages.n1ql = {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n            greedy: true\n        },\n        identifier: {\n            pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n            greedy: true\n        },\n        parameter: /\\$[\\w.]+/,\n        // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n        keyword: /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        boolean: /\\b(?:FALSE|TRUE)\\b/i,\n        number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n        operator: /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n        punctuation: /[;[\\](),.{}:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uMXFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEMsb0ZBQW9GO0lBRXBGQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFlBQVk7WUFDVkgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsV0FBVztRQUNYLGdIQUFnSDtRQUNoSEMsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxVQUNFO1FBQ0ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL24xcWwuanM/MTJiNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubjFxbC5kaXNwbGF5TmFtZSA9ICduMXFsJ1xubjFxbC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuMXFsKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vZG9jcy5jb3VjaGJhc2UuY29tL3NlcnZlci9jdXJyZW50L24xcWwvbjFxbC1sYW5ndWFnZS1yZWZlcmVuY2UvaW5kZXguaHRtbFxuXG4gIFByaXNtLmxhbmd1YWdlcy5uMXFsID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXCpbXFxzXFxTXSo/KD86JHxcXCpcXC8pfC0tLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86XFxcXFtcXHNcXFNdfCg/IVxcMSlbXlxcXFxdfFxcMVxcMSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgaWRlbnRpZmllcjoge1xuICAgICAgcGF0dGVybjogL2AoPzpcXFxcW1xcc1xcU118W15cXFxcYF18YGApKmAvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBwYXJhbWV0ZXI6IC9cXCRbXFx3Ll0rLyxcbiAgICAvLyBodHRwczovL2RvY3MuY291Y2hiYXNlLmNvbS9zZXJ2ZXIvY3VycmVudC9uMXFsL24xcWwtbGFuZ3VhZ2UtcmVmZXJlbmNlL3Jlc2VydmVkd29yZHMuaHRtbCNuMXFsLXJlc2VydmVkLXdvcmRzXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpBRFZJU0V8QUxMfEFMVEVSfEFOQUxZWkV8QVN8QVNDfEFUfEJFR0lOfEJJTkFSWXxCT09MRUFOfEJSRUFLfEJVQ0tFVHxCVUlMRHxCWXxDQUxMfENBU1R8Q0xVU1RFUnxDT0xMQVRFfENPTExFQ1RJT058Q09NTUlUfENPTU1JVFRFRHxDT05ORUNUfENPTlRJTlVFfENPUlJFTEFURXxDT1JSRUxBVEVEfENPVkVSfENSRUFURXxDVVJSRU5UfERBVEFCQVNFfERBVEFTRVR8REFUQVNUT1JFfERFQ0xBUkV8REVDUkVNRU5UfERFTEVURXxERVJJVkVEfERFU0N8REVTQ1JJQkV8RElTVElOQ1R8RE98RFJPUHxFQUNIfEVMRU1FTlR8RVhDRVBUfEVYQ0xVREV8RVhFQ1VURXxFWFBMQUlOfEZFVENIfEZJTFRFUnxGTEFUVEVOfEZMVVNIfEZPTExPV0lOR3xGT1J8Rk9SQ0V8RlJPTXxGVFN8RlVOQ1RJT058R09MQU5HfEdSQU5UfEdST1VQfEdST1VQU3xHU0l8SEFTSHxIQVZJTkd8SUZ8SUdOT1JFfElMSUtFfElOQ0xVREV8SU5DUkVNRU5UfElOREVYfElORkVSfElOTElORXxJTk5FUnxJTlNFUlR8SU5URVJTRUNUfElOVE98SVN8SVNPTEFUSU9OfEpBVkFTQ1JJUFR8Sk9JTnxLRVl8S0VZU3xLRVlTUEFDRXxLTk9XTnxMQU5HVUFHRXxMQVNUfExFRlR8TEVUfExFVFRJTkd8TEVWRUx8TElNSVR8TFNNfE1BUHxNQVBQSU5HfE1BVENIRUR8TUFURVJJQUxJWkVEfE1FUkdFfE1JTlVTfE1JU1NJTkd8TkFNRVNQQUNFfE5FU1R8Tkx8Tk98TlRIX1ZBTFVFfE5VTEx8TlVMTFN8TlVNQkVSfE9CSkVDVHxPRkZTRVR8T058T1BUSU9OfE9QVElPTlN8T1JERVJ8T1RIRVJTfE9VVEVSfE9WRVJ8UEFSU0V8UEFSVElUSU9OfFBBU1NXT1JEfFBBVEh8UE9PTHxQUkVDRURJTkd8UFJFUEFSRXxQUklNQVJZfFBSSVZBVEV8UFJJVklMRUdFfFBST0JFfFBST0NFRFVSRXxQVUJMSUN8UkFOR0V8UkFXfFJFQUxNfFJFRFVDRXxSRU5BTUV8UkVTUEVDVHxSRVRVUk58UkVUVVJOSU5HfFJFVk9LRXxSSUdIVHxST0xFfFJPTExCQUNLfFJPV3xST1dTfFNBVElTRklFU3xTQVZFUE9JTlR8U0NIRU1BfFNDT1BFfFNFTEVDVHxTRUxGfFNFTUl8U0VUfFNIT1d8U09NRXxTVEFSVHxTVEFUSVNUSUNTfFNUUklOR3xTWVNURU18VElFU3xUT3xUUkFOfFRSQU5TQUNUSU9OfFRSSUdHRVJ8VFJVTkNBVEV8VU5CT1VOREVEfFVOREVSfFVOSU9OfFVOSVFVRXxVTktOT1dOfFVOTkVTVHxVTlNFVHxVUERBVEV8VVBTRVJUfFVTRXxVU0VSfFVTSU5HfFZBTElEQVRFfFZBTFVFfFZBTFVFU3xWSUF8VklFV3xXSEVSRXxXSElMRXxXSU5ET1d8V0lUSHxXT1JLfFhPUilcXGIvaSxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGQUxTRXxUUlVFKVxcYi9pLFxuICAgIG51bWJlcjogLyg/OlxcYlxcZCtcXC58XFxCXFwuKVxcZCtlWytcXC1dP1xcZCtcXGJ8XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrXFxiL2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWy0rKlxcLyVdfCE9fD09P3xcXHxcXHx8PFs+PV0/fD49P3xcXGIoPzpBTkR8QU5ZfEFSUkFZfEJFVFdFRU58Q0FTRXxFTFNFfEVORHxFVkVSWXxFWElTVFN8RklSU1R8SU58TElLRXxOT1R8T1J8VEhFTnxWQUxVRUR8V0hFTnxXSVRISU4pXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bO1tcXF0oKSwue306XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm4xcWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaWRlbnRpZmllciIsInBhcmFtZXRlciIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n1ql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n4js.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n4js.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ n4js)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\nn4js.displayName = \"n4js\";\nn4js.aliases = [\n    \"n4jsd\"\n];\n/** @type {import('../core.js').Syntax} */ function n4js(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.n4js = Prism.languages.extend(\"javascript\", {\n        // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n        keyword: /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n    });\n    Prism.languages.insertBefore(\"n4js\", \"constant\", {\n        // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n        annotation: {\n            pattern: /@+\\w+/,\n            alias: \"operator\"\n        }\n    });\n    Prism.languages.n4jsd = Prism.languages.n4js;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uNGpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNtQztBQUNqREMsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUc7SUFBQztDQUFRO0FBRXhCLHdDQUF3QyxHQUN6QixTQUFTRixLQUFLRyxLQUFLO0lBQ2hDQSxNQUFNQyxRQUFRLENBQUNMLHNEQUFtQkE7SUFDbENJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxjQUFjO1FBQzFELHlGQUF5RjtRQUN6RkMsU0FDRTtJQUNKO0lBQ0FKLE1BQU1FLFNBQVMsQ0FBQ0csWUFBWSxDQUFDLFFBQVEsWUFBWTtRQUMvQyw4RkFBOEY7UUFDOUZDLFlBQVk7WUFDVkMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7SUFDRjtJQUNBUixNQUFNRSxTQUFTLENBQUNPLEtBQUssR0FBR1QsTUFBTUUsU0FBUyxDQUFDTCxJQUFJO0FBQzlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL240anMuanM/MWY1OSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckphdmFzY3JpcHQgZnJvbSAnLi9qYXZhc2NyaXB0LmpzJ1xubjRqcy5kaXNwbGF5TmFtZSA9ICduNGpzJ1xubjRqcy5hbGlhc2VzID0gWyduNGpzZCddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbjRqcyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKYXZhc2NyaXB0KVxuICBQcmlzbS5sYW5ndWFnZXMubjRqcyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7XG4gICAgLy8gS2V5d29yZHMgZnJvbSBONEpTIGxhbmd1YWdlIHNwZWM6IGh0dHBzOi8vbnVtYmVyZm91ci5naXRodWIuaW8vbjRqcy9zcGVjL040SlNTcGVjLmh0bWxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFycmF5fGFueXxib29sZWFufGJyZWFrfGNhc2V8Y2F0Y2h8Y2xhc3N8Y29uc3R8Y29uc3RydWN0b3J8Y29udGludWV8ZGVidWdnZXJ8ZGVjbGFyZXxkZWZhdWx0fGRlbGV0ZXxkb3xlbHNlfGVudW18ZXhwb3J0fGV4dGVuZHN8ZmFsc2V8ZmluYWxseXxmb3J8ZnJvbXxmdW5jdGlvbnxnZXR8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW58aW5zdGFuY2VvZnxpbnRlcmZhY2V8bGV0fG1vZHVsZXxuZXd8bnVsbHxudW1iZXJ8cGFja2FnZXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cmV0dXJufHNldHxzdGF0aWN8c3RyaW5nfHN1cGVyfHN3aXRjaHx0aGlzfHRocm93fHRydWV8dHJ5fHR5cGVvZnx2YXJ8dm9pZHx3aGlsZXx3aXRofHlpZWxkKVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnbjRqcycsICdjb25zdGFudCcsIHtcbiAgICAvLyBBbm5vdGF0aW9ucyBpbiBONEpTIHNwZWM6IGh0dHBzOi8vbnVtYmVyZm91ci5naXRodWIuaW8vbjRqcy9zcGVjL040SlNTcGVjLmh0bWwjX2Fubm90YXRpb25zXG4gICAgYW5ub3RhdGlvbjoge1xuICAgICAgcGF0dGVybjogL0ArXFx3Ky8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLm40anNkID0gUHJpc20ubGFuZ3VhZ2VzLm40anNcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JKYXZhc2NyaXB0IiwibjRqcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwiaW5zZXJ0QmVmb3JlIiwiYW5ub3RhdGlvbiIsInBhdHRlcm4iLCJhbGlhcyIsIm40anNkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n4js.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nand2tetris-hdl.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nand2tetris-hdl.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nand2tetrisHdl)\n/* harmony export */ });\n// @ts-nocheck\nnand2tetrisHdl.displayName = \"nand2tetris-hdl\";\nnand2tetrisHdl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nand2tetrisHdl(Prism) {\n    Prism.languages[\"nand2tetris-hdl\"] = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n        number: /\\b\\d+\\b/,\n        operator: /=|\\.\\./,\n        punctuation: /[{}[\\];(),:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uYW5kMnRldHJpcy1oZGwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsZUFBZUMsV0FBVyxHQUFHO0FBQzdCRCxlQUFlRSxPQUFPLEdBQUcsRUFBRTtBQUUzQix3Q0FBd0MsR0FDekIsU0FBU0YsZUFBZUcsS0FBSztJQUMxQ0EsTUFBTUMsU0FBUyxDQUFDLGtCQUFrQixHQUFHO1FBQ25DQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLFFBQVE7UUFDUkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uYW5kMnRldHJpcy1oZGwuanM/OGQ2YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubmFuZDJ0ZXRyaXNIZGwuZGlzcGxheU5hbWUgPSAnbmFuZDJ0ZXRyaXMtaGRsJ1xubmFuZDJ0ZXRyaXNIZGwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbmFuZDJ0ZXRyaXNIZGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzWyduYW5kMnRldHJpcy1oZGwnXSA9IHtcbiAgICBjb21tZW50OiAvXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAga2V5d29yZDogL1xcYig/OkJVSUxUSU58Q0hJUHxDTE9DS0VEfElOfE9VVHxQQVJUUylcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJbQS1aYS16XVtBLVphLXowLTldKig/PVxcKCkvLFxuICAgIG51bWJlcjogL1xcYlxcZCtcXGIvLFxuICAgIG9wZXJhdG9yOiAvPXxcXC5cXC4vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9W1xcXTsoKSw6XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIm5hbmQydGV0cmlzSGRsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nand2tetris-hdl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/naniscript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/naniscript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ naniscript)\n/* harmony export */ });\n// @ts-nocheck\nnaniscript.displayName = \"naniscript\";\nnaniscript.aliases = [\n    \"nani\"\n];\n/** @type {import('../core.js').Syntax} */ function naniscript(Prism) {\n    ;\n    (function(Prism) {\n        var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/;\n        var params = {\n            \"quoted-string\": {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                alias: \"operator\"\n            },\n            \"command-param-id\": {\n                pattern: /(\\s)\\w+:/,\n                lookbehind: true,\n                alias: \"property\"\n            },\n            \"command-param-value\": [\n                {\n                    pattern: expressionDef,\n                    alias: \"selector\"\n                },\n                {\n                    pattern: /([\\t ])\\S+/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"operator\"\n                },\n                {\n                    pattern: /\\S(?:.*\\S)?/,\n                    alias: \"operator\"\n                }\n            ]\n        };\n        Prism.languages.naniscript = {\n            // ; ...\n            comment: {\n                pattern: /^([\\t ]*);.*/m,\n                lookbehind: true\n            },\n            // > ...\n            // Define is a control line starting with '>' followed by a word, a space and a text.\n            define: {\n                pattern: /^>.+/m,\n                alias: \"tag\",\n                inside: {\n                    value: {\n                        pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n                        lookbehind: true,\n                        alias: \"operator\"\n                    },\n                    key: {\n                        pattern: /(^>)\\w+/,\n                        lookbehind: true\n                    }\n                }\n            },\n            // # ...\n            label: {\n                pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n                lookbehind: true,\n                alias: \"regex\"\n            },\n            command: {\n                pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n                lookbehind: true,\n                alias: \"function\",\n                inside: {\n                    \"command-name\": /^@\\w+/,\n                    expression: {\n                        pattern: expressionDef,\n                        greedy: true,\n                        alias: \"selector\"\n                    },\n                    \"command-params\": {\n                        pattern: /\\s*\\S[\\s\\S]*/,\n                        inside: params\n                    }\n                }\n            },\n            // Generic is any line that doesn't start with operators: ;>#@\n            \"generic-text\": {\n                pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n                lookbehind: true,\n                alias: \"punctuation\",\n                inside: {\n                    // \\{ ... \\} ... \\[ ... \\] ... \\\"\n                    \"escaped-char\": /\\\\[{}\\[\\]\"]/,\n                    expression: {\n                        pattern: expressionDef,\n                        greedy: true,\n                        alias: \"selector\"\n                    },\n                    \"inline-command\": {\n                        pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n                        greedy: true,\n                        alias: \"function\",\n                        inside: {\n                            \"command-params\": {\n                                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                                lookbehind: true,\n                                inside: params\n                            },\n                            \"command-param-name\": {\n                                pattern: /^(\\[[\\t ]*)\\w+/,\n                                lookbehind: true,\n                                alias: \"name\"\n                            },\n                            \"start-stop-char\": /[\\[\\]]/\n                        }\n                    }\n                }\n            }\n        };\n        Prism.languages.nani = Prism.languages[\"naniscript\"];\n        /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */ /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */ Prism.hooks.add(\"after-tokenize\", function(env) {\n            /** @type {(Token | string)[]} */ var tokens = env.tokens;\n            tokens.forEach(function(token) {\n                if (typeof token !== \"string\" && token.type === \"generic-text\") {\n                    var content = getTextContent(token);\n                    if (!isBracketsBalanced(content)) {\n                        token.type = \"bad-line\";\n                        token.content = content;\n                    }\n                }\n            });\n        });\n        /**\n     * @param {string} input\n     * @returns {boolean}\n     */ function isBracketsBalanced(input) {\n            var brackets = \"[]{}\";\n            var stack = [];\n            for(var i = 0; i < input.length; i++){\n                var bracket = input[i];\n                var bracketsIndex = brackets.indexOf(bracket);\n                if (bracketsIndex !== -1) {\n                    if (bracketsIndex % 2 === 0) {\n                        stack.push(bracketsIndex + 1);\n                    } else if (stack.pop() !== bracketsIndex) {\n                        return false;\n                    }\n                }\n            }\n            return stack.length === 0;\n        }\n        /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */ function getTextContent(token) {\n            if (typeof token === \"string\") {\n                return token;\n            } else if (Array.isArray(token)) {\n                return token.map(getTextContent).join(\"\");\n            } else {\n                return getTextContent(token.content);\n            }\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/naniscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nasm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nasm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nasm)\n/* harmony export */ });\n// @ts-nocheck\nnasm.displayName = \"nasm\";\nnasm.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nasm(Prism) {\n    Prism.languages.nasm = {\n        comment: /;.*$/m,\n        string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        label: {\n            pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        keyword: [\n            /\\[?BITS (?:16|32|64)\\]?/,\n            {\n                pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n                lookbehind: true\n            },\n            /(?:extern|global)[^;\\r\\n]*/i,\n            /(?:CPU|DEFAULT|FLOAT).*$/m\n        ],\n        register: {\n            pattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n            alias: \"variable\"\n        },\n        number: /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uYXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsT0FBTztZQUNMQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUDtZQUNBO2dCQUNFSCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQTtZQUNBO1NBQ0Q7UUFDREcsVUFBVTtZQUNSSixTQUNFO1lBQ0ZFLE9BQU87UUFDVDtRQUNBRyxRQUNFO1FBQ0ZDLFVBQVU7SUFDWjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL25hc20uanM/MWU4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubmFzbS5kaXNwbGF5TmFtZSA9ICduYXNtJ1xubmFzbS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuYXNtKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5uYXNtID0ge1xuICAgIGNvbW1lbnQ6IC87LiokL20sXG4gICAgc3RyaW5nOiAvKFtcIidgXSkoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLyheXFxzKilbQS1aYS16Ll8/JF1bXFx3Lj8kQH4jXSo6L20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICB9LFxuICAgIGtleXdvcmQ6IFtcbiAgICAgIC9cXFs/QklUUyAoPzoxNnwzMnw2NClcXF0/LyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyheXFxzKilzZWN0aW9uXFxzKlthLXouXSs6Py9pbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIC8oPzpleHRlcm58Z2xvYmFsKVteO1xcclxcbl0qL2ksXG4gICAgICAvKD86Q1BVfERFRkFVTFR8RkxPQVQpLiokL21cbiAgICBdLFxuICAgIHJlZ2lzdGVyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86c3RcXGR8W3h5el1tbVxcZFxcZD98W2NkdF1yXFxkfHJcXGRcXGQ/W2J3ZF0/fFtlcl0/W2FiY2RdeHxbYWJjZF1baGxdfFtlcl0/KD86YnB8ZGl8c2l8c3ApfFtjZGVmZ3NdcylcXGIvaSxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBudW1iZXI6XG4gICAgICAvKD86XFxifCg/PVxcJCkpKD86MFtoeF0oPzpcXC5bXFxkYS1mXSt8W1xcZGEtZl0rKD86XFwuW1xcZGEtZl0rKT8pKD86cFsrLV0/XFxkKyk/fFxcZFtcXGRhLWZdK1toeF18XFwkXFxkW1xcZGEtZl0qfDBbb3FdWzAtN10rfFswLTddK1tvcV18MFtieV1bMDFdK3xbMDFdK1tieV18MFtkdF1cXGQrfCg/OlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykoPzpcXC4/ZVsrLV0/XFxkKyk/W2R0XT8pXFxiL2ksXG4gICAgb3BlcmF0b3I6IC9bXFxbXFxdKitcXC1cXC8lPD49JnwkIV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJuYXNtIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwibGFiZWwiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwia2V5d29yZCIsInJlZ2lzdGVyIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nasm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/neon.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/neon.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ neon)\n/* harmony export */ });\n// @ts-nocheck\nneon.displayName = \"neon\";\nneon.aliases = [];\n/** @type {import('../core.js').Syntax} */ function neon(Prism) {\n    Prism.languages.neon = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        datetime: {\n            pattern: /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n            lookbehind: true,\n            alias: \"number\"\n        },\n        key: {\n            pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n            lookbehind: true,\n            alias: \"property\"\n        },\n        number: {\n            pattern: /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n            lookbehind: true\n        },\n        boolean: {\n            pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n            lookbehind: true\n        },\n        null: {\n            pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        string: {\n            pattern: /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n            lookbehind: true,\n            greedy: true\n        },\n        literal: {\n            pattern: /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n            lookbehind: true,\n            alias: \"string\"\n        },\n        punctuation: /[,:=[\\]{}()-]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uZW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFVBQVU7WUFDUkYsU0FDRTtZQUNGRyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxLQUFLO1lBQ0hMLFNBQVM7WUFDVEcsWUFBWTtZQUNaQyxPQUFPO1FBQ1Q7UUFDQUUsUUFBUTtZQUNOTixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBSSxTQUFTO1lBQ1BQLFNBQVM7WUFDVEcsWUFBWTtRQUNkO1FBQ0FLLE1BQU07WUFDSlIsU0FBUztZQUNURyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBSyxRQUFRO1lBQ05ULFNBQ0U7WUFDRkcsWUFBWTtZQUNaRixRQUFRO1FBQ1Y7UUFDQVMsU0FBUztZQUNQVixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FPLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL25lb24uanM/YzNhNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubmVvbi5kaXNwbGF5TmFtZSA9ICduZW9uJ1xubmVvbi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuZW9uKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5uZW9uID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBkYXRldGltZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFtbeyg9OixcXHNdKVxcZFxcZFxcZFxcZC1cXGRcXGQ/LVxcZFxcZD8oPzooPzpbVHRdfCArKVxcZFxcZD86XFxkXFxkOlxcZFxcZCg/OlxcLlxcZCopPyAqKD86WnxbLStdXFxkXFxkPyg/Ojo/XFxkXFxkKT8pPyk/KD89JHxbXFxdfSksXFxzXSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH0sXG4gICAga2V5OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W1t7KCxcXHNdKVteLDo9W1xcXXt9KCknXCJcXHNdKyg/PVxccyo6KD86JHxbXFxdfSksXFxzXSl8XFxzKj0pLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgbnVtYmVyOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W1t7KD06LFxcc10pWystXT8oPzoweFtcXGRhLWZBLUZdK3wwb1swLTddK3wwYlswMV0rfCg/OlxcZCsoPzpcXC5cXGQqKT98XFwuP1xcZCspKD86W2VFXVsrLV0/XFxkKyk/KSg/PSR8W1xcXX0pLDo9XFxzXSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgYm9vbGVhbjoge1xuICAgICAgcGF0dGVybjogLyhefFtbeyg9OixcXHNdKSg/OmZhbHNlfG5vfHRydWV8eWVzKSg/PSR8W1xcXX0pLDo9XFxzXSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG51bGw6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbW3soPTosXFxzXSkoPzpudWxsKSg/PSR8W1xcXX0pLDo9XFxzXSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbW3soPTosXFxzXSkoPzooJycnfFwiXCJcIilcXHI/XFxuKD86KD86W15cXHJcXG5dfFxccj9cXG4oPyFbXFx0IF0qXFwyKSkqXFxyP1xcbik/W1xcdCBdKlxcMnwnW14nXFxyXFxuXSonfFwiKD86XFxcXC58W15cXFxcXCJcXHJcXG5dKSpcIikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgbGl0ZXJhbDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFtbeyg9OixcXHNdKSg/OlteI1wiJyw6PVtcXF17fSgpXFxzYC1dfFs6LV1bXlwiJyw9W1xcXXt9KClcXHNdKSg/OlteLDo9XFxdfSkoXFxzXXw6KD8hW1xccyxcXF19KV18JCl8WyBcXHRdK1teIyw6PVxcXX0pKFxcc10pKi8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1ssOj1bXFxde30oKS1dL1xuICB9XG59XG4iXSwibmFtZXMiOlsibmVvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJkYXRldGltZSIsImxvb2tiZWhpbmQiLCJhbGlhcyIsImtleSIsIm51bWJlciIsImJvb2xlYW4iLCJudWxsIiwic3RyaW5nIiwibGl0ZXJhbCIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/neon.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nevod.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nevod.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nevod)\n/* harmony export */ });\n// @ts-nocheck\nnevod.displayName = \"nevod\";\nnevod.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nevod(Prism) {\n    Prism.languages.nevod = {\n        comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n        string: {\n            pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n            greedy: true,\n            inside: {\n                \"string-attrs\": /!$|!\\*$|\\*$/\n            }\n        },\n        namespace: {\n            pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n            lookbehind: true\n        },\n        pattern: {\n            pattern: /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n            lookbehind: true,\n            inside: {\n                \"pattern-name\": {\n                    pattern: /^#?[a-zA-Z0-9\\-.]+/,\n                    alias: \"class-name\"\n                },\n                fields: {\n                    pattern: /\\(.*\\)/,\n                    inside: {\n                        \"field-name\": {\n                            pattern: /[a-zA-Z0-9\\-.]+/,\n                            alias: \"variable\"\n                        },\n                        punctuation: /[,()]/,\n                        operator: {\n                            pattern: /~/,\n                            alias: \"field-hidden-mark\"\n                        }\n                    }\n                }\n            }\n        },\n        search: {\n            pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n            alias: \"function\",\n            lookbehind: true\n        },\n        keyword: /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n        \"standard-pattern\": {\n            pattern: /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n            inside: {\n                \"standard-pattern-name\": {\n                    pattern: /^[a-zA-Z0-9\\-.]+/,\n                    alias: \"builtin\"\n                },\n                quantifier: {\n                    pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n                    alias: \"number\"\n                },\n                \"standard-pattern-attr\": {\n                    pattern: /[a-zA-Z0-9\\-.]+/,\n                    alias: \"builtin\"\n                },\n                punctuation: /[,()]/\n            }\n        },\n        quantifier: {\n            pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n            alias: \"number\"\n        },\n        operator: [\n            {\n                pattern: /=/,\n                alias: \"pattern-def\"\n            },\n            {\n                pattern: /&/,\n                alias: \"conjunction\"\n            },\n            {\n                pattern: /~/,\n                alias: \"exception\"\n            },\n            {\n                pattern: /\\?/,\n                alias: \"optionality\"\n            },\n            {\n                pattern: /[[\\]]/,\n                alias: \"repetition\"\n            },\n            {\n                pattern: /[{}]/,\n                alias: \"variation\"\n            },\n            {\n                pattern: /[+_]/,\n                alias: \"sequence\"\n            },\n            {\n                pattern: /\\.{2,3}/,\n                alias: \"span\"\n            }\n        ],\n        \"field-capture\": [\n            {\n                pattern: /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n                lookbehind: true,\n                inside: {\n                    \"field-name\": {\n                        pattern: /[a-zA-Z0-9\\-.]+/,\n                        alias: \"variable\"\n                    },\n                    colon: /:/\n                }\n            },\n            {\n                pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n                inside: {\n                    \"field-name\": {\n                        pattern: /[a-zA-Z0-9\\-.]+/,\n                        alias: \"variable\"\n                    },\n                    colon: /:/\n                }\n            }\n        ],\n        punctuation: /[:;,()]/,\n        name: /[a-zA-Z0-9\\-.]+/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uZXZvZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDQSxNQUFNQyxTQUFTLENBQUNKLEtBQUssR0FBRztRQUN0QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtZQUNSQyxRQUFRO2dCQUNOLGdCQUFnQjtZQUNsQjtRQUNGO1FBQ0FDLFdBQVc7WUFDVEgsU0FBUztZQUNUSSxZQUFZO1FBQ2Q7UUFDQUosU0FBUztZQUNQQSxTQUNFO1lBQ0ZJLFlBQVk7WUFDWkYsUUFBUTtnQkFDTixnQkFBZ0I7b0JBQ2RGLFNBQVM7b0JBQ1RLLE9BQU87Z0JBQ1Q7Z0JBQ0FDLFFBQVE7b0JBQ05OLFNBQVM7b0JBQ1RFLFFBQVE7d0JBQ04sY0FBYzs0QkFDWkYsU0FBUzs0QkFDVEssT0FBTzt3QkFDVDt3QkFDQUUsYUFBYTt3QkFDYkMsVUFBVTs0QkFDUlIsU0FBUzs0QkFDVEssT0FBTzt3QkFDVDtvQkFDRjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUksUUFBUTtZQUNOVCxTQUFTO1lBQ1RLLE9BQU87WUFDUEQsWUFBWTtRQUNkO1FBQ0FNLFNBQ0U7UUFDRixvQkFBb0I7WUFDbEJWLFNBQ0U7WUFDRkUsUUFBUTtnQkFDTix5QkFBeUI7b0JBQ3ZCRixTQUFTO29CQUNUSyxPQUFPO2dCQUNUO2dCQUNBTSxZQUFZO29CQUNWWCxTQUFTO29CQUNUSyxPQUFPO2dCQUNUO2dCQUNBLHlCQUF5QjtvQkFDdkJMLFNBQVM7b0JBQ1RLLE9BQU87Z0JBQ1Q7Z0JBQ0FFLGFBQWE7WUFDZjtRQUNGO1FBQ0FJLFlBQVk7WUFDVlgsU0FBUztZQUNUSyxPQUFPO1FBQ1Q7UUFDQUcsVUFBVTtZQUNSO2dCQUNFUixTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUwsU0FBUztnQkFDVEssT0FBTztZQUNUO1lBQ0E7Z0JBQ0VMLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBO2dCQUNFTCxTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUwsU0FBUztnQkFDVEssT0FBTztZQUNUO1lBQ0E7Z0JBQ0VMLFNBQVM7Z0JBQ1RLLE9BQU87WUFDVDtZQUNBO2dCQUNFTCxTQUFTO2dCQUNUSyxPQUFPO1lBQ1Q7WUFDQTtnQkFDRUwsU0FBUztnQkFDVEssT0FBTztZQUNUO1NBQ0Q7UUFDRCxpQkFBaUI7WUFDZjtnQkFDRUwsU0FDRTtnQkFDRkksWUFBWTtnQkFDWkYsUUFBUTtvQkFDTixjQUFjO3dCQUNaRixTQUFTO3dCQUNUSyxPQUFPO29CQUNUO29CQUNBTyxPQUFPO2dCQUNUO1lBQ0Y7WUFDQTtnQkFDRVosU0FBUztnQkFDVEUsUUFBUTtvQkFDTixjQUFjO3dCQUNaRixTQUFTO3dCQUNUSyxPQUFPO29CQUNUO29CQUNBTyxPQUFPO2dCQUNUO1lBQ0Y7U0FDRDtRQUNETCxhQUFhO1FBQ2JNLE1BQU07SUFDUjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL25ldm9kLmpzPzQ0NjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbm5ldm9kLmRpc3BsYXlOYW1lID0gJ25ldm9kJ1xubmV2b2QuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbmV2b2QoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm5ldm9kID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXC8uKnwoPzpcXC9cXCpbXFxzXFxTXSo/KD86XFwqXFwvfCQpKS8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKD86XCIoPzpcIlwifFteXCJdKSpcIig/IVwiKXwnKD86Jyd8W14nXSkqJyg/IScpKSE/XFwqPy8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3N0cmluZy1hdHRycyc6IC8hJHwhXFwqJHxcXCokL1xuICAgICAgfVxuICAgIH0sXG4gICAgbmFtZXNwYWNlOiB7XG4gICAgICBwYXR0ZXJuOiAvKEBuYW1lc3BhY2VcXHMrKVthLXpBLVowLTlcXC0uXSsoPz1cXHMqXFx7KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBwYXR0ZXJuOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKEBwYXR0ZXJuXFxzKyk/Iz9bYS16QS1aMC05XFwtLl0rKD86XFxzKlxcKFxccyooPzp+XFxzKik/W2EtekEtWjAtOVxcLS5dK1xccyooPzosXFxzKig/On5cXHMqKT9bYS16QS1aMC05XFwtLl0qKSpcXCkpPyg/PVxccyo9KS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdwYXR0ZXJuLW5hbWUnOiB7XG4gICAgICAgICAgcGF0dGVybjogL14jP1thLXpBLVowLTlcXC0uXSsvLFxuICAgICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICAgICAgfSxcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcKC4qXFwpLyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdmaWVsZC1uYW1lJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvW2EtekEtWjAtOVxcLS5dKy8sXG4gICAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9bLCgpXS8sXG4gICAgICAgICAgICBvcGVyYXRvcjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvfi8sXG4gICAgICAgICAgICAgIGFsaWFzOiAnZmllbGQtaGlkZGVuLW1hcmsnXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcbiAgICBzZWFyY2g6IHtcbiAgICAgIHBhdHRlcm46IC8oQHNlYXJjaFxccyt8IylbYS16QS1aMC05XFwtLl0rKD86XFwuXFwqKT8oPz1cXHMqOykvLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbicsXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL0AoPzpoYXZpbmd8aW5zaWRlfG5hbWVzcGFjZXxvdXRzaWRlfHBhdHRlcm58cmVxdWlyZXxzZWFyY2h8d2hlcmUpXFxiLyxcbiAgICAnc3RhbmRhcmQtcGF0dGVybic6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzpBbHBoYXxBbHBoYU51bXxBbnl8Qmxhbmt8RW5kfExpbmVCcmVha3xOdW18TnVtQWxwaGF8UHVuY3R8U3BhY2V8U3RhcnR8U3ltYm9sfFdvcmR8V29yZEJyZWFrKVxcYig/OlxcKFthLXpBLVowLTlcXC0uLFxccytdKlxcKSk/LyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnc3RhbmRhcmQtcGF0dGVybi1uYW1lJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eW2EtekEtWjAtOVxcLS5dKy8sXG4gICAgICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgICAgICB9LFxuICAgICAgICBxdWFudGlmaWVyOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcYlxcZCsoPzpcXHMqXFwrfFxccyotXFxzKlxcZCspPyg/IVxcdykvLFxuICAgICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgICB9LFxuICAgICAgICAnc3RhbmRhcmQtcGF0dGVybi1hdHRyJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9bYS16QS1aMC05XFwtLl0rLyxcbiAgICAgICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWywoKV0vXG4gICAgICB9XG4gICAgfSxcbiAgICBxdWFudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiXFxkKyg/OlxccypcXCt8XFxzKi1cXHMqXFxkKyk/KD8hXFx3KS8sXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC89LyxcbiAgICAgICAgYWxpYXM6ICdwYXR0ZXJuLWRlZidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8mLyxcbiAgICAgICAgYWxpYXM6ICdjb25qdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9+LyxcbiAgICAgICAgYWxpYXM6ICdleGNlcHRpb24nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXFw/LyxcbiAgICAgICAgYWxpYXM6ICdvcHRpb25hbGl0eSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9bW1xcXV0vLFxuICAgICAgICBhbGlhczogJ3JlcGV0aXRpb24nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvW3t9XS8sXG4gICAgICAgIGFsaWFzOiAndmFyaWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1srX10vLFxuICAgICAgICBhbGlhczogJ3NlcXVlbmNlJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL1xcLnsyLDN9LyxcbiAgICAgICAgYWxpYXM6ICdzcGFuJ1xuICAgICAgfVxuICAgIF0sXG4gICAgJ2ZpZWxkLWNhcHR1cmUnOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhbYS16QS1aMC05XFwtLl0rXFxzKlxcKClcXHMqW2EtekEtWjAtOVxcLS5dK1xccyo6XFxzKlthLXpBLVowLTlcXC0uXSsoPzpcXHMqLFxccypbYS16QS1aMC05XFwtLl0rXFxzKjpcXHMqW2EtekEtWjAtOVxcLS5dKykqKD89XFxzKlxcKSkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAnZmllbGQtbmFtZSc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9bYS16QS1aMC05XFwtLl0rLyxcbiAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb2xvbjogLzovXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9bYS16QS1aMC05XFwtLl0rXFxzKjovLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAnZmllbGQtbmFtZSc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9bYS16QS1aMC05XFwtLl0rLyxcbiAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb2xvbjogLzovXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvWzo7LCgpXS8sXG4gICAgbmFtZTogL1thLXpBLVowLTlcXC0uXSsvXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJuZXZvZCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJpbnNpZGUiLCJuYW1lc3BhY2UiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJmaWVsZHMiLCJwdW5jdHVhdGlvbiIsIm9wZXJhdG9yIiwic2VhcmNoIiwia2V5d29yZCIsInF1YW50aWZpZXIiLCJjb2xvbiIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nevod.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nginx.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nginx.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nginx)\n/* harmony export */ });\n// @ts-nocheck\nnginx.displayName = \"nginx\";\nnginx.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nginx(Prism) {\n    ;\n    (function(Prism) {\n        var variable = /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i;\n        Prism.languages.nginx = {\n            comment: {\n                pattern: /(^|[\\s{};])#.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            directive: {\n                pattern: /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    string: {\n                        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n                        lookbehind: true,\n                        greedy: true,\n                        inside: {\n                            escape: {\n                                pattern: /\\\\[\"'\\\\nrt]/,\n                                alias: \"entity\"\n                            },\n                            variable: variable\n                        }\n                    },\n                    comment: {\n                        pattern: /(\\s)#.*/,\n                        lookbehind: true,\n                        greedy: true\n                    },\n                    keyword: {\n                        pattern: /^\\S+/,\n                        greedy: true\n                    },\n                    // other patterns\n                    boolean: {\n                        pattern: /(\\s)(?:off|on)(?!\\S)/,\n                        lookbehind: true\n                    },\n                    number: {\n                        pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n                        lookbehind: true\n                    },\n                    variable: variable\n                }\n            },\n            punctuation: /[{};]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uZ2lueC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLOztJQUMvQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsV0FDRjtRQUNGRCxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBRztZQUN0Qk0sU0FBUztnQkFDUEMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0FDLFdBQVc7Z0JBQ1RILFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pDLFFBQVE7Z0JBQ1JFLFFBQVE7b0JBQ05DLFFBQVE7d0JBQ05MLFNBQ0U7d0JBQ0ZDLFlBQVk7d0JBQ1pDLFFBQVE7d0JBQ1JFLFFBQVE7NEJBQ05FLFFBQVE7Z0NBQ05OLFNBQVM7Z0NBQ1RPLE9BQU87NEJBQ1Q7NEJBQ0FWLFVBQVVBO3dCQUNaO29CQUNGO29CQUNBRSxTQUFTO3dCQUNQQyxTQUFTO3dCQUNUQyxZQUFZO3dCQUNaQyxRQUFRO29CQUNWO29CQUNBTSxTQUFTO3dCQUNQUixTQUFTO3dCQUNURSxRQUFRO29CQUNWO29CQUNBLGlCQUFpQjtvQkFFakJPLFNBQVM7d0JBQ1BULFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FTLFFBQVE7d0JBQ05WLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FKLFVBQVVBO2dCQUNaO1lBQ0Y7WUFDQWMsYUFBYTtRQUNmO0lBQ0YsR0FBR2Y7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uZ2lueC5qcz9mM2RiIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5uZ2lueC5kaXNwbGF5TmFtZSA9ICduZ2lueCdcbm5naW54LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5naW54KFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHZhcmlhYmxlID1cbiAgICAgIC9cXCQoPzpcXHdbYS16XFxkXSooPzpfW15cXHgwMC1cXHgxRlxcc1wiJ1xcXFwoKSRdKik/fFxce1tefVxcc1wiJ1xcXFxdK1xcfSkvaVxuICAgIFByaXNtLmxhbmd1YWdlcy5uZ2lueCA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFtcXHN7fTtdKSMuKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxcXHMpXFx3KD86W147e31cIidcXFxcXFxzXXxcXFxcLnxcIig/OlteXCJcXFxcXXxcXFxcLikqXCJ8Jyg/OlteJ1xcXFxdfFxcXFwuKSonfFxccysoPzojLiooPyEuKXwoPyFbI1xcc10pKSkqPyg/PVxccypbO3tdKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKCg/Ol58W15cXFxcXSkoPzpcXFxcXFxcXCkqKSg/OlwiKD86W15cIlxcXFxdfFxcXFwuKSpcInwnKD86W14nXFxcXF18XFxcXC4pKicpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgZXNjYXBlOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL1xcXFxbXCInXFxcXG5ydF0vLFxuICAgICAgICAgICAgICAgIGFsaWFzOiAnZW50aXR5J1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB2YXJpYWJsZTogdmFyaWFibGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXFxzKSMuKi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBrZXl3b3JkOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXlxcUysvLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICAvLyBvdGhlciBwYXR0ZXJuc1xuXG4gICAgICAgICAgYm9vbGVhbjoge1xuICAgICAgICAgICAgcGF0dGVybjogLyhcXHMpKD86b2ZmfG9uKSg/IVxcUykvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgbnVtYmVyOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKFxccylcXGQrW2Etel0qKD8hXFxTKS9pLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgdmFyaWFibGU6IHZhcmlhYmxlXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fTtdL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsibmdpbngiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInZhcmlhYmxlIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiZGlyZWN0aXZlIiwiaW5zaWRlIiwic3RyaW5nIiwiZXNjYXBlIiwiYWxpYXMiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nginx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nim.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nim.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nim)\n/* harmony export */ });\n// @ts-nocheck\nnim.displayName = \"nim\";\nnim.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nim(Prism) {\n    Prism.languages.nim = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n            pattern: /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n            greedy: true\n        },\n        char: {\n            // Character literals are handled specifically to prevent issues with numeric type suffixes\n            pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n            greedy: true\n        },\n        function: {\n            pattern: /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n            greedy: true,\n            inside: {\n                operator: /\\*$/\n            }\n        },\n        // We don't want to highlight operators (and anything really) inside backticks\n        identifier: {\n            pattern: /`[^`\\r\\n]+`/,\n            greedy: true,\n            inside: {\n                punctuation: /`/\n            }\n        },\n        // The negative look ahead prevents wrong highlighting of the .. operator\n        number: /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n        keyword: /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n        operator: {\n            // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n            // but allow the slice operator .. to take precedence over them\n            // One can define his own operators in Nim so all combination of operators might be an operator.\n            pattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n            lookbehind: true\n        },\n        punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uaW0uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOLDJGQUEyRjtZQUMzRkYsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUUsTUFBTTtZQUNKLDJGQUEyRjtZQUMzRkgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsVUFBVTtZQUNSSixTQUNFO1lBQ0ZDLFFBQVE7WUFDUkksUUFBUTtnQkFDTkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQSw4RUFBOEU7UUFDOUVDLFlBQVk7WUFDVlAsU0FBUztZQUNUQyxRQUFRO1lBQ1JJLFFBQVE7Z0JBQ05HLGFBQWE7WUFDZjtRQUNGO1FBQ0EseUVBQXlFO1FBQ3pFQyxRQUNFO1FBQ0ZDLFNBQ0U7UUFDRkosVUFBVTtZQUNSLDBGQUEwRjtZQUMxRiwrREFBK0Q7WUFDL0QsZ0dBQWdHO1lBQ2hHTixTQUNFO1lBQ0ZXLFlBQVk7UUFDZDtRQUNBSCxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uaW0uanM/NmU0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubmltLmRpc3BsYXlOYW1lID0gJ25pbSdcbm5pbS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuaW0oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm5pbSA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICAvLyBEb3VibGUtcXVvdGVkIHN0cmluZ3MgY2FuIGJlIHByZWZpeGVkIGJ5IGFuIGlkZW50aWZpZXIgKEdlbmVyYWxpemVkIHJhdyBzdHJpbmcgbGl0ZXJhbHMpXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86XFxiKD8hXFxkKSg/Olxcd3xcXFxceFs4OWEtZkEtRl1bMC05YS1mQS1GXSkrKT8oPzpcIlwiXCJbXFxzXFxTXSo/XCJcIlwiKD8hXCIpfFwiKD86XFxcXFtcXHNcXFNdfFwiXCJ8W15cIlxcXFxdKSpcIikvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjaGFyOiB7XG4gICAgICAvLyBDaGFyYWN0ZXIgbGl0ZXJhbHMgYXJlIGhhbmRsZWQgc3BlY2lmaWNhbGx5IHRvIHByZXZlbnQgaXNzdWVzIHdpdGggbnVtZXJpYyB0eXBlIHN1ZmZpeGVzXG4gICAgICBwYXR0ZXJuOiAvJyg/OlxcXFwoPzpcXGQrfHhbXFxkYS1mQS1GXXswLDJ9fC4pfFteJ10pJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86KD8hXFxkKSg/Olxcd3xcXFxceFs4OWEtZkEtRl1bMC05YS1mQS1GXSkrfGBbXmBcXHJcXG5dK2ApXFwqPyg/OlxcW1teXFxdXStcXF0pPyg/PVxccypcXCgpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBvcGVyYXRvcjogL1xcKiQvXG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBXZSBkb24ndCB3YW50IHRvIGhpZ2hsaWdodCBvcGVyYXRvcnMgKGFuZCBhbnl0aGluZyByZWFsbHkpIGluc2lkZSBiYWNrdGlja3NcbiAgICBpZGVudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvYFteYFxcclxcbl0rYC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9gL1xuICAgICAgfVxuICAgIH0sXG4gICAgLy8gVGhlIG5lZ2F0aXZlIGxvb2sgYWhlYWQgcHJldmVudHMgd3JvbmcgaGlnaGxpZ2h0aW5nIG9mIHRoZSAuLiBvcGVyYXRvclxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIoPzowW3hYb09iQl1bXFxkYS1mQS1GX10rfFxcZFtcXGRfXSooPzooPyFcXC5cXC4pXFwuW1xcZF9dKik/KD86W2VFXVsrLV0/XFxkW1xcZF9dKik/KSg/Oic/W2l1Zl1cXGQqKT8vLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWRkcnxhc3xhc218YXRvbWljfGJpbmR8YmxvY2t8YnJlYWt8Y2FzZXxjYXN0fGNvbmNlcHR8Y29uc3R8Y29udGludWV8Y29udmVydGVyfGRlZmVyfGRpc2NhcmR8ZGlzdGluY3R8ZG98ZWxpZnxlbHNlfGVuZHxlbnVtfGV4Y2VwdHxleHBvcnR8ZmluYWxseXxmb3J8ZnJvbXxmdW5jfGdlbmVyaWN8aWZ8aW1wb3J0fGluY2x1ZGV8aW50ZXJmYWNlfGl0ZXJhdG9yfGxldHxtYWNyb3xtZXRob2R8bWl4aW58bmlsfG9iamVjdHxvdXR8cHJvY3xwdHJ8cmFpc2V8cmVmfHJldHVybnxzdGF0aWN8dGVtcGxhdGV8dHJ5fHR1cGxlfHR5cGV8dXNpbmd8dmFyfHdoZW58d2hpbGV8d2l0aHx3aXRob3V0fHlpZWxkKVxcYi8sXG4gICAgb3BlcmF0b3I6IHtcbiAgICAgIC8vIExvb2sgYmVoaW5kIGFuZCBsb29rIGFoZWFkIHByZXZlbnQgd3JvbmcgaGlnaGxpZ2h0aW5nIG9mIHB1bmN0dWF0aW9ucyBbLiAuXSB7LiAufSAoLiAuKVxuICAgICAgLy8gYnV0IGFsbG93IHRoZSBzbGljZSBvcGVyYXRvciAuLiB0byB0YWtlIHByZWNlZGVuY2Ugb3ZlciB0aGVtXG4gICAgICAvLyBPbmUgY2FuIGRlZmluZSBoaXMgb3duIG9wZXJhdG9ycyBpbiBOaW0gc28gYWxsIGNvbWJpbmF0aW9uIG9mIG9wZXJhdG9ycyBtaWdodCBiZSBhbiBvcGVyYXRvci5cbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbKHtcXFtdKD89XFwuXFwuKXwoPyFbKHtcXFtdXFwuKS4pKD86KD86Wz0rXFwtKlxcLzw+QCR+JiV8IT9eOlxcXFxdfFxcLlxcLnxcXC4oPyFbKX1cXF1dKSkrfFxcYig/OmFuZHxkaXZ8aW58aXN8aXNub3R8bW9kfG5vdHxub3RpbnxvZnxvcnxzaGx8c2hyfHhvcilcXGIpL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1soe1xcW11cXC58XFwuWyl9XFxdXXxbYCgpe31cXFtcXF0sOl0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJuaW0iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiY2hhciIsImZ1bmN0aW9uIiwiaW5zaWRlIiwib3BlcmF0b3IiLCJpZGVudGlmaWVyIiwicHVuY3R1YXRpb24iLCJudW1iZXIiLCJrZXl3b3JkIiwibG9va2JlaGluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nim.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nix)\n/* harmony export */ });\n// @ts-nocheck\nnix.displayName = \"nix\";\nnix.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nix(Prism) {\n    Prism.languages.nix = {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    // The lookbehind ensures the ${} is not preceded by \\ or ''\n                    pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n                    lookbehind: true,\n                    inside: null // see below\n                }\n            }\n        },\n        url: [\n            /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n            {\n                pattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n                lookbehind: true\n            }\n        ],\n        antiquotation: {\n            pattern: /\\$(?=\\{)/,\n            alias: \"important\"\n        },\n        number: /\\b\\d+\\b/,\n        keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n        function: /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n        boolean: /\\b(?:false|true)\\b/,\n        operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n        punctuation: /[{}()[\\].,:;]/\n    };\n    Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uaXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYiw0REFBNEQ7b0JBQzVESixTQUFTO29CQUNUSyxZQUFZO29CQUNaRixRQUFRLEtBQUssWUFBWTtnQkFDM0I7WUFDRjtRQUNGO1FBRUFHLEtBQUs7WUFDSDtZQUNBO2dCQUNFTixTQUNFO2dCQUNGSyxZQUFZO1lBQ2Q7U0FDRDtRQUNERSxlQUFlO1lBQ2JQLFNBQVM7WUFDVFEsT0FBTztRQUNUO1FBQ0FDLFFBQVE7UUFDUkMsU0FBUztRQUNUQyxVQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7SUFDQWpCLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRyxDQUFDUSxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsYUFBYSxDQUFDRCxNQUFNLEdBQUdOLE1BQU1DLFNBQVMsQ0FBQ0osR0FBRztBQUM5RSIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uaXguanM/ZTE2NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xubml4LmRpc3BsYXlOYW1lID0gJ25peCdcbm5peC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBuaXgoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLm5peCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3wjLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcW1xcc1xcU10pKlwifCcnKD86KD8hJycpW1xcc1xcU118JycoPzonfFxcXFx8XFwkXFx7KSkqJycvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAvLyBUaGUgbG9va2JlaGluZCBlbnN1cmVzIHRoZSAke30gaXMgbm90IHByZWNlZGVkIGJ5IFxcIG9yICcnXG4gICAgICAgICAgcGF0dGVybjogLyhefCg/Ol58KD8hJycpLilbXlxcXFxdKVxcJFxceyg/Oltee31dfFxce1tefV0qXFx9KSpcXH0vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHVybDogW1xuICAgICAgL1xcYig/OlthLXpdezMsN306XFwvXFwvKVtcXHdcXC0rJX5cXC8uOiM9PyZdKy8sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhbXlxcL10pKD86W1xcd1xcLSslfi46Iz0/Jl0qKD8hXFwvXFwvKVtcXHdcXC0rJX5cXC8uOiM9PyZdKT8oPyFcXC9cXC8pXFwvW1xcd1xcLSslflxcLy46Iz0/Jl0qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgYW50aXF1b3RhdGlvbjoge1xuICAgICAgcGF0dGVybjogL1xcJCg/PVxceykvLFxuICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgfSxcbiAgICBudW1iZXI6IC9cXGJcXGQrXFxiLyxcbiAgICBrZXl3b3JkOiAvXFxiKD86YXNzZXJ0fGJ1aWx0aW5zfGVsc2V8aWZ8aW58aW5oZXJpdHxsZXR8bnVsbHxvcnx0aGVufHdpdGgpXFxiLyxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzphYm9ydHxhZGR8YWxsfGFueXxhdHRyTmFtZXN8YXR0clZhbHVlc3xiYXNlTmFtZU9mfGNvbXBhcmVWZXJzaW9uc3xjb25jYXRMaXN0c3xjdXJyZW50U3lzdGVtfGRlZXBTZXF8ZGVyaXZhdGlvbnxkaXJPZnxkaXZ8ZWxlbSg/OkF0KT98ZmV0Y2goPzpUYXJiYWxsfHVybCl8ZmlsdGVyKD86U291cmNlKT98ZnJvbUpTT058Z2VuTGlzdHxnZXRBdHRyfGdldEVudnxoYXNBdHRyfGhhc2hTdHJpbmd8aGVhZHxpbXBvcnR8aW50ZXJzZWN0QXR0cnN8aXMoPzpBdHRyc3xCb29sfEZ1bmN0aW9ufEludHxMaXN0fE51bGx8U3RyaW5nKXxsZW5ndGh8bGVzc1RoYW58bGlzdFRvQXR0cnN8bWFwfG11bHxwYXJzZURydk5hbWV8cGF0aEV4aXN0c3xyZWFkKD86RGlyfEZpbGUpfHJlbW92ZUF0dHJzfHJlcGxhY2VTdHJpbmdzfHNlcXxzb3J0fHN0cmluZ0xlbmd0aHxzdWIoPzpzdHJpbmcpP3x0YWlsfHRocm93fHRvKD86RmlsZXxKU09OfFBhdGh8U3RyaW5nfFhNTCl8dHJhY2V8dHlwZU9mKVxcYnxcXGJmb2xkbCdcXEIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgb3BlcmF0b3I6IC9bPSE8Pl09P3xcXCtcXCs/fFxcfFxcfHwmJnxcXC9cXC98LT4/fFs/QF0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9KClbXFxdLiw6O10vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLm5peC5zdHJpbmcuaW5zaWRlLmludGVycG9sYXRpb24uaW5zaWRlID0gUHJpc20ubGFuZ3VhZ2VzLm5peFxufVxuIl0sIm5hbWVzIjpbIm5peCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJpbnNpZGUiLCJpbnRlcnBvbGF0aW9uIiwibG9va2JlaGluZCIsInVybCIsImFudGlxdW90YXRpb24iLCJhbGlhcyIsIm51bWJlciIsImtleXdvcmQiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nix.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nsis.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nsis.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nsis)\n/* harmony export */ });\n// @ts-nocheck\nnsis.displayName = \"nsis\";\nnsis.aliases = [];\n/** @type {import('../core.js').Syntax} */ function nsis(Prism) {\n    /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */ Prism.languages.nsis = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: {\n            pattern: /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|KnownFolderPath|LabelAddress|TempFileName|WinVer)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|RtlLanguage|ShellVarContextAll|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Target|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n            lookbehind: true\n        },\n        property: /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n        constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n        variable: /\\$\\w[\\w\\.]*/,\n        number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n        punctuation: /[{}[\\];(),.:]/,\n        important: {\n            pattern: /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n            lookbehind: true\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uc2lzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEM7Ozs7R0FJQyxHQUNEQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkgsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUUsU0FBUztZQUNQSixTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBSSxVQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsYUFBYTtRQUNiQyxXQUFXO1lBQ1RYLFNBQ0U7WUFDRkMsWUFBWTtRQUNkO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9uc2lzLmpzPzdhMjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbm5zaXMuZGlzcGxheU5hbWUgPSAnbnNpcydcbm5zaXMuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbnNpcyhQcmlzbSkge1xuICAvKipcbiAgICogT3JpZ2luYWwgYnkgSmFuIFQuIFNvdHQgKGh0dHA6Ly9naXRodWIuY29tL2lkbGViZXJnKVxuICAgKlxuICAgKiBJbmNsdWRlcyBhbGwgY29tbWFuZHMgYW5kIHBsdWctaW5zIHNoaXBwZWQgd2l0aCBOU0lTIDMuMDhcbiAgICovXG4gIFByaXNtLmxhbmd1YWdlcy5uc2lzID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj9cXCpcXC98WyM7XS4qKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXCJ8JykoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKikoPzpBYm9ydHxBZGQoPzpCcmFuZGluZ0ltYWdlfFNpemUpfEFkdlNwbGFzaHxBbGxvdyg/OlJvb3REaXJJbnN0YWxsfFNraXBGaWxlcyl8QXV0b0Nsb3NlV2luZG93fEJHKD86Rm9udHxHcmFkaWVudHxJbWFnZSl8QmFubmVyfEJyYW5kaW5nVGV4dHxCcmluZ1RvRnJvbnR8Q1JDQ2hlY2t8Q2FsbCg/Okluc3RETEwpP3xDYXB0aW9ufENoYW5nZVVJfENoZWNrQml0bWFwfENsZWFyRXJyb3JzfENvbXBsZXRlZFRleHR8Q29tcG9uZW50VGV4dHxDb3B5RmlsZXN8Q3JlYXRlKD86RGlyZWN0b3J5fEZvbnR8U2hvcnRDdXQpfERlbGV0ZSg/OklOSVNlY3xJTklTdHJ8UmVnS2V5fFJlZ1ZhbHVlKT98RGV0YWlsKD86UHJpbnR8c0J1dHRvblRleHQpfERpYWxlcnxEaXIoPzpUZXh0fFZhcnxWZXJpZnkpfEVuYWJsZVdpbmRvd3xFbnVtKD86UmVnS2V5fFJlZ1ZhbHVlKXxFeGNofEV4ZWMoPzpTaGVsbCg/OldhaXQpP3xXYWl0KT98RXhwYW5kRW52U3RyaW5nc3xGaWxlKD86QnVmU2l6ZXxDbG9zZXxFcnJvclRleHR8T3BlbnxSZWFkfFJlYWRCeXRlfFJlYWRVVEYxNkxFfFJlYWRXb3JkfFNlZWt8V3JpdGV8V3JpdGVCeXRlfFdyaXRlVVRGMTZMRXxXcml0ZVdvcmQpP3xGaW5kKD86Q2xvc2V8Rmlyc3R8TmV4dHxXaW5kb3cpfEZsdXNoSU5JfEdldCg/OkN1ckluc3RUeXBlfEN1cnJlbnRBZGRyZXNzfERMTFZlcnNpb24oPzpMb2NhbCk/fERsZ0l0ZW18RXJyb3JMZXZlbHxGaWxlVGltZSg/OkxvY2FsKT98RnVsbFBhdGhOYW1lfEZ1bmN0aW9uKD86QWRkcmVzc3xFbmQpP3xJbnN0RGlyRXJyb3J8S25vd25Gb2xkZXJQYXRofExhYmVsQWRkcmVzc3xUZW1wRmlsZU5hbWV8V2luVmVyKXxHb3RvfEhpZGVXaW5kb3d8SWNvbnxJZig/OkFib3J0fEVycm9yc3xGaWxlRXhpc3RzfFJlYm9vdEZsYWd8UnRsTGFuZ3VhZ2V8U2hlbGxWYXJDb250ZXh0QWxsfFNpbGVudCl8SW5pdFBsdWdpbnNEaXJ8SW5zdFByb2dyZXNzRmxhZ3N8SW5zdCg/OlR5cGUoPzpHZXRUZXh0fFNldFRleHQpPyl8SW5zdGFsbCg/OkJ1dHRvblRleHR8Q29sb3JzfERpcig/OlJlZ0tleSk/KXxJbnQoPzo2NHxQdHIpP0NtcFU/fEludCg/OjY0KT9GbXR8SW50KD86UHRyKT9PcHxJc1dpbmRvd3xMYW5nKD86RExMfFN0cmluZyl8TGljZW5zZSg/OkJrQ29sb3J8RGF0YXxGb3JjZVNlbGVjdGlvbnxMYW5nU3RyaW5nfFRleHQpfExvYWRMYW5ndWFnZUZpbGV8TG9ja1dpbmRvd3xMb2coPzpTZXR8VGV4dCl8TWFuaWZlc3QoPzpEUElBd2FyZXxTdXBwb3J0ZWRPUyl8TWF0aHxNZXNzYWdlQm94fE1pc2NCdXR0b25UZXh0fE5TSVNkbHxOYW1lfE5vcHxPdXRGaWxlfFBFKD86RGxsQ2hhcmFjdGVyaXN0aWNzfFN1YnN5c1Zlcil8UGFnZSg/OkNhbGxiYWNrcyk/fFBvcHxQdXNofFF1aXR8Uk1EaXJ8UmVhZCg/OkVudlN0cnxJTklTdHJ8UmVnRFdPUkR8UmVnU3RyKXxSZWJvb3R8UmVnRExMfFJlbmFtZXxSZXF1ZXN0RXhlY3V0aW9uTGV2ZWx8UmVzZXJ2ZUZpbGV8UmV0dXJufFNlYXJjaFBhdGh8U2VjdGlvbig/OkVuZHxHZXRGbGFnc3xHZXRJbnN0VHlwZXN8R2V0U2l6ZXxHZXRUZXh0fEdyb3VwfElufFNldEZsYWdzfFNldEluc3RUeXBlc3xTZXRTaXplfFNldFRleHQpP3xTZW5kTWVzc2FnZXxTZXQoPzpBdXRvQ2xvc2V8QnJhbmRpbmdJbWFnZXxDb21wcmVzc3xDb21wcmVzc29yKD86RGljdFNpemUpP3xDdGxDb2xvcnN8Q3VySW5zdFR5cGV8RGF0YWJsb2NrT3B0aW1pemV8RGF0ZVNhdmV8RGV0YWlscyg/OlByaW50fFZpZXcpfEVycm9yTGV2ZWx8RXJyb3JzfEZpbGVBdHRyaWJ1dGVzfEZvbnR8T3V0UGF0aHxPdmVyd3JpdGV8UGx1Z2luVW5sb2FkfFJlYm9vdEZsYWd8UmVnVmlld3xTaGVsbFZhckNvbnRleHR8U2lsZW50KXxTaG93KD86SW5zdERldGFpbHN8VW5pbnN0RGV0YWlsc3xXaW5kb3cpfFNpbGVudCg/Okluc3RhbGx8VW5JbnN0YWxsKXxTbGVlcHxTcGFjZVRleHRzfFNwbGFzaHxTdGFydE1lbnV8U3RyKD86Q21wUz98Q3B5fExlbil8U3ViQ2FwdGlvbnxTeXN0ZW18VGFyZ2V0fFVuUmVnRExMfFVuaWNvZGV8VW5pbnN0UGFnZXxVbmluc3RhbGwoPzpCdXR0b25UZXh0fENhcHRpb258SWNvbnxTdWJDYXB0aW9ufFRleHQpfFVzZXJJbmZvfFZJKD86QWRkVmVyc2lvbktleXxGaWxlVmVyc2lvbnxQcm9kdWN0VmVyc2lvbil8VlBhdGNofFZhcnxXaW5kb3dJY29ufFdyaXRlKD86SU5JU3RyfFJlZyg/OkJpbnxEV09SRHxFeHBhbmRTdHJ8TXVsdGlTdHJ8Tm9uZXxTdHIpfFVuaW5zdGFsbGVyKXxYUFN0eWxlfG5zKD86RGlhbG9nc3xFeGVjKSlcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIHByb3BlcnR5OlxuICAgICAgL1xcYig/OkFSQ0hJVkV8RklMRV8oPzpBVFRSSUJVVEVfQVJDSElWRXxBVFRSSUJVVEVfTk9STUFMfEFUVFJJQlVURV9PRkZMSU5FfEFUVFJJQlVURV9SRUFET05MWXxBVFRSSUJVVEVfU1lTVEVNfEFUVFJJQlVURV9URU1QT1JBUlkpfEhLKD86KD86Q1J8Q1V8TE0pKD86MzJ8NjQpP3xERHxQRHxVKXxIS0VZXyg/OkNMQVNTRVNfUk9PVHxDVVJSRU5UX0NPTkZJR3xDVVJSRU5UX1VTRVJ8RFlOX0RBVEF8TE9DQUxfTUFDSElORXxQRVJGT1JNQU5DRV9EQVRBfFVTRVJTKXxJRCg/OkFCT1JUfENBTkNFTHxJR05PUkV8Tk98T0t8UkVUUll8WUVTKXxNQl8oPzpBQk9SVFJFVFJZSUdOT1JFfERFRkJVVFRPTjF8REVGQlVUVE9OMnxERUZCVVRUT04zfERFRkJVVFRPTjR8SUNPTkVYQ0xBTUFUSU9OfElDT05JTkZPUk1BVElPTnxJQ09OUVVFU1RJT058SUNPTlNUT1B8T0t8T0tDQU5DRUx8UkVUUllDQU5DRUx8UklHSFR8UlRMUkVBRElOR3xTRVRGT1JFR1JPVU5EfFRPUE1PU1R8VVNFUklDT058WUVTTk8pfE5PUk1BTHxPRkZMSU5FfFJFQURPTkxZfFNIQ1RYfFNIRUxMX0NPTlRFWFR8U1lTVEVNfFRFTVBPUkFSWXxhZG1pbnxhbGx8YXV0b3xib3RofGNvbG9yZWR8ZmFsc2V8Zm9yY2V8aGlkZXxoaWdoZXN0fGxhc3R1c2VkfGxlYXZlfGxpc3Rvbmx5fG5vbmV8bm9ybWFsfG5vdHNldHxvZmZ8b258b3BlbnxwcmludHxzaG93fHNpbGVudHxzaWxlbnRsb2d8c21vb3RofHRleHRvbmx5fHRydWV8dXNlcilcXGIvLFxuICAgIGNvbnN0YW50OiAvXFwkXFx7WyFcXHdcXC46XFxeLV0rXFx9fFxcJFxcKFshXFx3XFwuOlxcXi1dK1xcKS8sXG4gICAgdmFyaWFibGU6IC9cXCRcXHdbXFx3XFwuXSovLFxuICAgIG51bWJlcjogL1xcYjB4W1xcZEEtRmEtZl0rXFxifCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRWVdLT9cXGQrKT8vLFxuICAgIG9wZXJhdG9yOiAvLS0/fFxcK1xcKz98PD0/fD49P3w9PT89P3wmJj98XFx8XFx8P3xbPypcXC9+XiVdLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksLjpdLyxcbiAgICBpbXBvcnRhbnQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSopISg/OmFkZGluY2x1ZGVkaXJ8YWRkcGx1Z2luZGlyfGFwcGVuZGZpbGV8Y2R8ZGVmaW5lfGRlbGZpbGV8ZWNob3xlbHNlfGVuZGlmfGVycm9yfGV4ZWN1dGV8ZmluYWxpemV8Z2V0ZGxsdmVyc2lvbnxnZXR0bGJ2ZXJzaW9ufGlmfGlmZGVmfGlmbWFjcm9kZWZ8aWZtYWNyb25kZWZ8aWZuZGVmfGluY2x1ZGV8aW5zZXJ0bWFjcm98bWFjcm98bWFjcm9lbmR8bWFrZW5zaXN8cGFja2hkcnxwcmFnbWF8c2VhcmNocGFyc2V8c2VhcmNocmVwbGFjZXxzeXN0ZW18dGVtcGZpbGV8dW5kZWZ8dmVyYm9zZXx3YXJuaW5nKVxcYi9pbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJuc2lzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzdHJpbmciLCJrZXl3b3JkIiwicHJvcGVydHkiLCJjb25zdGFudCIsInZhcmlhYmxlIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImltcG9ydGFudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nsis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/objectivec.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/objectivec.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ objectivec)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\nobjectivec.displayName = \"objectivec\";\nobjectivec.aliases = [\n    \"objc\"\n];\n/** @type {import('../core.js').Syntax} */ function objectivec(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.objectivec = Prism.languages.extend(\"c\", {\n        string: {\n            pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n        operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n    });\n    delete Prism.languages.objectivec[\"class-name\"];\n    Prism.languages.objc = Prism.languages.objectivec;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vYmplY3RpdmVjLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNpQjtBQUMvQkMsV0FBV0MsV0FBVyxHQUFHO0FBQ3pCRCxXQUFXRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBRTdCLHdDQUF3QyxHQUN6QixTQUFTRixXQUFXRyxLQUFLO0lBQ3RDQSxNQUFNQyxRQUFRLENBQUNMLDZDQUFVQTtJQUN6QkksTUFBTUUsU0FBUyxDQUFDTCxVQUFVLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLEtBQUs7UUFDdkRDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FDRTtRQUNGQyxVQUFVO0lBQ1o7SUFDQSxPQUFPUixNQUFNRSxTQUFTLENBQUNMLFVBQVUsQ0FBQyxhQUFhO0lBQy9DRyxNQUFNRSxTQUFTLENBQUNPLElBQUksR0FBR1QsTUFBTUUsU0FBUyxDQUFDTCxVQUFVO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL29iamVjdGl2ZWMuanM/YjQ0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckMgZnJvbSAnLi9jLmpzJ1xub2JqZWN0aXZlYy5kaXNwbGF5TmFtZSA9ICdvYmplY3RpdmVjJ1xub2JqZWN0aXZlYy5hbGlhc2VzID0gWydvYmpjJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvYmplY3RpdmVjKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckMpXG4gIFByaXNtLmxhbmd1YWdlcy5vYmplY3RpdmVjID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnYycsIHtcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9AP1wiKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YXNtfGF1dG98YnJlYWt8Y2FzZXxjaGFyfGNvbnN0fGNvbnRpbnVlfGRlZmF1bHR8ZG98ZG91YmxlfGVsc2V8ZW51bXxleHRlcm58ZmxvYXR8Zm9yfGdvdG98aWZ8aW58aW5saW5lfGludHxsb25nfHJlZ2lzdGVyfHJldHVybnxzZWxmfHNob3J0fHNpZ25lZHxzaXplb2Z8c3RhdGljfHN0cnVjdHxzdXBlcnxzd2l0Y2h8dHlwZWRlZnx0eXBlb2Z8dW5pb258dW5zaWduZWR8dm9pZHx2b2xhdGlsZXx3aGlsZSlcXGJ8KD86QGludGVyZmFjZXxAZW5kfEBpbXBsZW1lbnRhdGlvbnxAcHJvdG9jb2x8QGNsYXNzfEBwdWJsaWN8QHByb3RlY3RlZHxAcHJpdmF0ZXxAcHJvcGVydHl8QHRyeXxAY2F0Y2h8QGZpbmFsbHl8QHRocm93fEBzeW50aGVzaXplfEBkeW5hbWljfEBzZWxlY3RvcilcXGIvLFxuICAgIG9wZXJhdG9yOiAvLVstPl0/fFxcK1xcKz98IT0/fDw8Pz0/fD4+Pz0/fD09P3wmJj98XFx8XFx8P3xbfl4lPypcXC9AXS9cbiAgfSlcbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5vYmplY3RpdmVjWydjbGFzcy1uYW1lJ11cbiAgUHJpc20ubGFuZ3VhZ2VzLm9iamMgPSBQcmlzbS5sYW5ndWFnZXMub2JqZWN0aXZlY1xufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckMiLCJvYmplY3RpdmVjIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJvYmpjIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/objectivec.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ocaml.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ocaml.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ocaml)\n/* harmony export */ });\n// @ts-nocheck\nocaml.displayName = \"ocaml\";\nocaml.aliases = [];\n/** @type {import('../core.js').Syntax} */ function ocaml(Prism) {\n    // https://ocaml.org/manual/lex.html\n    Prism.languages.ocaml = {\n        comment: {\n            pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n            greedy: true\n        },\n        char: {\n            pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n            greedy: true\n        },\n        string: [\n            {\n                pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n                greedy: true\n            },\n            {\n                pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n                greedy: true\n            }\n        ],\n        number: [\n            // binary and octal\n            /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i,\n            // hexadecimal\n            /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i,\n            // decimal\n            /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n        ],\n        directive: {\n            pattern: /\\B#\\w+/,\n            alias: \"property\"\n        },\n        label: {\n            pattern: /\\B~\\w+/,\n            alias: \"property\"\n        },\n        \"type-variable\": {\n            pattern: /\\B'\\w+/,\n            alias: \"function\"\n        },\n        variant: {\n            pattern: /`\\w+/,\n            alias: \"symbol\"\n        },\n        // For the list of keywords and operators,\n        // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n        keyword: /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        \"operator-like-punctuation\": {\n            pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n            alias: \"punctuation\"\n        },\n        // Custom operators are allowed\n        operator: /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n        punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vY2FtbC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDLG9DQUFvQztJQUVwQ0EsTUFBTUMsU0FBUyxDQUFDSixLQUFLLEdBQUc7UUFDdEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxRQUFRO1lBQ047Z0JBQ0VILFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7U0FDRDtRQUNERyxRQUFRO1lBQ04sbUJBQW1CO1lBQ25CO1lBQ0EsY0FBYztZQUNkO1lBQ0EsVUFBVTtZQUNWO1NBQ0Q7UUFDREMsV0FBVztZQUNUTCxTQUFTO1lBQ1RNLE9BQU87UUFDVDtRQUNBQyxPQUFPO1lBQ0xQLFNBQVM7WUFDVE0sT0FBTztRQUNUO1FBQ0EsaUJBQWlCO1lBQ2ZOLFNBQVM7WUFDVE0sT0FBTztRQUNUO1FBQ0FFLFNBQVM7WUFDUFIsU0FBUztZQUNUTSxPQUFPO1FBQ1Q7UUFDQSwwQ0FBMEM7UUFDMUMsaUVBQWlFO1FBQ2pFRyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVCw2QkFBNkI7WUFDM0JWLFNBQVM7WUFDVE0sT0FBTztRQUNUO1FBQ0EsK0JBQStCO1FBQy9CSyxVQUNFO1FBQ0ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL29jYW1sLmpzPzBkYzEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbm9jYW1sLmRpc3BsYXlOYW1lID0gJ29jYW1sJ1xub2NhbWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gb2NhbWwoUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly9vY2FtbC5vcmcvbWFudWFsL2xleC5odG1sXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLm9jYW1sID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXChcXCpbXFxzXFxTXSo/XFwqXFwpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogLycoPzpbXlxcXFxcXHJcXG4nXXxcXFxcKD86Lnxbb3hdP1swLTlhLWZdezEsM30pKScvaSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwoPzpbXFxzXFxTXXxcXHJcXG4pfFteXFxcXFxcclxcblwiXSkqXCIvLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXHsoW2Etel9dKilcXHxbXFxzXFxTXSo/XFx8XFwxXFx9LyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBudW1iZXI6IFtcbiAgICAgIC8vIGJpbmFyeSBhbmQgb2N0YWxcbiAgICAgIC9cXGIoPzowYlswMV1bMDFfXSp8MG9bMC03XVswLTdfXSopXFxiL2ksXG4gICAgICAvLyBoZXhhZGVjaW1hbFxuICAgICAgL1xcYjB4W2EtZjAtOV1bYS1mMC05X10qKD86XFwuW2EtZjAtOV9dKik/KD86cFsrLV0/XFxkW1xcZF9dKik/KD8hXFx3KS9pLFxuICAgICAgLy8gZGVjaW1hbFxuICAgICAgL1xcYlxcZFtcXGRfXSooPzpcXC5bXFxkX10qKT8oPzplWystXT9cXGRbXFxkX10qKT8oPyFcXHcpL2lcbiAgICBdLFxuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjogL1xcQiNcXHcrLyxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogL1xcQn5cXHcrLyxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICAndHlwZS12YXJpYWJsZSc6IHtcbiAgICAgIHBhdHRlcm46IC9cXEInXFx3Ky8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgdmFyaWFudDoge1xuICAgICAgcGF0dGVybjogL2BcXHcrLyxcbiAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgIH0sXG4gICAgLy8gRm9yIHRoZSBsaXN0IG9mIGtleXdvcmRzIGFuZCBvcGVyYXRvcnMsXG4gICAgLy8gc2VlOiBodHRwOi8vY2FtbC5pbnJpYS5mci9wdWIvZG9jcy9tYW51YWwtb2NhbWwvbGV4Lmh0bWwjc2VjODRcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFzfGFzc2VydHxiZWdpbnxjbGFzc3xjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfGV4Y2VwdGlvbnxleHRlcm5hbHxmb3J8ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhenl8bGV0fG1hdGNofG1ldGhvZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfG9iamVjdHxvZnxvcGVufHByaXZhdGV8cmVjfHNpZ3xzdHJ1Y3R8dGhlbnx0b3x0cnl8dHlwZXx2YWx8dmFsdWV8dmlydHVhbHx3aGVufHdoZXJlfHdoaWxlfHdpdGgpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICdvcGVyYXRvci1saWtlLXB1bmN0dWF0aW9uJzoge1xuICAgICAgcGF0dGVybjogL1xcW1s8PnxdfFs+fF1cXF18XFx7PHw+XFx9LyxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICAvLyBDdXN0b20gb3BlcmF0b3JzIGFyZSBhbGxvd2VkXG4gICAgb3BlcmF0b3I6XG4gICAgICAvXFwuWy5+XXw6Wz0+XXxbPTw+QF58JitcXC0qXFwvJCUhP35dWyEkJSYqK1xcLS5cXC86PD0+P0BefH5dKnxcXGIoPzphbmR8YXNyfGxhbmR8bG9yfGxzbHxsc3J8bHhvcnxtb2R8b3IpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogLzs7fDo6fFsoKXt9XFxbXFxdLiw6OyNdfFxcYl9cXGIvXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJvY2FtbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJjaGFyIiwic3RyaW5nIiwibnVtYmVyIiwiZGlyZWN0aXZlIiwiYWxpYXMiLCJsYWJlbCIsInZhcmlhbnQiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ocaml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/odin.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/odin.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ odin)\n/* harmony export */ });\n// @ts-nocheck\nodin.displayName = \"odin\";\nodin.aliases = [];\n/** @type {import('../core.js').Syntax} */ function odin(Prism) {\n    ;\n    (function(Prism) {\n        var escapes = /\\\\(?:[\"'\\\\abefnrtv]|0[0-7]{2}|U[\\dA-Fa-f]{6}|u[\\dA-Fa-f]{4}|x[\\dA-Fa-f]{2})/;\n        Prism.languages.odin = {\n            /**\n       * The current implementation supports only 1 level of nesting.\n       *\n       * @author Michael Schmidt\n       * @author edukisto\n       */ comment: [\n                {\n                    pattern: /\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:\\*(?!\\/)|[^*])*(?:\\*\\/|$))*(?:\\*\\/|$)/,\n                    greedy: true\n                },\n                {\n                    pattern: /#![^\\n\\r]*/,\n                    greedy: true\n                },\n                {\n                    pattern: /\\/\\/[^\\n\\r]*/,\n                    greedy: true\n                }\n            ],\n            /**\n       * Should be found before strings because of '\"'\"- and '`'`-like sequences.\n       */ char: {\n                pattern: /'(?:\\\\(?:.|[0Uux][0-9A-Fa-f]{1,6})|[^\\n\\r'\\\\])'/,\n                greedy: true,\n                inside: {\n                    symbol: escapes\n                }\n            },\n            string: [\n                {\n                    pattern: /`[^`]*`/,\n                    greedy: true\n                },\n                {\n                    pattern: /\"(?:\\\\.|[^\\n\\r\"\\\\])*\"/,\n                    greedy: true,\n                    inside: {\n                        symbol: escapes\n                    }\n                }\n            ],\n            directive: {\n                pattern: /#\\w+/,\n                alias: \"property\"\n            },\n            number: /\\b0(?:b[01_]+|d[\\d_]+|h_*(?:(?:(?:[\\dA-Fa-f]_*){8}){1,2}|(?:[\\dA-Fa-f]_*){4})|o[0-7_]+|x[\\dA-F_a-f]+|z[\\dAB_ab]+)\\b|(?:\\b\\d+(?:\\.(?!\\.)\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d*)?[ijk]?(?!\\w)/,\n            discard: {\n                pattern: /\\b_\\b/,\n                alias: \"keyword\"\n            },\n            \"procedure-definition\": {\n                pattern: /\\b\\w+(?=[ \\t]*(?::\\s*){2}proc\\b)/,\n                alias: \"function\"\n            },\n            keyword: /\\b(?:asm|auto_cast|bit_set|break|case|cast|context|continue|defer|distinct|do|dynamic|else|enum|fallthrough|for|foreign|if|import|in|map|matrix|not_in|or_else|or_return|package|proc|return|struct|switch|transmute|typeid|union|using|when|where)\\b/,\n            /**\n       * false, nil, true can be used as procedure names. \"_\" and keywords can't.\n       */ \"procedure-name\": {\n                pattern: /\\b\\w+(?=[ \\t]*\\()/,\n                alias: \"function\"\n            },\n            boolean: /\\b(?:false|nil|true)\\b/,\n            \"constant-parameter-sign\": {\n                pattern: /\\$/,\n                alias: \"important\"\n            },\n            undefined: {\n                pattern: /---/,\n                alias: \"operator\"\n            },\n            arrow: {\n                pattern: /->/,\n                alias: \"punctuation\"\n            },\n            operator: /\\+\\+|--|\\.\\.[<=]?|(?:&~|[-!*+/=~]|[%&<>|]{1,2})=?|[?^]/,\n            punctuation: /[(),.:;@\\[\\]{}]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vZGluLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxVQUNGO1FBQ0ZELE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHO1lBQ3JCOzs7OztPQUtDLEdBQ0RNLFNBQVM7Z0JBQ1A7b0JBQ0VDLFNBQ0U7b0JBQ0ZDLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0VELFNBQVM7b0JBQ1RDLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0VELFNBQVM7b0JBQ1RDLFFBQVE7Z0JBQ1Y7YUFDRDtZQUNEOztPQUVDLEdBQ0RDLE1BQU07Z0JBQ0pGLFNBQVM7Z0JBQ1RDLFFBQVE7Z0JBQ1JFLFFBQVE7b0JBQ05DLFFBQVFQO2dCQUNWO1lBQ0Y7WUFDQVEsUUFBUTtnQkFDTjtvQkFDRUwsU0FBUztvQkFDVEMsUUFBUTtnQkFDVjtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEMsUUFBUTtvQkFDUkUsUUFBUTt3QkFDTkMsUUFBUVA7b0JBQ1Y7Z0JBQ0Y7YUFDRDtZQUNEUyxXQUFXO2dCQUNUTixTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7WUFDQUMsUUFDRTtZQUNGQyxTQUFTO2dCQUNQVCxTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7WUFDQSx3QkFBd0I7Z0JBQ3RCUCxTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7WUFDQUcsU0FDRTtZQUNGOztPQUVDLEdBQ0Qsa0JBQWtCO2dCQUNoQlYsU0FBUztnQkFDVE8sT0FBTztZQUNUO1lBQ0FJLFNBQVM7WUFDVCwyQkFBMkI7Z0JBQ3pCWCxTQUFTO2dCQUNUTyxPQUFPO1lBQ1Q7WUFDQUssV0FBVztnQkFDVFosU0FBUztnQkFDVE8sT0FBTztZQUNUO1lBQ0FNLE9BQU87Z0JBQ0xiLFNBQVM7Z0JBQ1RPLE9BQU87WUFDVDtZQUNBTyxVQUFVO1lBQ1ZDLGFBQWE7UUFDZjtJQUNGLEdBQUduQjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL29kaW4uanM/ODQyZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xub2Rpbi5kaXNwbGF5TmFtZSA9ICdvZGluJ1xub2Rpbi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvZGluKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGVzY2FwZXMgPVxuICAgICAgL1xcXFwoPzpbXCInXFxcXGFiZWZucnR2XXwwWzAtN117Mn18VVtcXGRBLUZhLWZdezZ9fHVbXFxkQS1GYS1mXXs0fXx4W1xcZEEtRmEtZl17Mn0pL1xuICAgIFByaXNtLmxhbmd1YWdlcy5vZGluID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiBzdXBwb3J0cyBvbmx5IDEgbGV2ZWwgb2YgbmVzdGluZy5cbiAgICAgICAqXG4gICAgICAgKiBAYXV0aG9yIE1pY2hhZWwgU2NobWlkdFxuICAgICAgICogQGF1dGhvciBlZHVraXN0b1xuICAgICAgICovXG4gICAgICBjb21tZW50OiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcL1xcKig/OlteLypdfFxcLyg/IVxcKil8XFwqKD8hXFwvKXxcXC9cXCooPzpcXCooPyFcXC8pfFteKl0pKig/OlxcKlxcL3wkKSkqKD86XFwqXFwvfCQpLyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8jIVteXFxuXFxyXSovLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogL1xcL1xcL1teXFxuXFxyXSovLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgLyoqXG4gICAgICAgKiBTaG91bGQgYmUgZm91bmQgYmVmb3JlIHN0cmluZ3MgYmVjYXVzZSBvZiAnXCInXCItIGFuZCAnYCdgLWxpa2Ugc2VxdWVuY2VzLlxuICAgICAgICovXG4gICAgICBjaGFyOiB7XG4gICAgICAgIHBhdHRlcm46IC8nKD86XFxcXCg/Oi58WzBVdXhdWzAtOUEtRmEtZl17MSw2fSl8W15cXG5cXHInXFxcXF0pJy8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgc3ltYm9sOiBlc2NhcGVzXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9gW15gXSpgLyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwufFteXFxuXFxyXCJcXFxcXSkqXCIvLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHN5bWJvbDogZXNjYXBlc1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICBwYXR0ZXJuOiAvI1xcdysvLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1xcYjAoPzpiWzAxX10rfGRbXFxkX10rfGhfKig/Oig/Oig/OltcXGRBLUZhLWZdXyopezh9KXsxLDJ9fCg/OltcXGRBLUZhLWZdXyopezR9KXxvWzAtN19dK3x4W1xcZEEtRl9hLWZdK3x6W1xcZEFCX2FiXSspXFxifCg/OlxcYlxcZCsoPzpcXC4oPyFcXC4pXFxkKik/fFxcQlxcLlxcZCspKD86W0VlXVsrLV0/XFxkKik/W2lqa10/KD8hXFx3KS8sXG4gICAgICBkaXNjYXJkOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJfXFxiLyxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgICdwcm9jZWR1cmUtZGVmaW5pdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYlxcdysoPz1bIFxcdF0qKD86OlxccyopezJ9cHJvY1xcYikvLFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6XG4gICAgICAgIC9cXGIoPzphc218YXV0b19jYXN0fGJpdF9zZXR8YnJlYWt8Y2FzZXxjYXN0fGNvbnRleHR8Y29udGludWV8ZGVmZXJ8ZGlzdGluY3R8ZG98ZHluYW1pY3xlbHNlfGVudW18ZmFsbHRocm91Z2h8Zm9yfGZvcmVpZ258aWZ8aW1wb3J0fGlufG1hcHxtYXRyaXh8bm90X2lufG9yX2Vsc2V8b3JfcmV0dXJufHBhY2thZ2V8cHJvY3xyZXR1cm58c3RydWN0fHN3aXRjaHx0cmFuc211dGV8dHlwZWlkfHVuaW9ufHVzaW5nfHdoZW58d2hlcmUpXFxiLyxcbiAgICAgIC8qKlxuICAgICAgICogZmFsc2UsIG5pbCwgdHJ1ZSBjYW4gYmUgdXNlZCBhcyBwcm9jZWR1cmUgbmFtZXMuIFwiX1wiIGFuZCBrZXl3b3JkcyBjYW4ndC5cbiAgICAgICAqL1xuICAgICAgJ3Byb2NlZHVyZS1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiXFx3Kyg/PVsgXFx0XSpcXCgpLyxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8bmlsfHRydWUpXFxiLyxcbiAgICAgICdjb25zdGFudC1wYXJhbWV0ZXItc2lnbic6IHtcbiAgICAgICAgcGF0dGVybjogL1xcJC8sXG4gICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgfSxcbiAgICAgIHVuZGVmaW5lZDoge1xuICAgICAgICBwYXR0ZXJuOiAvLS0tLyxcbiAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgIH0sXG4gICAgICBhcnJvdzoge1xuICAgICAgICBwYXR0ZXJuOiAvLT4vLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvXFwrXFwrfC0tfFxcLlxcLls8PV0/fCg/OiZ+fFstISorLz1+XXxbJSY8PnxdezEsMn0pPT98Wz9eXS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKSwuOjtAXFxbXFxde31dL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsib2RpbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiZXNjYXBlcyIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiY2hhciIsImluc2lkZSIsInN5bWJvbCIsInN0cmluZyIsImRpcmVjdGl2ZSIsImFsaWFzIiwibnVtYmVyIiwiZGlzY2FyZCIsImtleXdvcmQiLCJib29sZWFuIiwidW5kZWZpbmVkIiwiYXJyb3ciLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/odin.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/opencl.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/opencl.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ opencl)\n/* harmony export */ });\n/* harmony import */ var _c_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n// @ts-nocheck\n\nopencl.displayName = \"opencl\";\nopencl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function opencl(Prism) {\n    Prism.register(_c_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        /* OpenCL kernel language */ Prism.languages.opencl = Prism.languages.extend(\"c\", {\n            // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n            keyword: /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n            // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n            // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n            // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n            number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n            boolean: /\\b(?:false|true)\\b/,\n            \"constant-opencl-kernel\": {\n                pattern: /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n                alias: \"constant\"\n            }\n        });\n        Prism.languages.insertBefore(\"opencl\", \"class-name\", {\n            // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n            // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n            \"builtin-type\": {\n                pattern: /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n                alias: \"keyword\"\n            }\n        });\n        var attributes = {\n            // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n            \"type-opencl-host\": {\n                pattern: /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n                alias: \"keyword\"\n            },\n            \"boolean-opencl-host\": {\n                pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n                alias: \"boolean\"\n            },\n            // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n            \"constant-opencl-host\": {\n                pattern: /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n                alias: \"constant\"\n            },\n            // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n            \"function-opencl-host\": {\n                pattern: /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n                alias: \"function\"\n            }\n        };\n        /* OpenCL host API */ Prism.languages.insertBefore(\"c\", \"keyword\", attributes);\n        // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n        if (Prism.languages.cpp) {\n            // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n            attributes[\"type-opencl-host-cpp\"] = {\n                pattern: /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n                alias: \"keyword\"\n            };\n            Prism.languages.insertBefore(\"cpp\", \"keyword\", attributes);\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/opencl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/openqasm.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/openqasm.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ openqasm)\n/* harmony export */ });\n// @ts-nocheck\nopenqasm.displayName = \"openqasm\";\nopenqasm.aliases = [\n    \"qasm\"\n];\n/** @type {import('../core.js').Syntax} */ function openqasm(Prism) {\n    // https://qiskit.github.io/openqasm/grammar/index.html\n    Prism.languages.openqasm = {\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n        string: {\n            pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n        \"class-name\": /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n        function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n        constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n        number: {\n            pattern: /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n            lookbehind: true\n        },\n        operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n        punctuation: /[(){}\\[\\];,:.]/\n    };\n    Prism.languages.qasm = Prism.languages.openqasm;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vcGVucWFzbS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRztJQUFDO0NBQU87QUFFM0Isd0NBQXdDLEdBQ3pCLFNBQVNGLFNBQVNHLEtBQUs7SUFDcEMsdURBQXVEO0lBRXZEQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztRQUNUQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRixjQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsVUFBVTtRQUNWQyxRQUFRO1lBQ05MLFNBQ0U7WUFDRk0sWUFBWTtRQUNkO1FBQ0FDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FaLE1BQU1DLFNBQVMsQ0FBQ1ksSUFBSSxHQUFHYixNQUFNQyxTQUFTLENBQUNKLFFBQVE7QUFDakQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvb3BlbnFhc20uanM/ODBlNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xub3BlbnFhc20uZGlzcGxheU5hbWUgPSAnb3BlbnFhc20nXG5vcGVucWFzbS5hbGlhc2VzID0gWydxYXNtJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvcGVucWFzbShQcmlzbSkge1xuICAvLyBodHRwczovL3Fpc2tpdC5naXRodWIuaW8vb3BlbnFhc20vZ3JhbW1hci9pbmRleC5odG1sXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLm9wZW5xYXNtID0ge1xuICAgIGNvbW1lbnQ6IC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvfFxcL1xcLy4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5cXHRdKlwifCdbXidcXHJcXG5cXHRdKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkNYfE9QRU5RQVNNfFV8YmFycmllcnxib3hhc3xib3h0b3xicmVha3xjb25zdHxjb250aW51ZXxjdHJsfGRlZnxkZWZjYWx8ZGVmY2FsZ3JhbW1hcnxkZWxheXxlbHNlfGVuZHxmb3J8Z2F0ZXxncGhhc2V8aWZ8aW58aW5jbHVkZXxpbnZ8a2VybmVsfGxlbmd0aG9mfGxldHxtZWFzdXJlfHBvd3xyZXNldHxyZXR1cm58cm90YXJ5fHN0cmV0Y2hpbmZ8d2hpbGUpXFxifCNwcmFnbWFcXGIvLFxuICAgICdjbGFzcy1uYW1lJzpcbiAgICAgIC9cXGIoPzphbmdsZXxiaXR8Ym9vbHxjcmVnfGZpeGVkfGZsb2F0fGludHxsZW5ndGh8cXJlZ3xxdWJpdHxzdHJldGNofHVpbnQpXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYig/OmNvc3xleHB8bG58cG9wY291bnR8cm90bHxyb3RyfHNpbnxzcXJ0fHRhbilcXGIoPz1cXHMqXFwoKS8sXG4gICAgY29uc3RhbnQ6IC9cXGIoPzpldWxlcnxwaXx0YXUpXFxifM+AfPCdnI984oSHLyxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi5cXHckXSkoPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KD86ZHR8bnN8dXN8wrVzfG1zfHMpPy9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC8tPnw+Pj0/fDw8PT98JiZ8XFx8XFx8fFxcK1xcK3wtLXxbIT08PiZ8fl4rXFwtKi8lXT0/fEAvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31cXFtcXF07LDouXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucWFzbSA9IFByaXNtLmxhbmd1YWdlcy5vcGVucWFzbVxufVxuIl0sIm5hbWVzIjpbIm9wZW5xYXNtIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJmdW5jdGlvbiIsImNvbnN0YW50IiwibnVtYmVyIiwibG9va2JlaGluZCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJxYXNtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/openqasm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/oz.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/oz.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ oz)\n/* harmony export */ });\n// @ts-nocheck\noz.displayName = \"oz\";\noz.aliases = [];\n/** @type {import('../core.js').Syntax} */ function oz(Prism) {\n    Prism.languages.oz = {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n            greedy: true\n        },\n        atom: {\n            pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n            greedy: true,\n            alias: \"builtin\"\n        },\n        keyword: /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n        function: [\n            /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n            {\n                pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n                lookbehind: true\n            }\n        ],\n        number: /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n        variable: /`(?:[^`\\\\]|\\\\.)+`/,\n        \"attr-name\": /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n        operator: /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n        punctuation: /[\\[\\](){}.:;?]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vei5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxHQUFHQyxXQUFXLEdBQUc7QUFDakJELEdBQUdFLE9BQU8sR0FBRyxFQUFFO0FBRWYsd0NBQXdDLEdBQ3pCLFNBQVNGLEdBQUdHLEtBQUs7SUFDOUJBLE1BQU1DLFNBQVMsQ0FBQ0osRUFBRSxHQUFHO1FBQ25CSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUUsTUFBTTtZQUNKSCxTQUFTO1lBQ1RDLFFBQVE7WUFDUkcsT0FBTztRQUNUO1FBQ0FDLFNBQ0U7UUFDRkMsVUFBVTtZQUNSO1lBQ0E7Z0JBQ0VOLFNBQVM7Z0JBQ1RPLFlBQVk7WUFDZDtTQUNEO1FBQ0RDLFFBQ0U7UUFDRkMsVUFBVTtRQUNWLGFBQWE7UUFDYkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9vei5qcz82MmEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5vei5kaXNwbGF5TmFtZSA9ICdveidcbm96LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG96KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5veiA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3wlLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXCJcXFxcXXxcXFxcW1xcc1xcU10pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgYXRvbToge1xuICAgICAgcGF0dGVybjogLycoPzpbXidcXFxcXXxcXFxcW1xcc1xcU10pKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXCR8XFxbXFxdfFxcYig/Ol98YXR8YXR0cnxjYXNlfGNhdGNofGNob2ljZXxjbGFzc3xjb25kfGRlY2xhcmV8ZGVmaW5lfGRpc3xlbHNlKD86Y2FzZXxpZik/fGVuZHxleHBvcnR8ZmFpbHxmYWxzZXxmZWF0fGZpbmFsbHl8ZnJvbXxmdW58ZnVuY3RvcnxpZnxpbXBvcnR8aW58bG9jYWx8bG9ja3xtZXRofG5pbHxub3R8b2Z8b3J8cHJlcGFyZXxwcm9jfHByb3B8cmFpc2V8cmVxdWlyZXxzZWxmfHNraXB8dGhlbnx0aHJlYWR8dHJ1ZXx0cnl8dW5pdClcXGIvLFxuICAgIGZ1bmN0aW9uOiBbXG4gICAgICAvXFxiW2Etel1bQS1aYS16XFxkXSooPz1cXCgpLyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXHspW0EtWl1bQS1aYS16XFxkXSpcXGIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBudW1iZXI6XG4gICAgICAvXFxiKD86MFtieF1bXFxkYS1mXSt8XFxkKyg/OlxcLlxcZCopPyg/OmV+P1xcZCspPylcXGJ8Jig/OlteXFxcXF18XFxcXCg/OlxcZHszfXwuKSkvaSxcbiAgICB2YXJpYWJsZTogL2AoPzpbXmBcXFxcXXxcXFxcLikrYC8sXG4gICAgJ2F0dHItbmFtZSc6IC9cXGJcXHcrKD89WyBcXHRdKjooPyFbOj1dKSkvLFxuICAgIG9wZXJhdG9yOlxuICAgICAgLzooPzo9fDo6Pyl8PFstOj1dP3w9KD86PXw8Pzo/KXw+PT86P3xcXFxcPTo/fCEhP3xbfCMrXFwtKlxcLyx+XkBdfFxcYig/OmFuZHRoZW58ZGl2fG1vZHxvcmVsc2UpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF0oKXt9Ljo7P10vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJveiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJhdG9tIiwiYWxpYXMiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJsb29rYmVoaW5kIiwibnVtYmVyIiwidmFyaWFibGUiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/oz.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parigp.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parigp.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parigp)\n/* harmony export */ });\n// @ts-nocheck\nparigp.displayName = \"parigp\";\nparigp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function parigp(Prism) {\n    Prism.languages.parigp = {\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n            greedy: true\n        },\n        // PARI/GP does not care about white spaces at all\n        // so let's process the keywords to build an appropriate regexp\n        // (e.g. \"b *r *e *a *k\", etc.)\n        keyword: function() {\n            var keywords = [\n                \"breakpoint\",\n                \"break\",\n                \"dbg_down\",\n                \"dbg_err\",\n                \"dbg_up\",\n                \"dbg_x\",\n                \"forcomposite\",\n                \"fordiv\",\n                \"forell\",\n                \"forpart\",\n                \"forprime\",\n                \"forstep\",\n                \"forsubgroup\",\n                \"forvec\",\n                \"for\",\n                \"iferr\",\n                \"if\",\n                \"local\",\n                \"my\",\n                \"next\",\n                \"return\",\n                \"until\",\n                \"while\"\n            ];\n            keywords = keywords.map(function(keyword) {\n                return keyword.split(\"\").join(\" *\");\n            }).join(\"|\");\n            return RegExp(\"\\\\b(?:\" + keywords + \")\\\\b\");\n        }(),\n        function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n        number: {\n            // The lookbehind and the negative lookahead prevent from breaking the .. operator\n            pattern: /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n            lookbehind: true\n        },\n        operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n        punctuation: /[\\[\\]{}().,:;|]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXJpZ3AuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGtEQUFrRDtRQUNsRCwrREFBK0Q7UUFDL0QsK0JBQStCO1FBQy9CQyxTQUFTO1lBQ1AsSUFBSUMsV0FBVztnQkFDYjtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTtnQkFDQTthQUNEO1lBQ0RBLFdBQVdBLFNBQ1JDLEdBQUcsQ0FBQyxTQUFVRixPQUFPO2dCQUNwQixPQUFPQSxRQUFRRyxLQUFLLENBQUMsSUFBSUMsSUFBSSxDQUFDO1lBQ2hDLEdBQ0NBLElBQUksQ0FBQztZQUNSLE9BQU9DLE9BQU8sV0FBV0osV0FBVztRQUN0QztRQUNBSyxVQUFVO1FBQ1ZDLFFBQVE7WUFDTixrRkFBa0Y7WUFDbEZULFNBQ0U7WUFDRlUsWUFBWTtRQUNkO1FBQ0FDLFVBQ0U7UUFDRkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyaWdwLmpzPzdmZmEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnBhcmlncC5kaXNwbGF5TmFtZSA9ICdwYXJpZ3AnXG5wYXJpZ3AuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyaWdwKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5wYXJpZ3AgPSB7XG4gICAgY29tbWVudDogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC98XFxcXFxcXFwuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXFxcclxcbl18XFxcXC4pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gUEFSSS9HUCBkb2VzIG5vdCBjYXJlIGFib3V0IHdoaXRlIHNwYWNlcyBhdCBhbGxcbiAgICAvLyBzbyBsZXQncyBwcm9jZXNzIHRoZSBrZXl3b3JkcyB0byBidWlsZCBhbiBhcHByb3ByaWF0ZSByZWdleHBcbiAgICAvLyAoZS5nLiBcImIgKnIgKmUgKmEgKmtcIiwgZXRjLilcbiAgICBrZXl3b3JkOiAoZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGtleXdvcmRzID0gW1xuICAgICAgICAnYnJlYWtwb2ludCcsXG4gICAgICAgICdicmVhaycsXG4gICAgICAgICdkYmdfZG93bicsXG4gICAgICAgICdkYmdfZXJyJyxcbiAgICAgICAgJ2RiZ191cCcsXG4gICAgICAgICdkYmdfeCcsXG4gICAgICAgICdmb3Jjb21wb3NpdGUnLFxuICAgICAgICAnZm9yZGl2JyxcbiAgICAgICAgJ2ZvcmVsbCcsXG4gICAgICAgICdmb3JwYXJ0JyxcbiAgICAgICAgJ2ZvcnByaW1lJyxcbiAgICAgICAgJ2ZvcnN0ZXAnLFxuICAgICAgICAnZm9yc3ViZ3JvdXAnLFxuICAgICAgICAnZm9ydmVjJyxcbiAgICAgICAgJ2ZvcicsXG4gICAgICAgICdpZmVycicsXG4gICAgICAgICdpZicsXG4gICAgICAgICdsb2NhbCcsXG4gICAgICAgICdteScsXG4gICAgICAgICduZXh0JyxcbiAgICAgICAgJ3JldHVybicsXG4gICAgICAgICd1bnRpbCcsXG4gICAgICAgICd3aGlsZSdcbiAgICAgIF1cbiAgICAgIGtleXdvcmRzID0ga2V5d29yZHNcbiAgICAgICAgLm1hcChmdW5jdGlvbiAoa2V5d29yZCkge1xuICAgICAgICAgIHJldHVybiBrZXl3b3JkLnNwbGl0KCcnKS5qb2luKCcgKicpXG4gICAgICAgIH0pXG4gICAgICAgIC5qb2luKCd8JylcbiAgICAgIHJldHVybiBSZWdFeHAoJ1xcXFxiKD86JyArIGtleXdvcmRzICsgJylcXFxcYicpXG4gICAgfSkoKSxcbiAgICBmdW5jdGlvbjogL1xcYlxcdyg/OltcXHcgXSpcXHcpPyg/PSAqXFwoKS8sXG4gICAgbnVtYmVyOiB7XG4gICAgICAvLyBUaGUgbG9va2JlaGluZCBhbmQgdGhlIG5lZ2F0aXZlIGxvb2thaGVhZCBwcmV2ZW50IGZyb20gYnJlYWtpbmcgdGhlIC4uIG9wZXJhdG9yXG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKCg/OlxcLiAqXFwuICopPykoPzpcXGJcXGQoPzogKlxcZCkqKD86ICooPyFcXC4gKlxcLilcXC4oPzogKlxcZCkqKT98XFwuICpcXGQoPzogKlxcZCkqKSg/OiAqZSAqKD86WystXSAqKT9cXGQoPzogKlxcZCkqKT8vaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcLiAqXFwufFsqXFwvIV0oPzogKj0pP3wlKD86ICo9fCg/OiAqIyk/KD86IConKSopP3xcXCsoPzogKlsrPV0pP3wtKD86ICpbLT0+XSk/fDwoPzogKj58KD86ICo8KT8oPzogKj0pPyk/fD4oPzogKj4pPyg/OiAqPSk/fD0oPzogKj0pezAsMn18XFxcXCg/OiAqXFwvKT8oPzogKj0pP3wmKD86IComKT98XFx8ICpcXHx8Wycjfl5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF17fSgpLiw6O3xdL1xuICB9XG59XG4iXSwibmFtZXMiOlsicGFyaWdwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJrZXl3b3JkcyIsIm1hcCIsInNwbGl0Iiwiam9pbiIsIlJlZ0V4cCIsImZ1bmN0aW9uIiwibnVtYmVyIiwibG9va2JlaGluZCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parigp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parser.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parser.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parser)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nparser.displayName = \"parser\";\nparser.aliases = [];\n/** @type {import('../core.js').Syntax} */ function parser(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var parser = Prism.languages.parser = Prism.languages.extend(\"markup\", {\n            keyword: {\n                pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n                lookbehind: true\n            },\n            variable: {\n                pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\.|:+/\n                }\n            },\n            function: {\n                pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n                lookbehind: true,\n                inside: {\n                    keyword: {\n                        pattern: /(^@)(?:GET_|SET_)/,\n                        lookbehind: true\n                    },\n                    punctuation: /\\.|:+/\n                }\n            },\n            escape: {\n                pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n                alias: \"builtin\"\n            },\n            punctuation: /[\\[\\](){};]/\n        });\n        parser = Prism.languages.insertBefore(\"parser\", \"keyword\", {\n            \"parser-comment\": {\n                pattern: /(\\s)#.*/,\n                lookbehind: true,\n                alias: \"comment\"\n            },\n            expression: {\n                // Allow for 3 levels of depth\n                pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n                greedy: true,\n                lookbehind: true,\n                inside: {\n                    string: {\n                        pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n                        lookbehind: true\n                    },\n                    keyword: parser.keyword,\n                    variable: parser.variable,\n                    function: parser.function,\n                    boolean: /\\b(?:false|true)\\b/,\n                    number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n                    escape: parser.escape,\n                    operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n                    punctuation: parser.punctuation\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n            expression: parser.expression,\n            keyword: parser.keyword,\n            variable: parser.variable,\n            function: parser.function,\n            escape: parser.escape,\n            \"parser-punctuation\": {\n                pattern: parser.punctuation,\n                alias: \"punctuation\"\n            }\n        }, parser[\"tag\"].inside[\"attr-value\"]);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXJzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQzJCO0FBQ3pDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNMLGtEQUFlQTtJQUM1QixVQUFVSSxLQUFLO1FBQ2YsSUFBSUgsU0FBVUcsTUFBTUUsU0FBUyxDQUFDTCxNQUFNLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFVBQVU7WUFDdEVDLFNBQVM7Z0JBQ1BDLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBQyxVQUFVO2dCQUNSRixTQUFTO2dCQUNUQyxZQUFZO2dCQUNaRSxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUMsVUFBVTtnQkFDUkwsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsUUFBUTtvQkFDTkosU0FBUzt3QkFDUEMsU0FBUzt3QkFDVEMsWUFBWTtvQkFDZDtvQkFDQUcsYUFBYTtnQkFDZjtZQUNGO1lBQ0FFLFFBQVE7Z0JBQ05OLFNBQVM7Z0JBQ1RPLE9BQU87WUFDVDtZQUNBSCxhQUFhO1FBQ2Y7UUFDQVosU0FBU0csTUFBTUUsU0FBUyxDQUFDVyxZQUFZLENBQUMsVUFBVSxXQUFXO1lBQ3pELGtCQUFrQjtnQkFDaEJSLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pNLE9BQU87WUFDVDtZQUNBRSxZQUFZO2dCQUNWLDhCQUE4QjtnQkFDOUJULFNBQVM7Z0JBQ1RVLFFBQVE7Z0JBQ1JULFlBQVk7Z0JBQ1pFLFFBQVE7b0JBQ05RLFFBQVE7d0JBQ05YLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FGLFNBQVNQLE9BQU9PLE9BQU87b0JBQ3ZCRyxVQUFVVixPQUFPVSxRQUFRO29CQUN6QkcsVUFBVWIsT0FBT2EsUUFBUTtvQkFDekJPLFNBQVM7b0JBQ1RDLFFBQVE7b0JBQ1JQLFFBQVFkLE9BQU9jLE1BQU07b0JBQ3JCUSxVQUNFO29CQUNGVixhQUFhWixPQUFPWSxXQUFXO2dCQUNqQztZQUNGO1FBQ0Y7UUFDQVQsTUFBTUUsU0FBUyxDQUFDVyxZQUFZLENBQzFCLFVBQ0EsZUFDQTtZQUNFQyxZQUFZakIsT0FBT2lCLFVBQVU7WUFDN0JWLFNBQVNQLE9BQU9PLE9BQU87WUFDdkJHLFVBQVVWLE9BQU9VLFFBQVE7WUFDekJHLFVBQVViLE9BQU9hLFFBQVE7WUFDekJDLFFBQVFkLE9BQU9jLE1BQU07WUFDckIsc0JBQXNCO2dCQUNwQk4sU0FBU1IsT0FBT1ksV0FBVztnQkFDM0JHLE9BQU87WUFDVDtRQUNGLEdBQ0FmLE1BQU0sQ0FBQyxNQUFNLENBQUNXLE1BQU0sQ0FBQyxhQUFhO0lBRXRDLEdBQUdSO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFyc2VyLmpzP2Q5YTUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JNYXJrdXAgZnJvbSAnLi9tYXJrdXAuanMnXG5wYXJzZXIuZGlzcGxheU5hbWUgPSAncGFyc2VyJ1xucGFyc2VyLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlcihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXApXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHBhcnNlciA9IChQcmlzbS5sYW5ndWFnZXMucGFyc2VyID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnbWFya3VwJywge1xuICAgICAga2V5d29yZDoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXl5dKSg/OlxcXig/OmNhc2V8ZXZhbHxmb3J8aWZ8c3dpdGNofHRocm93KVxcYnxAKD86QkFTRXxDTEFTU3xHRVQoPzpfREVGQVVMVCk/fE9QVElPTlN8U0VUX0RFRkFVTFR8VVNFKVxcYikvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXl0pXFxCXFwkKD86XFx3K3woPz1bLntdKSkoPzooPzpcXC58Ojo/KVxcdyspKig/OlxcLnw6Oj8pPy8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwufDorL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXl0pXFxCW0BeXVxcdysoPzooPzpcXC58Ojo/KVxcdyspKig/OlxcLnw6Oj8pPy8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXkApKD86R0VUX3xTRVRfKS8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLnw6Ky9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGVzY2FwZToge1xuICAgICAgICBwYXR0ZXJuOiAvXFxeKD86WyReO0AoKVxcW1xcXXt9XCInOl18I1thLWZcXGRdKikvaSxcbiAgICAgICAgYWxpYXM6ICdidWlsdGluJ1xuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvW1xcW1xcXSgpe307XS9cbiAgICB9KSlcbiAgICBwYXJzZXIgPSBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwYXJzZXInLCAna2V5d29yZCcsIHtcbiAgICAgICdwYXJzZXItY29tbWVudCc6IHtcbiAgICAgICAgcGF0dGVybjogLyhcXHMpIy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdjb21tZW50J1xuICAgICAgfSxcbiAgICAgIGV4cHJlc3Npb246IHtcbiAgICAgICAgLy8gQWxsb3cgZm9yIDMgbGV2ZWxzIG9mIGRlcHRoXG4gICAgICAgIHBhdHRlcm46IC8oXnxbXl5dKVxcKCg/OlteKCldfFxcKCg/OlteKCldfFxcKCg/OlteKCldKSpcXCkpKlxcKSkqXFwpLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBzdHJpbmc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oXnxbXl5dKShbXCInXSkoPzooPyFcXDIpW15eXXxcXF5bXFxzXFxTXSkqXFwyLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIGtleXdvcmQ6IHBhcnNlci5rZXl3b3JkLFxuICAgICAgICAgIHZhcmlhYmxlOiBwYXJzZXIudmFyaWFibGUsXG4gICAgICAgICAgZnVuY3Rpb246IHBhcnNlci5mdW5jdGlvbixcbiAgICAgICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgICAgIG51bWJlcjogL1xcYig/OjB4W2EtZlxcZF0rfFxcZCsoPzpcXC5cXGQqKT8oPzplWystXT9cXGQrKT8pXFxiL2ksXG4gICAgICAgICAgZXNjYXBlOiBwYXJzZXIuZXNjYXBlLFxuICAgICAgICAgIG9wZXJhdG9yOlxuICAgICAgICAgICAgL1t+KypcXC9cXFxcJV18ISg/OlxcfFxcfD98PSk/fCYmP3xcXHxcXHw/fD09fDxbPD1dP3w+Wz49XT98LVtmZF0/fFxcYig/OmRlZnxlcXxnZXxndHxpbnxpc3xsZXxsdHxuZSlcXGIvLFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiBwYXJzZXIucHVuY3R1YXRpb25cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZShcbiAgICAgICdpbnNpZGUnLFxuICAgICAgJ3B1bmN0dWF0aW9uJyxcbiAgICAgIHtcbiAgICAgICAgZXhwcmVzc2lvbjogcGFyc2VyLmV4cHJlc3Npb24sXG4gICAgICAgIGtleXdvcmQ6IHBhcnNlci5rZXl3b3JkLFxuICAgICAgICB2YXJpYWJsZTogcGFyc2VyLnZhcmlhYmxlLFxuICAgICAgICBmdW5jdGlvbjogcGFyc2VyLmZ1bmN0aW9uLFxuICAgICAgICBlc2NhcGU6IHBhcnNlci5lc2NhcGUsXG4gICAgICAgICdwYXJzZXItcHVuY3R1YXRpb24nOiB7XG4gICAgICAgICAgcGF0dGVybjogcGFyc2VyLnB1bmN0dWF0aW9uLFxuICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBwYXJzZXJbJ3RhZyddLmluc2lkZVsnYXR0ci12YWx1ZSddXG4gICAgKVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXAiLCJwYXJzZXIiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwia2V5d29yZCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwidmFyaWFibGUiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImZ1bmN0aW9uIiwiZXNjYXBlIiwiYWxpYXMiLCJpbnNlcnRCZWZvcmUiLCJleHByZXNzaW9uIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascal.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascal.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ pascal)\n/* harmony export */ });\n// @ts-nocheck\npascal.displayName = \"pascal\";\npascal.aliases = [\n    \"objectpascal\"\n];\n/** @type {import('../core.js').Syntax} */ function pascal(Prism) {\n    // Based on Free Pascal\n    /* TODO\nSupport inline asm ?\n*/ Prism.languages.pascal = {\n        directive: {\n            pattern: /\\{\\$[\\s\\S]*?\\}/,\n            greedy: true,\n            alias: [\n                \"marco\",\n                \"property\"\n            ]\n        },\n        comment: {\n            pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n            greedy: true\n        },\n        asm: {\n            pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n            lookbehind: true,\n            greedy: true,\n            inside: null // see below\n        },\n        keyword: [\n            {\n                // Turbo Pascal\n                pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n                lookbehind: true\n            },\n            {\n                // Free Pascal\n                pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n                lookbehind: true\n            },\n            {\n                // Object Pascal\n                pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n                lookbehind: true\n            },\n            {\n                // Modifiers\n                pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n                lookbehind: true\n            }\n        ],\n        number: [\n            // Hexadecimal, octal and binary\n            /(?:[&%]\\d+|\\$[a-f\\d]+)/i,\n            // Decimal\n            /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n        ],\n        operator: [\n            /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n            {\n                pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n                lookbehind: true\n            }\n        ],\n        punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n    };\n    Prism.languages.pascal.asm.inside = Prism.languages.extend(\"pascal\", {\n        asm: undefined,\n        keyword: undefined,\n        operator: undefined\n    });\n    Prism.languages.objectpascal = Prism.languages.pascal;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXNjYWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFlO0FBRWpDLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDLHVCQUF1QjtJQUV2Qjs7QUFFRixHQUVFQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssV0FBVztZQUNUQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztnQkFBQztnQkFBUzthQUFXO1FBQzlCO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUcsUUFBUTtZQUNOSixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSSxLQUFLO1lBQ0hMLFNBQVM7WUFDVE0sWUFBWTtZQUNaTCxRQUFRO1lBQ1JNLFFBQVEsS0FBSyxZQUFZO1FBQzNCO1FBRUFDLFNBQVM7WUFDUDtnQkFDRSxlQUFlO2dCQUNmUixTQUNFO2dCQUNGTSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxjQUFjO2dCQUNkTixTQUFTO2dCQUNUTSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxnQkFBZ0I7Z0JBQ2hCTixTQUNFO2dCQUNGTSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSxZQUFZO2dCQUNaTixTQUNFO2dCQUNGTSxZQUFZO1lBQ2Q7U0FDRDtRQUNERyxRQUFRO1lBQ04sZ0NBQWdDO1lBQ2hDO1lBQ0EsVUFBVTtZQUNWO1NBQ0Q7UUFDREMsVUFBVTtZQUNSO1lBQ0E7Z0JBQ0VWLFNBQ0U7Z0JBQ0ZNLFlBQVk7WUFDZDtTQUNEO1FBQ0RLLGFBQWE7SUFDZjtJQUNBZCxNQUFNQyxTQUFTLENBQUNKLE1BQU0sQ0FBQ1csR0FBRyxDQUFDRSxNQUFNLEdBQUdWLE1BQU1DLFNBQVMsQ0FBQ2MsTUFBTSxDQUFDLFVBQVU7UUFDbkVQLEtBQUtRO1FBQ0xMLFNBQVNLO1FBQ1RILFVBQVVHO0lBQ1o7SUFDQWhCLE1BQU1DLFNBQVMsQ0FBQ2dCLFlBQVksR0FBR2pCLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXNjYWwuanM/NmQ0MiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucGFzY2FsLmRpc3BsYXlOYW1lID0gJ3Bhc2NhbCdcbnBhc2NhbC5hbGlhc2VzID0gWydvYmplY3RwYXNjYWwnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhc2NhbChQcmlzbSkge1xuICAvLyBCYXNlZCBvbiBGcmVlIFBhc2NhbFxuXG4gIC8qIFRPRE9cblN1cHBvcnQgaW5saW5lIGFzbSA/XG4qL1xuXG4gIFByaXNtLmxhbmd1YWdlcy5wYXNjYWwgPSB7XG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvXFx7XFwkW1xcc1xcU10qP1xcfS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogWydtYXJjbycsICdwcm9wZXJ0eSddXG4gICAgfSxcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwoXFwqW1xcc1xcU10qP1xcKlxcKXxcXHtbXFxzXFxTXSo/XFx9fFxcL1xcLy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKD86Jyg/OicnfFteJ1xcclxcbl0pKicoPyEnKXwjWyYkJV0/W2EtZlxcZF0rKSt8XFxeW2Etel0vaSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgYXNtOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcYmFzbVxcYilbXFxzXFxTXSs/KD89XFxiZW5kXFxzKls7W10pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgIH0sXG5cbiAgICBrZXl3b3JkOiBbXG4gICAgICB7XG4gICAgICAgIC8vIFR1cmJvIFBhc2NhbFxuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXiZdKVxcYig/OmFic29sdXRlfGFycmF5fGFzbXxiZWdpbnxjYXNlfGNvbnN0fGNvbnN0cnVjdG9yfGRlc3RydWN0b3J8ZG98ZG93bnRvfGVsc2V8ZW5kfGZpbGV8Zm9yfGZ1bmN0aW9ufGdvdG98aWZ8aW1wbGVtZW50YXRpb258aW5oZXJpdGVkfGlubGluZXxpbnRlcmZhY2V8bGFiZWx8bmlsfG9iamVjdHxvZnxvcGVyYXRvcnxwYWNrZWR8cHJvY2VkdXJlfHByb2dyYW18cmVjb3JkfHJlaW50cm9kdWNlfHJlcGVhdHxzZWxmfHNldHxzdHJpbmd8dGhlbnx0b3x0eXBlfHVuaXR8dW50aWx8dXNlc3x2YXJ8d2hpbGV8d2l0aClcXGIvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gRnJlZSBQYXNjYWxcbiAgICAgICAgcGF0dGVybjogLyhefFteJl0pXFxiKD86ZGlzcG9zZXxleGl0fGZhbHNlfG5ld3x0cnVlKVxcYi9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBPYmplY3QgUGFzY2FsXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteJl0pXFxiKD86Y2xhc3N8ZGlzcGludGVyZmFjZXxleGNlcHR8ZXhwb3J0c3xmaW5hbGl6YXRpb258ZmluYWxseXxpbml0aWFsaXphdGlvbnxpbmxpbmV8bGlicmFyeXxvbnxvdXR8cGFja2VkfHByb3BlcnR5fHJhaXNlfHJlc291cmNlc3RyaW5nfHRocmVhZHZhcnx0cnkpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIE1vZGlmaWVyc1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXiZdKVxcYig/OmFic29sdXRlfGFic3RyYWN0fGFsaWFzfGFzc2VtYmxlcnxiaXRwYWNrZWR8YnJlYWt8Y2RlY2x8Y29udGludWV8Y3BwZGVjbHxjdmFyfGRlZmF1bHR8ZGVwcmVjYXRlZHxkeW5hbWljfGVudW1lcmF0b3J8ZXhwZXJpbWVudGFsfGV4cG9ydHxleHRlcm5hbHxmYXJ8ZmFyMTZ8Zm9yd2FyZHxnZW5lcmljfGhlbHBlcnxpbXBsZW1lbnRzfGluZGV4fGludGVycnVwdHxpb2NoZWNrc3xsb2NhbHxtZXNzYWdlfG5hbWV8bmVhcnxub2RlZmF1bHR8bm9yZXR1cm58bm9zdGFja2ZyYW1lfG9sZGZwY2NhbGx8b3RoZXJ3aXNlfG92ZXJsb2FkfG92ZXJyaWRlfHBhc2NhbHxwbGF0Zm9ybXxwcml2YXRlfHByb3RlY3RlZHxwdWJsaWN8cHVibGlzaGVkfHJlYWR8cmVnaXN0ZXJ8cmVpbnRyb2R1Y2V8cmVzdWx0fHNhZmVjYWxsfHNhdmVyZWdpc3RlcnN8c29mdGZsb2F0fHNwZWNpYWxpemV8c3RhdGljfHN0ZGNhbGx8c3RvcmVkfHN0cmljdHx1bmFsaWduZWR8dW5pbXBsZW1lbnRlZHx2YXJhcmdzfHZpcnR1YWx8d3JpdGUpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIG51bWJlcjogW1xuICAgICAgLy8gSGV4YWRlY2ltYWwsIG9jdGFsIGFuZCBiaW5hcnlcbiAgICAgIC8oPzpbJiVdXFxkK3xcXCRbYS1mXFxkXSspL2ksXG4gICAgICAvLyBEZWNpbWFsXG4gICAgICAvXFxiXFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspPy9pXG4gICAgXSxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgL1xcLlxcLnxcXCpcXCp8Oj18PFs8PT5dP3w+Wz49XT98WytcXC0qXFwvXT0/fFtAXj1dLyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14mXSlcXGIoPzphbmR8YXN8ZGl2fGV4Y2x1ZGV8aW58aW5jbHVkZXxpc3xtb2R8bm90fG9yfHNobHxzaHJ8eG9yKVxcYi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvXFwoXFwufFxcLlxcKXxbKClcXFtcXF06OywuXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucGFzY2FsLmFzbS5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdwYXNjYWwnLCB7XG4gICAgYXNtOiB1bmRlZmluZWQsXG4gICAga2V5d29yZDogdW5kZWZpbmVkLFxuICAgIG9wZXJhdG9yOiB1bmRlZmluZWRcbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLm9iamVjdHBhc2NhbCA9IFByaXNtLmxhbmd1YWdlcy5wYXNjYWxcbn1cbiJdLCJuYW1lcyI6WyJwYXNjYWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImRpcmVjdGl2ZSIsInBhdHRlcm4iLCJncmVlZHkiLCJhbGlhcyIsImNvbW1lbnQiLCJzdHJpbmciLCJhc20iLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwia2V5d29yZCIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJleHRlbmQiLCJ1bmRlZmluZWQiLCJvYmplY3RwYXNjYWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascal.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascaligo.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascaligo.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ pascaligo)\n/* harmony export */ });\n// @ts-nocheck\npascaligo.displayName = \"pascaligo\";\npascaligo.aliases = [];\n/** @type {import('../core.js').Syntax} */ function pascaligo(Prism) {\n    ;\n    (function(Prism) {\n        // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n        var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source;\n        var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(/<braces>/g, function() {\n            return braces;\n        });\n        var pascaligo = Prism.languages.pascaligo = {\n            comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n            string: {\n                pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n                greedy: true\n            },\n            \"class-name\": [\n                {\n                    pattern: RegExp(/(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(/<type>/g, function() {\n                        return type;\n                    }), \"i\"),\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                {\n                    pattern: RegExp(/<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function() {\n                        return type;\n                    }), \"i\"),\n                    inside: null // see below\n                },\n                {\n                    pattern: RegExp(/(:\\s*)<type>/.source.replace(/<type>/g, function() {\n                        return type;\n                    })),\n                    lookbehind: true,\n                    inside: null // see below\n                }\n            ],\n            keyword: {\n                pattern: /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n                lookbehind: true\n            },\n            boolean: {\n                pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n                lookbehind: true\n            },\n            builtin: {\n                pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n                lookbehind: true\n            },\n            function: /\\b\\w+(?=\\s*\\()/,\n            number: [\n                // Hexadecimal, octal and binary\n                /%[01]+|&[0-7]+|\\$[a-f\\d]+/i,\n                // Decimal\n                /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n            ],\n            operator: /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n            punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n        };\n        var classNameInside = [\n            \"comment\",\n            \"keyword\",\n            \"builtin\",\n            \"operator\",\n            \"punctuation\"\n        ].reduce(function(accum, key) {\n            accum[key] = pascaligo[key];\n            return accum;\n        }, {});\n        pascaligo[\"class-name\"].forEach(function(p) {\n            p.inside = classNameInside;\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wYXNjYWxpZ28uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSzs7SUFDbkMsVUFBVUEsS0FBSztRQUNmLDBFQUEwRTtRQUUxRSxJQUFJQyxTQUFTLDJDQUEyQ0MsTUFBTTtRQUM5RCxJQUFJQyxPQUFPLGtDQUFrQ0QsTUFBTSxDQUFDRSxPQUFPLENBQ3pELGFBQ0E7WUFDRSxPQUFPSDtRQUNUO1FBRUYsSUFBSUosWUFBYUcsTUFBTUssU0FBUyxDQUFDUixTQUFTLEdBQUc7WUFDM0NTLFNBQVM7WUFDVEMsUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1lBQ0EsY0FBYztnQkFDWjtvQkFDRUQsU0FBU0UsT0FDUCwrQkFBK0JSLE1BQU0sQ0FBQ0UsT0FBTyxDQUMzQyxXQUNBO3dCQUNFLE9BQU9EO29CQUNULElBRUY7b0JBRUZRLFlBQVk7b0JBQ1pDLFFBQVEsS0FBSyxZQUFZO2dCQUMzQjtnQkFDQTtvQkFDRUosU0FBU0UsT0FDUCxvQkFBb0JSLE1BQU0sQ0FBQ0UsT0FBTyxDQUFDLFdBQVc7d0JBQzVDLE9BQU9EO29CQUNULElBQ0E7b0JBRUZTLFFBQVEsS0FBSyxZQUFZO2dCQUMzQjtnQkFDQTtvQkFDRUosU0FBU0UsT0FDUCxlQUFlUixNQUFNLENBQUNFLE9BQU8sQ0FBQyxXQUFXO3dCQUN2QyxPQUFPRDtvQkFDVDtvQkFFRlEsWUFBWTtvQkFDWkMsUUFBUSxLQUFLLFlBQVk7Z0JBQzNCO2FBQ0Q7WUFFREMsU0FBUztnQkFDUEwsU0FDRTtnQkFDRkcsWUFBWTtZQUNkO1lBQ0FHLFNBQVM7Z0JBQ1BOLFNBQVM7Z0JBQ1RHLFlBQVk7WUFDZDtZQUNBSSxTQUFTO2dCQUNQUCxTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQUssVUFBVTtZQUNWQyxRQUFRO2dCQUNOLGdDQUFnQztnQkFDaEM7Z0JBQ0EsVUFBVTtnQkFDVjthQUNEO1lBQ0RDLFVBQ0U7WUFDRkMsYUFBYTtRQUNmO1FBQ0EsSUFBSUMsa0JBQWtCO1lBQ3BCO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7U0FDRCxDQUFDQyxNQUFNLENBQUMsU0FBVUMsS0FBSyxFQUFFQyxHQUFHO1lBQzNCRCxLQUFLLENBQUNDLElBQUksR0FBRzFCLFNBQVMsQ0FBQzBCLElBQUk7WUFDM0IsT0FBT0Q7UUFDVCxHQUFHLENBQUM7UUFDSnpCLFNBQVMsQ0FBQyxhQUFhLENBQUMyQixPQUFPLENBQUMsU0FBVUMsQ0FBQztZQUN6Q0EsRUFBRWIsTUFBTSxHQUFHUTtRQUNiO0lBQ0YsR0FBR3BCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGFzY2FsaWdvLmpzP2QxYmMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnBhc2NhbGlnby5kaXNwbGF5TmFtZSA9ICdwYXNjYWxpZ28nXG5wYXNjYWxpZ28uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFzY2FsaWdvKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgLy8gUGFzY2FsaWdvIGlzIGEgbGF5ZXIgMiBzbWFydCBjb250cmFjdCBsYW5ndWFnZSBmb3IgdGhlIHRlem9zIGJsb2NrY2hhaW5cblxuICAgIHZhciBicmFjZXMgPSAvXFwoKD86W14oKV18XFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCkpKlxcKS8uc291cmNlXG4gICAgdmFyIHR5cGUgPSAvKD86XFxiXFx3Kyg/OjxicmFjZXM+KT98PGJyYWNlcz4pLy5zb3VyY2UucmVwbGFjZShcbiAgICAgIC88YnJhY2VzPi9nLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gYnJhY2VzXG4gICAgICB9XG4gICAgKVxuICAgIHZhciBwYXNjYWxpZ28gPSAoUHJpc20ubGFuZ3VhZ2VzLnBhc2NhbGlnbyA9IHtcbiAgICAgIGNvbW1lbnQ6IC9cXChcXCpbXFxzXFxTXSs/XFwqXFwpfFxcL1xcLy4qLyxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFtcIidgXSkoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMXxcXF5bYS16XS9pLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oXFxidHlwZVxccytcXHcrXFxzK2lzXFxzKyk8dHlwZT4vLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAvPHR5cGU+L2csXG4gICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgJ2knXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC88dHlwZT4oPz1cXHMraXNcXGIpLy5zb3VyY2UucmVwbGFjZSgvPHR5cGU+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHR5cGVcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgJ2knXG4gICAgICAgICAgKSxcbiAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICAvKDpcXHMqKTx0eXBlPi8uc291cmNlLnJlcGxhY2UoLzx0eXBlPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiB0eXBlXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICAgIH1cbiAgICAgIF0sXG5cbiAgICAgIGtleXdvcmQ6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W14mXSlcXGIoPzpiZWdpbnxibG9ja3xjYXNlfGNvbnN0fGVsc2V8ZW5kfGZhaWx8Zm9yfGZyb218ZnVuY3Rpb258aWZ8aXN8bmlsfG9mfHJlbW92ZXxyZXR1cm58c2tpcHx0aGVufHR5cGV8dmFyfHdoaWxlfHdpdGgpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBib29sZWFuOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXiZdKVxcYig/OkZhbHNlfFRydWUpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBidWlsdGluOiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXiZdKVxcYig/OmJvb2x8aW50fGxpc3R8bWFwfG5hdHxyZWNvcmR8c3RyaW5nfHVuaXQpXFxiL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjogL1xcYlxcdysoPz1cXHMqXFwoKS8sXG4gICAgICBudW1iZXI6IFtcbiAgICAgICAgLy8gSGV4YWRlY2ltYWwsIG9jdGFsIGFuZCBiaW5hcnlcbiAgICAgICAgLyVbMDFdK3wmWzAtN10rfFxcJFthLWZcXGRdKy9pLFxuICAgICAgICAvLyBEZWNpbWFsXG4gICAgICAgIC9cXGJcXGQrKD86XFwuXFxkKyk/KD86ZVsrLV0/XFxkKyk/KD86bXR6fG4pPy9pXG4gICAgICBdLFxuICAgICAgb3BlcmF0b3I6XG4gICAgICAgIC8tPnw9XFwvPXxcXC5cXC58XFwqXFwqfDo9fDxbPD0+XT98Pls+PV0/fFsrXFwtKlxcL109P3xbQF49fF18XFxiKD86YW5kfG1vZHxvcilcXGIvLFxuICAgICAgcHVuY3R1YXRpb246IC9cXChcXC58XFwuXFwpfFsoKVxcW1xcXTo7LC57fV0vXG4gICAgfSlcbiAgICB2YXIgY2xhc3NOYW1lSW5zaWRlID0gW1xuICAgICAgJ2NvbW1lbnQnLFxuICAgICAgJ2tleXdvcmQnLFxuICAgICAgJ2J1aWx0aW4nLFxuICAgICAgJ29wZXJhdG9yJyxcbiAgICAgICdwdW5jdHVhdGlvbidcbiAgICBdLnJlZHVjZShmdW5jdGlvbiAoYWNjdW0sIGtleSkge1xuICAgICAgYWNjdW1ba2V5XSA9IHBhc2NhbGlnb1trZXldXG4gICAgICByZXR1cm4gYWNjdW1cbiAgICB9LCB7fSlcbiAgICBwYXNjYWxpZ29bJ2NsYXNzLW5hbWUnXS5mb3JFYWNoKGZ1bmN0aW9uIChwKSB7XG4gICAgICBwLmluc2lkZSA9IGNsYXNzTmFtZUluc2lkZVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInBhc2NhbGlnbyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiYnJhY2VzIiwic291cmNlIiwidHlwZSIsInJlcGxhY2UiLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJpbnNpZGUiLCJrZXl3b3JkIiwiYm9vbGVhbiIsImJ1aWx0aW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJjbGFzc05hbWVJbnNpZGUiLCJyZWR1Y2UiLCJhY2N1bSIsImtleSIsImZvckVhY2giLCJwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascaligo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pcaxis.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pcaxis.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ pcaxis)\n/* harmony export */ });\n// @ts-nocheck\npcaxis.displayName = \"pcaxis\";\npcaxis.aliases = [\n    \"px\"\n];\n/** @type {import('../core.js').Syntax} */ function pcaxis(Prism) {\n    Prism.languages.pcaxis = {\n        string: /\"[^\"]*\"/,\n        keyword: {\n            pattern: /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                keyword: /^[-A-Z\\d]+/,\n                language: {\n                    pattern: /^(\\s*)\\[[-\\w]+\\]/,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /^\\[|\\]$/,\n                        property: /[-\\w]+/\n                    }\n                },\n                \"sub-key\": {\n                    pattern: /^(\\s*)\\S[\\s\\S]*/,\n                    lookbehind: true,\n                    inside: {\n                        parameter: {\n                            pattern: /\"[^\"]*\"/,\n                            alias: \"property\"\n                        },\n                        punctuation: /^\\(|\\)$|,/\n                    }\n                }\n            }\n        },\n        operator: /=/,\n        tlist: {\n            pattern: /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n            greedy: true,\n            inside: {\n                function: /^TLIST/,\n                property: {\n                    pattern: /^(\\s*\\(\\s*)\\w+/,\n                    lookbehind: true\n                },\n                string: /\"[^\"]*\"/,\n                punctuation: /[(),]/,\n                operator: /-/\n            }\n        },\n        punctuation: /[;,]/,\n        number: {\n            pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n            lookbehind: true\n        },\n        boolean: /NO|YES/\n    };\n    Prism.languages.px = Prism.languages.pcaxis;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wY2F4aXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBRXZCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssUUFBUTtRQUNSQyxTQUFTO1lBQ1BDLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05KLFNBQVM7Z0JBQ1RLLFVBQVU7b0JBQ1JKLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pFLFFBQVE7d0JBQ05FLGFBQWE7d0JBQ2JDLFVBQVU7b0JBQ1o7Z0JBQ0Y7Z0JBQ0EsV0FBVztvQkFDVE4sU0FBUztvQkFDVEMsWUFBWTtvQkFDWkUsUUFBUTt3QkFDTkksV0FBVzs0QkFDVFAsU0FBUzs0QkFDVFEsT0FBTzt3QkFDVDt3QkFDQUgsYUFBYTtvQkFDZjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQUksVUFBVTtRQUNWQyxPQUFPO1lBQ0xWLFNBQ0U7WUFDRkUsUUFBUTtZQUNSQyxRQUFRO2dCQUNOUSxVQUFVO2dCQUNWTCxVQUFVO29CQUNSTixTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBSCxRQUFRO2dCQUNSTyxhQUFhO2dCQUNiSSxVQUFVO1lBQ1o7UUFDRjtRQUNBSixhQUFhO1FBQ2JPLFFBQVE7WUFDTlosU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQVksU0FBUztJQUNYO0lBQ0FqQixNQUFNQyxTQUFTLENBQUNpQixFQUFFLEdBQUdsQixNQUFNQyxTQUFTLENBQUNKLE1BQU07QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGNheGlzLmpzP2RjMzUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnBjYXhpcy5kaXNwbGF5TmFtZSA9ICdwY2F4aXMnXG5wY2F4aXMuYWxpYXNlcyA9IFsncHgnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBjYXhpcyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucGNheGlzID0ge1xuICAgIHN0cmluZzogL1wiW15cIl0qXCIvLFxuICAgIGtleXdvcmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oKD86Xnw7KVxccyopWy1BLVpcXGRdKyg/OlxccypcXFtbLVxcd10rXFxdKT8oPzpcXHMqXFwoXCJbXlwiXSpcIig/OixcXHMqXCJbXlwiXSpcIikqXFwpKT8oPz1cXHMqPSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvXlstQS1aXFxkXSsvLFxuICAgICAgICBsYW5ndWFnZToge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxccyopXFxbWy1cXHddK1xcXS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcW3xcXF0kLyxcbiAgICAgICAgICAgIHByb3BlcnR5OiAvWy1cXHddKy9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdzdWIta2V5Jzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxccyopXFxTW1xcc1xcU10qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcGFyYW1ldGVyOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXCh8XFwpJHwsL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgb3BlcmF0b3I6IC89LyxcbiAgICB0bGlzdDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1RMSVNUXFxzKlxcKFxccypcXHcrKD86KD86XFxzKixcXHMqXCJbXlwiXSpcIikrfFxccyosXFxzKlwiW15cIl0qXCItXCJbXlwiXSpcIik/XFxzKlxcKS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgZnVuY3Rpb246IC9eVExJU1QvLFxuICAgICAgICBwcm9wZXJ0eToge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxccypcXChcXHMqKVxcdysvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvXCJbXlwiXSpcIi8sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWygpLF0vLFxuICAgICAgICBvcGVyYXRvcjogLy0vXG4gICAgICB9XG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1s7LF0vLFxuICAgIG51bWJlcjoge1xuICAgICAgcGF0dGVybjogLyhefFxccylcXGQrKD86XFwuXFxkKyk/KD8hXFxTKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBib29sZWFuOiAvTk98WUVTL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5weCA9IFByaXNtLmxhbmd1YWdlcy5wY2F4aXNcbn1cbiJdLCJuYW1lcyI6WyJwY2F4aXMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsInN0cmluZyIsImtleXdvcmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImluc2lkZSIsImxhbmd1YWdlIiwicHVuY3R1YXRpb24iLCJwcm9wZXJ0eSIsInBhcmFtZXRlciIsImFsaWFzIiwib3BlcmF0b3IiLCJ0bGlzdCIsImZ1bmN0aW9uIiwibnVtYmVyIiwiYm9vbGVhbiIsInB4Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pcaxis.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/peoplecode.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/peoplecode.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ peoplecode)\n/* harmony export */ });\n// @ts-nocheck\npeoplecode.displayName = \"peoplecode\";\npeoplecode.aliases = [\n    \"pcode\"\n];\n/** @type {import('../core.js').Syntax} */ function peoplecode(Prism) {\n    Prism.languages.peoplecode = {\n        comment: RegExp([\n            // C-style multiline comments\n            /\\/\\*[\\s\\S]*?\\*\\//.source,\n            // REM comments\n            /\\bREM[^;]*;/.source,\n            // Nested <* *> comments\n            /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source,\n            // /+ +/ comments\n            /\\/\\+[\\s\\S]*?\\+\\//.source\n        ].join(\"|\")),\n        string: {\n            pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n            greedy: true\n        },\n        variable: /%\\w+/,\n        \"function-definition\": {\n            pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        \"class-name\": {\n            pattern: /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n            lookbehind: true,\n            inside: {\n                punctuation: /:/\n            }\n        },\n        keyword: /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n        \"operator-keyword\": {\n            pattern: /\\b(?:and|not|or)\\b/i,\n            alias: \"operator\"\n        },\n        function: /[_a-z]\\w*(?=\\s*\\()/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n        punctuation: /[:.;,()[\\]]/\n    };\n    Prism.languages.pcode = Prism.languages.peoplecode;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wZW9wbGVjb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7Q0FBUTtBQUU5Qix3Q0FBd0MsR0FDekIsU0FBU0YsV0FBV0csS0FBSztJQUN0Q0EsTUFBTUMsU0FBUyxDQUFDSixVQUFVLEdBQUc7UUFDM0JLLFNBQVNDLE9BQ1A7WUFDRSw2QkFBNkI7WUFDN0IsbUJBQW1CQyxNQUFNO1lBQ3pCLGVBQWU7WUFDZixjQUFjQSxNQUFNO1lBQ3BCLHdCQUF3QjtZQUN4Qiw0REFBNERBLE1BQU07WUFDbEUsaUJBQWlCO1lBQ2pCLG1CQUFtQkEsTUFBTTtTQUMxQixDQUFDQyxJQUFJLENBQUM7UUFFVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxVQUFVO1FBQ1YsdUJBQXVCO1lBQ3JCRixTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaSixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkUsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGLG9CQUFvQjtZQUNsQlAsU0FBUztZQUNUSSxPQUFPO1FBQ1Q7UUFDQUksVUFBVTtRQUNWQyxTQUFTO1FBQ1RDLFFBQVE7UUFDUkMsVUFBVTtRQUNWTCxhQUFhO0lBQ2Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDa0IsS0FBSyxHQUFHbkIsTUFBTUMsU0FBUyxDQUFDSixVQUFVO0FBQ3BEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Blb3BsZWNvZGUuanM/YTBkOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucGVvcGxlY29kZS5kaXNwbGF5TmFtZSA9ICdwZW9wbGVjb2RlJ1xucGVvcGxlY29kZS5hbGlhc2VzID0gWydwY29kZSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGVvcGxlY29kZShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucGVvcGxlY29kZSA9IHtcbiAgICBjb21tZW50OiBSZWdFeHAoXG4gICAgICBbXG4gICAgICAgIC8vIEMtc3R5bGUgbXVsdGlsaW5lIGNvbW1lbnRzXG4gICAgICAgIC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvLy5zb3VyY2UsXG4gICAgICAgIC8vIFJFTSBjb21tZW50c1xuICAgICAgICAvXFxiUkVNW147XSo7Ly5zb3VyY2UsXG4gICAgICAgIC8vIE5lc3RlZCA8KiAqPiBjb21tZW50c1xuICAgICAgICAvPFxcKig/OltePCpdfFxcKig/IT4pfDwoPyFcXCopfDxcXCooPzooPyFcXCo+KVtcXHNcXFNdKSpcXCo+KSpcXCo+Ly5zb3VyY2UsXG4gICAgICAgIC8vIC8rICsvIGNvbW1lbnRzXG4gICAgICAgIC9cXC9cXCtbXFxzXFxTXSo/XFwrXFwvLy5zb3VyY2VcbiAgICAgIF0uam9pbignfCcpXG4gICAgKSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86Jyd8W14nXFxyXFxuXSkqJyg/IScpfFwiKD86XCJcInxbXlwiXFxyXFxuXSkqXCIoPyFcIikvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICB2YXJpYWJsZTogLyVcXHcrLyxcbiAgICAnZnVuY3Rpb24tZGVmaW5pdGlvbic6IHtcbiAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcdy1dKSg/OmZ1bmN0aW9ufG1ldGhvZClcXHMrKVxcdysvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgJ2NsYXNzLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKCg/Ol58W14tXFx3XSkoPzphc3xjYXRjaHxjbGFzc3xjb21wb25lbnR8Y3JlYXRlfGV4dGVuZHN8Z2xvYmFsfGltcGxlbWVudHN8aW5zdGFuY2V8bG9jYWx8b2Z8cHJvcGVydHl8cmV0dXJucylcXHMrKVxcdysoPzo6XFx3KykqL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvOi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWJzdHJhY3R8YWxpYXN8YXN8Y2F0Y2h8Y2xhc3N8Y29tcG9uZW50fGNvbnN0YW50fGNyZWF0ZXxkZWNsYXJlfGVsc2V8ZW5kLSg/OmNsYXNzfGV2YWx1YXRlfGZvcnxmdW5jdGlvbnxnZXR8aWZ8bWV0aG9kfHNldHx0cnl8d2hpbGUpfGV2YWx1YXRlfGV4dGVuZHN8Zm9yfGZ1bmN0aW9ufGdldHxnbG9iYWx8aWZ8aW1wbGVtZW50c3xpbXBvcnR8aW5zdGFuY2V8bGlicmFyeXxsb2NhbHxtZXRob2R8bnVsbHxvZnxvdXR8cGVvcGxlQ29kZXxwcml2YXRlfHByb2dyYW18cHJvcGVydHl8cHJvdGVjdGVkfHJlYWRvbmx5fHJlZnxyZXBlYXR8cmV0dXJucz98c2V0fHN0ZXB8dGhlbnx0aHJvd3x0b3x0cnl8dW50aWx8dmFsdWV8d2hlbig/Oi1vdGhlcik/fHdoaWxlKVxcYi9pLFxuICAgICdvcGVyYXRvci1rZXl3b3JkJzoge1xuICAgICAgcGF0dGVybjogL1xcYig/OmFuZHxub3R8b3IpXFxiL2ksXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246IC9bX2Etel1cXHcqKD89XFxzKlxcKCkvaSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKyk/XFxiLyxcbiAgICBvcGVyYXRvcjogLzw+fFs8Pl09P3whPXxcXCpcXCp8Wy0rKi98PUBdLyxcbiAgICBwdW5jdHVhdGlvbjogL1s6LjssKClbXFxdXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucGNvZGUgPSBQcmlzbS5sYW5ndWFnZXMucGVvcGxlY29kZVxufVxuIl0sIm5hbWVzIjpbInBlb3BsZWNvZGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJSZWdFeHAiLCJzb3VyY2UiLCJqb2luIiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsInZhcmlhYmxlIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwY29kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/peoplecode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/perl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/perl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ perl)\n/* harmony export */ });\n// @ts-nocheck\nperl.displayName = \"perl\";\nperl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function perl(Prism) {\n    ;\n    (function(Prism) {\n        var brackets = /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/.source;\n        Prism.languages.perl = {\n            comment: [\n                {\n                    // POD\n                    pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: /(^|[^\\\\$])#.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            // TODO Could be nice to handle Heredoc too.\n            string: [\n                {\n                    pattern: RegExp(/\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source + \"(?:\" + [\n                        // q/.../\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                        // q a...a\n                        // eslint-disable-next-line regexp/strict\n                        /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                        // q(...)\n                        // q{...}\n                        // q[...]\n                        // q<...>\n                        brackets\n                    ].join(\"|\") + \")\"),\n                    greedy: true\n                },\n                // \"...\", `...`\n                {\n                    pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n                    greedy: true\n                },\n                // '...'\n                // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n                {\n                    pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n                    greedy: true\n                }\n            ],\n            regex: [\n                {\n                    pattern: RegExp(/\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source + \"(?:\" + [\n                        // m/.../\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                        // m a...a\n                        // eslint-disable-next-line regexp/strict\n                        /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                        // m(...)\n                        // m{...}\n                        // m[...]\n                        // m<...>\n                        brackets\n                    ].join(\"|\") + \")\" + /[msixpodualngc]*/.source),\n                    greedy: true\n                },\n                // The lookbehinds prevent -s from breaking\n                {\n                    pattern: RegExp(/(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source + \"(?:\" + [\n                        // s/.../.../\n                        // eslint-disable-next-line regexp/strict\n                        /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source,\n                        // s a...a...a\n                        // eslint-disable-next-line regexp/strict\n                        /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/.source,\n                        // s(...)(...)\n                        // s{...}{...}\n                        // s[...][...]\n                        // s<...><...>\n                        // s(...)[...]\n                        brackets + /\\s*/.source + brackets\n                    ].join(\"|\") + \")\" + /[msixpodualngcer]*/.source),\n                    lookbehind: true,\n                    greedy: true\n                },\n                // /.../\n                // The look-ahead tries to prevent two divisions on\n                // the same line from being highlighted as regex.\n                // This does not support multi-line regex.\n                {\n                    pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n                    greedy: true\n                }\n            ],\n            // FIXME Not sure about the handling of ::, ', and #\n            variable: [\n                // ${^POSTMATCH}\n                /[&*$@%]\\{\\^[A-Z]+\\}/,\n                // $^V\n                /[&*$@%]\\^[A-Z_]/,\n                // ${...}\n                /[&*$@%]#?(?=\\{)/,\n                // $foo\n                /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/,\n                // $1\n                /[&*$@%]\\d+/,\n                // $_, @_, %!\n                // The negative lookahead prevents from breaking the %= operator\n                /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n            ],\n            filehandle: {\n                // <>, <FOO>, _\n                pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n                alias: \"symbol\"\n            },\n            \"v-string\": {\n                // v1.2, 1.2.3\n                pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n                alias: \"string\"\n            },\n            function: {\n                pattern: /(\\bsub[ \\t]+)\\w+/,\n                lookbehind: true\n            },\n            keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n            number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n            operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n            punctuation: /[{}[\\];(),:]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wZXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxXQUNGLDZHQUNHQyxNQUFNO1FBQ1hGLE1BQU1HLFNBQVMsQ0FBQ04sSUFBSSxHQUFHO1lBQ3JCTyxTQUFTO2dCQUNQO29CQUNFLE1BQU07b0JBQ05DLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0VGLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLFFBQVE7Z0JBQ1Y7YUFDRDtZQUNELDRDQUE0QztZQUM1Q0MsUUFBUTtnQkFDTjtvQkFDRUgsU0FBU0ksT0FDUCxxQ0FBcUNQLE1BQU0sR0FDekMsUUFDQTt3QkFDRSxTQUFTO3dCQUNULG1EQUFtREEsTUFBTTt3QkFDekQsVUFBVTt3QkFDVix5Q0FBeUM7d0JBQ3pDLDJDQUEyQ0EsTUFBTTt3QkFDakQsU0FBUzt3QkFDVCxTQUFTO3dCQUNULFNBQVM7d0JBQ1QsU0FBUzt3QkFDVEQ7cUJBQ0QsQ0FBQ1MsSUFBSSxDQUFDLE9BQ1A7b0JBRUpILFFBQVE7Z0JBQ1Y7Z0JBQ0EsZUFBZTtnQkFDZjtvQkFDRUYsU0FBUztvQkFDVEUsUUFBUTtnQkFDVjtnQkFDQSxRQUFRO2dCQUNSLHNHQUFzRztnQkFDdEc7b0JBQ0VGLFNBQVM7b0JBQ1RFLFFBQVE7Z0JBQ1Y7YUFDRDtZQUNESSxPQUFPO2dCQUNMO29CQUNFTixTQUFTSSxPQUNQLCtCQUErQlAsTUFBTSxHQUNuQyxRQUNBO3dCQUNFLFNBQVM7d0JBQ1QsbURBQW1EQSxNQUFNO3dCQUN6RCxVQUFVO3dCQUNWLHlDQUF5Qzt3QkFDekMsMkNBQTJDQSxNQUFNO3dCQUNqRCxTQUFTO3dCQUNULFNBQVM7d0JBQ1QsU0FBUzt3QkFDVCxTQUFTO3dCQUNURDtxQkFDRCxDQUFDUyxJQUFJLENBQUMsT0FDUCxNQUNBLG1CQUFtQlIsTUFBTTtvQkFFN0JLLFFBQVE7Z0JBQ1Y7Z0JBQ0EsMkNBQTJDO2dCQUMzQztvQkFDRUYsU0FBU0ksT0FDUCx5Q0FBeUNQLE1BQU0sR0FDN0MsUUFDQTt3QkFDRSxhQUFhO3dCQUNiLHlDQUF5Qzt3QkFDekMsOEVBQ0dBLE1BQU07d0JBQ1QsY0FBYzt3QkFDZCx5Q0FBeUM7d0JBQ3pDLHNFQUNHQSxNQUFNO3dCQUNULGNBQWM7d0JBQ2QsY0FBYzt3QkFDZCxjQUFjO3dCQUNkLGNBQWM7d0JBQ2QsY0FBYzt3QkFDZEQsV0FBVyxNQUFNQyxNQUFNLEdBQUdEO3FCQUMzQixDQUFDUyxJQUFJLENBQUMsT0FDUCxNQUNBLHFCQUFxQlIsTUFBTTtvQkFFL0JJLFlBQVk7b0JBQ1pDLFFBQVE7Z0JBQ1Y7Z0JBQ0EsUUFBUTtnQkFDUixtREFBbUQ7Z0JBQ25ELGlEQUFpRDtnQkFDakQsMENBQTBDO2dCQUMxQztvQkFDRUYsU0FDRTtvQkFDRkUsUUFBUTtnQkFDVjthQUNEO1lBQ0Qsb0RBQW9EO1lBQ3BESyxVQUFVO2dCQUNSLGdCQUFnQjtnQkFDaEI7Z0JBQ0EsTUFBTTtnQkFDTjtnQkFDQSxTQUFTO2dCQUNUO2dCQUNBLE9BQU87Z0JBQ1A7Z0JBQ0EsS0FBSztnQkFDTDtnQkFDQSxhQUFhO2dCQUNiLGdFQUFnRTtnQkFDaEU7YUFDRDtZQUNEQyxZQUFZO2dCQUNWLGVBQWU7Z0JBQ2ZSLFNBQVM7Z0JBQ1RTLE9BQU87WUFDVDtZQUNBLFlBQVk7Z0JBQ1YsY0FBYztnQkFDZFQsU0FBUztnQkFDVFMsT0FBTztZQUNUO1lBQ0FDLFVBQVU7Z0JBQ1JWLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBVSxTQUNFO1lBQ0ZDLFFBQ0U7WUFDRkMsVUFDRTtZQUNGQyxhQUFhO1FBQ2Y7SUFDRixHQUFHbkI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wZXJsLmpzPzVkYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnBlcmwuZGlzcGxheU5hbWUgPSAncGVybCdcbnBlcmwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGVybChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBicmFja2V0cyA9XG4gICAgICAvKD86XFwoKD86W14oKVxcXFxdfFxcXFxbXFxzXFxTXSkqXFwpfFxceyg/Oltee31cXFxcXXxcXFxcW1xcc1xcU10pKlxcfXxcXFsoPzpbXltcXF1cXFxcXXxcXFxcW1xcc1xcU10pKlxcXXw8KD86W148PlxcXFxdfFxcXFxbXFxzXFxTXSkqPikvXG4gICAgICAgIC5zb3VyY2VcbiAgICBQcmlzbS5sYW5ndWFnZXMucGVybCA9IHtcbiAgICAgIGNvbW1lbnQ6IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIFBPRFxuICAgICAgICAgIHBhdHRlcm46IC8oXlxccyopPVxcd1tcXHNcXFNdKj89Y3V0LiovbSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhefFteXFxcXCRdKSMuKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIC8vIFRPRE8gQ291bGQgYmUgbmljZSB0byBoYW5kbGUgSGVyZWRvYyB0b28uXG4gICAgICBzdHJpbmc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC9cXGIoPzpxfHFxfHF3fHF4KSg/IVthLXpBLVowLTldKVxccyovLnNvdXJjZSArXG4gICAgICAgICAgICAgICcoPzonICtcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIC8vIHEvLi4uL1xuICAgICAgICAgICAgICAgIC8oW15hLXpBLVowLTlcXHN7KFxcWzxdKSg/Oig/IVxcMSlbXlxcXFxdfFxcXFxbXFxzXFxTXSkqXFwxLy5zb3VyY2UsXG4gICAgICAgICAgICAgICAgLy8gcSBhLi4uYVxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvc3RyaWN0XG4gICAgICAgICAgICAgICAgLyhbYS16QS1aMC05XSkoPzooPyFcXDIpW15cXFxcXXxcXFxcW1xcc1xcU10pKlxcMi8uc291cmNlLFxuICAgICAgICAgICAgICAgIC8vIHEoLi4uKVxuICAgICAgICAgICAgICAgIC8vIHF7Li4ufVxuICAgICAgICAgICAgICAgIC8vIHFbLi4uXVxuICAgICAgICAgICAgICAgIC8vIHE8Li4uPlxuICAgICAgICAgICAgICAgIGJyYWNrZXRzXG4gICAgICAgICAgICAgIF0uam9pbignfCcpICtcbiAgICAgICAgICAgICAgJyknXG4gICAgICAgICAgKSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgLy8gXCIuLi5cIiwgYC4uLmBcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oXCJ8YCkoPzooPyFcXDEpW15cXFxcXXxcXFxcW1xcc1xcU10pKlxcMS8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIC8vICcuLi4nXG4gICAgICAgIC8vIEZJWE1FIE11bHRpLWxpbmUgc2luZ2xlLXF1b3RlZCBzdHJpbmdzIGFyZSBub3Qgc3VwcG9ydGVkIGFzIHRoZXkgd291bGQgYnJlYWsgdmFyaWFibGVzIGNvbnRhaW5pbmcgJ1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLycoPzpbXidcXFxcXFxyXFxuXXxcXFxcLikqJy8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICByZWdleDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgL1xcYig/Om18cXIpKD8hW2EtekEtWjAtOV0pXFxzKi8uc291cmNlICtcbiAgICAgICAgICAgICAgJyg/OicgK1xuICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgLy8gbS8uLi4vXG4gICAgICAgICAgICAgICAgLyhbXmEtekEtWjAtOVxcc3soXFxbPF0pKD86KD8hXFwxKVteXFxcXF18XFxcXFtcXHNcXFNdKSpcXDEvLnNvdXJjZSxcbiAgICAgICAgICAgICAgICAvLyBtIGEuLi5hXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9zdHJpY3RcbiAgICAgICAgICAgICAgICAvKFthLXpBLVowLTldKSg/Oig/IVxcMilbXlxcXFxdfFxcXFxbXFxzXFxTXSkqXFwyLy5zb3VyY2UsXG4gICAgICAgICAgICAgICAgLy8gbSguLi4pXG4gICAgICAgICAgICAgICAgLy8gbXsuLi59XG4gICAgICAgICAgICAgICAgLy8gbVsuLi5dXG4gICAgICAgICAgICAgICAgLy8gbTwuLi4+XG4gICAgICAgICAgICAgICAgYnJhY2tldHNcbiAgICAgICAgICAgICAgXS5qb2luKCd8JykgK1xuICAgICAgICAgICAgICAnKScgK1xuICAgICAgICAgICAgICAvW21zaXhwb2R1YWxuZ2NdKi8uc291cmNlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgLy8gVGhlIGxvb2tiZWhpbmRzIHByZXZlbnQgLXMgZnJvbSBicmVha2luZ1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgLyhefFteLV0pXFxiKD86c3x0cnx5KSg/IVthLXpBLVowLTldKVxccyovLnNvdXJjZSArXG4gICAgICAgICAgICAgICcoPzonICtcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIC8vIHMvLi4uLy4uLi9cbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVnZXhwL3N0cmljdFxuICAgICAgICAgICAgICAgIC8oW15hLXpBLVowLTlcXHN7KFxcWzxdKSg/Oig/IVxcMilbXlxcXFxdfFxcXFxbXFxzXFxTXSkqXFwyKD86KD8hXFwyKVteXFxcXF18XFxcXFtcXHNcXFNdKSpcXDIvXG4gICAgICAgICAgICAgICAgICAuc291cmNlLFxuICAgICAgICAgICAgICAgIC8vIHMgYS4uLmEuLi5hXG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9zdHJpY3RcbiAgICAgICAgICAgICAgICAvKFthLXpBLVowLTldKSg/Oig/IVxcMylbXlxcXFxdfFxcXFxbXFxzXFxTXSkqXFwzKD86KD8hXFwzKVteXFxcXF18XFxcXFtcXHNcXFNdKSpcXDMvXG4gICAgICAgICAgICAgICAgICAuc291cmNlLFxuICAgICAgICAgICAgICAgIC8vIHMoLi4uKSguLi4pXG4gICAgICAgICAgICAgICAgLy8gc3suLi59ey4uLn1cbiAgICAgICAgICAgICAgICAvLyBzWy4uLl1bLi4uXVxuICAgICAgICAgICAgICAgIC8vIHM8Li4uPjwuLi4+XG4gICAgICAgICAgICAgICAgLy8gcyguLi4pWy4uLl1cbiAgICAgICAgICAgICAgICBicmFja2V0cyArIC9cXHMqLy5zb3VyY2UgKyBicmFja2V0c1xuICAgICAgICAgICAgICBdLmpvaW4oJ3wnKSArXG4gICAgICAgICAgICAgICcpJyArXG4gICAgICAgICAgICAgIC9bbXNpeHBvZHVhbG5nY2VyXSovLnNvdXJjZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgLy8gLy4uLi9cbiAgICAgICAgLy8gVGhlIGxvb2stYWhlYWQgdHJpZXMgdG8gcHJldmVudCB0d28gZGl2aXNpb25zIG9uXG4gICAgICAgIC8vIHRoZSBzYW1lIGxpbmUgZnJvbSBiZWluZyBoaWdobGlnaHRlZCBhcyByZWdleC5cbiAgICAgICAgLy8gVGhpcyBkb2VzIG5vdCBzdXBwb3J0IG11bHRpLWxpbmUgcmVnZXguXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcLyg/OlteXFwvXFxcXFxcclxcbl18XFxcXC4pKlxcL1ttc2l4cG9kdWFsbmdjXSooPz1cXHMqKD86JHxbXFxyXFxuLC47fSkmfFxcLSsqfjw+IT9eXXwoPzphbmR8Y21wfGVxfGdlfGd0fGxlfGx0fG5lfG5vdHxvcnx4fHhvcilcXGIpKS8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAvLyBGSVhNRSBOb3Qgc3VyZSBhYm91dCB0aGUgaGFuZGxpbmcgb2YgOjosICcsIGFuZCAjXG4gICAgICB2YXJpYWJsZTogW1xuICAgICAgICAvLyAke15QT1NUTUFUQ0h9XG4gICAgICAgIC9bJiokQCVdXFx7XFxeW0EtWl0rXFx9LyxcbiAgICAgICAgLy8gJF5WXG4gICAgICAgIC9bJiokQCVdXFxeW0EtWl9dLyxcbiAgICAgICAgLy8gJHsuLi59XG4gICAgICAgIC9bJiokQCVdIz8oPz1cXHspLyxcbiAgICAgICAgLy8gJGZvb1xuICAgICAgICAvWyYqJEAlXSM/KD86KD86OjopKic/KD8hXFxkKVtcXHckXSsoPyFbXFx3JF0pKSsoPzo6OikqLyxcbiAgICAgICAgLy8gJDFcbiAgICAgICAgL1smKiRAJV1cXGQrLyxcbiAgICAgICAgLy8gJF8sIEBfLCAlIVxuICAgICAgICAvLyBUaGUgbmVnYXRpdmUgbG9va2FoZWFkIHByZXZlbnRzIGZyb20gYnJlYWtpbmcgdGhlICU9IG9wZXJhdG9yXG4gICAgICAgIC8oPyElPSlbJEAlXVshXCIjJCUmJygpKissXFwtLlxcLzo7PD0+P0BbXFxcXFxcXV5fYHt8fX5dL1xuICAgICAgXSxcbiAgICAgIGZpbGVoYW5kbGU6IHtcbiAgICAgICAgLy8gPD4sIDxGT08+LCBfXG4gICAgICAgIHBhdHRlcm46IC88KD8hWzw9XSlcXFMqPz58XFxiX1xcYi8sXG4gICAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgICAgfSxcbiAgICAgICd2LXN0cmluZyc6IHtcbiAgICAgICAgLy8gdjEuMiwgMS4yLjNcbiAgICAgICAgcGF0dGVybjogL3ZcXGQrKD86XFwuXFxkKykqfFxcZCsoPzpcXC5cXGQrKXsyLH0vLFxuICAgICAgICBhbGlhczogJ3N0cmluZydcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcYnN1YlsgXFx0XSspXFx3Ky8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86YW55fGJyZWFrfGNvbnRpbnVlfGRlZmF1bHR8ZGVsZXRlfGRpZXxkb3xlbHNlfGVsc2lmfGV2YWx8Zm9yfGZvcmVhY2h8Z2l2ZW58Z290b3xpZnxsYXN0fGxvY2FsfG15fG5leHR8b3VyfHBhY2thZ2V8cHJpbnR8cmVkb3xyZXF1aXJlfHJldHVybnxzYXl8c3RhdGV8c3VifHN3aXRjaHx1bmRlZnx1bmxlc3N8dW50aWx8dXNlfHdoZW58d2hpbGUpXFxiLyxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1xcYig/OjB4W1xcZEEtRmEtZl0oPzpfP1tcXGRBLUZhLWZdKSp8MGJbMDFdKD86Xz9bMDFdKSp8KD86KD86XFxkKD86Xz9cXGQpKik/XFwuKT9cXGQoPzpfP1xcZCkqKD86W0VlXVsrLV0/XFxkKyk/KVxcYi8sXG4gICAgICBvcGVyYXRvcjpcbiAgICAgICAgLy1bcnd4b1JXWE9lenNmZGxwU2JjdHVna1RCTUFDXVxcYnxcXCtbKz1dP3wtWy09Pl0/fFxcKlxcKj89P3xcXC9cXC8/PT98PVs9fj5dP3x+W349XT98XFx8XFx8Pz0/fCYmPz0/fDwoPzo9Pj98PD0/KT98Pj4/PT98IVt+PV0/fFslXl09P3xcXC4oPzo9fFxcLlxcLj8pP3xbXFxcXD9dfFxcYngoPzo9fFxcYil8XFxiKD86YW5kfGNtcHxlcXxnZXxndHxsZXxsdHxuZXxub3R8b3J8eG9yKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksOl0vXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJwZXJsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJicmFja2V0cyIsInNvdXJjZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsIlJlZ0V4cCIsImpvaW4iLCJyZWdleCIsInZhcmlhYmxlIiwiZmlsZWhhbmRsZSIsImFsaWFzIiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/perl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php-extras.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php-extras.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ phpExtras)\n/* harmony export */ });\n/* harmony import */ var _php_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./php.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js\");\n// @ts-nocheck\n\nphpExtras.displayName = \"php-extras\";\nphpExtras.aliases = [];\n/** @type {import('../core.js').Syntax} */ function phpExtras(Prism) {\n    Prism.register(_php_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.insertBefore(\"php\", \"variable\", {\n        this: {\n            pattern: /\\$this\\b/,\n            alias: \"keyword\"\n        },\n        global: /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n        scope: {\n            pattern: /\\b[\\w\\\\]+::/,\n            inside: {\n                keyword: /\\b(?:parent|self|static)\\b/,\n                punctuation: /::|\\\\/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9waHAtZXh0cmFzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNuQ0MsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSztJQUNyQ0EsTUFBTUMsUUFBUSxDQUFDTCwrQ0FBWUE7SUFDM0JJLE1BQU1FLFNBQVMsQ0FBQ0MsWUFBWSxDQUFDLE9BQU8sWUFBWTtRQUM5Q0MsTUFBTTtZQUNKQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBQyxRQUNFO1FBQ0ZDLE9BQU87WUFDTEgsU0FBUztZQUNUSSxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxhQUFhO1lBQ2Y7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGhwLWV4dHJhcy5qcz9iMmE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yUGhwIGZyb20gJy4vcGhwLmpzJ1xucGhwRXh0cmFzLmRpc3BsYXlOYW1lID0gJ3BocC1leHRyYXMnXG5waHBFeHRyYXMuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGhwRXh0cmFzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclBocClcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgncGhwJywgJ3ZhcmlhYmxlJywge1xuICAgIHRoaXM6IHtcbiAgICAgIHBhdHRlcm46IC9cXCR0aGlzXFxiLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGdsb2JhbDpcbiAgICAgIC9cXCQoPzpHTE9CQUxTfEhUVFBfUkFXX1BPU1RfREFUQXxfKD86Q09PS0lFfEVOVnxGSUxFU3xHRVR8UE9TVHxSRVFVRVNUfFNFUlZFUnxTRVNTSU9OKXxhcmdjfGFyZ3Z8aHR0cF9yZXNwb25zZV9oZWFkZXJ8cGhwX2Vycm9ybXNnKVxcYi8sXG4gICAgc2NvcGU6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbXFx3XFxcXF0rOjovLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGtleXdvcmQ6IC9cXGIoPzpwYXJlbnR8c2VsZnxzdGF0aWMpXFxiLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC86OnxcXFxcL1xuICAgICAgfVxuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JQaHAiLCJwaHBFeHRyYXMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiaW5zZXJ0QmVmb3JlIiwidGhpcyIsInBhdHRlcm4iLCJhbGlhcyIsImdsb2JhbCIsInNjb3BlIiwiaW5zaWRlIiwia2V5d29yZCIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php-extras.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ php)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\nphp.displayName = \"php\";\nphp.aliases = [];\n/** @type {import('../core.js').Syntax} */ function php(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */ ;\n    (function(Prism) {\n        var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/;\n        var constant = [\n            {\n                pattern: /\\b(?:false|true)\\b/i,\n                alias: \"boolean\"\n            },\n            {\n                pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n                greedy: true,\n                lookbehind: true\n            },\n            {\n                pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n                greedy: true,\n                lookbehind: true\n            },\n            /\\b(?:null)\\b/i,\n            /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n        ];\n        var number = /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i;\n        var operator = /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/;\n        var punctuation = /[{}\\[\\](),:;]/;\n        Prism.languages.php = {\n            delimiter: {\n                pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n                alias: \"important\"\n            },\n            comment: comment,\n            variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n            package: {\n                pattern: /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\\\/\n                }\n            },\n            \"class-name-definition\": {\n                pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            \"function-definition\": {\n                pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            keyword: [\n                {\n                    pattern: /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n                    alias: \"type-casting\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n                    alias: \"type-hint\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|never|object|self|static|string|void)\\b/i,\n                    alias: \"return-type\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n                    alias: \"type-declaration\",\n                    greedy: true\n                },\n                {\n                    pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n                    alias: \"type-declaration\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n                    alias: \"static-context\",\n                    greedy: true\n                },\n                {\n                    // yield from\n                    pattern: /(\\byield\\s+)from\\b/i,\n                    lookbehind: true\n                },\n                // `class` is always a keyword unlike other keywords\n                /\\bclass\\b/i,\n                {\n                    // https://www.php.net/manual/en/reserved.keywords.php\n                    //\n                    // keywords cannot be preceded by \"->\"\n                    // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n                    pattern: /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|never|new|or|parent|print|private|protected|public|readonly|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n                    lookbehind: true\n                }\n            ],\n            \"argument-name\": {\n                pattern: /([(,]\\s*)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n                lookbehind: true\n            },\n            \"class-name\": [\n                {\n                    pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n                    greedy: true\n                },\n                {\n                    pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n                    alias: \"class-name-fully-qualified\",\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n                    alias: \"class-name-fully-qualified\",\n                    greedy: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                    alias: \"class-name-fully-qualified\",\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n                    alias: \"type-declaration\",\n                    greedy: true\n                },\n                {\n                    pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"type-declaration\"\n                    ],\n                    greedy: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n                    alias: \"static-context\",\n                    greedy: true\n                },\n                {\n                    pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"static-context\"\n                    ],\n                    greedy: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n                    alias: \"type-hint\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"type-hint\"\n                    ],\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                },\n                {\n                    pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                    alias: \"return-type\",\n                    greedy: true,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n                    alias: [\n                        \"class-name-fully-qualified\",\n                        \"return-type\"\n                    ],\n                    greedy: true,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\\\/\n                    }\n                }\n            ],\n            constant: constant,\n            function: {\n                pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\\\/\n                }\n            },\n            property: {\n                pattern: /(->\\s*)\\w+/,\n                lookbehind: true\n            },\n            number: number,\n            operator: operator,\n            punctuation: punctuation\n        };\n        var string_interpolation = {\n            pattern: /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n            lookbehind: true,\n            inside: Prism.languages.php\n        };\n        var string = [\n            {\n                pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n                alias: \"nowdoc-string\",\n                greedy: true,\n                inside: {\n                    delimiter: {\n                        pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n                        alias: \"symbol\",\n                        inside: {\n                            punctuation: /^<<<'?|[';]$/\n                        }\n                    }\n                }\n            },\n            {\n                pattern: /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n                alias: \"heredoc-string\",\n                greedy: true,\n                inside: {\n                    delimiter: {\n                        pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n                        alias: \"symbol\",\n                        inside: {\n                            punctuation: /^<<<\"?|[\";]$/\n                        }\n                    },\n                    interpolation: string_interpolation\n                }\n            },\n            {\n                pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n                alias: \"backtick-quoted-string\",\n                greedy: true\n            },\n            {\n                pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n                alias: \"single-quoted-string\",\n                greedy: true\n            },\n            {\n                pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n                alias: \"double-quoted-string\",\n                greedy: true,\n                inside: {\n                    interpolation: string_interpolation\n                }\n            }\n        ];\n        Prism.languages.insertBefore(\"php\", \"variable\", {\n            string: string,\n            attribute: {\n                pattern: /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n                greedy: true,\n                inside: {\n                    \"attribute-content\": {\n                        pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n                        lookbehind: true,\n                        // inside can appear subset of php\n                        inside: {\n                            comment: comment,\n                            string: string,\n                            \"attribute-class-name\": [\n                                {\n                                    pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                                    alias: \"class-name\",\n                                    greedy: true,\n                                    lookbehind: true\n                                },\n                                {\n                                    pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                                    alias: [\n                                        \"class-name\",\n                                        \"class-name-fully-qualified\"\n                                    ],\n                                    greedy: true,\n                                    lookbehind: true,\n                                    inside: {\n                                        punctuation: /\\\\/\n                                    }\n                                }\n                            ],\n                            constant: constant,\n                            number: number,\n                            operator: operator,\n                            punctuation: punctuation\n                        }\n                    },\n                    delimiter: {\n                        pattern: /^#\\[|\\]$/,\n                        alias: \"punctuation\"\n                    }\n                }\n            }\n        });\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            if (!/<\\?/.test(env.code)) {\n                return;\n            }\n            var phpPattern = /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"php\", phpPattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"php\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/phpdoc.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/phpdoc.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ phpdoc)\n/* harmony export */ });\n/* harmony import */ var _javadoclike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javadoclike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js\");\n/* harmony import */ var _php_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./php.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js\");\n// @ts-nocheck\n\n\nphpdoc.displayName = \"phpdoc\";\nphpdoc.aliases = [];\n/** @type {import('../core.js').Syntax} */ function phpdoc(Prism) {\n    Prism.register(_javadoclike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_php_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source;\n        Prism.languages.phpdoc = Prism.languages.extend(\"javadoclike\", {\n            parameter: {\n                pattern: RegExp(\"(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:\" + typeExpression + \"\\\\s+)?)\\\\$\\\\w+\"),\n                lookbehind: true\n            }\n        });\n        Prism.languages.insertBefore(\"phpdoc\", \"keyword\", {\n            \"class-name\": [\n                {\n                    pattern: RegExp(\"(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)\" + typeExpression),\n                    lookbehind: true,\n                    inside: {\n                        keyword: /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n                        punctuation: /[|\\\\[\\]()]/\n                    }\n                }\n            ]\n        });\n        Prism.languages.javadoclike.addSupport(\"php\", Prism.languages.phpdoc);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9waHBkb2MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYztBQUNxQztBQUNoQjtBQUNuQ0UsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsUUFBUSxDQUFDTix1REFBb0JBO0lBQ25DSyxNQUFNQyxRQUFRLENBQUNMLCtDQUFZQTtJQUN6QixVQUFVSSxLQUFLO1FBQ2YsSUFBSUUsaUJBQWlCLDhCQUE4QkMsTUFBTTtRQUN6REgsTUFBTUksU0FBUyxDQUFDUCxNQUFNLEdBQUdHLE1BQU1JLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLGVBQWU7WUFDN0RDLFdBQVc7Z0JBQ1RDLFNBQVNDLE9BQ1AsNERBQ0VOLGlCQUNBO2dCQUVKTyxZQUFZO1lBQ2Q7UUFDRjtRQUNBVCxNQUFNSSxTQUFTLENBQUNNLFlBQVksQ0FBQyxVQUFVLFdBQVc7WUFDaEQsY0FBYztnQkFDWjtvQkFDRUgsU0FBU0MsT0FDUCwyRkFDRU47b0JBRUpPLFlBQVk7b0JBQ1pFLFFBQVE7d0JBQ05DLFNBQ0U7d0JBQ0ZDLGFBQWE7b0JBQ2Y7Z0JBQ0Y7YUFDRDtRQUNIO1FBQ0FiLE1BQU1JLFNBQVMsQ0FBQ1UsV0FBVyxDQUFDQyxVQUFVLENBQUMsT0FBT2YsTUFBTUksU0FBUyxDQUFDUCxNQUFNO0lBQ3RFLEdBQUdHO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGhwZG9jLmpzPzgwMjQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKYXZhZG9jbGlrZSBmcm9tICcuL2phdmFkb2NsaWtlLmpzJ1xuaW1wb3J0IHJlZnJhY3RvclBocCBmcm9tICcuL3BocC5qcydcbnBocGRvYy5kaXNwbGF5TmFtZSA9ICdwaHBkb2MnXG5waHBkb2MuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGhwZG9jKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckphdmFkb2NsaWtlKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JQaHApXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHR5cGVFeHByZXNzaW9uID0gLyg/OlxcYlthLXpBLVpdXFx3KnxbfFxcXFxbXFxdXSkrLy5zb3VyY2VcbiAgICBQcmlzbS5sYW5ndWFnZXMucGhwZG9jID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnamF2YWRvY2xpa2UnLCB7XG4gICAgICBwYXJhbWV0ZXI6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICcoQCg/Omdsb2JhbHxwYXJhbXxwcm9wZXJ0eSg/Oi1yZWFkfC13cml0ZSk/fHZhcilcXFxccysoPzonICtcbiAgICAgICAgICAgIHR5cGVFeHByZXNzaW9uICtcbiAgICAgICAgICAgICdcXFxccyspPylcXFxcJFxcXFx3KydcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgncGhwZG9jJywgJ2tleXdvcmQnLCB7XG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgICcoQCg/Omdsb2JhbHxwYWNrYWdlfHBhcmFtfHByb3BlcnR5KD86LXJlYWR8LXdyaXRlKT98cmV0dXJufHN1YnBhY2thZ2V8dGhyb3dzfHZhcilcXFxccyspJyArXG4gICAgICAgICAgICAgIHR5cGVFeHByZXNzaW9uXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAga2V5d29yZDpcbiAgICAgICAgICAgICAgL1xcYig/OmFycmF5fGJvb2x8Ym9vbGVhbnxjYWxsYmFja3xkb3VibGV8ZmFsc2V8ZmxvYXR8aW50fGludGVnZXJ8bWl4ZWR8bnVsbHxvYmplY3R8cmVzb3VyY2V8c2VsZnxzdHJpbmd8dHJ1ZXx2b2lkKVxcYi8sXG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL1t8XFxcXFtcXF0oKV0vXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuamF2YWRvY2xpa2UuYWRkU3VwcG9ydCgncGhwJywgUHJpc20ubGFuZ3VhZ2VzLnBocGRvYylcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9ySmF2YWRvY2xpa2UiLCJyZWZyYWN0b3JQaHAiLCJwaHBkb2MiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwidHlwZUV4cHJlc3Npb24iLCJzb3VyY2UiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXJhbWV0ZXIiLCJwYXR0ZXJuIiwiUmVnRXhwIiwibG9va2JlaGluZCIsImluc2VydEJlZm9yZSIsImluc2lkZSIsImtleXdvcmQiLCJwdW5jdHVhdGlvbiIsImphdmFkb2NsaWtlIiwiYWRkU3VwcG9ydCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/phpdoc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plant-uml.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plant-uml.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ plantUml)\n/* harmony export */ });\n// @ts-nocheck\nplantUml.displayName = \"plant-uml\";\nplantUml.aliases = [\n    \"plantuml\"\n];\n/** @type {import('../core.js').Syntax} */ function plantUml(Prism) {\n    ;\n    (function(Prism) {\n        var variable = /\\$\\w+|%[a-z]+%/;\n        var arrowAttr = /\\[[^[\\]]*\\]/.source;\n        var arrowDirection = /(?:[drlu]|do|down|le|left|ri|right|up)/.source;\n        var arrowBody = \"(?:-+\" + arrowDirection + \"-+|\\\\.+\" + arrowDirection + \"\\\\.+|-+(?:\" + arrowAttr + \"-*)?|\" + arrowAttr + \"-+|\\\\.+(?:\" + arrowAttr + \"\\\\.*)?|\" + arrowAttr + \"\\\\.+)\";\n        var arrowLeft = /(?:<{1,2}|\\/{1,2}|\\\\{1,2}|<\\||[#*^+}xo])/.source;\n        var arrowRight = /(?:>{1,2}|\\/{1,2}|\\\\{1,2}|\\|>|[#*^+{xo])/.source;\n        var arrowPrefix = /[[?]?[ox]?/.source;\n        var arrowSuffix = /[ox]?[\\]?]?/.source;\n        var arrow = arrowPrefix + \"(?:\" + arrowBody + arrowRight + \"|\" + arrowLeft + arrowBody + \"(?:\" + arrowRight + \")?\" + \")\" + arrowSuffix;\n        Prism.languages[\"plant-uml\"] = {\n            comment: {\n                pattern: /(^[ \\t]*)(?:'.*|\\/'[\\s\\S]*?'\\/)/m,\n                lookbehind: true,\n                greedy: true\n            },\n            preprocessor: {\n                pattern: /(^[ \\t]*)!.*/m,\n                lookbehind: true,\n                greedy: true,\n                alias: \"property\",\n                inside: {\n                    variable: variable\n                }\n            },\n            delimiter: {\n                pattern: /(^[ \\t]*)@(?:end|start)uml\\b/m,\n                lookbehind: true,\n                greedy: true,\n                alias: \"punctuation\"\n            },\n            arrow: {\n                pattern: RegExp(/(^|[^-.<>?|\\\\[\\]ox])/.source + arrow + /(?![-.<>?|\\\\\\]ox])/.source),\n                lookbehind: true,\n                greedy: true,\n                alias: \"operator\",\n                inside: {\n                    expression: {\n                        pattern: /(\\[)[^[\\]]+(?=\\])/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    punctuation: /\\[(?=$|\\])|^\\]/\n                }\n            },\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            text: {\n                pattern: /(\\[[ \\t]*[\\r\\n]+(?![\\r\\n]))[^\\]]*(?=\\])/,\n                lookbehind: true,\n                greedy: true,\n                alias: \"string\"\n            },\n            keyword: [\n                {\n                    pattern: /^([ \\t]*)(?:abstract\\s+class|end\\s+(?:box|fork|group|merge|note|ref|split|title)|(?:fork|split)(?:\\s+again)?|activate|actor|agent|alt|annotation|artifact|autoactivate|autonumber|backward|binary|boundary|box|break|caption|card|case|circle|class|clock|cloud|collections|component|concise|control|create|critical|database|deactivate|destroy|detach|diamond|else|elseif|end|end[hr]note|endif|endswitch|endwhile|entity|enum|file|folder|footer|frame|group|[hr]?note|header|hexagon|hide|if|interface|label|legend|loop|map|namespace|network|newpage|node|nwdiag|object|opt|package|page|par|participant|person|queue|rectangle|ref|remove|repeat|restore|return|robust|scale|set|show|skinparam|stack|start|state|stop|storage|switch|title|together|usecase|usecase\\/|while)(?=\\s|$)/m,\n                    lookbehind: true,\n                    greedy: true\n                },\n                /\\b(?:elseif|equals|not|while)(?=\\s*\\()/,\n                /\\b(?:as|is|then)\\b/\n            ],\n            divider: {\n                pattern: /^==.+==$/m,\n                greedy: true,\n                alias: \"important\"\n            },\n            time: {\n                pattern: /@(?:\\d+(?:[:/]\\d+){2}|[+-]?\\d+|:[a-z]\\w*(?:[+-]\\d+)?)\\b/i,\n                greedy: true,\n                alias: \"number\"\n            },\n            color: {\n                pattern: /#(?:[a-z_]+|[a-fA-F0-9]+)\\b/,\n                alias: \"symbol\"\n            },\n            variable: variable,\n            punctuation: /[:,;()[\\]{}]|\\.{3}/\n        };\n        Prism.languages[\"plant-uml\"].arrow.inside.expression.inside = Prism.languages[\"plant-uml\"];\n        Prism.languages[\"plantuml\"] = Prism.languages[\"plant-uml\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plant-uml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plsql.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plsql.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ plsql)\n/* harmony export */ });\n/* harmony import */ var _sql_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js\");\n// @ts-nocheck\n\nplsql.displayName = \"plsql\";\nplsql.aliases = [];\n/** @type {import('../core.js').Syntax} */ function plsql(Prism) {\n    Prism.register(_sql_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.plsql = Prism.languages.extend(\"sql\", {\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n            greedy: true\n        },\n        // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n        keyword: /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n        // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n        operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n    });\n    Prism.languages.insertBefore(\"plsql\", \"operator\", {\n        label: {\n            pattern: /<<\\s*\\w+\\s*>>/,\n            alias: \"symbol\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wbHNxbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDcUI7QUFDbkNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsK0NBQVlBO0lBQzNCSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsT0FBTztRQUNwREMsU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLHlHQUF5RztRQUN6R0MsU0FDRTtRQUNGLGlKQUFpSjtRQUNqSkMsVUFBVTtJQUNaO0lBQ0FSLE1BQU1FLFNBQVMsQ0FBQ08sWUFBWSxDQUFDLFNBQVMsWUFBWTtRQUNoREMsT0FBTztZQUNMTCxTQUFTO1lBQ1RNLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcGxzcWwuanM/MzFjMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvclNxbCBmcm9tICcuL3NxbC5qcydcbnBsc3FsLmRpc3BsYXlOYW1lID0gJ3Bsc3FsJ1xucGxzcWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGxzcWwoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yU3FsKVxuICBQcmlzbS5sYW5ndWFnZXMucGxzcWwgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdzcWwnLCB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcKltcXHNcXFNdKj9cXCpcXC98LS0uKi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIC8vIGh0dHBzOi8vZG9jcy5vcmFjbGUuY29tL2VuL2RhdGFiYXNlL29yYWNsZS9vcmFjbGUtZGF0YWJhc2UvMjEvbG5wbHMvcGxzcWwtcmVzZXJ2ZWQtd29yZHMta2V5d29yZHMuaHRtbFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QXxBQ0NFU1NJQkxFfEFERHxBR0VOVHxBR0dSRUdBVEV8QUxMfEFMVEVSfEFORHxBTll8QVJSQVl8QVN8QVNDfEFUfEFUVFJJQlVURXxBVVRISUR8QVZHfEJFR0lOfEJFVFdFRU58QkZJTEVfQkFTRXxCSU5BUll8QkxPQl9CQVNFfEJMT0NLfEJPRFl8Qk9USHxCT1VORHxCVUxLfEJZfEJZVEV8Q3xDQUxMfENBTExJTkd8Q0FTQ0FERXxDQVNFfENIQVJ8Q0hBUkFDVEVSfENIQVJTRVR8Q0hBUlNFVEZPUk18Q0hBUlNFVElEfENIQVJfQkFTRXxDSEVDS3xDTE9CX0JBU0V8Q0xPTkV8Q0xPU0V8Q0xVU1RFUnxDTFVTVEVSU3xDT0xBVVRIfENPTExFQ1R8Q09MVU1OU3xDT01NRU5UfENPTU1JVHxDT01NSVRURUR8Q09NUElMRUR8Q09NUFJFU1N8Q09OTkVDVHxDT05TVEFOVHxDT05TVFJVQ1RPUnxDT05URVhUfENPTlRJTlVFfENPTlZFUlR8Q09VTlR8Q1JBU0h8Q1JFQVRFfENSRURFTlRJQUx8Q1VSUkVOVHxDVVJTT1J8Q1VTVE9NREFUVU18REFOR0xJTkd8REFUQXxEQVRFfERBVEVfQkFTRXxEQVl8REVDTEFSRXxERUZBVUxUfERFRklORXxERUxFVEV8REVTQ3xERVRFUk1JTklTVElDfERJUkVDVE9SWXxESVNUSU5DVHxET1VCTEV8RFJPUHxEVVJBVElPTnxFTEVNRU5UfEVMU0V8RUxTSUZ8RU1QVFl8RU5EfEVTQ0FQRXxFWENFUFR8RVhDRVBUSU9OfEVYQ0VQVElPTlN8RVhDTFVTSVZFfEVYRUNVVEV8RVhJU1RTfEVYSVR8RVhURVJOQUx8RkVUQ0h8RklOQUx8RklSU1R8RklYRUR8RkxPQVR8Rk9SfEZPUkFMTHxGT1JDRXxGUk9NfEZVTkNUSU9OfEdFTkVSQUx8R09UT3xHUkFOVHxHUk9VUHxIQVNIfEhBVklOR3xIRUFQfEhJRERFTnxIT1VSfElERU5USUZJRUR8SUZ8SU1NRURJQVRFfElNTVVUQUJMRXxJTnxJTkNMVURJTkd8SU5ERVh8SU5ERVhFU3xJTkRJQ0FUT1J8SU5ESUNFU3xJTkZJTklURXxJTlNFUlR8SU5TVEFOVElBQkxFfElOVHxJTlRFUkZBQ0V8SU5URVJTRUNUfElOVEVSVkFMfElOVE98SU5WQUxJREFURXxJU3xJU09MQVRJT058SkFWQXxMQU5HVUFHRXxMQVJHRXxMRUFESU5HfExFTkdUSHxMRVZFTHxMSUJSQVJZfExJS0V8TElLRTJ8TElLRTR8TElLRUN8TElNSVR8TElNSVRFRHxMT0NBTHxMT0NLfExPTkd8TE9PUHxNQVB8TUFYfE1BWExFTnxNRU1CRVJ8TUVSR0V8TUlOfE1JTlVTfE1JTlVURXxNT0R8TU9ERXxNT0RJRll8TU9OVEh8TVVMVElTRVR8TVVUQUJMRXxOQU1FfE5BTnxOQVRJT05BTHxOQVRJVkV8TkNIQVJ8TkVXfE5PQ09NUFJFU1N8Tk9DT1BZfE5PVHxOT1dBSVR8TlVMTHxOVU1CRVJfQkFTRXxPQkpFQ1R8T0NJQ09MTHxPQ0lEQVRFfE9DSURBVEVUSU1FfE9DSURVUkFUSU9OfE9DSUlOVEVSVkFMfE9DSUxPQkxPQ0FUT1J8T0NJTlVNQkVSfE9DSVJBV3xPQ0lSRUZ8T0NJUkVGQ1VSU09SfE9DSVJPV0lEfE9DSVNUUklOR3xPQ0lUWVBFfE9GfE9MRHxPTnxPTkxZfE9QQVFVRXxPUEVOfE9QRVJBVE9SfE9QVElPTnxPUnxPUkFDTEV8T1JBREFUQXxPUkRFUnxPUkdBTklaQVRJT058T1JMQU5ZfE9STFZBUll8T1RIRVJTfE9VVHxPVkVSTEFQU3xPVkVSUklESU5HfFBBQ0tBR0V8UEFSQUxMRUxfRU5BQkxFfFBBUkFNRVRFUnxQQVJBTUVURVJTfFBBUkVOVHxQQVJUSVRJT058UEFTQ0FMfFBFUlNJU1RBQkxFfFBJUEV8UElQRUxJTkVEfFBMVUdHQUJMRXxQT0xZTU9SUEhJQ3xQUkFHTUF8UFJFQ0lTSU9OfFBSSU9SfFBSSVZBVEV8UFJPQ0VEVVJFfFBVQkxJQ3xSQUlTRXxSQU5HRXxSQVd8UkVBRHxSRUNPUkR8UkVGfFJFRkVSRU5DRXxSRUxJRVNfT058UkVNfFJFTUFJTkRFUnxSRU5BTUV8UkVTT1VSQ0V8UkVTVUxUfFJFU1VMVF9DQUNIRXxSRVRVUk58UkVUVVJOSU5HfFJFVkVSU0V8UkVWT0tFfFJPTExCQUNLfFJPV3xTQU1QTEV8U0FWRXxTQVZFUE9JTlR8U0IxfFNCMnxTQjR8U0VDT05EfFNFR01FTlR8U0VMRUNUfFNFTEZ8U0VQQVJBVEV8U0VRVUVOQ0V8U0VSSUFMSVpBQkxFfFNFVHxTSEFSRXxTSE9SVHxTSVpFfFNJWkVfVHxTT01FfFNQQVJTRXxTUUx8U1FMQ09ERXxTUUxEQVRBfFNRTE5BTUV8U1FMU1RBVEV8U1RBTkRBUkR8U1RBUlR8U1RBVElDfFNURERFVnxTVE9SRUR8U1RSSU5HfFNUUlVDVHxTVFlMRXxTVUJNVUxUSVNFVHxTVUJQQVJUSVRJT058U1VCU1RJVFVUQUJMRXxTVUJUWVBFfFNVTXxTWU5PTllNfFRBQkFVVEh8VEFCTEV8VERPfFRIRXxUSEVOfFRJTUV8VElNRVNUQU1QfFRJTUVaT05FX0FCQlJ8VElNRVpPTkVfSE9VUnxUSU1FWk9ORV9NSU5VVEV8VElNRVpPTkVfUkVHSU9OfFRPfFRSQUlMSU5HfFRSQU5TQUNUSU9OfFRSQU5TQUNUSU9OQUx8VFJVU1RFRHxUWVBFfFVCMXxVQjJ8VUI0fFVOREVSfFVOSU9OfFVOSVFVRXxVTlBMVUd8VU5TSUdORUR8VU5UUlVTVEVEfFVQREFURXxVU0V8VVNJTkd8VkFMSVNUfFZBTFVFfFZBTFVFU3xWQVJJQUJMRXxWQVJJQU5DRXxWQVJSQVl8VkFSWUlOR3xWSUVXfFZJRVdTfFZPSUR8V0hFTnxXSEVSRXxXSElMRXxXSVRIfFdPUkt8V1JBUFBFRHxXUklURXxZRUFSfFpPTkUpXFxiL2ksXG4gICAgLy8gaHR0cHM6Ly9kb2NzLm9yYWNsZS5jb20vZW4vZGF0YWJhc2Uvb3JhY2xlL29yYWNsZS1kYXRhYmFzZS8yMS9sbnBscy9wbHNxbC1sYW5ndWFnZS1mdW5kYW1lbnRhbHMuaHRtbCNHVUlELTk2QTQyRjdDLTdBNzEtNEI5MC04MjU1LUNBOUM4QkQ5NzIyRVxuICAgIG9wZXJhdG9yOiAvOj0/fD0+fFs8Pl5+IV09fFxcLlxcLnxcXHxcXHx8XFwqXFwqfFstKyovJTw+PUBdL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwbHNxbCcsICdvcGVyYXRvcicsIHtcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLzw8XFxzKlxcdytcXHMqPj4vLFxuICAgICAgYWxpYXM6ICdzeW1ib2wnXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvclNxbCIsInBsc3FsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwibGFiZWwiLCJhbGlhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plsql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powerquery.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powerquery.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ powerquery)\n/* harmony export */ });\n// @ts-nocheck\npowerquery.displayName = \"powerquery\";\npowerquery.aliases = [\n    \"mscript\",\n    \"pq\"\n];\n/** @type {import('../core.js').Syntax} */ function powerquery(Prism) {\n    // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n    Prism.languages.powerquery = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"quoted-identifier\": {\n            pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        string: {\n            pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n            greedy: true\n        },\n        constant: [\n            /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n            /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n            /\\bOccurrence\\.(?:All|First|Last)\\b/,\n            /\\bOrder\\.(?:Ascending|Descending)\\b/,\n            /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n            /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n            /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n            /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n            /\\bGroupKind\\.(?:Global|Local)\\b/,\n            /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n            /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n            /\\bJoinSide\\.(?:Left|Right)\\b/,\n            /\\bPrecision\\.(?:Decimal|Double)\\b/,\n            /\\bRelativePosition\\.From(?:End|Start)\\b/,\n            /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n            /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n            /\\bnull\\b/\n        ],\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n        function: {\n            pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n            lookbehind: true\n        },\n        \"data-type\": {\n            pattern: /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n            alias: \"class-name\"\n        },\n        number: {\n            pattern: /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n            lookbehind: true\n        },\n        operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n        punctuation: /[,;\\[\\](){}]/\n    };\n    Prism.languages.pq = Prism.languages[\"powerquery\"];\n    Prism.languages.mscript = Prism.languages[\"powerquery\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wb3dlcnF1ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7SUFBVztDQUFLO0FBRXRDLHdDQUF3QyxHQUN6QixTQUFTRixXQUFXRyxLQUFLO0lBQ3RDLHFGQUFxRjtJQUVyRkEsTUFBTUMsU0FBUyxDQUFDSixVQUFVLEdBQUc7UUFDM0JLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7UUFDVjtRQUNBLHFCQUFxQjtZQUNuQkYsU0FBUztZQUNURSxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBRSxVQUFVO1lBQ1I7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBQ0RDLFNBQVM7UUFDVEMsU0FDRTtRQUNGQyxVQUFVO1lBQ1JQLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0EsYUFBYTtZQUNYRCxTQUNFO1lBQ0ZRLE9BQU87UUFDVDtRQUNBQyxRQUFRO1lBQ05ULFNBQ0U7WUFDRkMsWUFBWTtRQUNkO1FBQ0FTLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FkLE1BQU1DLFNBQVMsQ0FBQ2MsRUFBRSxHQUFHZixNQUFNQyxTQUFTLENBQUMsYUFBYTtJQUNsREQsTUFBTUMsU0FBUyxDQUFDZSxPQUFPLEdBQUdoQixNQUFNQyxTQUFTLENBQUMsYUFBYTtBQUN6RCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wb3dlcnF1ZXJ5LmpzPzZlYzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnBvd2VycXVlcnkuZGlzcGxheU5hbWUgPSAncG93ZXJxdWVyeSdcbnBvd2VycXVlcnkuYWxpYXNlcyA9IFsnbXNjcmlwdCcsICdwcSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcG93ZXJxdWVyeShQcmlzbSkge1xuICAvLyBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9wb3dlcnF1ZXJ5LW0vcG93ZXItcXVlcnktbS1sYW5ndWFnZS1zcGVjaWZpY2F0aW9uXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLnBvd2VycXVlcnkgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qP1xcKlxcL3xcXC9cXC8uKikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3F1b3RlZC1pZGVudGlmaWVyJzoge1xuICAgICAgcGF0dGVybjogLyNcIig/OlteXCJcXHJcXG5dfFwiXCIpKlwiKD8hXCIpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKD86IyEpP1wiKD86W15cIlxcclxcbl18XCJcIikqXCIoPyFcIikvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBjb25zdGFudDogW1xuICAgICAgL1xcYkRheVxcLig/OkZyaWRheXxNb25kYXl8U2F0dXJkYXl8U3VuZGF5fFRodXJzZGF5fFR1ZXNkYXl8V2VkbmVzZGF5KVxcYi8sXG4gICAgICAvXFxiVHJhY2VMZXZlbFxcLig/OkNyaXRpY2FsfEVycm9yfEluZm9ybWF0aW9ufFZlcmJvc2V8V2FybmluZylcXGIvLFxuICAgICAgL1xcYk9jY3VycmVuY2VcXC4oPzpBbGx8Rmlyc3R8TGFzdClcXGIvLFxuICAgICAgL1xcYk9yZGVyXFwuKD86QXNjZW5kaW5nfERlc2NlbmRpbmcpXFxiLyxcbiAgICAgIC9cXGJSb3VuZGluZ01vZGVcXC4oPzpBd2F5RnJvbVplcm98RG93bnxUb0V2ZW58VG93YXJkWmVyb3xVcClcXGIvLFxuICAgICAgL1xcYk1pc3NpbmdGaWVsZFxcLig/OkVycm9yfElnbm9yZXxVc2VOdWxsKVxcYi8sXG4gICAgICAvXFxiUXVvdGVTdHlsZVxcLig/OkNzdnxOb25lKVxcYi8sXG4gICAgICAvXFxiSm9pbktpbmRcXC4oPzpGdWxsT3V0ZXJ8SW5uZXJ8TGVmdEFudGl8TGVmdE91dGVyfFJpZ2h0QW50aXxSaWdodE91dGVyKVxcYi8sXG4gICAgICAvXFxiR3JvdXBLaW5kXFwuKD86R2xvYmFsfExvY2FsKVxcYi8sXG4gICAgICAvXFxiRXh0cmFWYWx1ZXNcXC4oPzpFcnJvcnxJZ25vcmV8TGlzdClcXGIvLFxuICAgICAgL1xcYkpvaW5BbGdvcml0aG1cXC4oPzpEeW5hbWljfExlZnRIYXNofExlZnRJbmRleHxQYWlyd2lzZUhhc2h8UmlnaHRIYXNofFJpZ2h0SW5kZXh8U29ydE1lcmdlKVxcYi8sXG4gICAgICAvXFxiSm9pblNpZGVcXC4oPzpMZWZ0fFJpZ2h0KVxcYi8sXG4gICAgICAvXFxiUHJlY2lzaW9uXFwuKD86RGVjaW1hbHxEb3VibGUpXFxiLyxcbiAgICAgIC9cXGJSZWxhdGl2ZVBvc2l0aW9uXFwuRnJvbSg/OkVuZHxTdGFydClcXGIvLFxuICAgICAgL1xcYlRleHRFbmNvZGluZ1xcLig/OkFzY2lpfEJpZ0VuZGlhblVuaWNvZGV8VW5pY29kZXxVdGYxNnxVdGY4fFdpbmRvd3MpXFxiLyxcbiAgICAgIC9cXGIoPzpBbnl8QmluYXJ5fERhdGV8RGF0ZVRpbWV8RGF0ZVRpbWVab25lfER1cmF0aW9ufEZ1bmN0aW9ufEludDE2fEludDMyfEludDY0fEludDh8TGlzdHxMb2dpY2FsfE5vbmV8TnVtYmVyfFJlY29yZHxUYWJsZXxUZXh0fFRpbWUpXFwuVHlwZVxcYi8sXG4gICAgICAvXFxibnVsbFxcYi9cbiAgICBdLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbmR8YXN8ZWFjaHxlbHNlfGVycm9yfGlmfGlufGlzfGxldHxtZXRhfG5vdHxudWxsYWJsZXxvcHRpb25hbHxvcnxvdGhlcndpc2V8c2VjdGlvbnxzaGFyZWR8dGhlbnx0cnl8dHlwZSlcXGJ8Iyg/OmJpbmFyeXxkYXRlfGRhdGV0aW1lfGRhdGV0aW1lem9uZXxkdXJhdGlvbnxpbmZpbml0eXxuYW58c2VjdGlvbnN8c2hhcmVkfHRhYmxlfHRpbWUpXFxiLyxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjogLyhefFteI1xcdy5dKVthLXpfXVtcXHcuXSooPz1cXHMqXFwoKS9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgJ2RhdGEtdHlwZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzphbnl8YW55bm9ubnVsbHxiaW5hcnl8ZGF0ZXxkYXRldGltZXxkYXRldGltZXpvbmV8ZHVyYXRpb258ZnVuY3Rpb258bGlzdHxsb2dpY2FsfG5vbmV8bnVtYmVyfHJlY29yZHx0YWJsZXx0ZXh0fHRpbWUpXFxiLyxcbiAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICB9LFxuICAgIG51bWJlcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYjB4W1xcZGEtZl0rXFxifCg/OlsrLV0/KD86XFxiXFxkK1xcLik/XFxiXFxkK3xbKy1dXFwuXFxkK3woXnxbXi5dKVxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/XFxiL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBvcGVyYXRvcjogL1stKypcXC8mP0BeXXw8KD86PT4/fD4pP3w+PT98PT4/fFxcLlxcLlxcLj8vLFxuICAgIHB1bmN0dWF0aW9uOiAvWyw7XFxbXFxdKCl7fV0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnBxID0gUHJpc20ubGFuZ3VhZ2VzWydwb3dlcnF1ZXJ5J11cbiAgUHJpc20ubGFuZ3VhZ2VzLm1zY3JpcHQgPSBQcmlzbS5sYW5ndWFnZXNbJ3Bvd2VycXVlcnknXVxufVxuIl0sIm5hbWVzIjpbInBvd2VycXVlcnkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsImNvbnN0YW50IiwiYm9vbGVhbiIsImtleXdvcmQiLCJmdW5jdGlvbiIsImFsaWFzIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsInBxIiwibXNjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powerquery.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powershell.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powershell.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ powershell)\n/* harmony export */ });\n// @ts-nocheck\npowershell.displayName = \"powershell\";\npowershell.aliases = [];\n/** @type {import('../core.js').Syntax} */ function powershell(Prism) {\n    ;\n    (function(Prism) {\n        var powershell = Prism.languages.powershell = {\n            comment: [\n                {\n                    pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(^|[^`])#.*/,\n                    lookbehind: true\n                }\n            ],\n            string: [\n                {\n                    pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n                    greedy: true,\n                    inside: null // see below\n                },\n                {\n                    pattern: /'(?:[^']|'')*'/,\n                    greedy: true\n                }\n            ],\n            // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n            // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n            namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n            boolean: /\\$(?:false|true)\\b/i,\n            variable: /\\$\\w+\\b/,\n            // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n            // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n            // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n            function: [\n                /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n                /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n            ],\n            // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n            keyword: /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n            operator: {\n                pattern: /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n                lookbehind: true\n            },\n            punctuation: /[|{}[\\];(),.]/\n        };\n        // Variable interpolation inside strings, and nested expressions\n        powershell.string[0].inside = {\n            function: {\n                // Allow for one level of nesting\n                pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n                lookbehind: true,\n                inside: powershell\n            },\n            boolean: powershell.boolean,\n            variable: powershell.variable\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wb3dlcnNoZWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHLEVBQUU7QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLFdBQVdHLEtBQUs7O0lBQ3BDLFVBQVVBLEtBQUs7UUFDZixJQUFJSCxhQUFjRyxNQUFNQyxTQUFTLENBQUNKLFVBQVUsR0FBRztZQUM3Q0ssU0FBUztnQkFDUDtvQkFDRUMsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDthQUNEO1lBQ0RDLFFBQVE7Z0JBQ047b0JBQ0VGLFNBQVM7b0JBQ1RHLFFBQVE7b0JBQ1JDLFFBQVEsS0FBSyxZQUFZO2dCQUMzQjtnQkFDQTtvQkFDRUosU0FBUztvQkFDVEcsUUFBUTtnQkFDVjthQUNEO1lBQ0QseUhBQXlIO1lBQ3pILHVHQUF1RztZQUN2R0UsV0FBVztZQUNYQyxTQUFTO1lBQ1RDLFVBQVU7WUFDVixnSEFBZ0g7WUFDaEgsd0ZBQXdGO1lBQ3hGLHlHQUF5RztZQUN6R0MsVUFBVTtnQkFDUjtnQkFDQTthQUNEO1lBQ0QsK0RBQStEO1lBQy9EQyxTQUNFO1lBQ0ZDLFVBQVU7Z0JBQ1JWLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBVSxhQUFhO1FBQ2Y7UUFFQSxnRUFBZ0U7UUFDaEVqQixXQUFXUSxNQUFNLENBQUMsRUFBRSxDQUFDRSxNQUFNLEdBQUc7WUFDNUJJLFVBQVU7Z0JBQ1IsaUNBQWlDO2dCQUNqQ1IsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkcsUUFBUVY7WUFDVjtZQUNBWSxTQUFTWixXQUFXWSxPQUFPO1lBQzNCQyxVQUFVYixXQUFXYSxRQUFRO1FBQy9CO0lBQ0YsR0FBR1Y7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wb3dlcnNoZWxsLmpzPzAwNDciXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnBvd2Vyc2hlbGwuZGlzcGxheU5hbWUgPSAncG93ZXJzaGVsbCdcbnBvd2Vyc2hlbGwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcG93ZXJzaGVsbChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBwb3dlcnNoZWxsID0gKFByaXNtLmxhbmd1YWdlcy5wb3dlcnNoZWxsID0ge1xuICAgICAgY29tbWVudDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhefFteYF0pPCNbXFxzXFxTXSo/Iz4vLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXmBdKSMuKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgc3RyaW5nOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXCIoPzpgW1xcc1xcU118W15gXCJdKSpcIi8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8nKD86W14nXXwnJykqJy8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAvLyBNYXRjaGVzIG5hbWUgc3BhY2VzIGFzIHdlbGwgYXMgY2FzdHMsIGF0dHJpYnV0ZSBkZWNvcmF0b3JzLiBGb3JjZSBzdGFydGluZyB3aXRoIGxldHRlciB0byBhdm9pZCBtYXRjaGluZyBhcnJheSBpbmRpY2VzXG4gICAgICAvLyBTdXBwb3J0cyB0d28gbGV2ZWxzIG9mIG5lc3RlZCBicmFja2V0cyAoZS5nLiBgW091dHB1dFR5cGUoW1N5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RbaW50XV0pXWApXG4gICAgICBuYW1lc3BhY2U6IC9cXFtbYS16XSg/OlxcWyg/OlxcW1teXFxdXSpcXF18W15cXFtcXF1dKSpcXF18W15cXFtcXF1dKSpcXF0vaSxcbiAgICAgIGJvb2xlYW46IC9cXCQoPzpmYWxzZXx0cnVlKVxcYi9pLFxuICAgICAgdmFyaWFibGU6IC9cXCRcXHcrXFxiLyxcbiAgICAgIC8vIENtZGxldHMgYW5kIGFsaWFzZXMuIEFsaWFzZXMgc2hvdWxkIGNvbWUgbGFzdCwgb3RoZXJ3aXNlIFwid3JpdGVcIiBnZXRzIHByZWZlcnJlZCBvdmVyIFwid3JpdGUtaG9zdFwiIGZvciBleGFtcGxlXG4gICAgICAvLyBHZXQtQ29tbWFuZCB8ID97ICRfLk1vZHVsZU5hbWUgLW1hdGNoIFwiTWljcm9zb2Z0LlBvd2VyU2hlbGwuKFV0aWx8Q29yZXxNYW5hZ2VtZW50KVwiIH1cbiAgICAgIC8vIEdldC1BbGlhcyB8ID97ICRfLlJlZmVyZW5jZWRDb21tYW5kLk1vZHVsZS5OYW1lIC1tYXRjaCBcIk1pY3Jvc29mdC5Qb3dlclNoZWxsLihVdGlsfENvcmV8TWFuYWdlbWVudClcIiB9XG4gICAgICBmdW5jdGlvbjogW1xuICAgICAgICAvXFxiKD86QWRkfEFwcHJvdmV8QXNzZXJ0fEJhY2t1cHxCbG9ja3xDaGVja3BvaW50fENsZWFyfENsb3NlfENvbXBhcmV8Q29tcGxldGV8Q29tcHJlc3N8Q29uZmlybXxDb25uZWN0fENvbnZlcnR8Q29udmVydEZyb218Q29udmVydFRvfENvcHl8RGVidWd8RGVueXxEaXNhYmxlfERpc2Nvbm5lY3R8RGlzbW91bnR8RWRpdHxFbmFibGV8RW50ZXJ8RXhpdHxFeHBhbmR8RXhwb3J0fEZpbmR8Rm9yRWFjaHxGb3JtYXR8R2V0fEdyYW50fEdyb3VwfEhpZGV8SW1wb3J0fEluaXRpYWxpemV8SW5zdGFsbHxJbnZva2V8Sm9pbnxMaW1pdHxMb2NrfE1lYXN1cmV8TWVyZ2V8TW92ZXxOZXd8T3BlbnxPcHRpbWl6ZXxPdXR8UGluZ3xQb3B8UHJvdGVjdHxQdWJsaXNofFB1c2h8UmVhZHxSZWNlaXZlfFJlZG98UmVnaXN0ZXJ8UmVtb3ZlfFJlbmFtZXxSZXBhaXJ8UmVxdWVzdHxSZXNldHxSZXNpemV8UmVzb2x2ZXxSZXN0YXJ0fFJlc3RvcmV8UmVzdW1lfFJldm9rZXxTYXZlfFNlYXJjaHxTZWxlY3R8U2VuZHxTZXR8U2hvd3xTa2lwfFNvcnR8U3BsaXR8U3RhcnR8U3RlcHxTdG9wfFN1Ym1pdHxTdXNwZW5kfFN3aXRjaHxTeW5jfFRlZXxUZXN0fFRyYWNlfFVuYmxvY2t8VW5kb3xVbmluc3RhbGx8VW5sb2NrfFVucHJvdGVjdHxVbnB1Ymxpc2h8VW5yZWdpc3RlcnxVcGRhdGV8VXNlfFdhaXR8V2F0Y2h8V2hlcmV8V3JpdGUpLVthLXpdK1xcYi9pLFxuICAgICAgICAvXFxiKD86YWN8Y2F0fGNoZGlyfGNsY3xjbGl8Y2xwfGNsdnxjb21wYXJlfGNvcHl8Y3B8Y3BpfGNwcHxjdnBhfGRicHxkZWx8ZGlmZnxkaXJ8ZWJwfGVjaG98ZXBhbHxlcGNzdnxlcHNufGVyYXNlfGZjfGZsfGZ0fGZ3fGdhbHxnYnB8Z2N8Z2NpfGdjc3xnZHJ8Z2l8Z2x8Z218Z3B8Z3BzfGdyb3VwfGdzdnxndXxndnxnd21pfGlleHxpaXxpcGFsfGlwY3N2fGlwc258aXJtfGl3bWl8aXdyfGtpbGx8bHB8bHN8bWVhc3VyZXxtaXxtb3VudHxtb3ZlfG1wfG12fG5hbHxuZHJ8bml8bnZ8b2d2fHBvcGR8cHN8cHVzaGR8cHdkfHJicHxyZHxyZHJ8cmVufHJpfHJtfHJtZGlyfHJuaXxybnB8cnB8cnZ8cnZwYXxyd21pfHNhbHxzYXBzfHNhc3Z8c2JwfHNjfHNlbGVjdHxzZXR8c2hjbXxzaXxzbHxzbGVlcHxzbHN8c29ydHxzcHxzcHBzfHNwc3Z8c3RhcnR8c3Z8c3dtaXx0ZWV8dHJjbXx0eXBlfHdyaXRlKVxcYi9pXG4gICAgICBdLFxuICAgICAgLy8gcGVyIGh0dHA6Ly90ZWNobmV0Lm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9oaDg0Nzc0NC5hc3B4XG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86QmVnaW58QnJlYWt8Q2F0Y2h8Q2xhc3N8Q29udGludWV8RGF0YXxEZWZpbmV8RG98RHluYW1pY1BhcmFtfEVsc2V8RWxzZUlmfEVuZHxFeGl0fEZpbHRlcnxGaW5hbGx5fEZvcnxGb3JFYWNofEZyb218RnVuY3Rpb258SWZ8SW5saW5lU2NyaXB0fFBhcmFsbGVsfFBhcmFtfFByb2Nlc3N8UmV0dXJufFNlcXVlbmNlfFN3aXRjaHxUaHJvd3xUcmFwfFRyeXxVbnRpbHxVc2luZ3xWYXJ8V2hpbGV8V29ya2Zsb3cpXFxiL2ksXG4gICAgICBvcGVyYXRvcjoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxcXFcpKD86IXwtKD86Yj8oPzphbmR8eD9vcil8YXN8KD86Tm90KT8oPzpDb250YWluc3xJbnxMaWtlfE1hdGNoKXxlcXxnZXxndHxpcyg/Ok5vdCk/fEpvaW58bGV8bHR8bmV8bm90fFJlcGxhY2V8c2hbbHJdKVxcYnwtWy09XT98XFwrWys9XT98WypcXC8lXT0/KS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgcHVuY3R1YXRpb246IC9bfHt9W1xcXTsoKSwuXS9cbiAgICB9KVxuXG4gICAgLy8gVmFyaWFibGUgaW50ZXJwb2xhdGlvbiBpbnNpZGUgc3RyaW5ncywgYW5kIG5lc3RlZCBleHByZXNzaW9uc1xuICAgIHBvd2Vyc2hlbGwuc3RyaW5nWzBdLmluc2lkZSA9IHtcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIC8vIEFsbG93IGZvciBvbmUgbGV2ZWwgb2YgbmVzdGluZ1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15gXSlcXCRcXCgoPzpcXCRcXChbXlxcclxcbigpXSpcXCl8KD8hXFwkXFwoKVteXFxyXFxuKV0pKlxcKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZTogcG93ZXJzaGVsbFxuICAgICAgfSxcbiAgICAgIGJvb2xlYW46IHBvd2Vyc2hlbGwuYm9vbGVhbixcbiAgICAgIHZhcmlhYmxlOiBwb3dlcnNoZWxsLnZhcmlhYmxlXG4gICAgfVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJwb3dlcnNoZWxsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJzdHJpbmciLCJncmVlZHkiLCJpbnNpZGUiLCJuYW1lc3BhY2UiLCJib29sZWFuIiwidmFyaWFibGUiLCJmdW5jdGlvbiIsImtleXdvcmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powershell.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/processing.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/processing.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ processing)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nprocessing.displayName = \"processing\";\nprocessing.aliases = [];\n/** @type {import('../core.js').Syntax} */ function processing(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.processing = Prism.languages.extend(\"clike\", {\n        keyword: /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n        // Spaces are allowed between function name and parenthesis\n        function: /\\b\\w+(?=\\s*\\()/,\n        operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n    });\n    Prism.languages.insertBefore(\"processing\", \"number\", {\n        // Special case: XML is a type\n        constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n        type: {\n            pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n            alias: \"class-name\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9jZXNzaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsV0FBV0MsV0FBVyxHQUFHO0FBQ3pCRCxXQUFXRSxPQUFPLEdBQUcsRUFBRTtBQUV2Qix3Q0FBd0MsR0FDekIsU0FBU0YsV0FBV0csS0FBSztJQUN0Q0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQzNEQyxTQUNFO1FBQ0YsMkRBQTJEO1FBQzNEQyxVQUFVO1FBQ1ZDLFVBQVU7SUFDWjtJQUNBTixNQUFNRSxTQUFTLENBQUNLLFlBQVksQ0FBQyxjQUFjLFVBQVU7UUFDbkQsOEJBQThCO1FBQzlCQyxVQUFVO1FBQ1ZDLE1BQU07WUFDSkMsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Byb2Nlc3NpbmcuanM/OTM3YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5wcm9jZXNzaW5nLmRpc3BsYXlOYW1lID0gJ3Byb2Nlc3NpbmcnXG5wcm9jZXNzaW5nLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByb2Nlc3NpbmcoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIFByaXNtLmxhbmd1YWdlcy5wcm9jZXNzaW5nID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpicmVha3xjYXNlfGNhdGNofGNsYXNzfGNvbnRpbnVlfGRlZmF1bHR8ZWxzZXxleHRlbmRzfGZpbmFsfGZvcnxpZnxpbXBsZW1lbnRzfGltcG9ydHxuZXd8bnVsbHxwcml2YXRlfHB1YmxpY3xyZXR1cm58c3RhdGljfHN1cGVyfHN3aXRjaHx0aGlzfHRyeXx2b2lkfHdoaWxlKVxcYi8sXG4gICAgLy8gU3BhY2VzIGFyZSBhbGxvd2VkIGJldHdlZW4gZnVuY3Rpb24gbmFtZSBhbmQgcGFyZW50aGVzaXNcbiAgICBmdW5jdGlvbjogL1xcYlxcdysoPz1cXHMqXFwoKS8sXG4gICAgb3BlcmF0b3I6IC88Wzw9XT98Pls+PV0/fCYmP3xcXHxcXHw/fFslP118WyE9K1xcLSpcXC9dPT8vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Byb2Nlc3NpbmcnLCAnbnVtYmVyJywge1xuICAgIC8vIFNwZWNpYWwgY2FzZTogWE1MIGlzIGEgdHlwZVxuICAgIGNvbnN0YW50OiAvXFxiKD8hWE1MXFxiKVtBLVpdW0EtWlxcZF9dK1xcYi8sXG4gICAgdHlwZToge1xuICAgICAgcGF0dGVybjogL1xcYig/OmJvb2xlYW58Ynl0ZXxjaGFyfGNvbG9yfGRvdWJsZXxmbG9hdHxpbnR8W0EtWl1cXHcqKVxcYi8sXG4gICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwicHJvY2Vzc2luZyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsImNvbnN0YW50IiwidHlwZSIsInBhdHRlcm4iLCJhbGlhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/processing.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/prolog.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/prolog.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ prolog)\n/* harmony export */ });\n// @ts-nocheck\nprolog.displayName = \"prolog\";\nprolog.aliases = [];\n/** @type {import('../core.js').Syntax} */ function prolog(Prism) {\n    Prism.languages.prolog = {\n        // Syntax depends on the implementation\n        comment: {\n            pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n            greedy: true\n        },\n        // Depending on the implementation, strings may allow escaped newlines and quote-escape\n        string: {\n            pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n            greedy: true\n        },\n        builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n        // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n        function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n        number: /\\b\\d+(?:\\.\\d*)?/,\n        // Custom operators are allowed\n        operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n        punctuation: /[(){}\\[\\],]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9sb2cuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7UUFDdkIsdUNBQXVDO1FBQ3ZDSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0EsdUZBQXVGO1FBQ3ZGQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FFLFNBQVM7UUFDVCx3R0FBd0c7UUFDeEdDLFVBQVU7UUFDVkMsUUFBUTtRQUNSLCtCQUErQjtRQUMvQkMsVUFBVTtRQUNWQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9sb2cuanM/ZWVlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucHJvbG9nLmRpc3BsYXlOYW1lID0gJ3Byb2xvZydcbnByb2xvZy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9sb2coUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnByb2xvZyA9IHtcbiAgICAvLyBTeW50YXggZGVwZW5kcyBvbiB0aGUgaW1wbGVtZW50YXRpb25cbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3wlLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAvLyBEZXBlbmRpbmcgb24gdGhlIGltcGxlbWVudGF0aW9uLCBzdHJpbmdzIG1heSBhbGxvdyBlc2NhcGVkIG5ld2xpbmVzIGFuZCBxdW90ZS1lc2NhcGVcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oW1wiJ10pKD86XFwxXFwxfFxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEoPyFcXDEpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgYnVpbHRpbjogL1xcYig/OmZ4fGZ5fHhmW3h5XT98eWZ4PylcXGIvLFxuICAgIC8vIEZJWE1FOiBTaG91bGQgd2UgbGlzdCBhbGwgbnVsbC1hcnkgcHJlZGljYXRlcyAobm90IGZvbGxvd2VkIGJ5IGEgcGFyZW50aGVzaXMpIGxpa2UgaGFsdCwgdHJhY2UsIGV0Yy4/XG4gICAgZnVuY3Rpb246IC9cXGJbYS16XVxcdyooPzooPz1cXCgpfFxcL1xcZCspLyxcbiAgICBudW1iZXI6IC9cXGJcXGQrKD86XFwuXFxkKik/LyxcbiAgICAvLyBDdXN0b20gb3BlcmF0b3JzIGFyZSBhbGxvd2VkXG4gICAgb3BlcmF0b3I6IC9bOlxcXFw9PjxcXC0/KkBcXC87K158ISQuXSt8XFxiKD86aXN8bW9kfG5vdHx4b3IpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdLF0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJwcm9sb2ciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYnVpbHRpbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/prolog.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/promql.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/promql.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ promql)\n/* harmony export */ });\n// @ts-nocheck\npromql.displayName = \"promql\";\npromql.aliases = [];\n/** @type {import('../core.js').Syntax} */ function promql(Prism) {\n    // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n    // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n    ;\n    (function(Prism) {\n        // PromQL Aggregation Operators\n        // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n        var aggregations = [\n            \"sum\",\n            \"min\",\n            \"max\",\n            \"avg\",\n            \"group\",\n            \"stddev\",\n            \"stdvar\",\n            \"count\",\n            \"count_values\",\n            \"bottomk\",\n            \"topk\",\n            \"quantile\"\n        ];\n        // PromQL vector matching + the by and without clauses\n        // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n        var vectorMatching = [\n            \"on\",\n            \"ignoring\",\n            \"group_right\",\n            \"group_left\",\n            \"by\",\n            \"without\"\n        ];\n        // PromQL offset modifier\n        // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n        var offsetModifier = [\n            \"offset\"\n        ];\n        var keywords = aggregations.concat(vectorMatching, offsetModifier);\n        Prism.languages.promql = {\n            comment: {\n                pattern: /(^[ \\t]*)#.*/m,\n                lookbehind: true\n            },\n            \"vector-match\": {\n                // Match the comma-separated label lists inside vector matching:\n                pattern: new RegExp(\"((?:\" + vectorMatching.join(\"|\") + \")\\\\s*)\\\\([^)]*\\\\)\"),\n                lookbehind: true,\n                inside: {\n                    \"label-key\": {\n                        pattern: /\\b[^,]+\\b/,\n                        alias: \"attr-name\"\n                    },\n                    punctuation: /[(),]/\n                }\n            },\n            \"context-labels\": {\n                pattern: /\\{[^{}]*\\}/,\n                inside: {\n                    \"label-key\": {\n                        pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n                        alias: \"attr-name\"\n                    },\n                    \"label-value\": {\n                        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n                        greedy: true,\n                        alias: \"attr-value\"\n                    },\n                    punctuation: /\\{|\\}|=~?|![=~]|,/\n                }\n            },\n            \"context-range\": [\n                {\n                    pattern: /\\[[\\w\\s:]+\\]/,\n                    // [1m]\n                    inside: {\n                        punctuation: /\\[|\\]|:/,\n                        \"range-duration\": {\n                            pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n                            alias: \"number\"\n                        }\n                    }\n                },\n                {\n                    pattern: /(\\boffset\\s+)\\w+/,\n                    // offset 1m\n                    lookbehind: true,\n                    inside: {\n                        \"range-duration\": {\n                            pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n                            alias: \"number\"\n                        }\n                    }\n                }\n            ],\n            keyword: new RegExp(\"\\\\b(?:\" + keywords.join(\"|\") + \")\\\\b\", \"i\"),\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n            number: /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n            operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n            punctuation: /[{};()`,.[\\]]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9tcWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQyxvR0FBb0c7SUFDcEcsd0VBQXdFOztJQUV0RSxVQUFVQSxLQUFLO1FBQ2YsK0JBQStCO1FBQy9CLDJGQUEyRjtRQUMzRixJQUFJQyxlQUFlO1lBQ2pCO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1lBQ0E7WUFDQTtTQUNEO1FBRUQsc0RBQXNEO1FBQ3RELHFGQUFxRjtRQUNyRixJQUFJQyxpQkFBaUI7WUFDbkI7WUFDQTtZQUNBO1lBQ0E7WUFDQTtZQUNBO1NBQ0Q7UUFFRCx5QkFBeUI7UUFDekIsa0ZBQWtGO1FBQ2xGLElBQUlDLGlCQUFpQjtZQUFDO1NBQVM7UUFDL0IsSUFBSUMsV0FBV0gsYUFBYUksTUFBTSxDQUFDSCxnQkFBZ0JDO1FBQ25ESCxNQUFNTSxTQUFTLENBQUNULE1BQU0sR0FBRztZQUN2QlUsU0FBUztnQkFDUEMsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0EsZ0JBQWdCO2dCQUNkLGdFQUFnRTtnQkFDaEVELFNBQVMsSUFBSUUsT0FDWCxTQUFTUixlQUFlUyxJQUFJLENBQUMsT0FBTztnQkFFdENGLFlBQVk7Z0JBQ1pHLFFBQVE7b0JBQ04sYUFBYTt3QkFDWEosU0FBUzt3QkFDVEssT0FBTztvQkFDVDtvQkFDQUMsYUFBYTtnQkFDZjtZQUNGO1lBQ0Esa0JBQWtCO2dCQUNoQk4sU0FBUztnQkFDVEksUUFBUTtvQkFDTixhQUFhO3dCQUNYSixTQUFTO3dCQUNUSyxPQUFPO29CQUNUO29CQUNBLGVBQWU7d0JBQ2JMLFNBQVM7d0JBQ1RPLFFBQVE7d0JBQ1JGLE9BQU87b0JBQ1Q7b0JBQ0FDLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBLGlCQUFpQjtnQkFDZjtvQkFDRU4sU0FBUztvQkFDVCxPQUFPO29CQUNQSSxRQUFRO3dCQUNORSxhQUFhO3dCQUNiLGtCQUFrQjs0QkFDaEJOLFNBQVM7NEJBQ1RLLE9BQU87d0JBQ1Q7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0VMLFNBQVM7b0JBQ1QsWUFBWTtvQkFDWkMsWUFBWTtvQkFDWkcsUUFBUTt3QkFDTixrQkFBa0I7NEJBQ2hCSixTQUFTOzRCQUNUSyxPQUFPO3dCQUNUO29CQUNGO2dCQUNGO2FBQ0Q7WUFDREcsU0FBUyxJQUFJTixPQUFPLFdBQVdOLFNBQVNPLElBQUksQ0FBQyxPQUFPLFFBQVE7WUFDNURNLFVBQVU7WUFDVkMsUUFDRTtZQUNGQyxVQUFVO1lBQ1ZMLGFBQWE7UUFDZjtJQUNGLEdBQUdkO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcHJvbXFsLmpzPzI3OGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnByb21xbC5kaXNwbGF5TmFtZSA9ICdwcm9tcWwnXG5wcm9tcWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJvbXFsKFByaXNtKSB7XG4gIC8vIFRoYW5rcyB0bzogaHR0cHM6Ly9naXRodWIuY29tL3Byb21ldGhldXMtY29tbXVuaXR5L21vbmFjby1wcm9tcWwvYmxvYi9tYXN0ZXIvc3JjL3Byb21xbC9wcm9tcWwudHNcbiAgLy8gQXMgd2VsbCBhczogaHR0cHM6Ly9rYXVzYWwuY28vYmxvZy9zbGF0ZS1wcmlzbS1hZGQtbmV3LXN5bnRheC1wcm9tcWwvXG5cbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvLyBQcm9tUUwgQWdncmVnYXRpb24gT3BlcmF0b3JzXG4gICAgLy8gKGh0dHBzOi8vcHJvbWV0aGV1cy5pby9kb2NzL3Byb21ldGhldXMvbGF0ZXN0L3F1ZXJ5aW5nL29wZXJhdG9ycy8jYWdncmVnYXRpb24tb3BlcmF0b3JzKVxuICAgIHZhciBhZ2dyZWdhdGlvbnMgPSBbXG4gICAgICAnc3VtJyxcbiAgICAgICdtaW4nLFxuICAgICAgJ21heCcsXG4gICAgICAnYXZnJyxcbiAgICAgICdncm91cCcsXG4gICAgICAnc3RkZGV2JyxcbiAgICAgICdzdGR2YXInLFxuICAgICAgJ2NvdW50JyxcbiAgICAgICdjb3VudF92YWx1ZXMnLFxuICAgICAgJ2JvdHRvbWsnLFxuICAgICAgJ3RvcGsnLFxuICAgICAgJ3F1YW50aWxlJ1xuICAgIF1cblxuICAgIC8vIFByb21RTCB2ZWN0b3IgbWF0Y2hpbmcgKyB0aGUgYnkgYW5kIHdpdGhvdXQgY2xhdXNlc1xuICAgIC8vIChodHRwczovL3Byb21ldGhldXMuaW8vZG9jcy9wcm9tZXRoZXVzL2xhdGVzdC9xdWVyeWluZy9vcGVyYXRvcnMvI3ZlY3Rvci1tYXRjaGluZylcbiAgICB2YXIgdmVjdG9yTWF0Y2hpbmcgPSBbXG4gICAgICAnb24nLFxuICAgICAgJ2lnbm9yaW5nJyxcbiAgICAgICdncm91cF9yaWdodCcsXG4gICAgICAnZ3JvdXBfbGVmdCcsXG4gICAgICAnYnknLFxuICAgICAgJ3dpdGhvdXQnXG4gICAgXVxuXG4gICAgLy8gUHJvbVFMIG9mZnNldCBtb2RpZmllclxuICAgIC8vIChodHRwczovL3Byb21ldGhldXMuaW8vZG9jcy9wcm9tZXRoZXVzL2xhdGVzdC9xdWVyeWluZy9iYXNpY3MvI29mZnNldC1tb2RpZmllcilcbiAgICB2YXIgb2Zmc2V0TW9kaWZpZXIgPSBbJ29mZnNldCddXG4gICAgdmFyIGtleXdvcmRzID0gYWdncmVnYXRpb25zLmNvbmNhdCh2ZWN0b3JNYXRjaGluZywgb2Zmc2V0TW9kaWZpZXIpXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnByb21xbCA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogLyheWyBcXHRdKikjLiovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgICd2ZWN0b3ItbWF0Y2gnOiB7XG4gICAgICAgIC8vIE1hdGNoIHRoZSBjb21tYS1zZXBhcmF0ZWQgbGFiZWwgbGlzdHMgaW5zaWRlIHZlY3RvciBtYXRjaGluZzpcbiAgICAgICAgcGF0dGVybjogbmV3IFJlZ0V4cChcbiAgICAgICAgICAnKCg/OicgKyB2ZWN0b3JNYXRjaGluZy5qb2luKCd8JykgKyAnKVxcXFxzKilcXFxcKFteKV0qXFxcXCknXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgICdsYWJlbC1rZXknOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFxiW14sXStcXGIvLFxuICAgICAgICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1soKSxdL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ2NvbnRleHQtbGFiZWxzJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx7W157fV0qXFx9LyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgJ2xhYmVsLWtleSc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89XFxzKig/Oj18IVs9fl0pKS8sXG4gICAgICAgICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICAgICAgICB9LFxuICAgICAgICAgICdsYWJlbC12YWx1ZSc6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oW1wiJ2BdKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkqXFwxLyxcbiAgICAgICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgICAgIGFsaWFzOiAnYXR0ci12YWx1ZSdcbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFx7fFxcfXw9fj98IVs9fl18LC9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdjb250ZXh0LXJhbmdlJzogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogL1xcW1tcXHdcXHM6XStcXF0vLFxuICAgICAgICAgIC8vIFsxbV1cbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFxbfFxcXXw6LyxcbiAgICAgICAgICAgICdyYW5nZS1kdXJhdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL1xcYig/OlxcZCsoPzpbc21oZHd5XXxtcykpK1xcYi9pLFxuICAgICAgICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFxcYm9mZnNldFxccyspXFx3Ky8sXG4gICAgICAgICAgLy8gb2Zmc2V0IDFtXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdyYW5nZS1kdXJhdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL1xcYig/OlxcZCsoPzpbc21oZHd5XXxtcykpK1xcYi9pLFxuICAgICAgICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBrZXl3b3JkOiBuZXcgUmVnRXhwKCdcXFxcYig/OicgKyBrZXl3b3Jkcy5qb2luKCd8JykgKyAnKVxcXFxiJywgJ2knKSxcbiAgICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBudW1iZXI6XG4gICAgICAgIC9bLStdPyg/Oig/OlxcYlxcZCsoPzpcXC5cXGQrKT98XFxCXFwuXFxkKykoPzplWy0rXT9cXGQrKT9cXGJ8XFxiKD86MHhbMC05YS1mXSt8bmFufGluZilcXGIpL2ksXG4gICAgICBvcGVyYXRvcjogL1tcXF4qLyUrLV18PT18IT18PD18PHw+PXw+fFxcYig/OmFuZHxvcnx1bmxlc3MpXFxiL2ksXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fTsoKWAsLltcXF1dL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicHJvbXFsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJhZ2dyZWdhdGlvbnMiLCJ2ZWN0b3JNYXRjaGluZyIsIm9mZnNldE1vZGlmaWVyIiwia2V5d29yZHMiLCJjb25jYXQiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJSZWdFeHAiLCJqb2luIiwiaW5zaWRlIiwiYWxpYXMiLCJwdW5jdHVhdGlvbiIsImdyZWVkeSIsImtleXdvcmQiLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/promql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/properties.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/properties.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ properties)\n/* harmony export */ });\n// @ts-nocheck\nproperties.displayName = \"properties\";\nproperties.aliases = [];\n/** @type {import('../core.js').Syntax} */ function properties(Prism) {\n    Prism.languages.properties = {\n        comment: /^[ \\t]*[#!].*$/m,\n        value: {\n            pattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n            lookbehind: true,\n            alias: \"attr-value\"\n        },\n        key: {\n            pattern: /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n            alias: \"attr-name\"\n        },\n        punctuation: /[=:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm9wZXJ0aWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHLEVBQUU7QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdENBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHO1FBQzNCSyxTQUFTO1FBQ1RDLE9BQU87WUFDTEMsU0FDRTtZQUNGQyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxLQUFLO1lBQ0hILFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FFLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Byb3BlcnRpZXMuanM/ZjVkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucHJvcGVydGllcy5kaXNwbGF5TmFtZSA9ICdwcm9wZXJ0aWVzJ1xucHJvcGVydGllcy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm9wZXJ0aWVzKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5wcm9wZXJ0aWVzID0ge1xuICAgIGNvbW1lbnQ6IC9eWyBcXHRdKlsjIV0uKiQvbSxcbiAgICB2YWx1ZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheWyBcXHRdKig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXFxcXFxcczo9XSkrKD86ICpbPTpdICooPyEgKXwgKSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXxbXlxcXFxcXHJcXG5dKSsvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2F0dHItdmFsdWUnXG4gICAgfSxcbiAgICBrZXk6IHtcbiAgICAgIHBhdHRlcm46IC9eWyBcXHRdKig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXFxcXFxcczo9XSkrKD89ICpbPTpdfCApL20sXG4gICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICB9LFxuICAgIHB1bmN0dWF0aW9uOiAvWz06XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInByb3BlcnRpZXMiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJ2YWx1ZSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJrZXkiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/properties.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/protobuf.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/protobuf.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ protobuf)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nprotobuf.displayName = \"protobuf\";\nprotobuf.aliases = [];\n/** @type {import('../core.js').Syntax} */ function protobuf(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var builtinTypes = /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/;\n        Prism.languages.protobuf = Prism.languages.extend(\"clike\", {\n            \"class-name\": [\n                {\n                    pattern: /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n                    lookbehind: true\n                }\n            ],\n            keyword: /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n            function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n        });\n        Prism.languages.insertBefore(\"protobuf\", \"operator\", {\n            map: {\n                pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n                alias: \"class-name\",\n                inside: {\n                    punctuation: /[<>.,]/,\n                    builtin: builtinTypes\n                }\n            },\n            builtin: builtinTypes,\n            \"positional-class-name\": {\n                pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n                alias: \"class-name\",\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            annotation: {\n                pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n                lookbehind: true\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wcm90b2J1Zi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHLEVBQUU7QUFFckIsd0NBQXdDLEdBQ3pCLFNBQVNGLFNBQVNHLEtBQUs7SUFDcENBLE1BQU1DLFFBQVEsQ0FBQ0wsaURBQWNBO0lBQzNCLFVBQVVJLEtBQUs7UUFDZixJQUFJRSxlQUNGO1FBQ0ZGLE1BQU1HLFNBQVMsQ0FBQ04sUUFBUSxHQUFHRyxNQUFNRyxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1lBQ3pELGNBQWM7Z0JBQ1o7b0JBQ0VDLFNBQ0U7b0JBQ0ZDLFlBQVk7Z0JBQ2Q7Z0JBQ0E7b0JBQ0VELFNBQ0U7b0JBQ0ZDLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNEQyxTQUNFO1lBQ0ZDLFVBQVU7UUFDWjtRQUNBUixNQUFNRyxTQUFTLENBQUNNLFlBQVksQ0FBQyxZQUFZLFlBQVk7WUFDbkRDLEtBQUs7Z0JBQ0hMLFNBQVM7Z0JBQ1RNLE9BQU87Z0JBQ1BDLFFBQVE7b0JBQ05DLGFBQWE7b0JBQ2JDLFNBQVNaO2dCQUNYO1lBQ0Y7WUFDQVksU0FBU1o7WUFDVCx5QkFBeUI7Z0JBQ3ZCRyxTQUFTO2dCQUNUTSxPQUFPO2dCQUNQQyxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUUsWUFBWTtnQkFDVlYsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1FBQ0Y7SUFDRixHQUFHTjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Byb3RvYnVmLmpzPzIyNGYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDbGlrZSBmcm9tICcuL2NsaWtlLmpzJ1xucHJvdG9idWYuZGlzcGxheU5hbWUgPSAncHJvdG9idWYnXG5wcm90b2J1Zi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwcm90b2J1ZihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgYnVpbHRpblR5cGVzID1cbiAgICAgIC9cXGIoPzpib29sfGJ5dGVzfGRvdWJsZXxzP2ZpeGVkKD86MzJ8NjQpfGZsb2F0fFtzdV0/aW50KD86MzJ8NjQpfHN0cmluZylcXGIvXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnByb3RvYnVmID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKFxcYig/OmVudW18ZXh0ZW5kfG1lc3NhZ2V8c2VydmljZSlcXHMrKVtBLVphLXpfXVxcdyooPz1cXHMqXFx7KS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oXFxiKD86cnBjXFxzK1xcdyt8cmV0dXJucylcXHMqXFwoXFxzKig/OnN0cmVhbVxccyspPylcXC4/W0EtWmEtel9dXFx3Kig/OlxcLltBLVphLXpfXVxcdyopKig/PVxccypcXCkpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86ZW51bXxleHRlbmR8ZXh0ZW5zaW9uc3xpbXBvcnR8bWVzc2FnZXxvbmVvZnxvcHRpb258b3B0aW9uYWx8cGFja2FnZXxwdWJsaWN8cmVwZWF0ZWR8cmVxdWlyZWR8cmVzZXJ2ZWR8cmV0dXJuc3xycGMoPz1cXHMrXFx3KXxzZXJ2aWNlfHN0cmVhbXxzeW50YXh8dG8pXFxiKD8hXFxzKj1cXHMqXFxkKS8sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pXG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdwcm90b2J1ZicsICdvcGVyYXRvcicsIHtcbiAgICAgIG1hcDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxibWFwPFxccypbXFx3Ll0rXFxzKixcXHMqW1xcdy5dK1xccyo+KD89XFxzK1thLXpfXVxcdypcXHMqWz07XSkvaSxcbiAgICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bPD4uLF0vLFxuICAgICAgICAgIGJ1aWx0aW46IGJ1aWx0aW5UeXBlc1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYnVpbHRpbjogYnVpbHRpblR5cGVzLFxuICAgICAgJ3Bvc2l0aW9uYWwtY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjogLyg/OlxcYnxcXEJcXC4pW2Etel9dXFx3Kig/OlxcLlthLXpfXVxcdyopKig/PVxccytbYS16X11cXHcqXFxzKls9O10pL2ksXG4gICAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZScsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgYW5ub3RhdGlvbjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcW1xccyopW2Etel9dXFx3Kig/PVxccyo9KS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJwcm90b2J1ZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJidWlsdGluVHlwZXMiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImtleXdvcmQiLCJmdW5jdGlvbiIsImluc2VydEJlZm9yZSIsIm1hcCIsImFsaWFzIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJidWlsdGluIiwiYW5ub3RhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/protobuf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/psl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/psl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ psl)\n/* harmony export */ });\n// @ts-nocheck\npsl.displayName = \"psl\";\npsl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function psl(Prism) {\n    Prism.languages.psl = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n            greedy: true,\n            inside: {\n                symbol: /\\\\[ntrbA-Z\"\\\\]/\n            }\n        },\n        \"heredoc-string\": {\n            pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n            alias: \"string\",\n            greedy: true\n        },\n        keyword: /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n        constant: /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n        boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n        variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n        builtin: {\n            pattern: /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n            alias: \"builtin-function\"\n        },\n        \"foreach-variable\": {\n            pattern: /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n            lookbehind: true,\n            greedy: true\n        },\n        function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n        number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n        operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n        punctuation: /[(){}\\[\\];,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wc2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7WUFDUkUsUUFBUTtnQkFDTkMsUUFBUTtZQUNWO1FBQ0Y7UUFDQSxrQkFBa0I7WUFDaEJKLFNBQVM7WUFDVEssT0FBTztZQUNQSixRQUFRO1FBQ1Y7UUFDQUssU0FDRTtRQUNGQyxVQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsVUFBVTtRQUNWQyxTQUFTO1lBQ1BWLFNBQ0U7WUFDRkssT0FBTztRQUNUO1FBQ0Esb0JBQW9CO1lBQ2xCTCxTQUNFO1lBQ0ZXLFlBQVk7WUFDWlYsUUFBUTtRQUNWO1FBQ0FXLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3BzbC5qcz9mZWNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5wc2wuZGlzcGxheU5hbWUgPSAncHNsJ1xucHNsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBzbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucHNsID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwufFteXFxcXFwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHN5bWJvbDogL1xcXFxbbnRyYkEtWlwiXFxcXF0vXG4gICAgICB9XG4gICAgfSxcbiAgICAnaGVyZWRvYy1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvPDw8KFthLXpBLVpfXVxcdyopW1xcclxcbl0oPzouKltcXHJcXG5dKSo/XFwxXFxiLyxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpfX211bHRpfF9fc2luZ2xlfGNhc2V8ZGVmYXVsdHxkb3xlbHNlfGVsc2lmfGV4aXR8ZXhwb3J0fGZvcnxmb3JlYWNofGZ1bmN0aW9ufGlmfGxhc3R8bGluZXxsb2NhbHxuZXh0fHJlcXVpcmVzfHJldHVybnxzd2l0Y2h8dW50aWx8d2hpbGV8d29yZClcXGIvLFxuICAgIGNvbnN0YW50OlxuICAgICAgL1xcYig/OkFMQVJNfENIQVJUX0FERF9HUkFQSHxDSEFSVF9ERUxFVEVfR1JBUEh8Q0hBUlRfREVTVFJPWXxDSEFSVF9MT0FEfENIQVJUX1BSSU5UfEVPRnxPRkZMSU5FfE9LfFBTTF9QUk9GX0xPR3xSX0NIRUNLX0hPUklafFJfQ0hFQ0tfVkVSVHxSX0NMSUNLRVJ8Ul9DT0xVTU58Ul9GUkFNRXxSX0lDT058Ul9MQUJFTHxSX0xBQkVMX0NFTlRFUnxSX0xJU1RfTVVMVElQTEV8Ul9MSVNUX01VTFRJUExFX05EfFJfTElTVF9TSU5HTEV8Ul9MSVNUX1NJTkdMRV9ORHxSX01FTlV8Ul9QT1BVUHxSX1BPUFVQX1NDUk9MTEVEfFJfUkFESU9fSE9SSVp8Ul9SQURJT19WRVJUfFJfUk9XfFJfU0NBTEVfSE9SSVp8Ul9TQ0FMRV9WRVJUfFJfU0VQX0hPUklafFJfU0VQX1ZFUlR8Ul9TUElOTkVSfFJfVEVYVF9GSUVMRHxSX1RFWFRfRklFTERfTEFCRUx8Ul9UT0dHTEV8VFJJTV9MRUFESU5HfFRSSU1fTEVBRElOR19BTkRfVFJBSUxJTkd8VFJJTV9SRURVTkRBTlR8VFJJTV9UUkFJTElOR3xWT0lEfFdBUk4pXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86RkFMU0V8RmFsc2V8Tk98Tm98VFJVRXxUcnVlfFlFU3xZZXN8ZmFsc2V8bm98dHJ1ZXx5ZXMpXFxiLyxcbiAgICB2YXJpYWJsZTogL1xcYig/OlBzbERlYnVnfGVycm5vfGV4aXRfc3RhdHVzKVxcYi8sXG4gICAgYnVpbHRpbjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OlBzbEV4ZWN1dGV8UHNsRnVuY3Rpb25DYWxsfFBzbEZ1bmN0aW9uRXhpc3RzfFBzbFNldE9wdGlvbnN8X3NubXBfZGVidWd8YWNvc3xhZGRfZGlhcnl8YW5ub3RhdGV8YW5ub3RhdGVfZ2V0fGFzY2lpX3RvX2ViY2RpY3xhc2N0aW1lfGFzaW58YXRhbnxhdGV4aXR8YmF0Y2hfc2V0fGJsYWNrb3V0fGNhdHxjZWlsfGNoYW5fZXhpc3RzfGNoYW5nZV9zdGF0ZXxjbG9zZXxjb2RlX2N2dHxjb25kX3NpZ25hbHxjb25kX3dhaXR8Y29uc29sZV90eXBlfGNvbnZlcnRfYmFzZXxjb252ZXJ0X2RhdGV8Y29udmVydF9sb2NhbGVfZGF0ZXxjb3N8Y29zaHxjcmVhdGV8ZGF0ZXxkY2dldF90ZXh0fGRlc3Ryb3l8ZGVzdHJveV9sb2NrfGRnZXRfdGV4dHxkaWZmZXJlbmNlfGR1bXBfaGlzdHxlYmNkaWNfdG9fYXNjaWl8ZW5jcnlwdHxldmVudF9hcmNoaXZlfGV2ZW50X2NhdGFsb2dfZ2V0fGV2ZW50X2NoZWNrfGV2ZW50X3F1ZXJ5fGV2ZW50X3JhbmdlX21hbmFnZXxldmVudF9yYW5nZV9xdWVyeXxldmVudF9yZXBvcnR8ZXZlbnRfc2NoZWR1bGV8ZXZlbnRfdHJpZ2dlcnxldmVudF90cmlnZ2VyMnxleGVjdXRlfGV4aXN0c3xleHB8ZmFic3xmaWxlfGZsb29yfGZtb2R8Zm9wZW58ZnNlZWt8ZnRlbGx8ZnVsbF9kaXNjb3Zlcnl8Z2V0fGdldF9jaGFuX2luZm98Z2V0X3Jhbmdlc3xnZXRfdGV4dHxnZXRfdmFyc3xnZXRlbnZ8Z2V0aG9zdGluZm98Z2V0cGlkfGdldHBuYW1lfGdyZXB8aGlzdG9yeXxoaXN0b3J5X2dldF9yZXRlbnRpb258aW5fdHJhbnNpdGlvbnxpbmRleHxpbnR8aW50ZXJuYWx8aW50ZXJzZWN0aW9ufGlzX3Zhcnxpc251bWJlcnxqb2lufGtpbGx8bGVuZ3RofGxpbmVzfGxvY2t8bG9ja19pbmZvfGxvZ3xsb2cxMHxsb2dlfG1hdGNobGluZXxtc2dfY2hlY2t8bXNnX2dldF9mb3JtYXR8bXNnX2dldF9zZXZlcml0eXxtc2dfcHJpbnRmfG1zZ19zcHJpbnRmfG50aGFyZ3xudGhhcmdmfG50aGxpbmV8bnRobGluZWZ8bnVtX2J5dGVzfG51bV9jb25zb2xlc3xwY29uZmlnfHBvcGVufHBvcGxpbmVzfHBvd3xwcmludHxwcmludGZ8cHJvY19leGlzdHN8cHJvY2Vzc3xyYW5kb218cmVhZHxyZWFkbG58cmVmcmVzaF9wYXJhbWV0ZXJzfHJlbW90ZV9jaGVja3xyZW1vdGVfY2xvc2V8cmVtb3RlX2V2ZW50X3F1ZXJ5fHJlbW90ZV9ldmVudF90cmlnZ2VyfHJlbW90ZV9maWxlX3NlbmR8cmVtb3RlX29wZW58cmVtb3ZlfHJlcGxhY2V8cmluZGV4fHNlY19jaGVja19wcml2fHNlY19zdG9yZV9nZXR8c2VjX3N0b3JlX3NldHxzZXR8c2V0X2FsYXJtX3Jhbmdlc3xzZXRfbG9jYWxlfHNoYXJlfHNpbnxzaW5ofHNsZWVwfHNubXBfYWdlbnRfY29uZmlnfHNubXBfYWdlbnRfc3RhcnR8c25tcF9hZ2VudF9zdG9wfHNubXBfY2xvc2V8c25tcF9jb25maWd8c25tcF9nZXR8c25tcF9nZXRfbmV4dHxzbm1wX2hfZ2V0fHNubXBfaF9nZXRfbmV4dHxzbm1wX2hfc2V0fHNubXBfb3Blbnxzbm1wX3NldHxzbm1wX3RyYXBfaWdub3JlfHNubXBfdHJhcF9saXN0ZW58c25tcF90cmFwX3JhaXNlX3N0ZF90cmFwfHNubXBfdHJhcF9yZWNlaXZlfHNubXBfdHJhcF9yZWdpc3Rlcl9pbXxzbm1wX3RyYXBfc2VuZHxzbm1wX3dhbGt8c29wZW58c29ydHxzcGxpdGxpbmV8c3ByaW50ZnxzcXJ0fHNyYW5kb218c3RyX3JlcGVhdHxzdHJjYXNlY21wfHN1YnNldHxzdWJzdHJ8c3lzdGVtfHRhaWx8dGFufHRhbmh8dGV4dF9kb21haW58dGltZXx0bXBuYW18dG9sb3dlcnx0b3VwcGVyfHRyYWNlX3BzbF9wcm9jZXNzfHRyaW18dW5pb258dW5pcXVlfHVubG9ja3x1bnNldHx2YV9hcmd8dmFfc3RhcnR8d3JpdGUpXFxiLyxcbiAgICAgIGFsaWFzOiAnYnVpbHRpbi1mdW5jdGlvbidcbiAgICB9LFxuICAgICdmb3JlYWNoLXZhcmlhYmxlJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGJmb3JlYWNoXFxzKyg/Oig/OlxcdytcXGJ8XCIoPzpcXFxcLnxbXlxcXFxcIl0pKlwiKVxccyspezAsMn0pW19hLXpBLVpdXFx3Kig/PVxccypcXCgpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvXFxiW19hLXpdXFx3KlxcYig/PVxccypcXCgpL2ksXG4gICAgbnVtYmVyOiAvXFxiKD86MHhbMC05YS1mXSt8XFxkKyg/OlxcLlxcZCspPylcXGIvaSxcbiAgICBvcGVyYXRvcjogLy0tfFxcK1xcK3wmJj0/fFxcfFxcfD0/fDw8PT98Pj49P3xbPSFdfnxbLSsqLyUmfF4hPTw+XT0/fFxcLnxbOj9dLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdOyxdL1xuICB9XG59XG4iXSwibmFtZXMiOlsicHNsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsInN0cmluZyIsImluc2lkZSIsInN5bWJvbCIsImFsaWFzIiwia2V5d29yZCIsImNvbnN0YW50IiwiYm9vbGVhbiIsInZhcmlhYmxlIiwiYnVpbHRpbiIsImxvb2tiZWhpbmQiLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/psl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pug.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pug.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ pug)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\n\npug.displayName = \"pug\";\npug.aliases = [];\n/** @type {import('../core.js').Syntax} */ function pug(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        // TODO:\n        // - Add CSS highlighting inside <style> tags\n        // - Add support for multi-line code blocks\n        // - Add support for interpolation #{} and !{}\n        // - Add support for tag interpolation #[]\n        // - Add explicit support for plain text using |\n        // - Add support for markup embedded in plain text\n        Prism.languages.pug = {\n            // Multiline stuff should appear before the rest\n            // This handles both single-line and multi-line comments\n            comment: {\n                pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n                lookbehind: true\n            },\n            // All the tag-related part is in lookbehind\n            // so that it can be highlighted by the \"tag\" pattern\n            \"multiline-script\": {\n                pattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            // See at the end of the file for known filters\n            filter: {\n                pattern: /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n                lookbehind: true,\n                inside: {\n                    \"filter-name\": {\n                        pattern: /^:[\\w-]+/,\n                        alias: \"variable\"\n                    },\n                    text: /\\S[\\s\\S]*/\n                }\n            },\n            \"multiline-plain-text\": {\n                pattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n                lookbehind: true\n            },\n            markup: {\n                pattern: /(^[\\t ]*)<.+/m,\n                lookbehind: true,\n                inside: Prism.languages.markup\n            },\n            doctype: {\n                pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n                lookbehind: true\n            },\n            // This handle all conditional and loop keywords\n            \"flow-control\": {\n                pattern: /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n                lookbehind: true,\n                inside: {\n                    each: {\n                        pattern: /^each .+? in\\b/,\n                        inside: {\n                            keyword: /\\b(?:each|in)\\b/,\n                            punctuation: /,/\n                        }\n                    },\n                    branch: {\n                        pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n                        alias: \"keyword\"\n                    },\n                    rest: Prism.languages.javascript\n                }\n            },\n            keyword: {\n                pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n                lookbehind: true\n            },\n            mixin: [\n                // Declaration\n                {\n                    pattern: /(^[\\t ]*)mixin .+/m,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^mixin/,\n                        function: /\\w+(?=\\s*\\(|\\s*$)/,\n                        punctuation: /[(),.]/\n                    }\n                },\n                // Usage\n                {\n                    pattern: /(^[\\t ]*)\\+.+/m,\n                    lookbehind: true,\n                    inside: {\n                        name: {\n                            pattern: /^\\+\\w+/,\n                            alias: \"function\"\n                        },\n                        rest: Prism.languages.javascript\n                    }\n                }\n            ],\n            script: {\n                pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n                lookbehind: true,\n                inside: Prism.languages.javascript\n            },\n            \"plain-text\": {\n                pattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n                lookbehind: true\n            },\n            tag: {\n                pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n                lookbehind: true,\n                inside: {\n                    attributes: [\n                        {\n                            pattern: /&[^(]+\\([^)]+\\)/,\n                            inside: Prism.languages.javascript\n                        },\n                        {\n                            pattern: /\\([^)]+\\)/,\n                            inside: {\n                                \"attr-value\": {\n                                    pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                                    lookbehind: true,\n                                    inside: Prism.languages.javascript\n                                },\n                                \"attr-name\": /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                                punctuation: /[!=(),]+/\n                            }\n                        }\n                    ],\n                    punctuation: /:/,\n                    \"attr-id\": /#[\\w\\-]+/,\n                    \"attr-class\": /\\.[\\w\\-]+/\n                }\n            },\n            code: [\n                {\n                    pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n                    lookbehind: true,\n                    inside: Prism.languages.javascript\n                }\n            ],\n            punctuation: /[.\\-!=|]+/\n        };\n        var filter_pattern = /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/.source;\n        // Non exhaustive list of available filters and associated languages\n        var filters = [\n            {\n                filter: \"atpl\",\n                language: \"twig\"\n            },\n            {\n                filter: \"coffee\",\n                language: \"coffeescript\"\n            },\n            \"ejs\",\n            \"handlebars\",\n            \"less\",\n            \"livescript\",\n            \"markdown\",\n            {\n                filter: \"sass\",\n                language: \"scss\"\n            },\n            \"stylus\"\n        ];\n        var all_filters = {};\n        for(var i = 0, l = filters.length; i < l; i++){\n            var filter = filters[i];\n            filter = typeof filter === \"string\" ? {\n                filter: filter,\n                language: filter\n            } : filter;\n            if (Prism.languages[filter.language]) {\n                all_filters[\"filter-\" + filter.filter] = {\n                    pattern: RegExp(filter_pattern.replace(\"<filter_name>\", function() {\n                        return filter.filter;\n                    }), \"m\"),\n                    lookbehind: true,\n                    inside: {\n                        \"filter-name\": {\n                            pattern: /^:[\\w-]+/,\n                            alias: \"variable\"\n                        },\n                        text: {\n                            pattern: /\\S[\\s\\S]*/,\n                            alias: [\n                                filter.language,\n                                \"language-\" + filter.language\n                            ],\n                            inside: Prism.languages[filter.language]\n                        }\n                    }\n                };\n            }\n        }\n        Prism.languages.insertBefore(\"pug\", \"filter\", all_filters);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pug.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/puppet.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/puppet.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ puppet)\n/* harmony export */ });\n// @ts-nocheck\npuppet.displayName = \"puppet\";\npuppet.aliases = [];\n/** @type {import('../core.js').Syntax} */ function puppet(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.puppet = {\n            heredoc: [\n                // Matches the content of a quoted heredoc string (subject to interpolation)\n                {\n                    pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n                    lookbehind: true,\n                    alias: \"string\",\n                    inside: {\n                        // Matches the end tag\n                        punctuation: /(?=\\S).*\\S(?= *$)/\n                    }\n                },\n                // Matches the content of an unquoted heredoc string (no interpolation)\n                {\n                    pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"string\",\n                    inside: {\n                        // Matches the end tag\n                        punctuation: /(?=\\S).*\\S(?= *$)/\n                    }\n                },\n                // Matches the start tag of heredoc strings\n                {\n                    pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n                    alias: \"string\",\n                    inside: {\n                        punctuation: {\n                            pattern: /(\\().+?(?=\\))/,\n                            lookbehind: true\n                        }\n                    }\n                }\n            ],\n            \"multiline-comment\": {\n                pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                lookbehind: true,\n                greedy: true,\n                alias: \"comment\"\n            },\n            regex: {\n                // Must be prefixed with the keyword \"node\" or a non-word char\n                pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    // Extended regexes must have the x flag. They can contain single-line comments.\n                    \"extended-regex\": {\n                        pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n                        inside: {\n                            comment: /#.*/\n                        }\n                    }\n                }\n            },\n            comment: {\n                pattern: /(^|[^\\\\])#.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            string: {\n                // Allow for one nested level of double quotes inside interpolation\n                pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n                greedy: true,\n                inside: {\n                    \"double-quoted\": {\n                        pattern: /^\"[\\s\\S]*\"$/,\n                        inside: {\n                        }\n                    }\n                }\n            },\n            variable: {\n                pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n                inside: {\n                    punctuation: /::/\n                }\n            },\n            \"attr-name\": /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n            function: [\n                {\n                    pattern: /(\\.)(?!\\d)\\w+/,\n                    lookbehind: true\n                },\n                /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n            ],\n            number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n            boolean: /\\b(?:false|true)\\b/,\n            // Includes words reserved for future use\n            keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n            datatype: {\n                pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n                alias: \"symbol\"\n            },\n            operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n            punctuation: /[\\[\\]{}().,;]|:+/\n        };\n        var interpolation = [\n            {\n                // Allow for one nested level of braces inside interpolation\n                pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n                lookbehind: true,\n                inside: {\n                    \"short-variable\": {\n                        // Negative look-ahead prevent wrong highlighting of functions\n                        pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n                        lookbehind: true,\n                        alias: \"variable\",\n                        inside: {\n                            punctuation: /::/\n                        }\n                    },\n                    delimiter: {\n                        pattern: /^\\$/,\n                        alias: \"variable\"\n                    },\n                    rest: Prism.languages.puppet\n                }\n            },\n            {\n                pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n                lookbehind: true,\n                alias: \"variable\",\n                inside: {\n                    punctuation: /::/\n                }\n            }\n        ];\n        Prism.languages.puppet[\"heredoc\"][0].inside.interpolation = interpolation;\n        Prism.languages.puppet[\"string\"].inside[\"double-quoted\"].inside.interpolation = interpolation;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/puppet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pure.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pure.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ pure)\n/* harmony export */ });\n// @ts-nocheck\npure.displayName = \"pure\";\npure.aliases = [];\n/** @type {import('../core.js').Syntax} */ function pure(Prism) {\n    ;\n    (function(Prism) {\n        // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n        Prism.languages.pure = {\n            comment: [\n                {\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true\n                },\n                /#!.+/\n            ],\n            \"inline-lang\": {\n                pattern: /%<[\\s\\S]+?%>/,\n                greedy: true,\n                inside: {\n                    lang: {\n                        pattern: /(^%< *)-\\*-.+?-\\*-/,\n                        lookbehind: true,\n                        alias: \"comment\"\n                    },\n                    delimiter: {\n                        pattern: /^%<.*|%>$/,\n                        alias: \"punctuation\"\n                    }\n                }\n            },\n            string: {\n                pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n                greedy: true\n            },\n            number: {\n                // The look-behind prevents wrong highlighting of the .. operator\n                pattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n                lookbehind: true\n            },\n            keyword: /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n            function: /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n            special: {\n                pattern: /\\b__[a-z]+__\\b/i,\n                alias: \"builtin\"\n            },\n            // Any combination of operator chars can be an operator\n            // eslint-disable-next-line no-misleading-character-class\n            operator: /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n            // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n            punctuation: /[(){}\\[\\];,|]/\n        };\n        var inlineLanguages = [\n            \"c\",\n            {\n                lang: \"c++\",\n                alias: \"cpp\"\n            },\n            \"fortran\"\n        ];\n        var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source;\n        inlineLanguages.forEach(function(lang) {\n            var alias = lang;\n            if (typeof lang !== \"string\") {\n                alias = lang.alias;\n                lang = lang.lang;\n            }\n            if (Prism.languages[alias]) {\n                var o = {};\n                o[\"inline-lang-\" + alias] = {\n                    pattern: RegExp(inlineLanguageRe.replace(\"<lang>\", lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, \"\\\\$1\")), \"i\"),\n                    inside: Prism.util.clone(Prism.languages.pure[\"inline-lang\"].inside)\n                };\n                o[\"inline-lang-\" + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);\n                Prism.languages.insertBefore(\"pure\", \"inline-lang\", o);\n            }\n        });\n        // C is the default inline language\n        if (Prism.languages.c) {\n            Prism.languages.pure[\"inline-lang\"].inside.rest = Prism.util.clone(Prism.languages.c);\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pure.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purebasic.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purebasic.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ purebasic)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\npurebasic.displayName = \"purebasic\";\npurebasic.aliases = [\n    \"pbfasm\"\n];\n/** @type {import('../core.js').Syntax} */ function purebasic(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/ // PureBasic support, steal stuff from ansi-c\n    Prism.languages.purebasic = Prism.languages.extend(\"clike\", {\n        comment: /;.*/,\n        keyword: /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n        function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n        number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n        operator: /(?:@\\*?|\\?|\\*)\\w+\\$?|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n    });\n    Prism.languages.insertBefore(\"purebasic\", \"keyword\", {\n        tag: /#\\w+\\$?/,\n        asm: {\n            pattern: /(^[\\t ]*)!.*/m,\n            lookbehind: true,\n            alias: \"tag\",\n            inside: {\n                comment: /;.*/,\n                string: {\n                    pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                    greedy: true\n                },\n                // Anonymous label references, i.e.: jmp @b\n                \"label-reference-anonymous\": {\n                    pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n                    lookbehind: true,\n                    alias: \"fasm-label\"\n                },\n                // Named label reference, i.e.: jne label1\n                \"label-reference-addressed\": {\n                    pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n                    lookbehind: true,\n                    alias: \"fasm-label\"\n                },\n                keyword: [\n                    /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n                    /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n                ],\n                function: {\n                    pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n                    lookbehind: true\n                },\n                \"function-inline\": {\n                    pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n                    lookbehind: true,\n                    alias: \"function\"\n                },\n                label: {\n                    pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n                    lookbehind: true,\n                    alias: \"fasm-label\"\n                },\n                register: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n                number: /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n                operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n            }\n        }\n    });\n    delete Prism.languages.purebasic[\"class-name\"];\n    delete Prism.languages.purebasic[\"boolean\"];\n    Prism.languages.pbfasm = Prism.languages[\"purebasic\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wdXJlYmFzaWMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxVQUFVQyxXQUFXLEdBQUc7QUFDeEJELFVBQVVFLE9BQU8sR0FBRztJQUFDO0NBQVM7QUFFOUIsd0NBQXdDLEdBQ3pCLFNBQVNGLFVBQVVHLEtBQUs7SUFDckNBLE1BQU1DLFFBQVEsQ0FBQ0wsaURBQWNBO0lBQzdCOzs7OztBQUtGLEdBRUUsNkNBQTZDO0lBQzdDSSxNQUFNRSxTQUFTLENBQUNMLFNBQVMsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUMxREMsU0FBUztRQUNUQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsUUFBUTtRQUNSQyxVQUNFO0lBQ0o7SUFDQVIsTUFBTUUsU0FBUyxDQUFDTyxZQUFZLENBQUMsYUFBYSxXQUFXO1FBQ25EQyxLQUFLO1FBQ0xDLEtBQUs7WUFDSEMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLE9BQU87WUFDUEMsUUFBUTtnQkFDTlgsU0FBUztnQkFDVFksUUFBUTtvQkFDTkosU0FBUztvQkFDVEssUUFBUTtnQkFDVjtnQkFDQSwyQ0FBMkM7Z0JBQzNDLDZCQUE2QjtvQkFDM0JMLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLE9BQU87Z0JBQ1Q7Z0JBQ0EsMENBQTBDO2dCQUMxQyw2QkFBNkI7b0JBQzNCRixTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxPQUFPO2dCQUNUO2dCQUNBVCxTQUFTO29CQUNQO29CQUNBO2lCQUNEO2dCQUNEQyxVQUFVO29CQUNSTSxTQUFTO29CQUNUQyxZQUFZO2dCQUNkO2dCQUNBLG1CQUFtQjtvQkFDakJELFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLE9BQU87Z0JBQ1Q7Z0JBQ0FJLE9BQU87b0JBQ0xOLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLE9BQU87Z0JBQ1Q7Z0JBQ0FiLFVBQ0U7Z0JBQ0ZNLFFBQ0U7Z0JBQ0ZDLFVBQVU7WUFDWjtRQUNGO0lBQ0Y7SUFDQSxPQUFPUixNQUFNRSxTQUFTLENBQUNMLFNBQVMsQ0FBQyxhQUFhO0lBQzlDLE9BQU9HLE1BQU1FLFNBQVMsQ0FBQ0wsU0FBUyxDQUFDLFVBQVU7SUFDM0NHLE1BQU1FLFNBQVMsQ0FBQ2lCLE1BQU0sR0FBR25CLE1BQU1FLFNBQVMsQ0FBQyxZQUFZO0FBQ3ZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3B1cmViYXNpYy5qcz85OGZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbnB1cmViYXNpYy5kaXNwbGF5TmFtZSA9ICdwdXJlYmFzaWMnXG5wdXJlYmFzaWMuYWxpYXNlcyA9IFsncGJmYXNtJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwdXJlYmFzaWMoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIC8qXG5PcmlnaW5hbCBDb2RlIGJ5IEJhcyBHcm9vdGhlZGRlXG4hIU1BTlkgVEhBTktTISEgSSBuZXZlciB3b3VsZCBoYXZlIG1hZGUgdGhpcywgcmVnZXggYW5kIG1lIHdpbGwgbmV2ZXIgYmUgYmVzdCBmcmllbmRzIDspXG49PT4gaHR0cHM6Ly9jb2RlcGVuLmlvL0ltYWdpbmVQcm9ncmFtbWluZy9kZXRhaWxzL0pZeWRCeS9cbnNsaWdodGx5IGNoYW5nZWQgdG8gcGFzcyBhbGwgdGVzdHNcbiovXG5cbiAgLy8gUHVyZUJhc2ljIHN1cHBvcnQsIHN0ZWFsIHN0dWZmIGZyb20gYW5zaS1jXG4gIFByaXNtLmxhbmd1YWdlcy5wdXJlYmFzaWMgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBjb21tZW50OiAvOy4qLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFsaWdufGFuZHxhc3xicmVha3xjYWxsZGVidWdnZXJ8Y2FzZXxjb21waWxlcmNhc2V8Y29tcGlsZXJkZWZhdWx0fGNvbXBpbGVyZWxzZXxjb21waWxlcmVsc2VpZnxjb21waWxlcmVuZGlmfGNvbXBpbGVyZW5kc2VsZWN0fGNvbXBpbGVyZXJyb3J8Y29tcGlsZXJpZnxjb21waWxlcnNlbGVjdHxjb250aW51ZXxkYXRhfGRhdGFzZWN0aW9ufGRlYnVnfGRlYnVnbGV2ZWx8ZGVjbGFyZXxkZWNsYXJlY3xkZWNsYXJlY2RsbHxkZWNsYXJlZGxsfGRlY2xhcmVtb2R1bGV8ZGVmYXVsdHxkZWZpbmV8ZGltfGRpc2FibGVhc218ZGlzYWJsZWRlYnVnZ2VyfGRpc2FibGVleHBsaWNpdHxlbHNlfGVsc2VpZnxlbmFibGVhc218ZW5hYmxlZGVidWdnZXJ8ZW5hYmxlZXhwbGljaXR8ZW5kfGVuZGRhdGFzZWN0aW9ufGVuZGRlY2xhcmVtb2R1bGV8ZW5kZW51bWVyYXRpb258ZW5kaWZ8ZW5kaW1wb3J0fGVuZGludGVyZmFjZXxlbmRtYWNyb3xlbmRtb2R1bGV8ZW5kcHJvY2VkdXJlfGVuZHNlbGVjdHxlbmRzdHJ1Y3R1cmV8ZW5kc3RydWN0dXJldW5pb258ZW5kd2l0aHxlbnVtZXJhdGlvbnxleHRlbmRzfGZha2VyZXR1cm58Zm9yfGZvcmVhY2h8Zm9yZXZlcnxnbG9iYWx8Z29zdWJ8Z290b3xpZnxpbXBvcnR8aW1wb3J0Y3xpbmNsdWRlYmluYXJ5fGluY2x1ZGVmaWxlfGluY2x1ZGVwYXRofGludGVyZmFjZXxtYWNyb3xtb2R1bGV8bmV3bGlzdHxuZXdtYXB8bmV4dHxub3R8b3J8cHJvY2VkdXJlfHByb2NlZHVyZWN8cHJvY2VkdXJlY2RsbHxwcm9jZWR1cmVkbGx8cHJvY2VkdXJlcmV0dXJufHByb3RlY3RlZHxwcm90b3R5cGV8cHJvdG90eXBlY3xyZWFkfHJlZGltfHJlcGVhdHxyZXN0b3JlfHJldHVybnxydW50aW1lfHNlbGVjdHxzaGFyZWR8c3RhdGljfHN0ZXB8c3RydWN0dXJlfHN0cnVjdHVyZXVuaW9ufHN3YXB8dGhyZWFkZWR8dG98dW50aWx8d2VuZHx3aGlsZXx3aXRofHhpbmNsdWRlZmlsZXx4b3IpXFxiL2ksXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD86XFwuXFx3Kyk/XFxzKig/PVxcKCkvLFxuICAgIG51bWJlcjogLyg/OlxcJFtcXGRhLWZdK3xcXGItPyg/OlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykoPzplWystXT9cXGQrKT8pXFxiL2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvKD86QFxcKj98XFw/fFxcKilcXHcrXFwkP3wtWz4tXT98XFwrXFwrP3whPT98PDw/PT98Pj4/PT98PT0/fCYmP3xcXHw/XFx8fFt+XiU/Ki9AXS9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgncHVyZWJhc2ljJywgJ2tleXdvcmQnLCB7XG4gICAgdGFnOiAvI1xcdytcXCQ/LyxcbiAgICBhc206IHtcbiAgICAgIHBhdHRlcm46IC8oXltcXHQgXSopIS4qL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICd0YWcnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGNvbW1lbnQ6IC87LiovLFxuICAgICAgICBzdHJpbmc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFtcIidgXSkoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgLy8gQW5vbnltb3VzIGxhYmVsIHJlZmVyZW5jZXMsIGkuZS46IGptcCBAYlxuICAgICAgICAnbGFiZWwtcmVmZXJlbmNlLWFub255bW91cyc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCFcXHMqalthLXpdK1xccyspQFtmYl0vaSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnZmFzbS1sYWJlbCdcbiAgICAgICAgfSxcbiAgICAgICAgLy8gTmFtZWQgbGFiZWwgcmVmZXJlbmNlLCBpLmUuOiBqbmUgbGFiZWwxXG4gICAgICAgICdsYWJlbC1yZWZlcmVuY2UtYWRkcmVzc2VkJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oIVxccypqW2Etel0rXFxzKylbQS1aLl8/JEBdW1xcdy4/JEB+I10qL2ksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2Zhc20tbGFiZWwnXG4gICAgICAgIH0sXG4gICAgICAgIGtleXdvcmQ6IFtcbiAgICAgICAgICAvXFxiKD86ZXh0ZXJufGdsb2JhbClcXGJbXjtcXHJcXG5dKi9pLFxuICAgICAgICAgIC9cXGIoPzpDUFV8REVGQVVMVHxGTE9BVClcXGIuKi9cbiAgICAgICAgXSxcbiAgICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihbXFx0IF0qIVxccyopW1xcZGEtel0rKD89XFxzfCQpL2ltLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgJ2Z1bmN0aW9uLWlubGluZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKDpcXHMqKVtcXGRhLXpdKyg/PVxccykvaSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICAgIH0sXG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgcGF0dGVybjogL14oW1xcdCBdKiFcXHMqKVtBLVphLXouXz8kQF1bXFx3Lj8kQH4jXSooPz06KS9tLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdmYXNtLWxhYmVsJ1xuICAgICAgICB9LFxuICAgICAgICByZWdpc3RlcjpcbiAgICAgICAgICAvXFxiKD86c3RcXGR8W3h5el1tbVxcZFxcZD98W2NkdF1yXFxkfHJcXGRcXGQ/W2J3ZF0/fFtlcl0/W2FiY2RdeHxbYWJjZF1baGxdfFtlcl0/KD86YnB8ZGl8c2l8c3ApfFtjZGVmZ3Ndc3xtbVxcZCspXFxiL2ksXG4gICAgICAgIG51bWJlcjpcbiAgICAgICAgICAvKD86XFxifC18KD89XFwkKSkoPzowW2h4XSg/OltcXGRhLWZdKlxcLik/W1xcZGEtZl0rKD86cFsrLV0/XFxkKyk/fFxcZFtcXGRhLWZdK1toeF18XFwkXFxkW1xcZGEtZl0qfDBbb3FdWzAtN10rfFswLTddK1tvcV18MFtieV1bMDFdK3xbMDFdK1tieV18MFtkdF1cXGQrfCg/OlxcZCsoPzpcXC5cXGQrKT98XFwuXFxkKykoPzpcXC4/ZVsrLV0/XFxkKyk/W2R0XT8pXFxiL2ksXG4gICAgICAgIG9wZXJhdG9yOiAvW1xcW1xcXSorXFwtLyU8Pj0mfCQhLC46XS9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMucHVyZWJhc2ljWydjbGFzcy1uYW1lJ11cbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5wdXJlYmFzaWNbJ2Jvb2xlYW4nXVxuICBQcmlzbS5sYW5ndWFnZXMucGJmYXNtID0gUHJpc20ubGFuZ3VhZ2VzWydwdXJlYmFzaWMnXVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwicHVyZWJhc2ljIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJvcGVyYXRvciIsImluc2VydEJlZm9yZSIsInRhZyIsImFzbSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJpbnNpZGUiLCJzdHJpbmciLCJncmVlZHkiLCJsYWJlbCIsInBiZmFzbSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purebasic.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purescript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purescript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ purescript)\n/* harmony export */ });\n/* harmony import */ var _haskell_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./haskell.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haskell.js\");\n// @ts-nocheck\n\npurescript.displayName = \"purescript\";\npurescript.aliases = [\n    \"purs\"\n];\n/** @type {import('../core.js').Syntax} */ function purescript(Prism) {\n    Prism.register(_haskell_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.purescript = Prism.languages.extend(\"haskell\", {\n        keyword: /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n        \"import-statement\": {\n            // The imported or hidden names are not included in this import\n            // statement. This is because we want to highlight those exactly like\n            // we do for the names in the program.\n            pattern: /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n            lookbehind: true,\n            inside: {\n                keyword: /\\b(?:as|hiding|import)\\b/,\n                punctuation: /\\./\n            }\n        },\n        // These are builtin functions only. Constructors are highlighted later as a constant.\n        builtin: /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n        operator: [\n            // Infix operators\n            Prism.languages.haskell.operator[0],\n            // ASCII operators\n            Prism.languages.haskell.operator[2],\n            // All UTF16 Unicode operator symbols\n            // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n            // See https://github.com/PrismJS/prism/issues/3006 for more details.\n            /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n        ]\n    });\n    Prism.languages.purs = Prism.languages.purescript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9wdXJlc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUM2QjtBQUMzQ0MsV0FBV0MsV0FBVyxHQUFHO0FBQ3pCRCxXQUFXRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBRTdCLHdDQUF3QyxHQUN6QixTQUFTRixXQUFXRyxLQUFLO0lBQ3RDQSxNQUFNQyxRQUFRLENBQUNMLG1EQUFnQkE7SUFDL0JJLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxXQUFXO1FBQzdEQyxTQUNFO1FBQ0Ysb0JBQW9CO1lBQ2xCLCtEQUErRDtZQUMvRCxxRUFBcUU7WUFDckUsc0NBQXNDO1lBQ3RDQyxTQUNFO1lBQ0ZDLFlBQVk7WUFDWkMsUUFBUTtnQkFDTkgsU0FBUztnQkFDVEksYUFBYTtZQUNmO1FBQ0Y7UUFDQSxzRkFBc0Y7UUFDdEZDLFNBQ0U7UUFDRkMsVUFBVTtZQUNSLGtCQUFrQjtZQUNsQlYsTUFBTUUsU0FBUyxDQUFDUyxPQUFPLENBQUNELFFBQVEsQ0FBQyxFQUFFO1lBQ25DLGtCQUFrQjtZQUNsQlYsTUFBTUUsU0FBUyxDQUFDUyxPQUFPLENBQUNELFFBQVEsQ0FBQyxFQUFFO1lBQ25DLHFDQUFxQztZQUNyQyxnSUFBZ0k7WUFDaEkscUVBQXFFO1lBQ3JFO1NBQ0Q7SUFDSDtJQUNBVixNQUFNRSxTQUFTLENBQUNVLElBQUksR0FBR1osTUFBTUUsU0FBUyxDQUFDTCxVQUFVO0FBQ25EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3B1cmVzY3JpcHQuanM/ZWQ1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3Rvckhhc2tlbGwgZnJvbSAnLi9oYXNrZWxsLmpzJ1xucHVyZXNjcmlwdC5kaXNwbGF5TmFtZSA9ICdwdXJlc2NyaXB0J1xucHVyZXNjcmlwdC5hbGlhc2VzID0gWydwdXJzJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwdXJlc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvckhhc2tlbGwpXG4gIFByaXNtLmxhbmd1YWdlcy5wdXJlc2NyaXB0ID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnaGFza2VsbCcsIHtcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFkb3xjYXNlfGNsYXNzfGRhdGF8ZGVyaXZlfGRvfGVsc2V8Zm9yYWxsfGlmfGlufGluZml4bHxpbmZpeHJ8aW5zdGFuY2V8bGV0fG1vZHVsZXxuZXd0eXBlfG9mfHByaW1pdGl2ZXx0aGVufHR5cGV8d2hlcmUpXFxifOKIgC8sXG4gICAgJ2ltcG9ydC1zdGF0ZW1lbnQnOiB7XG4gICAgICAvLyBUaGUgaW1wb3J0ZWQgb3IgaGlkZGVuIG5hbWVzIGFyZSBub3QgaW5jbHVkZWQgaW4gdGhpcyBpbXBvcnRcbiAgICAgIC8vIHN0YXRlbWVudC4gVGhpcyBpcyBiZWNhdXNlIHdlIHdhbnQgdG8gaGlnaGxpZ2h0IHRob3NlIGV4YWN0bHkgbGlrZVxuICAgICAgLy8gd2UgZG8gZm9yIHRoZSBuYW1lcyBpbiB0aGUgcHJvZ3JhbS5cbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXltcXHQgXSopaW1wb3J0XFxzK1tBLVpdW1xcdyddKig/OlxcLltBLVpdW1xcdyddKikqKD86XFxzK2FzXFxzK1tBLVpdW1xcdyddKig/OlxcLltBLVpdW1xcdyddKikqKT8oPzpcXHMraGlkaW5nXFxiKT8vbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL1xcYig/OmFzfGhpZGluZ3xpbXBvcnQpXFxiLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICB9XG4gICAgfSxcbiAgICAvLyBUaGVzZSBhcmUgYnVpbHRpbiBmdW5jdGlvbnMgb25seS4gQ29uc3RydWN0b3JzIGFyZSBoaWdobGlnaHRlZCBsYXRlciBhcyBhIGNvbnN0YW50LlxuICAgIGJ1aWx0aW46XG4gICAgICAvXFxiKD86YWJzdXJkfGFkZHxhcHxhcHBlbmR8YXBwbHl8YmV0d2VlbnxiaW5kfGJvdHRvbXxjbGFtcHxjb21wYXJlfGNvbXBhcmluZ3xjb21wb3NlfGNvbmp8Y29uc3R8ZGVncmVlfGRpc2NhcmR8ZGlzanxkaXZ8ZXF8ZmxhcHxmbGlwfGdjZHxpZGVudGl0eXxpZk18am9pbnxsY218bGlmdEExfGxpZnRNMXxtYXB8bWF4fG1lbXB0eXxtaW58bW9kfG11bHxuZWdhdGV8bm90fG5vdEVxfG9uZXxvdGhlcndpc2V8cmVjaXB8c2hvd3xzdWJ8dG9wfHVuaXR8dW5sZXNzfHVubGVzc018dm9pZHx3aGVufHdoZW5NfHplcm8pXFxiLyxcbiAgICBvcGVyYXRvcjogW1xuICAgICAgLy8gSW5maXggb3BlcmF0b3JzXG4gICAgICBQcmlzbS5sYW5ndWFnZXMuaGFza2VsbC5vcGVyYXRvclswXSxcbiAgICAgIC8vIEFTQ0lJIG9wZXJhdG9yc1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzLmhhc2tlbGwub3BlcmF0b3JbMl0sXG4gICAgICAvLyBBbGwgVVRGMTYgVW5pY29kZSBvcGVyYXRvciBzeW1ib2xzXG4gICAgICAvLyBUaGlzIHJlZ2V4IGlzIGVxdWl2YWxlbnQgdG8gLyg/PVtcXHg4MC1cXHVGRkZGXSlbXFxwe2djPU1hdGhfU3ltYm9sfVxccHtnYz1DdXJyZW5jeV9TeW1ib2x9XFxwe01vZGlmaWVyX1N5bWJvbH1cXHB7T3RoZXJfU3ltYm9sfV0vdVxuICAgICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9QcmlzbUpTL3ByaXNtL2lzc3Vlcy8zMDA2IGZvciBtb3JlIGRldGFpbHMuXG4gICAgICAvW1xceGEyLVxceGE2XFx4YThcXHhhOVxceGFjXFx4YWUtXFx4YjFcXHhiNFxceGI4XFx4ZDdcXHhmN1xcdTAyYzItXFx1MDJjNVxcdTAyZDItXFx1MDJkZlxcdTAyZTUtXFx1MDJlYlxcdTAyZWRcXHUwMmVmLVxcdTAyZmZcXHUwMzc1XFx1MDM4NFxcdTAzODVcXHUwM2Y2XFx1MDQ4MlxcdTA1OGQtXFx1MDU4ZlxcdTA2MDYtXFx1MDYwOFxcdTA2MGJcXHUwNjBlXFx1MDYwZlxcdTA2ZGVcXHUwNmU5XFx1MDZmZFxcdTA2ZmVcXHUwN2Y2XFx1MDdmZVxcdTA3ZmZcXHUwOWYyXFx1MDlmM1xcdTA5ZmFcXHUwOWZiXFx1MGFmMVxcdTBiNzBcXHUwYmYzLVxcdTBiZmFcXHUwYzdmXFx1MGQ0ZlxcdTBkNzlcXHUwZTNmXFx1MGYwMS1cXHUwZjAzXFx1MGYxM1xcdTBmMTUtXFx1MGYxN1xcdTBmMWEtXFx1MGYxZlxcdTBmMzRcXHUwZjM2XFx1MGYzOFxcdTBmYmUtXFx1MGZjNVxcdTBmYzctXFx1MGZjY1xcdTBmY2VcXHUwZmNmXFx1MGZkNS1cXHUwZmQ4XFx1MTA5ZVxcdTEwOWZcXHUxMzkwLVxcdTEzOTlcXHUxNjZkXFx1MTdkYlxcdTE5NDBcXHUxOWRlLVxcdTE5ZmZcXHUxYjYxLVxcdTFiNmFcXHUxYjc0LVxcdTFiN2NcXHUxZmJkXFx1MWZiZi1cXHUxZmMxXFx1MWZjZC1cXHUxZmNmXFx1MWZkZC1cXHUxZmRmXFx1MWZlZC1cXHUxZmVmXFx1MWZmZFxcdTFmZmVcXHUyMDQ0XFx1MjA1MlxcdTIwN2EtXFx1MjA3Y1xcdTIwOGEtXFx1MjA4Y1xcdTIwYTAtXFx1MjBiZlxcdTIxMDBcXHUyMTAxXFx1MjEwMy1cXHUyMTA2XFx1MjEwOFxcdTIxMDlcXHUyMTE0XFx1MjExNi1cXHUyMTE4XFx1MjExZS1cXHUyMTIzXFx1MjEyNVxcdTIxMjdcXHUyMTI5XFx1MjEyZVxcdTIxM2FcXHUyMTNiXFx1MjE0MC1cXHUyMTQ0XFx1MjE0YS1cXHUyMTRkXFx1MjE0ZlxcdTIxOGFcXHUyMThiXFx1MjE5MC1cXHUyMzA3XFx1MjMwYy1cXHUyMzI4XFx1MjMyYi1cXHUyNDI2XFx1MjQ0MC1cXHUyNDRhXFx1MjQ5Yy1cXHUyNGU5XFx1MjUwMC1cXHUyNzY3XFx1Mjc5NC1cXHUyN2M0XFx1MjdjNy1cXHUyN2U1XFx1MjdmMC1cXHUyOTgyXFx1Mjk5OS1cXHUyOWQ3XFx1MjlkYy1cXHUyOWZiXFx1MjlmZS1cXHUyYjczXFx1MmI3Ni1cXHUyYjk1XFx1MmI5Ny1cXHUyYmZmXFx1MmNlNS1cXHUyY2VhXFx1MmU1MFxcdTJlNTFcXHUyZTgwLVxcdTJlOTlcXHUyZTliLVxcdTJlZjNcXHUyZjAwLVxcdTJmZDVcXHUyZmYwLVxcdTJmZmJcXHUzMDA0XFx1MzAxMlxcdTMwMTNcXHUzMDIwXFx1MzAzNlxcdTMwMzdcXHUzMDNlXFx1MzAzZlxcdTMwOWJcXHUzMDljXFx1MzE5MFxcdTMxOTFcXHUzMTk2LVxcdTMxOWZcXHUzMWMwLVxcdTMxZTNcXHUzMjAwLVxcdTMyMWVcXHUzMjJhLVxcdTMyNDdcXHUzMjUwXFx1MzI2MC1cXHUzMjdmXFx1MzI4YS1cXHUzMmIwXFx1MzJjMC1cXHUzM2ZmXFx1NGRjMC1cXHU0ZGZmXFx1YTQ5MC1cXHVhNGM2XFx1YTcwMC1cXHVhNzE2XFx1YTcyMFxcdWE3MjFcXHVhNzg5XFx1YTc4YVxcdWE4MjgtXFx1YTgyYlxcdWE4MzYtXFx1YTgzOVxcdWFhNzctXFx1YWE3OVxcdWFiNWJcXHVhYjZhXFx1YWI2YlxcdWZiMjlcXHVmYmIyLVxcdWZiYzFcXHVmZGZjXFx1ZmRmZFxcdWZlNjJcXHVmZTY0LVxcdWZlNjZcXHVmZTY5XFx1ZmYwNFxcdWZmMGJcXHVmZjFjLVxcdWZmMWVcXHVmZjNlXFx1ZmY0MFxcdWZmNWNcXHVmZjVlXFx1ZmZlMC1cXHVmZmU2XFx1ZmZlOC1cXHVmZmVlXFx1ZmZmY1xcdWZmZmRdL1xuICAgIF1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnB1cnMgPSBQcmlzbS5sYW5ndWFnZXMucHVyZXNjcmlwdFxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvckhhc2tlbGwiLCJwdXJlc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImtleXdvcmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiYnVpbHRpbiIsIm9wZXJhdG9yIiwiaGFza2VsbCIsInB1cnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purescript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/python.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/python.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ python)\n/* harmony export */ });\n// @ts-nocheck\npython.displayName = \"python\";\npython.aliases = [\n    \"py\"\n];\n/** @type {import('../core.js').Syntax} */ function python(Prism) {\n    Prism.languages.python = {\n        comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"string-interpolation\": {\n            pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n                    pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"format-spec\": {\n                            pattern: /(:)[^:(){}]+(?=\\}$)/,\n                            lookbehind: true\n                        },\n                        \"conversion-option\": {\n                            pattern: /![sra](?=[:}]$)/,\n                            alias: \"punctuation\"\n                        },\n                        rest: null\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        \"triple-quoted-string\": {\n            pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n            greedy: true,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n            greedy: true\n        },\n        function: {\n            pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n            lookbehind: true\n        },\n        \"class-name\": {\n            pattern: /(\\bclass\\s+)\\w+/i,\n            lookbehind: true\n        },\n        decorator: {\n            pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n            lookbehind: true,\n            alias: [\n                \"annotation\",\n                \"punctuation\"\n            ],\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        keyword: /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n        builtin: /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n        boolean: /\\b(?:False|None|True)\\b/,\n        number: /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n        operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.python[\"string-interpolation\"].inside[\"interpolation\"].inside.rest = Prism.languages.python;\n    Prism.languages.py = Prism.languages.python;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9weXRob24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBRXZCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0Esd0JBQXdCO1lBQ3RCRixTQUNFO1lBQ0ZFLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYixzRkFBc0Y7b0JBQ3RGSixTQUNFO29CQUNGQyxZQUFZO29CQUNaRSxRQUFRO3dCQUNOLGVBQWU7NEJBQ2JILFNBQVM7NEJBQ1RDLFlBQVk7d0JBQ2Q7d0JBQ0EscUJBQXFCOzRCQUNuQkQsU0FBUzs0QkFDVEssT0FBTzt3QkFDVDt3QkFDQUMsTUFBTTtvQkFDUjtnQkFDRjtnQkFDQUMsUUFBUTtZQUNWO1FBQ0Y7UUFDQSx3QkFBd0I7WUFDdEJQLFNBQVM7WUFDVEUsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUUsUUFBUTtZQUNOUCxTQUFTO1lBQ1RFLFFBQVE7UUFDVjtRQUNBTSxVQUFVO1lBQ1JSLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0EsY0FBYztZQUNaRCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBUSxXQUFXO1lBQ1RULFNBQVM7WUFDVEMsWUFBWTtZQUNaSSxPQUFPO2dCQUFDO2dCQUFjO2FBQWM7WUFDcENGLFFBQVE7Z0JBQ05PLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFNBQ0U7UUFDRkMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFBVTtRQUNWTCxhQUFhO0lBQ2Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDSixNQUFNLENBQUMsdUJBQXVCLENBQUNTLE1BQU0sQ0FDbkQsZ0JBQ0QsQ0FBQ0EsTUFBTSxDQUFDRyxJQUFJLEdBQUdULE1BQU1DLFNBQVMsQ0FBQ0osTUFBTTtJQUN0Q0csTUFBTUMsU0FBUyxDQUFDa0IsRUFBRSxHQUFHbkIsTUFBTUMsU0FBUyxDQUFDSixNQUFNO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3B5dGhvbi5qcz80YWY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5weXRob24uZGlzcGxheU5hbWUgPSAncHl0aG9uJ1xucHl0aG9uLmFsaWFzZXMgPSBbJ3B5J11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBweXRob24oUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnB5dGhvbiA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjLiovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3N0cmluZy1pbnRlcnBvbGF0aW9uJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyg/OmZ8ZnJ8cmYpKD86KFwiXCJcInwnJycpW1xcc1xcU10qP1xcMXwoXCJ8JykoPzpcXFxcLnwoPyFcXDIpW15cXFxcXFxyXFxuXSkqXFwyKS9pLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICAvLyBcIntcIiA8ZXhwcmVzc2lvbj4gPG9wdGlvbmFsIFwiIXNcIiwgXCIhclwiLCBvciBcIiFhXCI+IDxvcHRpb25hbCBcIjpcIiBmb3JtYXQgc3BlY2lmaWVyPiBcIn1cIlxuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W157XSkoPzpcXHtcXHspKilcXHsoPyFcXHspKD86W157fV18XFx7KD8hXFx7KSg/Oltee31dfFxceyg/IVxceykoPzpbXnt9XSkrXFx9KStcXH0pK1xcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdmb3JtYXQtc3BlYyc6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogLyg6KVteOigpe31dKyg/PVxcfSQpLyxcbiAgICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdjb252ZXJzaW9uLW9wdGlvbic6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogLyFbc3JhXSg/PVs6fV0kKS8sXG4gICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzdDogbnVsbFxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3RyaXBsZS1xdW90ZWQtc3RyaW5nJzoge1xuICAgICAgcGF0dGVybjogLyg/OltydWJdfGJyfHJiKT8oXCJcIlwifCcnJylbXFxzXFxTXSo/XFwxL2ksXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyg/OltydWJdfGJyfHJiKT8oXCJ8JykoPzpcXFxcLnwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxL2ksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOiAvKCg/Ol58XFxzKWRlZlsgXFx0XSspW2EtekEtWl9dXFx3Kig/PVxccypcXCgpL2csXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxiY2xhc3NcXHMrKVxcdysvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGRlY29yYXRvcjoge1xuICAgICAgcGF0dGVybjogLyheW1xcdCBdKilAXFx3Kyg/OlxcLlxcdyspKi9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiBbJ2Fubm90YXRpb24nLCAncHVuY3R1YXRpb24nXSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86Xyg/PVxccyo6KXxhbmR8YXN8YXNzZXJ0fGFzeW5jfGF3YWl0fGJyZWFrfGNhc2V8Y2xhc3N8Y29udGludWV8ZGVmfGRlbHxlbGlmfGVsc2V8ZXhjZXB0fGV4ZWN8ZmluYWxseXxmb3J8ZnJvbXxnbG9iYWx8aWZ8aW1wb3J0fGlufGlzfGxhbWJkYXxtYXRjaHxub25sb2NhbHxub3R8b3J8cGFzc3xwcmludHxyYWlzZXxyZXR1cm58dHJ5fHdoaWxlfHdpdGh8eWllbGQpXFxiLyxcbiAgICBidWlsdGluOlxuICAgICAgL1xcYig/Ol9faW1wb3J0X198YWJzfGFsbHxhbnl8YXBwbHl8YXNjaWl8YmFzZXN0cmluZ3xiaW58Ym9vbHxidWZmZXJ8Ynl0ZWFycmF5fGJ5dGVzfGNhbGxhYmxlfGNocnxjbGFzc21ldGhvZHxjbXB8Y29lcmNlfGNvbXBpbGV8Y29tcGxleHxkZWxhdHRyfGRpY3R8ZGlyfGRpdm1vZHxlbnVtZXJhdGV8ZXZhbHxleGVjZmlsZXxmaWxlfGZpbHRlcnxmbG9hdHxmb3JtYXR8ZnJvemVuc2V0fGdldGF0dHJ8Z2xvYmFsc3xoYXNhdHRyfGhhc2h8aGVscHxoZXh8aWR8aW5wdXR8aW50fGludGVybnxpc2luc3RhbmNlfGlzc3ViY2xhc3N8aXRlcnxsZW58bGlzdHxsb2NhbHN8bG9uZ3xtYXB8bWF4fG1lbW9yeXZpZXd8bWlufG5leHR8b2JqZWN0fG9jdHxvcGVufG9yZHxwb3d8cHJvcGVydHl8cmFuZ2V8cmF3X2lucHV0fHJlZHVjZXxyZWxvYWR8cmVwcnxyZXZlcnNlZHxyb3VuZHxzZXR8c2V0YXR0cnxzbGljZXxzb3J0ZWR8c3RhdGljbWV0aG9kfHN0cnxzdW18c3VwZXJ8dHVwbGV8dHlwZXx1bmljaHJ8dW5pY29kZXx2YXJzfHhyYW5nZXx6aXApXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86RmFsc2V8Tm9uZXxUcnVlKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1xcYjAoPzpiKD86Xz9bMDFdKSt8byg/Ol8/WzAtN10pK3x4KD86Xz9bYS1mMC05XSkrKVxcYnwoPzpcXGJcXGQrKD86X1xcZCspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXEJcXC5cXGQrKD86X1xcZCspKikoPzplWystXT9cXGQrKD86X1xcZCspKik/aj8oPyFcXHcpL2ksXG4gICAgb3BlcmF0b3I6IC9bLSslPV09P3whPXw6PXxcXCpcXCo/PT98XFwvXFwvPz0/fDxbPD0+XT98Pls9Pl0/fFsmfF5+XS8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucHl0aG9uWydzdHJpbmctaW50ZXJwb2xhdGlvbiddLmluc2lkZVtcbiAgICAnaW50ZXJwb2xhdGlvbidcbiAgXS5pbnNpZGUucmVzdCA9IFByaXNtLmxhbmd1YWdlcy5weXRob25cbiAgUHJpc20ubGFuZ3VhZ2VzLnB5ID0gUHJpc20ubGFuZ3VhZ2VzLnB5dGhvblxufVxuIl0sIm5hbWVzIjpbInB5dGhvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiaW5zaWRlIiwiaW50ZXJwb2xhdGlvbiIsImFsaWFzIiwicmVzdCIsInN0cmluZyIsImZ1bmN0aW9uIiwiZGVjb3JhdG9yIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiYnVpbHRpbiIsImJvb2xlYW4iLCJudW1iZXIiLCJvcGVyYXRvciIsInB5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/python.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/q.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/q.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ q)\n/* harmony export */ });\n// @ts-nocheck\nq.displayName = \"q\";\nq.aliases = [];\n/** @type {import('../core.js').Syntax} */ function q(Prism) {\n    Prism.languages.q = {\n        string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        comment: [\n            // From http://code.kx.com/wiki/Reference/Slash:\n            // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n            {\n                pattern: /([\\t )\\]}])\\/.*/,\n                lookbehind: true,\n                greedy: true\n            },\n            // From http://code.kx.com/wiki/Reference/Slash:\n            // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n            // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n            // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n            // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n            {\n                pattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n                lookbehind: true,\n                greedy: true\n            },\n            // From http://code.kx.com/wiki/Reference/Slash:\n            // A \\ on a line by itself with no preceding matching / will comment to end of file.\n            {\n                pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n                greedy: true\n            },\n            {\n                pattern: /^#!.+/m,\n                greedy: true\n            }\n        ],\n        symbol: /`(?::\\S+|[\\w.]*)/,\n        datetime: {\n            pattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n            alias: \"number\"\n        },\n        // The negative look-ahead prevents bad highlighting\n        // of verbs 0: and 1:\n        number: /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n        keyword: /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n        adverb: {\n            pattern: /['\\/\\\\]:?|\\beach\\b/,\n            alias: \"function\"\n        },\n        verb: {\n            pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n            alias: \"operator\"\n        },\n        punctuation: /[(){}\\[\\];.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEVBQUVDLFdBQVcsR0FBRztBQUNoQkQsRUFBRUUsT0FBTyxHQUFHLEVBQUU7QUFFZCx3Q0FBd0MsR0FDekIsU0FBU0YsRUFBRUcsS0FBSztJQUM3QkEsTUFBTUMsU0FBUyxDQUFDSixDQUFDLEdBQUc7UUFDbEJLLFFBQVE7UUFDUkMsU0FBUztZQUNQLGdEQUFnRDtZQUNoRCxvSEFBb0g7WUFDcEg7Z0JBQ0VDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtZQUNBLGdEQUFnRDtZQUNoRCxzSkFBc0o7WUFDdEosNEdBQTRHO1lBQzVHLG9HQUFvRztZQUNwRyxtR0FBbUc7WUFDbkc7Z0JBQ0VGLFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtZQUNBLGdEQUFnRDtZQUNoRCxvRkFBb0Y7WUFDcEY7Z0JBQ0VGLFNBQVM7Z0JBQ1RFLFFBQVE7WUFDVjtZQUNBO2dCQUNFRixTQUFTO2dCQUNURSxRQUFRO1lBQ1Y7U0FDRDtRQUNEQyxRQUFRO1FBQ1JDLFVBQVU7WUFDUkosU0FDRTtZQUNGSyxPQUFPO1FBQ1Q7UUFDQSxvREFBb0Q7UUFDcEQscUJBQXFCO1FBQ3JCQyxRQUNFO1FBQ0ZDLFNBQ0U7UUFDRkMsUUFBUTtZQUNOUixTQUFTO1lBQ1RLLE9BQU87UUFDVDtRQUNBSSxNQUFNO1lBQ0pULFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FLLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3EuanM/MTAxNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucS5kaXNwbGF5TmFtZSA9ICdxJ1xucS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBxKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5xID0ge1xuICAgIHN0cmluZzogL1wiKD86XFxcXC58W15cIlxcXFxcXHJcXG5dKSpcIi8sXG4gICAgY29tbWVudDogW1xuICAgICAgLy8gRnJvbSBodHRwOi8vY29kZS5reC5jb20vd2lraS9SZWZlcmVuY2UvU2xhc2g6XG4gICAgICAvLyBXaGVuIC8gaXMgZm9sbG93aW5nIGEgc3BhY2UgKG9yIGEgcmlnaHQgcGFyZW50aGVzaXMsIGJyYWNrZXQsIG9yIGJyYWNlKSwgaXQgaXMgaWdub3JlZCB3aXRoIHRoZSByZXN0IG9mIHRoZSBsaW5lLlxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKFtcXHQgKVxcXX1dKVxcLy4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gRnJvbSBodHRwOi8vY29kZS5reC5jb20vd2lraS9SZWZlcmVuY2UvU2xhc2g6XG4gICAgICAvLyBBIGxpbmUgd2hpY2ggaGFzIC8gYXMgaXRzIGZpcnN0IGNoYXJhY3RlciBhbmQgY29udGFpbnMgYXQgbGVhc3Qgb25lIG90aGVyIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlciBpcyBhIHdob2xlLWxpbmUgY29tbWVudCBhbmQgaXMgaWdub3JlZCBlbnRpcmVseS5cbiAgICAgIC8vIEEgLyBvbiBhIGxpbmUgYnkgaXRzZWxmIGJlZ2lucyBhIG11bHRpbGluZSBjb21tZW50IHdoaWNoIGlzIHRlcm1pbmF0ZWQgYnkgdGhlIG5leHQgXFwgb24gYSBsaW5lIGJ5IGl0c2VsZi5cbiAgICAgIC8vIElmIGEgLyBpcyBub3QgbWF0Y2hlZCBieSBhIFxcLCB0aGUgbXVsdGlsaW5lIGNvbW1lbnQgaXMgdW50ZXJtaW5hdGVkIGFuZCBjb250aW51ZXMgdG8gZW5kIG9mIGZpbGUuXG4gICAgICAvLyBUaGUgLyBhbmQgXFwgbXVzdCBiZSB0aGUgZmlyc3QgY2hhciBvbiB0aGUgbGluZSwgYnV0IG1heSBiZSBmb2xsb3dlZCBieSBhbnkgYW1vdW50IG9mIHdoaXRlc3BhY2UuXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFxccj9cXG58XFxyKVxcL1tcXHQgXSooPzooPzpcXHI/XFxufFxccikoPzouKig/Olxccj9cXG58XFxyKD8hXFxuKSkpKj8oPzpcXFxcKD89W1xcdCBdKig/Olxccj9cXG58XFxyKSl8JCl8XFxTLiopLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgLy8gRnJvbSBodHRwOi8vY29kZS5reC5jb20vd2lraS9SZWZlcmVuY2UvU2xhc2g6XG4gICAgICAvLyBBIFxcIG9uIGEgbGluZSBieSBpdHNlbGYgd2l0aCBubyBwcmVjZWRpbmcgbWF0Y2hpbmcgLyB3aWxsIGNvbW1lbnQgdG8gZW5kIG9mIGZpbGUuXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9eXFxcXFtcXHQgXSooPzpcXHI/XFxufFxccilbXFxzXFxTXSsvbSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvXiMhLisvbSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzeW1ib2w6IC9gKD86OlxcUyt8W1xcdy5dKikvLFxuICAgIGRhdGV0aW1lOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvME5bbWR6dXZ0XXwwV1tkdHpdfFxcZHs0fVxcLlxcZFxcZCg/Om18XFwuXFxkXFxkKD86VCg/OlxcZFxcZCg/OjpcXGRcXGQoPzo6XFxkXFxkKD86Wy46XVxcZFxcZFxcZCk/KT8pPyk/KT9bZHpdPyl8XFxkXFxkOlxcZFxcZCg/OjpcXGRcXGQoPzpbLjpdXFxkXFxkXFxkKT8pP1t1dnRdPy8sXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgIC8vIFRoZSBuZWdhdGl2ZSBsb29rLWFoZWFkIHByZXZlbnRzIGJhZCBoaWdobGlnaHRpbmdcbiAgICAvLyBvZiB2ZXJicyAwOiBhbmQgMTpcbiAgICBudW1iZXI6XG4gICAgICAvXFxiKD8hWzAxXTopKD86ME5baGplXT98MFdbaGpdP3wwW3duXXwweFtcXGRhLWZBLUZdK3xcXGQrKD86XFwuXFxkKik/KD86ZVsrLV0/XFxkKyk/W2hqZmViXT8pLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcXFxcXHcrXFxifFxcYig/OmFic3xhY29zfGFqMD98YWxsfGFuZHxhbnl8YXNjfGFzaW58YXNvZnxhdGFufGF0dHJ8YXZncz98Ymlucj98Ynl8Y2VpbGluZ3xjb2xzfGNvcnxjb3N8Y291bnR8Y292fGNyb3NzfGNzdnxjdXR8ZGVsZXRlfGRlbHRhc3xkZXNjfGRldnxkaWZmZXJ8ZGlzdGluY3R8ZGl2fGRvfGRzYXZlfGVqfGVubGlzdHxldmFsfGV4Y2VwdHxleGVjfGV4aXR8ZXhwfGZieXxmaWxsc3xmaXJzdHxma2V5c3xmbGlwfGZsb29yfGZyb218Z2V0fGdldGVudnxncm91cHxndGltZXxoY2xvc2V8aGNvdW50fGhkZWx8aG9wZW58aHN5bXxpYXNjfGlkZW50aXR5fGlkZXNjfGlmfGlqfGlufGluc2VydHxpbnRlcnxpbnZ8a2V5cz98bGFzdHxsaWtlfGxpc3R8bGpmP3xsb2FkfGxvZ3xsb3dlcnxsc3F8bHRpbWV8bHRyaW18bWF2Z3xtYXhzP3xtY291bnR8bWQ1fG1kZXZ8bWVkfG1ldGF8bWlucz98bW1heHxtbWlufG1tdXxtb2R8bXN1bXxuZWd8bmV4dHxub3R8bnVsbHxvcnxvdmVyfHBhcnNlfHBlYWNofHBqfHBsaXN0fHByZHM/fHByZXZ8cHJpb3J8cmFuZHxyYW5rfHJhdGlvc3xyYXplfHJlYWQwfHJlYWQxfHJlY2lwcm9jYWx8cmV2YWx8cmV2ZXJzZXxybG9hZHxyb3RhdGV8cnNhdmV8cnRyaW18c2F2ZXxzY2FufHNjb3Z8c2RldnxzZWxlY3R8c2V0fHNldGVudnxzaG93fHNpZ251bXxzaW58c3FydHxzc3I/fHN0cmluZ3xzdWJsaXN0fHN1bXM/fHN2fHN2YXJ8c3lzdGVtfHRhYmxlc3x0YW58dGlsfHRyaW18dHhmfHR5cGV8dWp8dW5ncm91cHx1bmlvbnx1cGRhdGV8dXBwZXJ8dXBzZXJ0fHZhbHVlfHZhcnx2aWV3cz98dnN8d2F2Z3x3aGVyZXx3aGlsZXx3aXRoaW58d2oxP3x3c3VtfHd3fHhhc2N8eGJhcnx4Y29scz98eGRlc2N8eGV4cHx4Z3JvdXB8eGtleXx4bG9nfHhwcmV2fHhyYW5rKVxcYi8sXG4gICAgYWR2ZXJiOiB7XG4gICAgICBwYXR0ZXJuOiAvWydcXC9cXFxcXTo/fFxcYmVhY2hcXGIvLFxuICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICB9LFxuICAgIHZlcmI6IHtcbiAgICAgIHBhdHRlcm46IC8oPzpcXEJcXC5cXEJ8XFxiWzAxXTp8PFs9Pl0/fD49P3xbOitcXC0qJSwhP349fCQmI0BeXSk6P3xcXGJfXFxiOj8vLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31cXFtcXF07Ll0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJxIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJzdHJpbmciLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJzeW1ib2wiLCJkYXRldGltZSIsImFsaWFzIiwibnVtYmVyIiwia2V5d29yZCIsImFkdmVyYiIsInZlcmIiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/q.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qml.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qml.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ qml)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\nqml.displayName = \"qml\";\nqml.aliases = [];\n/** @type {import('../core.js').Syntax} */ function qml(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source;\n        var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source;\n        var jsExpr = /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source.replace(/<string>/g, function() {\n            return jsString;\n        }).replace(/<comment>/g, function() {\n            return jsComment;\n        });\n        // the pattern will blow up, so only a few iterations\n        for(var i = 0; i < 2; i++){\n            jsExpr = jsExpr.replace(/<expr>/g, function() {\n                return jsExpr;\n            });\n        }\n        jsExpr = jsExpr.replace(/<expr>/g, \"[^\\\\s\\\\S]\");\n        Prism.languages.qml = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n                greedy: true\n            },\n            \"javascript-function\": {\n                pattern: RegExp(/((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(/<js>/g, function() {\n                    return jsExpr;\n                }), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"language-javascript\",\n                inside: Prism.languages.javascript\n            },\n            \"class-name\": {\n                pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n                lookbehind: true\n            },\n            property: [\n                {\n                    pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n                    lookbehind: true\n                },\n                {\n                    pattern: /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n                    lookbehind: true,\n                    inside: {\n                        keyword: /^property/,\n                        property: /\\w+(?:\\.\\w+)*/\n                    }\n                }\n            ],\n            \"javascript-expression\": {\n                pattern: RegExp(/(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(/<js>/g, function() {\n                    return jsExpr;\n                }), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"language-javascript\",\n                inside: Prism.languages.javascript\n            },\n            string: {\n                pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n                greedy: true\n            },\n            keyword: /\\b(?:as|import|on)\\b/,\n            punctuation: /[{}[\\]:;,]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xbWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ21DO0FBQ2pEQyxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRyxFQUFFO0FBRWhCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxRQUFRLENBQUNMLHNEQUFtQkE7SUFDaEMsVUFBVUksS0FBSztRQUNmLElBQUlFLFdBQVcsOENBQThDQyxNQUFNO1FBQ25FLElBQUlDLFlBQVkseUNBQXlDRCxNQUFNO1FBQy9ELElBQUlFLFNBQ0YsaUdBQWlHRixNQUFNLENBQ3BHRyxPQUFPLENBQUMsYUFBYTtZQUNwQixPQUFPSjtRQUNULEdBQ0NJLE9BQU8sQ0FBQyxjQUFjO1lBQ3JCLE9BQU9GO1FBQ1Q7UUFFSixxREFBcUQ7UUFDckQsSUFBSyxJQUFJRyxJQUFJLEdBQUdBLElBQUksR0FBR0EsSUFBSztZQUMxQkYsU0FBU0EsT0FBT0MsT0FBTyxDQUFDLFdBQVc7Z0JBQ2pDLE9BQU9EO1lBQ1Q7UUFDRjtRQUNBQSxTQUFTQSxPQUFPQyxPQUFPLENBQUMsV0FBVztRQUNuQ04sTUFBTVEsU0FBUyxDQUFDWCxHQUFHLEdBQUc7WUFDcEJZLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBLHVCQUF1QjtnQkFDckJELFNBQVNFLE9BQ1AsMkdBQTJHVCxNQUFNLENBQUNHLE9BQU8sQ0FDdkgsU0FDQTtvQkFDRSxPQUFPRDtnQkFDVCxJQUVGO2dCQUVGUSxZQUFZO2dCQUNaRixRQUFRO2dCQUNSRyxPQUFPO2dCQUNQQyxRQUFRZixNQUFNUSxTQUFTLENBQUNRLFVBQVU7WUFDcEM7WUFDQSxjQUFjO2dCQUNaTixTQUFTO2dCQUNURyxZQUFZO1lBQ2Q7WUFDQUksVUFBVTtnQkFDUjtvQkFDRVAsU0FBUztvQkFDVEcsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRUgsU0FDRTtvQkFDRkcsWUFBWTtvQkFDWkUsUUFBUTt3QkFDTkcsU0FBUzt3QkFDVEQsVUFBVTtvQkFDWjtnQkFDRjthQUNEO1lBQ0QseUJBQXlCO2dCQUN2QlAsU0FBU0UsT0FDUCwwQ0FBMENULE1BQU0sQ0FBQ0csT0FBTyxDQUN0RCxTQUNBO29CQUNFLE9BQU9EO2dCQUNULElBRUY7Z0JBRUZRLFlBQVk7Z0JBQ1pGLFFBQVE7Z0JBQ1JHLE9BQU87Z0JBQ1BDLFFBQVFmLE1BQU1RLFNBQVMsQ0FBQ1EsVUFBVTtZQUNwQztZQUNBRyxRQUFRO2dCQUNOVCxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQU8sU0FBUztZQUNURSxhQUFhO1FBQ2Y7SUFDRixHQUFHcEI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xbWwuanM/MGQ2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckphdmFzY3JpcHQgZnJvbSAnLi9qYXZhc2NyaXB0LmpzJ1xucW1sLmRpc3BsYXlOYW1lID0gJ3FtbCdcbnFtbC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBxbWwoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIganNTdHJpbmcgPSAvXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwifCcoPzpcXFxcLnxbXlxcXFwnXFxyXFxuXSkqJy8uc291cmNlXG4gICAgdmFyIGpzQ29tbWVudCA9IC9cXC9cXC8uKig/IS4pfFxcL1xcKig/OlteKl18XFwqKD8hXFwvKSkqXFwqXFwvLy5zb3VyY2VcbiAgICB2YXIganNFeHByID1cbiAgICAgIC8oPzpbXlxcXFwoKVtcXF17fVwiJy9dfDxzdHJpbmc+fFxcLyg/IVsqL10pfDxjb21tZW50PnxcXCg8ZXhwcj4qXFwpfFxcWzxleHByPipcXF18XFx7PGV4cHI+KlxcfXxcXFxcW1xcc1xcU10pLy5zb3VyY2VcbiAgICAgICAgLnJlcGxhY2UoLzxzdHJpbmc+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4ganNTdHJpbmdcbiAgICAgICAgfSlcbiAgICAgICAgLnJlcGxhY2UoLzxjb21tZW50Pi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGpzQ29tbWVudFxuICAgICAgICB9KVxuXG4gICAgLy8gdGhlIHBhdHRlcm4gd2lsbCBibG93IHVwLCBzbyBvbmx5IGEgZmV3IGl0ZXJhdGlvbnNcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDI7IGkrKykge1xuICAgICAganNFeHByID0ganNFeHByLnJlcGxhY2UoLzxleHByPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBqc0V4cHJcbiAgICAgIH0pXG4gICAgfVxuICAgIGpzRXhwciA9IGpzRXhwci5yZXBsYWNlKC88ZXhwcj4vZywgJ1teXFxcXHNcXFxcU10nKVxuICAgIFByaXNtLmxhbmd1YWdlcy5xbWwgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgJ2phdmFzY3JpcHQtZnVuY3Rpb24nOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKCg/Ol58OylbIFxcdF0qKWZ1bmN0aW9uXFxzKyg/IVxccylbXyRhLXpBLVpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkZdKSpcXHMqXFwoPGpzPipcXClcXHMqXFx7PGpzPipcXH0vLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgLzxqcz4vZyxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGpzRXhwclxuICAgICAgICAgICAgfVxuICAgICAgICAgICksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1qYXZhc2NyaXB0JyxcbiAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdFxuICAgICAgfSxcbiAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvKCg/Ol58Wzo7XSlbIFxcdF0qKSg/IVxcZClcXHcrKD89WyBcXHRdKlxce3xbIFxcdF0rb25cXGIpL20sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBwcm9wZXJ0eTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLygoPzpefFs7e10pWyBcXHRdKikoPyFcXGQpXFx3Kyg/OlxcLlxcdyspKig/PVsgXFx0XSo6KS9tLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58Wzt7XSlbIFxcdF0qKXByb3BlcnR5WyBcXHRdKyg/IVxcZClcXHcrKD86XFwuXFx3KykqWyBcXHRdKyg/IVxcZClcXHcrKD86XFwuXFx3KykqKD89WyBcXHRdKjopL20sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleXdvcmQ6IC9ecHJvcGVydHkvLFxuICAgICAgICAgICAgcHJvcGVydHk6IC9cXHcrKD86XFwuXFx3KykqL1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgICdqYXZhc2NyaXB0LWV4cHJlc3Npb24nOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKDpbIFxcdF0qKSg/IVtcXHM7fVtdKSg/Oig/ISR8Wzt9XSk8anM+KSsvLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgLzxqcz4vZyxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGpzRXhwclxuICAgICAgICAgICAgfVxuICAgICAgICAgICksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1qYXZhc2NyaXB0JyxcbiAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuamF2YXNjcmlwdFxuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAga2V5d29yZDogL1xcYig/OmFzfGltcG9ydHxvbilcXGIvLFxuICAgICAgcHVuY3R1YXRpb246IC9be31bXFxdOjssXS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckphdmFzY3JpcHQiLCJxbWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwianNTdHJpbmciLCJzb3VyY2UiLCJqc0NvbW1lbnQiLCJqc0V4cHIiLCJyZXBsYWNlIiwiaSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiUmVnRXhwIiwibG9va2JlaGluZCIsImFsaWFzIiwiaW5zaWRlIiwiamF2YXNjcmlwdCIsInByb3BlcnR5Iiwia2V5d29yZCIsInN0cmluZyIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qore.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qore.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ qore)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nqore.displayName = \"qore\";\nqore.aliases = [];\n/** @type {import('../core.js').Syntax} */ function qore(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.qore = Prism.languages.extend(\"clike\", {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n            lookbehind: true\n        },\n        // Overridden to allow unescaped multi-line strings\n        string: {\n            pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true\n        },\n        keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n        number: /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n        operator: {\n            pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n            lookbehind: true\n        },\n        variable: /\\$(?!\\d)\\w+\\b/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xb3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JEQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0EsbURBQW1EO1FBQ25EQyxRQUFRO1lBQ05GLFNBQVM7WUFDVEcsUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLFFBQ0U7UUFDRkMsVUFBVTtZQUNSUixTQUNFO1lBQ0ZDLFlBQVk7UUFDZDtRQUNBUSxVQUFVO0lBQ1o7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9xb3JlLmpzPzIxMGMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDbGlrZSBmcm9tICcuL2NsaWtlLmpzJ1xucW9yZS5kaXNwbGF5TmFtZSA9ICdxb3JlJ1xucW9yZS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBxb3JlKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5sYW5ndWFnZXMucW9yZSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj9cXCpcXC98KD86XFwvXFwvfCMpLiopLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIC8vIE92ZXJyaWRkZW4gdG8gYWxsb3cgdW5lc2NhcGVkIG11bHRpLWxpbmUgc3RyaW5nc1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhbnl8YXNzZXJ0fGJpbmFyeXxib29sfGJvb2xlYW58YnJlYWt8Ynl0ZXxjYXNlfGNhdGNofGNoYXJ8Y2xhc3N8Y29kZXxjb25zdHxjb250aW51ZXxkYXRhfGRlZmF1bHR8ZG98ZG91YmxlfGVsc2V8ZW51bXxleHRlbmRzfGZpbmFsfGZpbmFsbHl8ZmxvYXR8Zm9yfGdvdG98aGFzaHxpZnxpbXBsZW1lbnRzfGltcG9ydHxpbmhlcml0c3xpbnN0YW5jZW9mfGludHxpbnRlcmZhY2V8bG9uZ3xteXxuYXRpdmV8bmV3fG5vdGhpbmd8bnVsbHxvYmplY3R8b3VyfG93bnxwcml2YXRlfHJlZmVyZW5jZXxyZXRocm93fHJldHVybnxzaG9ydHxzb2Z0KD86Ym9vbHxkYXRlfGZsb2F0fGludHxsaXN0fG51bWJlcnxzdHJpbmcpfHN0YXRpY3xzdHJpY3RmcHxzdHJpbmd8c3VifHN1cGVyfHN3aXRjaHxzeW5jaHJvbml6ZWR8dGhpc3x0aHJvd3x0aHJvd3N8dHJhbnNpZW50fHRyeXx2b2lkfHZvbGF0aWxlfHdoaWxlKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgZnVuY3Rpb246IC9cXCQ/XFxiKD8hXFxkKVxcdysoPz1cXCgpLyxcbiAgICBudW1iZXI6XG4gICAgICAvXFxiKD86MGJbMDFdK3wweCg/OltcXGRhLWZdKlxcLik/W1xcZGEtZnBcXC1dK3woPzpcXGQrKD86XFwuXFxkKyk/fFxcLlxcZCspKD86ZVxcZCspP1tkZl18KD86XFxkKyg/OlxcLlxcZCspP3xcXC5cXGQrKSlcXGIvaSxcbiAgICBvcGVyYXRvcjoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteLl0pKD86XFwrWys9XT98LVstPV0/fFshPV0oPzo9PT98fik/fD4+Pz0/fDwoPzo9Pj98PD0/KT98JlsmPV0/fFxcfFt8PV0/fFsqXFwvJV5dPT98W34/XSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IC9cXCQoPyFcXGQpXFx3K1xcYi9cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsInFvcmUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwic3RyaW5nIiwiZ3JlZWR5Iiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwidmFyaWFibGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qsharp.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qsharp.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ qsharp)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nqsharp.displayName = \"qsharp\";\nqsharp.aliases = [\n    \"qs\"\n];\n/** @type {import('../core.js').Syntax} */ function qsharp(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */ function replace(pattern, replacements) {\n            return pattern.replace(/<<(\\d+)>>/g, function(m, index) {\n                return \"(?:\" + replacements[+index] + \")\";\n            });\n        }\n        /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function re(pattern, replacements, flags) {\n            return RegExp(replace(pattern, replacements), flags || \"\");\n        }\n        /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */ function nested(pattern, depthLog2) {\n            for(var i = 0; i < depthLog2; i++){\n                pattern = pattern.replace(/<<self>>/g, function() {\n                    return \"(?:\" + pattern + \")\";\n                });\n            }\n            return pattern.replace(/<<self>>/g, \"[^\\\\s\\\\S]\");\n        }\n        // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n        // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n        var keywordKinds = {\n            // keywords which represent a return or variable type\n            type: \"Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero\",\n            // all other keywords\n            other: \"Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within\"\n        };\n        // keywords\n        function keywordsToPattern(words) {\n            return \"\\\\b(?:\" + words.trim().replace(/ /g, \"|\") + \")\\\\b\";\n        }\n        var keywords = RegExp(keywordsToPattern(keywordKinds.type + \" \" + keywordKinds.other));\n        // types\n        var identifier = /\\b[A-Za-z_]\\w*\\b/.source;\n        var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [\n            identifier\n        ]);\n        var typeInside = {\n            keyword: keywords,\n            punctuation: /[<>()?,.:[\\]]/\n        };\n        // strings\n        var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source;\n        Prism.languages.qsharp = Prism.languages.extend(\"clike\", {\n            comment: /\\/\\/.*/,\n            string: [\n                {\n                    pattern: re(/(^|[^$\\\\])<<0>>/.source, [\n                        regularString\n                    ]),\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"class-name\": [\n                {\n                    // open Microsoft.Quantum.Canon;\n                    // open Microsoft.Quantum.Canon as CN;\n                    pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n                        qualifiedName\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // namespace Quantum.App1;\n                    pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [\n                        qualifiedName\n                    ]),\n                    lookbehind: true,\n                    inside: typeInside\n                }\n            ],\n            keyword: keywords,\n            number: /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n            operator: /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n            punctuation: /::|[{}[\\];(),.:]/\n        });\n        Prism.languages.insertBefore(\"qsharp\", \"number\", {\n            range: {\n                pattern: /\\.\\./,\n                alias: \"operator\"\n            }\n        });\n        // single line\n        var interpolationExpr = nested(replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [\n            regularString\n        ]), 2);\n        Prism.languages.insertBefore(\"qsharp\", \"string\", {\n            \"interpolation-string\": {\n                pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [\n                    interpolationExpr\n                ]),\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n                            interpolationExpr\n                        ]),\n                        lookbehind: true,\n                        inside: {\n                            punctuation: /^\\{|\\}$/,\n                            expression: {\n                                pattern: /[\\s\\S]+/,\n                                alias: \"language-qsharp\",\n                                inside: Prism.languages.qsharp\n                            }\n                        }\n                    },\n                    string: /[\\s\\S]+/\n                }\n            }\n        });\n    })(Prism);\n    Prism.languages.qs = Prism.languages.qsharp;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qsharp.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/r.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/r.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ r)\n/* harmony export */ });\n// @ts-nocheck\nr.displayName = \"r\";\nr.aliases = [];\n/** @type {import('../core.js').Syntax} */ function r(Prism) {\n    Prism.languages.r = {\n        comment: /#.*/,\n        string: {\n            pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        \"percent-operator\": {\n            // Includes user-defined operators\n            // and %%, %*%, %/%, %in%, %o%, %x%\n            pattern: /%[^%\\s]*%/,\n            alias: \"operator\"\n        },\n        boolean: /\\b(?:FALSE|TRUE)\\b/,\n        ellipsis: /\\.\\.(?:\\.|\\d+)/,\n        number: [\n            /\\b(?:Inf|NaN)\\b/,\n            /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n        ],\n        keyword: /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n        operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n        punctuation: /[(){}\\[\\],;]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEVBQUVDLFdBQVcsR0FBRztBQUNoQkQsRUFBRUUsT0FBTyxHQUFHLEVBQUU7QUFFZCx3Q0FBd0MsR0FDekIsU0FBU0YsRUFBRUcsS0FBSztJQUM3QkEsTUFBTUMsU0FBUyxDQUFDSixDQUFDLEdBQUc7UUFDbEJLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLG9CQUFvQjtZQUNsQixrQ0FBa0M7WUFDbEMsbUNBQW1DO1lBQ25DRCxTQUFTO1lBQ1RFLE9BQU87UUFDVDtRQUNBQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsUUFBUTtZQUNOO1lBQ0E7U0FDRDtRQUNEQyxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvci5qcz9jYTQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5yLmRpc3BsYXlOYW1lID0gJ3InXG5yLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHIoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnIgPSB7XG4gICAgY29tbWVudDogLyMuKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFsnXCJdKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAncGVyY2VudC1vcGVyYXRvcic6IHtcbiAgICAgIC8vIEluY2x1ZGVzIHVzZXItZGVmaW5lZCBvcGVyYXRvcnNcbiAgICAgIC8vIGFuZCAlJSwgJSolLCAlLyUsICVpbiUsICVvJSwgJXglXG4gICAgICBwYXR0ZXJuOiAvJVteJVxcc10qJS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OkZBTFNFfFRSVUUpXFxiLyxcbiAgICBlbGxpcHNpczogL1xcLlxcLig/OlxcLnxcXGQrKS8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvXFxiKD86SW5mfE5hTilcXGIvLFxuICAgICAgLyg/OlxcYjB4W1xcZEEtRmEtZl0rKD86XFwuXFxkKik/fFxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRWVQcF1bKy1dP1xcZCspP1tpTF0/L1xuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpOQXxOQV9jaGFyYWN0ZXJffE5BX2NvbXBsZXhffE5BX2ludGVnZXJffE5BX3JlYWxffE5VTEx8YnJlYWt8ZWxzZXxmb3J8ZnVuY3Rpb258aWZ8aW58bmV4dHxyZXBlYXR8d2hpbGUpXFxiLyxcbiAgICBvcGVyYXRvcjogLy0+Pz4/fDwoPzo9fDw/LSk/fFs+PSFdPT98Ojo/fCYmP3xcXHxcXHw/fFsrKlxcL14kQH5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdLDtdL1xuICB9XG59XG4iXSwibmFtZXMiOlsiciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJhbGlhcyIsImJvb2xlYW4iLCJlbGxpcHNpcyIsIm51bWJlciIsImtleXdvcmQiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/r.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/racket.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/racket.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ racket)\n/* harmony export */ });\n/* harmony import */ var _scheme_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheme.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scheme.js\");\n// @ts-nocheck\n\nracket.displayName = \"racket\";\nracket.aliases = [\n    \"rkt\"\n];\n/** @type {import('../core.js').Syntax} */ function racket(Prism) {\n    Prism.register(_scheme_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.racket = Prism.languages.extend(\"scheme\", {\n        \"lambda-parameter\": {\n            // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n            // this will just prevent false positives of the `function` pattern\n            pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n            lookbehind: true\n        }\n    });\n    Prism.languages.insertBefore(\"racket\", \"string\", {\n        lang: {\n            pattern: /^#lang.+/m,\n            greedy: true,\n            alias: \"keyword\"\n        }\n    });\n    Prism.languages.rkt = Prism.languages.racket;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yYWNrZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQzJCO0FBQ3pDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRztJQUFDO0NBQU07QUFFeEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE9BQU9HLEtBQUs7SUFDbENBLE1BQU1DLFFBQVEsQ0FBQ0wsa0RBQWVBO0lBQzlCSSxNQUFNRSxTQUFTLENBQUNMLE1BQU0sR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsVUFBVTtRQUN4RCxvQkFBb0I7WUFDbEIsMEZBQTBGO1lBQzFGLG1FQUFtRTtZQUNuRUMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7SUFDRjtJQUNBTCxNQUFNRSxTQUFTLENBQUNJLFlBQVksQ0FBQyxVQUFVLFVBQVU7UUFDL0NDLE1BQU07WUFDSkgsU0FBUztZQUNUSSxRQUFRO1lBQ1JDLE9BQU87UUFDVDtJQUNGO0lBQ0FULE1BQU1FLFNBQVMsQ0FBQ1EsR0FBRyxHQUFHVixNQUFNRSxTQUFTLENBQUNMLE1BQU07QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcmFja2V0LmpzP2RiNjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JTY2hlbWUgZnJvbSAnLi9zY2hlbWUuanMnXG5yYWNrZXQuZGlzcGxheU5hbWUgPSAncmFja2V0J1xucmFja2V0LmFsaWFzZXMgPSBbJ3JrdCddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmFja2V0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclNjaGVtZSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnJhY2tldCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ3NjaGVtZScsIHtcbiAgICAnbGFtYmRhLXBhcmFtZXRlcic6IHtcbiAgICAgIC8vIHRoZSByYWNrZXQgbGFtYmRhIHN5bnRheCBpcyBhIGxvdCBtb3JlIGNvbXBsZXgsIHNvIHdlIHdvbid0IGV2ZW4gYXR0ZW1wdCB0byBjYXB0dXJlIGl0LlxuICAgICAgLy8gdGhpcyB3aWxsIGp1c3QgcHJldmVudCBmYWxzZSBwb3NpdGl2ZXMgb2YgdGhlIGBmdW5jdGlvbmAgcGF0dGVyblxuICAgICAgcGF0dGVybjogLyhbKFxcW11sYW1iZGFcXHMrWyhcXFtdKVteKClcXFtcXF0nXFxzXSsvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgncmFja2V0JywgJ3N0cmluZycsIHtcbiAgICBsYW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXiNsYW5nLisvbSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5ya3QgPSBQcmlzbS5sYW5ndWFnZXMucmFja2V0XG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yU2NoZW1lIiwicmFja2V0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiaW5zZXJ0QmVmb3JlIiwibGFuZyIsImdyZWVkeSIsImFsaWFzIiwicmt0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/racket.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/reason.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/reason.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ reason)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nreason.displayName = \"reason\";\nreason.aliases = [];\n/** @type {import('../core.js').Syntax} */ function reason(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.reason = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n            greedy: true\n        },\n        // 'class-name' must be matched *after* 'constructor' defined below\n        \"class-name\": /\\b[A-Z]\\w*/,\n        keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n        operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n    });\n    Prism.languages.insertBefore(\"reason\", \"class-name\", {\n        char: {\n            pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n            greedy: true\n        },\n        // Negative look-ahead prevents from matching things like String.capitalize\n        constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n        label: {\n            pattern: /\\b[a-z]\\w*(?=::)/,\n            alias: \"symbol\"\n        }\n    });\n    // We can't match functions property, so let's not even try.\n    delete Prism.languages.reason.function;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZWFzb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRyxFQUFFO0FBRW5CLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUM3QkksTUFBTUUsU0FBUyxDQUFDTCxNQUFNLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDdkRDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxtRUFBbUU7UUFDbkUsY0FBYztRQUNkQyxTQUNFO1FBQ0ZDLFVBQ0U7SUFDSjtJQUNBUixNQUFNRSxTQUFTLENBQUNPLFlBQVksQ0FBQyxVQUFVLGNBQWM7UUFDbkRDLE1BQU07WUFDSkwsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSwyRUFBMkU7UUFDM0VLLGFBQWE7UUFDYkMsT0FBTztZQUNMUCxTQUFTO1lBQ1RRLE9BQU87UUFDVDtJQUNGO0lBRUEsNERBQTREO0lBQzVELE9BQU9iLE1BQU1FLFNBQVMsQ0FBQ0wsTUFBTSxDQUFDaUIsUUFBUTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZWFzb24uanM/ODQxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5yZWFzb24uZGlzcGxheU5hbWUgPSAncmVhc29uJ1xucmVhc29uLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlYXNvbihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnJlYXNvbiA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXCg/OlxcclxcbnxbXFxzXFxTXSl8W15cXFxcXFxyXFxuXCJdKSpcIi8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIC8vICdjbGFzcy1uYW1lJyBtdXN0IGJlIG1hdGNoZWQgKmFmdGVyKiAnY29uc3RydWN0b3InIGRlZmluZWQgYmVsb3dcbiAgICAnY2xhc3MtbmFtZSc6IC9cXGJbQS1aXVxcdyovLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YW5kfGFzfGFzc2VydHxiZWdpbnxjbGFzc3xjb25zdHJhaW50fGRvfGRvbmV8ZG93bnRvfGVsc2V8ZW5kfGV4Y2VwdGlvbnxleHRlcm5hbHxmb3J8ZnVufGZ1bmN0aW9ufGZ1bmN0b3J8aWZ8aW58aW5jbHVkZXxpbmhlcml0fGluaXRpYWxpemVyfGxhenl8bGV0fG1ldGhvZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfG9iamVjdHxvZnxvcGVufG9yfHByaXZhdGV8cmVjfHNpZ3xzdHJ1Y3R8c3dpdGNofHRoZW58dG98dHJ5fHR5cGV8dmFsfHZpcnR1YWx8d2hlbnx3aGlsZXx3aXRoKVxcYi8sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvXFwuezN9fDpbOj1dfFxcfD58LT58PSg/Oj09P3w+KT98PD0/fD49P3xbfF4/JyMhfmBdfFsrXFwtKlxcL11cXC4/fFxcYig/OmFzcnxsYW5kfGxvcnxsc2x8bHNyfGx4b3J8bW9kKVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgncmVhc29uJywgJ2NsYXNzLW5hbWUnLCB7XG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogLycoPzpcXFxceFtcXGRhLWZdezJ9fFxcXFxvWzAtM11bMC03XVswLTddfFxcXFxcXGR7M318XFxcXC58W14nXFxcXFxcclxcbl0pJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIC8vIE5lZ2F0aXZlIGxvb2stYWhlYWQgcHJldmVudHMgZnJvbSBtYXRjaGluZyB0aGluZ3MgbGlrZSBTdHJpbmcuY2FwaXRhbGl6ZVxuICAgIGNvbnN0cnVjdG9yOiAvXFxiW0EtWl1cXHcqXFxiKD8hXFxzKlxcLikvLFxuICAgIGxhYmVsOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiW2Etel1cXHcqKD89OjopLyxcbiAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgIH1cbiAgfSlcblxuICAvLyBXZSBjYW4ndCBtYXRjaCBmdW5jdGlvbnMgcHJvcGVydHksIHNvIGxldCdzIG5vdCBldmVuIHRyeS5cbiAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy5yZWFzb24uZnVuY3Rpb25cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsInJlYXNvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwia2V5d29yZCIsIm9wZXJhdG9yIiwiaW5zZXJ0QmVmb3JlIiwiY2hhciIsImNvbnN0cnVjdG9yIiwibGFiZWwiLCJhbGlhcyIsImZ1bmN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/reason.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/regex.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/regex.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ regex)\n/* harmony export */ });\n// @ts-nocheck\nregex.displayName = \"regex\";\nregex.aliases = [];\n/** @type {import('../core.js').Syntax} */ function regex(Prism) {\n    ;\n    (function(Prism) {\n        var specialEscape = {\n            pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n            alias: \"escape\"\n        };\n        var escape = /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/;\n        var charSet = {\n            pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n            alias: \"class-name\"\n        };\n        var charSetWithoutDot = {\n            pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n            alias: \"class-name\"\n        };\n        var rangeChar = \"(?:[^\\\\\\\\-]|\" + escape.source + \")\";\n        var range = RegExp(rangeChar + \"-\" + rangeChar);\n        // the name of a capturing group\n        var groupName = {\n            pattern: /(<|')[^<>']+(?=[>']$)/,\n            lookbehind: true,\n            alias: \"variable\"\n        };\n        Prism.languages.regex = {\n            \"char-class\": {\n                pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n                lookbehind: true,\n                inside: {\n                    \"char-class-negation\": {\n                        pattern: /(^\\[)\\^/,\n                        lookbehind: true,\n                        alias: \"operator\"\n                    },\n                    \"char-class-punctuation\": {\n                        pattern: /^\\[|\\]$/,\n                        alias: \"punctuation\"\n                    },\n                    range: {\n                        pattern: range,\n                        inside: {\n                            escape: escape,\n                            \"range-punctuation\": {\n                                pattern: /-/,\n                                alias: \"operator\"\n                            }\n                        }\n                    },\n                    \"special-escape\": specialEscape,\n                    \"char-set\": charSetWithoutDot,\n                    escape: escape\n                }\n            },\n            \"special-escape\": specialEscape,\n            \"char-set\": charSet,\n            backreference: [\n                {\n                    // a backreference which is not an octal escape\n                    pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n                    alias: \"keyword\"\n                },\n                {\n                    pattern: /\\\\k<[^<>']+>/,\n                    alias: \"keyword\",\n                    inside: {\n                        \"group-name\": groupName\n                    }\n                }\n            ],\n            anchor: {\n                pattern: /[$^]|\\\\[ABbGZz]/,\n                alias: \"function\"\n            },\n            escape: escape,\n            group: [\n                {\n                    // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n                    // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n                    // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n                    pattern: /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n                    alias: \"punctuation\",\n                    inside: {\n                        \"group-name\": groupName\n                    }\n                },\n                {\n                    pattern: /\\)/,\n                    alias: \"punctuation\"\n                }\n            ],\n            quantifier: {\n                pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n                alias: \"number\"\n            },\n            alternation: {\n                pattern: /\\|/,\n                alias: \"keyword\"\n            }\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZWdleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLOztJQUMvQixVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsZ0JBQWdCO1lBQ2xCQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLElBQUlDLFNBQ0Y7UUFDRixJQUFJQyxVQUFVO1lBQ1pILFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0EsSUFBSUcsb0JBQW9CO1lBQ3RCSixTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLElBQUlJLFlBQVksaUJBQWlCSCxPQUFPSSxNQUFNLEdBQUc7UUFDakQsSUFBSUMsUUFBUUMsT0FBT0gsWUFBWSxNQUFNQTtRQUVyQyxnQ0FBZ0M7UUFDaEMsSUFBSUksWUFBWTtZQUNkVCxTQUFTO1lBQ1RVLFlBQVk7WUFDWlQsT0FBTztRQUNUO1FBQ0FILE1BQU1hLFNBQVMsQ0FBQ2hCLEtBQUssR0FBRztZQUN0QixjQUFjO2dCQUNaSyxTQUFTO2dCQUNUVSxZQUFZO2dCQUNaRSxRQUFRO29CQUNOLHVCQUF1Qjt3QkFDckJaLFNBQVM7d0JBQ1RVLFlBQVk7d0JBQ1pULE9BQU87b0JBQ1Q7b0JBQ0EsMEJBQTBCO3dCQUN4QkQsU0FBUzt3QkFDVEMsT0FBTztvQkFDVDtvQkFDQU0sT0FBTzt3QkFDTFAsU0FBU087d0JBQ1RLLFFBQVE7NEJBQ05WLFFBQVFBOzRCQUNSLHFCQUFxQjtnQ0FDbkJGLFNBQVM7Z0NBQ1RDLE9BQU87NEJBQ1Q7d0JBQ0Y7b0JBQ0Y7b0JBQ0Esa0JBQWtCRjtvQkFDbEIsWUFBWUs7b0JBQ1pGLFFBQVFBO2dCQUNWO1lBQ0Y7WUFDQSxrQkFBa0JIO1lBQ2xCLFlBQVlJO1lBQ1pVLGVBQWU7Z0JBQ2I7b0JBQ0UsK0NBQStDO29CQUMvQ2IsU0FBUztvQkFDVEMsT0FBTztnQkFDVDtnQkFDQTtvQkFDRUQsU0FBUztvQkFDVEMsT0FBTztvQkFDUFcsUUFBUTt3QkFDTixjQUFjSDtvQkFDaEI7Z0JBQ0Y7YUFDRDtZQUNESyxRQUFRO2dCQUNOZCxTQUFTO2dCQUNUQyxPQUFPO1lBQ1Q7WUFDQUMsUUFBUUE7WUFDUmEsT0FBTztnQkFDTDtvQkFDRSwwRUFBMEU7b0JBQzFFLHNKQUFzSjtvQkFFdEosbUZBQW1GO29CQUNuRmYsU0FDRTtvQkFDRkMsT0FBTztvQkFDUFcsUUFBUTt3QkFDTixjQUFjSDtvQkFDaEI7Z0JBQ0Y7Z0JBQ0E7b0JBQ0VULFNBQVM7b0JBQ1RDLE9BQU87Z0JBQ1Q7YUFDRDtZQUNEZSxZQUFZO2dCQUNWaEIsU0FBUztnQkFDVEMsT0FBTztZQUNUO1lBQ0FnQixhQUFhO2dCQUNYakIsU0FBUztnQkFDVEMsT0FBTztZQUNUO1FBQ0Y7SUFDRixHQUFHSDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JlZ2V4LmpzPzQyMDEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnJlZ2V4LmRpc3BsYXlOYW1lID0gJ3JlZ2V4J1xucmVnZXguYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVnZXgoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgc3BlY2lhbEVzY2FwZSA9IHtcbiAgICAgIHBhdHRlcm46IC9cXFxcW1xcXFwoKXt9W1xcXV4kKyo/fC5dLyxcbiAgICAgIGFsaWFzOiAnZXNjYXBlJ1xuICAgIH1cbiAgICB2YXIgZXNjYXBlID1cbiAgICAgIC9cXFxcKD86eFtcXGRhLWZBLUZdezJ9fHVbXFxkYS1mQS1GXXs0fXx1XFx7W1xcZGEtZkEtRl0rXFx9fDBbMC03XXswLDJ9fFsxMjNdWzAtN117Mn18Y1thLXpBLVpdfC4pL1xuICAgIHZhciBjaGFyU2V0ID0ge1xuICAgICAgcGF0dGVybjogL1xcLnxcXFxcW3dzZF18XFxcXHBcXHtbXnt9XStcXH0vaSxcbiAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICB9XG4gICAgdmFyIGNoYXJTZXRXaXRob3V0RG90ID0ge1xuICAgICAgcGF0dGVybjogL1xcXFxbd3NkXXxcXFxccFxce1tee31dK1xcfS9pLFxuICAgICAgYWxpYXM6ICdjbGFzcy1uYW1lJ1xuICAgIH1cbiAgICB2YXIgcmFuZ2VDaGFyID0gJyg/OlteXFxcXFxcXFwtXXwnICsgZXNjYXBlLnNvdXJjZSArICcpJ1xuICAgIHZhciByYW5nZSA9IFJlZ0V4cChyYW5nZUNoYXIgKyAnLScgKyByYW5nZUNoYXIpXG5cbiAgICAvLyB0aGUgbmFtZSBvZiBhIGNhcHR1cmluZyBncm91cFxuICAgIHZhciBncm91cE5hbWUgPSB7XG4gICAgICBwYXR0ZXJuOiAvKDx8JylbXjw+J10rKD89Wz4nXSQpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMucmVnZXggPSB7XG4gICAgICAnY2hhci1jbGFzcyc6IHtcbiAgICAgICAgcGF0dGVybjogLygoPzpefFteXFxcXF0pKD86XFxcXFxcXFwpKilcXFsoPzpbXlxcXFxcXF1dfFxcXFxbXFxzXFxTXSkqXFxdLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgJ2NoYXItY2xhc3MtbmVnYXRpb24nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF5cXFspXFxeLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgICAgICAgIH0sXG4gICAgICAgICAgJ2NoYXItY2xhc3MtcHVuY3R1YXRpb24nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXlxcW3xcXF0kLyxcbiAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgfSxcbiAgICAgICAgICByYW5nZToge1xuICAgICAgICAgICAgcGF0dGVybjogcmFuZ2UsXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgZXNjYXBlOiBlc2NhcGUsXG4gICAgICAgICAgICAgICdyYW5nZS1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvLS8sXG4gICAgICAgICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgJ3NwZWNpYWwtZXNjYXBlJzogc3BlY2lhbEVzY2FwZSxcbiAgICAgICAgICAnY2hhci1zZXQnOiBjaGFyU2V0V2l0aG91dERvdCxcbiAgICAgICAgICBlc2NhcGU6IGVzY2FwZVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ3NwZWNpYWwtZXNjYXBlJzogc3BlY2lhbEVzY2FwZSxcbiAgICAgICdjaGFyLXNldCc6IGNoYXJTZXQsXG4gICAgICBiYWNrcmVmZXJlbmNlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBhIGJhY2tyZWZlcmVuY2Ugd2hpY2ggaXMgbm90IGFuIG9jdGFsIGVzY2FwZVxuICAgICAgICAgIHBhdHRlcm46IC9cXFxcKD8hWzEyM11bMC03XXsyfSlbMS05XS8sXG4gICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogL1xcXFxrPFtePD4nXSs+LyxcbiAgICAgICAgICBhbGlhczogJ2tleXdvcmQnLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2dyb3VwLW5hbWUnOiBncm91cE5hbWVcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBhbmNob3I6IHtcbiAgICAgICAgcGF0dGVybjogL1skXl18XFxcXFtBQmJHWnpdLyxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICBlc2NhcGU6IGVzY2FwZSxcbiAgICAgIGdyb3VwOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBodHRwczovL2RvY3Mub3JhY2xlLmNvbS9qYXZhc2UvMTAvZG9jcy9hcGkvamF2YS91dGlsL3JlZ2V4L1BhdHRlcm4uaHRtbFxuICAgICAgICAgIC8vIGh0dHBzOi8vZG9jcy5taWNyb3NvZnQuY29tL2VuLXVzL2RvdG5ldC9zdGFuZGFyZC9iYXNlLXR5cGVzL3JlZ3VsYXItZXhwcmVzc2lvbi1sYW5ndWFnZS1xdWljay1yZWZlcmVuY2U/dmlldz1uZXRmcmFtZXdvcmstNC43LjIjZ3JvdXBpbmctY29uc3RydWN0c1xuXG4gICAgICAgICAgLy8gKCksICg/PG5hbWU+KSwgKD8nbmFtZScpLCAoPz4pLCAoPzopLCAoPz0pLCAoPyEpLCAoPzw9KSwgKD88ISksICg/aXMtbSksICg/aS1tOilcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgL1xcKCg/OlxcPyg/OjxbXjw+J10rPnwnW148PiddKyd8Wz46XXw8P1s9IV18W2lkbW5zdXhVXSsoPzotW2lkbW5zdXhVXSspPzo/KSk/LyxcbiAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdncm91cC1uYW1lJzogZ3JvdXBOYW1lXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogL1xcKS8sXG4gICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIHF1YW50aWZpZXI6IHtcbiAgICAgICAgcGF0dGVybjogLyg/OlsrKj9dfFxce1xcZCsoPzosXFxkKik/XFx9KVs/K10/LyxcbiAgICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgICB9LFxuICAgICAgYWx0ZXJuYXRpb246IHtcbiAgICAgICAgcGF0dGVybjogL1xcfC8sXG4gICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgIH1cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZ2V4IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJzcGVjaWFsRXNjYXBlIiwicGF0dGVybiIsImFsaWFzIiwiZXNjYXBlIiwiY2hhclNldCIsImNoYXJTZXRXaXRob3V0RG90IiwicmFuZ2VDaGFyIiwic291cmNlIiwicmFuZ2UiLCJSZWdFeHAiLCJncm91cE5hbWUiLCJsb29rYmVoaW5kIiwibGFuZ3VhZ2VzIiwiaW5zaWRlIiwiYmFja3JlZmVyZW5jZSIsImFuY2hvciIsImdyb3VwIiwicXVhbnRpZmllciIsImFsdGVybmF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/regex.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rego.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rego.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rego)\n/* harmony export */ });\n// @ts-nocheck\nrego.displayName = \"rego\";\nrego.aliases = [];\n/** @type {import('../core.js').Syntax} */ function rego(Prism) {\n    // https://www.openpolicyagent.org/docs/latest/policy-reference/\n    Prism.languages.rego = {\n        comment: /#.*/,\n        property: {\n            pattern: /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n            lookbehind: true,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        function: {\n            pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n            inside: {\n                namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n                punctuation: /\\./\n            }\n        },\n        number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n        operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n        punctuation: /[,;.\\[\\]{}()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZWdvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEMsZ0VBQWdFO0lBRWhFQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQkssU0FBUztRQUNUQyxVQUFVO1lBQ1JDLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FFLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxVQUFVO1lBQ1JOLFNBQVM7WUFDVE8sUUFBUTtnQkFDTkMsV0FBVztnQkFDWEMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsUUFBUTtRQUNSQyxVQUFVO1FBQ1ZGLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3JlZ28uanM/OWU2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucmVnby5kaXNwbGF5TmFtZSA9ICdyZWdvJ1xucmVnby5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWdvKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vd3d3Lm9wZW5wb2xpY3lhZ2VudC5vcmcvZG9jcy9sYXRlc3QvcG9saWN5LXJlZmVyZW5jZS9cblxuICBQcmlzbS5sYW5ndWFnZXMucmVnbyA9IHtcbiAgICBjb21tZW50OiAvIy4qLyxcbiAgICBwcm9wZXJ0eToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteXFxcXC5dKSg/OlwiKD86XFxcXC58W15cXFxcXCJcXHJcXG5dKSpcInxgW15gXSpgfFxcYlthLXpfXVxcdypcXGIpKD89XFxzKjooPyE9KSkvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwifGBbXmBdKmAvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphc3xkZWZhdWx0fGVsc2V8aW1wb3J0fG5vdHxudWxsfHBhY2thZ2V8c2V0KD89XFxzKlxcKCl8c29tZXx3aXRoKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjogL1xcYlthLXpfXVxcdypcXGIoPzpcXHMqXFwuXFxzKlxcYlthLXpfXVxcdypcXGIpKig/PVxccypcXCgpL2ksXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgbmFtZXNwYWNlOiAvXFxiXFx3K1xcYig/PVxccypcXC4pLyxcbiAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICB9XG4gICAgfSxcbiAgICBudW1iZXI6IC8tP1xcYlxcZCsoPzpcXC5cXGQrKT8oPzplWystXT9cXGQrKT9cXGIvaSxcbiAgICBvcGVyYXRvcjogL1stKyovJXwmXXxbPD46PV09P3whPXxcXGJfXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1ssOy5cXFtcXF17fSgpXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInJlZ28iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwcm9wZXJ0eSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsImluc2lkZSIsIm5hbWVzcGFjZSIsInB1bmN0dWF0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rego.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/renpy.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/renpy.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ renpy)\n/* harmony export */ });\n// @ts-nocheck\nrenpy.displayName = \"renpy\";\nrenpy.aliases = [\n    \"rpy\"\n];\n/** @type {import('../core.js').Syntax} */ function renpy(Prism) {\n    Prism.languages.renpy = {\n        comment: {\n            pattern: /(^|[^\\\\])#.+/,\n            lookbehind: true\n        },\n        string: {\n            pattern: /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n            greedy: true\n        },\n        function: /\\b[a-z_]\\w*(?=\\()/i,\n        property: /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n        tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n        keyword: /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n        boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n        number: /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n        operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.rpy = Prism.languages.renpy;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZW5weS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRztJQUFDO0NBQU07QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxHQUFHO1FBQ3RCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFFBQVE7WUFDTkYsU0FDRTtZQUNGRyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtRQUNWQyxVQUNFO1FBQ0ZDLEtBQUs7UUFDTEMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7SUFDQWQsTUFBTUMsU0FBUyxDQUFDYyxHQUFHLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSztBQUM3QyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZW5weS5qcz9mNjg1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5yZW5weS5kaXNwbGF5TmFtZSA9ICdyZW5weSdcbnJlbnB5LmFsaWFzZXMgPSBbJ3JweSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVucHkoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnJlbnB5ID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSMuKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXCJcIlwifCcnJylbXFxzXFxTXSs/XFwxfChcInwnKSg/OlxcXFwufCg/IVxcMilbXlxcXFxdKSpcXDJ8KD86XiM/KD86KD86WzAtOWEtZkEtRl0pezN9fFswLTlhLWZBLUZdezZ9KSQpL20sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvXFxiW2Etel9dXFx3Kig/PVxcKCkvaSxcbiAgICBwcm9wZXJ0eTpcbiAgICAgIC9cXGIoPzpVcGRhdGV8VXBkYXRlVmVyc2lvbnxhY3Rpb258YWN0aXZhdGVfc291bmR8YWR2X252bF90cmFuc2l0aW9ufGFmdGVyX2xvYWRfdHJhbnNpdGlvbnxhbGlnbnxhbHBoYXxhbHR8YW5jaG9yfGFudGlhbGlhc3xhcmVhfGF1dG98YmFja2dyb3VuZHxiYXJfaW52ZXJ0fGJhcl9yZXNpemluZ3xiYXJfdmVydGljYWx8YmxhY2tfY29sb3J8Ym9sZHxib3R0b21fYmFyfGJvdHRvbV9ndXR0ZXJ8Ym90dG9tX21hcmdpbnxib3R0b21fcGFkZGluZ3xib3hfcmV2ZXJzZXxib3hfd3JhcHxjYW5fdXBkYXRlfGNhcmV0fGNoaWxkfGNvbG9yfGNyb3B8ZGVmYXVsdF9hZm1fZW5hYmxlfGRlZmF1bHRfYWZtX3RpbWV8ZGVmYXVsdF9mdWxsc2NyZWVufGRlZmF1bHRfdGV4dF9jcHN8ZGV2ZWxvcGVyfGRpcmVjdG9yeV9uYW1lfGRyYWdfaGFuZGxlfGRyYWdfam9pbmVkfGRyYWdfbmFtZXxkcmFnX3JhaXNlfGRyYWdnYWJsZXxkcmFnZ2VkfGRyb3Bfc2hhZG93fGRyb3Bfc2hhZG93X2NvbG9yfGRyb3BwYWJsZXxkcm9wcGVkfGVhc2VpbnxlYXNlb3V0fGVkZ2VzY3JvbGx8ZW5kX2dhbWVfdHJhbnNpdGlvbnxlbmRfc3BsYXNoX3RyYW5zaXRpb258ZW50ZXJfcmVwbGF5X3RyYW5zaXRpb258ZW50ZXJfc291bmR8ZW50ZXJfdHJhbnNpdGlvbnxlbnRlcl95ZXNub190cmFuc2l0aW9ufGV4ZWN1dGFibGVfbmFtZXxleGl0X3JlcGxheV90cmFuc2l0aW9ufGV4aXRfc291bmR8ZXhpdF90cmFuc2l0aW9ufGV4aXRfeWVzbm9fdHJhbnNpdGlvbnxmYWRlaW58ZmFkZW91dHxmaXJzdF9pbmRlbnR8Zmlyc3Rfc3BhY2luZ3xmaXRfZmlyc3R8Zm9jdXN8Zm9jdXNfbWFza3xmb250fGZvcmVncm91bmR8Z2FtZV9tYWluX3RyYW5zaXRpb258Z2V0X2luc3RhbGxlZF9wYWNrYWdlc3xnb29nbGVfcGxheV9rZXl8Z29vZ2xlX3BsYXlfc2FsdHxncm91bmR8aGFzX211c2ljfGhhc19zb3VuZHxoYXNfdm9pY2V8aGVpZ2h0fGhlbHB8aGludGluZ3xob3Zlcnxob3Zlcl9iYWNrZ3JvdW5kfGhvdmVyX2NvbG9yfGhvdmVyX3NvdW5kfGhvdmVyZWR8aHlwZXJsaW5rX2Z1bmN0aW9uc3xpZGxlfGlkbGVfY29sb3J8aW1hZ2Vfc3R5bGV8aW5jbHVkZV91cGRhdGV8aW5zZW5zaXRpdmV8aW5zZW5zaXRpdmVfYmFja2dyb3VuZHxpbnNlbnNpdGl2ZV9jb2xvcnxpbnNpZGV8aW50cmFfdHJhbnNpdGlvbnxpdGFsaWN8anVzdGlmeXxrZXJuaW5nfGtleWJvYXJkX2ZvY3VzfGxhbmd1YWdlfGxheWVyX2NsaXBwaW5nfGxheWVyc3xsYXlvdXR8bGVmdF9iYXJ8bGVmdF9ndXR0ZXJ8bGVmdF9tYXJnaW58bGVmdF9wYWRkaW5nfGxlbmd0aHxsaW5lX2xlYWRpbmd8bGluZV9vdmVybGFwX3NwbGl0fGxpbmVfc3BhY2luZ3xsaW5lYXJ8bWFpbl9nYW1lX3RyYW5zaXRpb258bWFpbl9tZW51X211c2ljfG1heGltdW18bWluX3dpZHRofG1pbmltdW18bWlud2lkdGh8bW9kYWx8bW91c2V8bW91c2V3aGVlbHxuYW1lfG5hcnJhdG9yX21lbnV8bmV3bGluZV9pbmRlbnR8bnZsX2Fkdl90cmFuc2l0aW9ufG9mZnNldHxvcmRlcl9yZXZlcnNlfG91dGxpbmVzfG92ZXJsYXlfZnVuY3Rpb25zfHBvc3xwb3NpdGlvbnxwcmVmaXh8cmFkaXVzfHJhbmdlfHJlc3RfaW5kZW50fHJpZ2h0X2JhcnxyaWdodF9ndXR0ZXJ8cmlnaHRfbWFyZ2lufHJpZ2h0X3BhZGRpbmd8cm90YXRlfHJvdGF0ZV9wYWR8cnVieV9zdHlsZXxzYW1wbGVfc291bmR8c2F2ZV9kaXJlY3Rvcnl8c2F5X2F0dHJpYnV0ZV90cmFuc2l0aW9ufHNjcmVlbl9oZWlnaHR8c2NyZWVuX3dpZHRofHNjcm9sbGJhcnN8c2VsZWN0ZWRfaG92ZXJ8c2VsZWN0ZWRfaG92ZXJfY29sb3J8c2VsZWN0ZWRfaWRsZXxzZWxlY3RlZF9pZGxlX2NvbG9yfHNlbGVjdGVkX2luc2Vuc2l0aXZlfHNob3dfc2lkZV9pbWFnZXxzaG93X3R3b193aW5kb3d8c2lkZV9zcGFjaW5nfHNpZGVfeHBvc3xzaWRlX3lwb3N8c2l6ZXxzaXplX2dyb3VwfHNsb3dfY3BzfHNsb3dfY3BzX211bHRpcGxpZXJ8c3BhY2luZ3xzdHJpa2V0aHJvdWdofHN1YnBpeGVsfHRleHRfYWxpZ258dGV4dF9zdHlsZXx0ZXh0X3hwb3N8dGV4dF95X2Z1ZGdlfHRleHRfeXBvc3x0aHVtYnx0aHVtYl9vZmZzZXR8dGh1bWJfc2hhZG93fHRodW1ibmFpbF9oZWlnaHR8dGh1bWJuYWlsX3dpZHRofHRpbWV8dG9wX2Jhcnx0b3BfZ3V0dGVyfHRvcF9tYXJnaW58dG9wX3BhZGRpbmd8dHJhbnNsYXRpb25zfHVuZGVybGluZXx1bnNjcm9sbGFibGV8dXBkYXRlfHZhbHVlfHZlcnNpb258dmVyc2lvbl9uYW1lfHZlcnNpb25fdHVwbGV8dmVydGljYWx8d2lkdGh8d2luZG93X2hpZGVfdHJhbnNpdGlvbnx3aW5kb3dfaWNvbnx3aW5kb3dfbGVmdF9wYWRkaW5nfHdpbmRvd19zaG93X3RyYW5zaXRpb258d2luZG93X3RpdGxlfHdpbmRvd3NfaWNvbnx4YWRqdXN0bWVudHx4YWxpZ258eGFuY2hvcnx4YW5jaG9yYXJvdW5kfHhhcm91bmR8eGNlbnRlcnx4ZmlsbHx4aW5pdGlhbHx4bWFyZ2lufHhtYXhpbXVtfHhtaW5pbXVtfHhvZmZzZXR8eG9mc3NldHx4cGFkZGluZ3x4cG9zfHhzaXplfHh6b29tfHlhZGp1c3RtZW50fHlhbGlnbnx5YW5jaG9yfHlhbmNob3Jhcm91bmR8eWFyb3VuZHx5Y2VudGVyfHlmaWxsfHlpbml0aWFsfHltYXJnaW58eW1heGltdW18eW1pbmltdW18eW9mZnNldHx5cGFkZGluZ3x5cG9zfHlzaXplfHlzaXpleHlzaXplfHl6b29tfHpvb218em9yZGVyKVxcYi8sXG4gICAgdGFnOiAvXFxiKD86YmFyfGJsb2NrfGJ1dHRvbnxidXR0b3NjcmVlbm58ZHJhZ3xkcmFnZ3JvdXB8Zml4ZWR8ZnJhbWV8Z3JpZHxbaHZdYm94fGhvdGJhcnxob3RzcG90fGltYWdlfGltYWdlYnV0dG9ufGltYWdlbWFwfGlucHV0fGtleXxsYWJlbHxtZW51fG1tX21lbnVfZnJhbWV8bW91c2VhcmVhfG52bHxwYXJhbGxlbHxzY3JlZW58c2VsZnxzaWRlfHRhZ3x0ZXh0fHRleHRidXR0b258dGltZXJ8dmJhcnx2aWV3cG9ydHx3aW5kb3cpXFxifFxcJC8sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpOb25lfGFkZHxhZGp1c3RtZW50fGFsaWduYXJvdW5kfGFsbG93fGFuZ2xlfGFuaW1hdGlvbnxhcm91bmR8YXN8YXNzZXJ0fGJlaGluZHxib3hfbGF5b3V0fGJyZWFrfGJ1aWxkfGNhY2hlfGNhbGx8Y2VudGVyfGNoYW5nZWR8Y2hpbGRfc2l6ZXxjaG9pY2V8Y2lyY2xlc3xjbGFzc3xjbGVhcnxjbGlja2VkfGNsaXBwaW5nfGNsb2Nrd2lzZXxjb25maWd8Y29udGFpbnN8Y29udGludWV8Y29ybmVyMXxjb3JuZXIyfGNvdW50ZXJjbG9ja3dpc2V8ZGVmfGRlZmF1bHR8ZGVmaW5lfGRlbHxkZWxheXxkaXNhYmxlZHxkaXNhYmxlZF90ZXh0fGRpc3NvbHZlfGVsaWZ8ZWxzZXxldmVudHxleGNlcHR8ZXhjbHVkZXxleGVjfGV4cHJlc3Npb258ZmFkZXxmaW5hbGx5fGZvcnxmcm9tfGZ1bmN0aW9ufGdsb2JhbHxnbV9yb290fGhhc3xoaWRlfGlkfGlmfGltcG9ydHxpbnxpbml0fGlzfGp1bXB8a25vdHxsYW1iZGF8bGVmdHxsZXNzX3JvdW5kZWR8bW1fcm9vdHxtb3ZpZXxtdXNpY3xudWxsfG9ufG9ubGF5ZXJ8cGFzc3xwYXVzZXxwZXJzaXN0ZW50fHBsYXl8cHJpbnR8cHl0aG9ufHF1ZXVlfHJhaXNlfHJhbmRvbXxyZW5weXxyZXBlYXR8cmV0dXJufHJpZ2h0fHJvdW5kZWRfd2luZG93fHNjZW5lfHNjb3BlfHNldHxzaG93fHNsb3d8c2xvd19hYm9ydGFibGV8c2xvd19kb25lfHNvdW5kfHN0b3B8c3RvcmV8c3R5bGV8c3R5bGVfZ3JvdXB8c3Vic3RpdHV0ZXxzdWZmaXh8dGhlbWV8dHJhbnNmb3JtfHRyYW5zZm9ybV9hbmNob3J8dHJhbnNwb3NlfHRyeXx1aXx1bmhvdmVyZWR8dXBkYXRlcnx1c2V8dm9pY2V8d2hpbGV8d2lkZ2V0fHdpZGdldF9ob3Zlcnx3aWRnZXRfc2VsZWN0ZWR8d2lkZ2V0X3RleHR8eWllbGQpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86W0ZmXWFsc2V8W1R0XXJ1ZSlcXGIvLFxuICAgIG51bWJlcjpcbiAgICAgIC8oPzpcXGIoPzowW2JvXSk/KD86KD86XFxkfDB4W1xcZGEtZl0pW1xcZGEtZl0qKD86XFwuXFxkKik/KXxcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspP2o/L2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWy0rJT1dPT98IT18XFwqXFwqPz0/fFxcL1xcLz89P3w8Wzw9Pl0/fD5bPT5dP3xbJnxefl18XFxiKD86YW5kfGF0fG5vdHxvcnx3aXRoKVxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMucnB5ID0gUHJpc20ubGFuZ3VhZ2VzLnJlbnB5XG59XG4iXSwibmFtZXMiOlsicmVucHkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsInN0cmluZyIsImdyZWVkeSIsImZ1bmN0aW9uIiwicHJvcGVydHkiLCJ0YWciLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJycHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/renpy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rescript.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rescript.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rescript)\n/* harmony export */ });\n// @ts-nocheck\nrescript.displayName = \"rescript\";\nrescript.aliases = [\n    \"res\"\n];\n/** @type {import('../core.js').Syntax} */ function rescript(Prism) {\n    Prism.languages.rescript = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n        },\n        char: {\n            pattern: /'(?:[^\\r\\n\\\\]|\\\\(?:.|\\w+))'/,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n            greedy: true\n        },\n        \"class-name\": /\\b[A-Z]\\w*|@[a-z.]*|#[A-Za-z]\\w*|#\\d/,\n        function: {\n            pattern: /[a-zA-Z]\\w*(?=\\()|(\\.)[a-z]\\w*/,\n            lookbehind: true\n        },\n        number: /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n        boolean: /\\b(?:false|true)\\b/,\n        \"attr-value\": /[A-Za-z]\\w*(?==)/,\n        constant: {\n            pattern: /(\\btype\\s+)[a-z]\\w*/,\n            lookbehind: true\n        },\n        tag: {\n            pattern: /(<)[a-z]\\w*|(?:<\\/)[a-z]\\w*/,\n            lookbehind: true,\n            inside: {\n                operator: /<|>|\\//\n            }\n        },\n        keyword: /\\b(?:and|as|assert|begin|bool|class|constraint|do|done|downto|else|end|exception|external|float|for|fun|function|if|in|include|inherit|initializer|int|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|string|switch|then|to|try|type|when|while|with)\\b/,\n        operator: /\\.{3}|:[:=]?|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/,\n        punctuation: /[(){}[\\],;.]/\n    };\n    Prism.languages.insertBefore(\"rescript\", \"string\", {\n        \"template-string\": {\n            pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n            greedy: true,\n            inside: {\n                \"template-punctuation\": {\n                    pattern: /^`|`$/,\n                    alias: \"string\"\n                },\n                interpolation: {\n                    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n                    lookbehind: true,\n                    inside: {\n                        \"interpolation-punctuation\": {\n                            pattern: /^\\$\\{|\\}$/,\n                            alias: \"tag\"\n                        },\n                        rest: Prism.languages.rescript\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.res = Prism.languages.rescript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRztJQUFDO0NBQU07QUFFMUIsd0NBQXdDLEdBQ3pCLFNBQVNGLFNBQVNHLEtBQUs7SUFDcENBLE1BQU1DLFNBQVMsQ0FBQ0osUUFBUSxHQUFHO1FBQ3pCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLE1BQU07WUFDSkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUUsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLGNBQWM7UUFDZEcsVUFBVTtZQUNSSixTQUFTO1lBQ1RLLFlBQVk7UUFDZDtRQUNBQyxRQUNFO1FBQ0ZDLFNBQVM7UUFDVCxjQUFjO1FBQ2RDLFVBQVU7WUFDUlIsU0FBUztZQUNUSyxZQUFZO1FBQ2Q7UUFDQUksS0FBSztZQUNIVCxTQUFTO1lBQ1RLLFlBQVk7WUFDWkssUUFBUTtnQkFDTkMsVUFBVTtZQUNaO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGRCxVQUNFO1FBQ0ZFLGFBQWE7SUFDZjtJQUNBaEIsTUFBTUMsU0FBUyxDQUFDZ0IsWUFBWSxDQUFDLFlBQVksVUFBVTtRQUNqRCxtQkFBbUI7WUFDakJkLFNBQ0U7WUFDRkMsUUFBUTtZQUNSUyxRQUFRO2dCQUNOLHdCQUF3QjtvQkFDdEJWLFNBQVM7b0JBQ1RlLE9BQU87Z0JBQ1Q7Z0JBQ0FDLGVBQWU7b0JBQ2JoQixTQUNFO29CQUNGSyxZQUFZO29CQUNaSyxRQUFRO3dCQUNOLDZCQUE2Qjs0QkFDM0JWLFNBQVM7NEJBQ1RlLE9BQU87d0JBQ1Q7d0JBQ0FFLE1BQU1wQixNQUFNQyxTQUFTLENBQUNKLFFBQVE7b0JBQ2hDO2dCQUNGO2dCQUNBUyxRQUFRO1lBQ1Y7UUFDRjtJQUNGO0lBQ0FOLE1BQU1DLFNBQVMsQ0FBQ29CLEdBQUcsR0FBR3JCLE1BQU1DLFNBQVMsQ0FBQ0osUUFBUTtBQUNoRCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yZXNjcmlwdC5qcz9lZGQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5yZXNjcmlwdC5kaXNwbGF5TmFtZSA9ICdyZXNjcmlwdCdcbnJlc2NyaXB0LmFsaWFzZXMgPSBbJ3JlcyddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVzY3JpcHQoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnJlc2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/KD86XFwqXFwvfCQpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogLycoPzpbXlxcclxcblxcXFxdfFxcXFwoPzoufFxcdyspKScvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXFxcXFxcclxcblwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnY2xhc3MtbmFtZSc6IC9cXGJbQS1aXVxcdyp8QFthLXouXSp8I1tBLVphLXpdXFx3KnwjXFxkLyxcbiAgICBmdW5jdGlvbjoge1xuICAgICAgcGF0dGVybjogL1thLXpBLVpdXFx3Kig/PVxcKCl8KFxcLilbYS16XVxcdyovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgbnVtYmVyOlxuICAgICAgLyg/OlxcYjB4KD86W1xcZGEtZl0rKD86XFwuW1xcZGEtZl0qKT98XFwuW1xcZGEtZl0rKSg/OnBbKy1dP1xcZCspP3woPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KVtmdWxdezAsNH0vaSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICdhdHRyLXZhbHVlJzogL1tBLVphLXpdXFx3Kig/PT0pLyxcbiAgICBjb25zdGFudDoge1xuICAgICAgcGF0dGVybjogLyhcXGJ0eXBlXFxzKylbYS16XVxcdyovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgdGFnOiB7XG4gICAgICBwYXR0ZXJuOiAvKDwpW2Etel1cXHcqfCg/OjxcXC8pW2Etel1cXHcqLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgb3BlcmF0b3I6IC88fD58XFwvL1xuICAgICAgfVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphbmR8YXN8YXNzZXJ0fGJlZ2lufGJvb2x8Y2xhc3N8Y29uc3RyYWludHxkb3xkb25lfGRvd250b3xlbHNlfGVuZHxleGNlcHRpb258ZXh0ZXJuYWx8ZmxvYXR8Zm9yfGZ1bnxmdW5jdGlvbnxpZnxpbnxpbmNsdWRlfGluaGVyaXR8aW5pdGlhbGl6ZXJ8aW50fGxhenl8bGV0fG1ldGhvZHxtb2R1bGV8bXV0YWJsZXxuZXd8bm9ucmVjfG9iamVjdHxvZnxvcGVufG9yfHByaXZhdGV8cmVjfHN0cmluZ3xzd2l0Y2h8dGhlbnx0b3x0cnl8dHlwZXx3aGVufHdoaWxlfHdpdGgpXFxiLyxcbiAgICBvcGVyYXRvcjpcbiAgICAgIC9cXC57M318Ols6PV0/fFxcfD58LT58PSg/Oj09P3w+KT98PD0/fD49P3xbfF4/JyMhfmBdfFsrXFwtKlxcL11cXC4/fFxcYig/OmFzcnxsYW5kfGxvcnxsc2x8bHNyfGx4b3J8bW9kKVxcYi8sXG4gICAgcHVuY3R1YXRpb246IC9bKCl7fVtcXF0sOy5dL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Jlc2NyaXB0JywgJ3N0cmluZycsIHtcbiAgICAndGVtcGxhdGUtc3RyaW5nJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL2AoPzpcXFxcW1xcc1xcU118XFwkXFx7KD86W157fV18XFx7KD86W157fV18XFx7W159XSpcXH0pKlxcfSkrXFx9fCg/IVxcJFxceylbXlxcXFxgXSkqYC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ3RlbXBsYXRlLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eYHxgJC8sXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICAgIH0sXG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVxcJFxceyg/Oltee31dfFxceyg/Oltee31dfFxce1tefV0qXFx9KSpcXH0pK1xcfS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxce3xcXH0kLyxcbiAgICAgICAgICAgICAgYWxpYXM6ICd0YWcnXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzdDogUHJpc20ubGFuZ3VhZ2VzLnJlc2NyaXB0XG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMucmVzID0gUHJpc20ubGFuZ3VhZ2VzLnJlc2NyaXB0XG59XG4iXSwibmFtZXMiOlsicmVzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiY2hhciIsInN0cmluZyIsImZ1bmN0aW9uIiwibG9va2JlaGluZCIsIm51bWJlciIsImJvb2xlYW4iLCJjb25zdGFudCIsInRhZyIsImluc2lkZSIsIm9wZXJhdG9yIiwia2V5d29yZCIsInB1bmN0dWF0aW9uIiwiaW5zZXJ0QmVmb3JlIiwiYWxpYXMiLCJpbnRlcnBvbGF0aW9uIiwicmVzdCIsInJlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rescript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rest.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rest.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rest)\n/* harmony export */ });\n// @ts-nocheck\nrest.displayName = \"rest\";\nrest.aliases = [];\n/** @type {import('../core.js').Syntax} */ function rest(Prism) {\n    Prism.languages.rest = {\n        table: [\n            {\n                pattern: /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\||(?:\\+[=-]+)+\\+/\n                }\n            },\n            {\n                pattern: /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[=-]+/\n                }\n            }\n        ],\n        // Directive-like patterns\n        \"substitution-def\": {\n            pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n            lookbehind: true,\n            inside: {\n                substitution: {\n                    pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n                    alias: \"attr-value\",\n                    inside: {\n                        punctuation: /^\\||\\|$/\n                    }\n                },\n                directive: {\n                    pattern: /( )(?! )[^:]+::/,\n                    lookbehind: true,\n                    alias: \"function\",\n                    inside: {\n                        punctuation: /::$/\n                    }\n                }\n            }\n        },\n        \"link-target\": [\n            {\n                pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^\\[|\\]$/\n                }\n            },\n            {\n                pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^_|:$/\n                }\n            }\n        ],\n        directive: {\n            pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n            lookbehind: true,\n            alias: \"function\",\n            inside: {\n                punctuation: /::$/\n            }\n        },\n        comment: {\n            // The two alternatives try to prevent highlighting of blank comments\n            pattern: /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n            lookbehind: true\n        },\n        title: [\n            // Overlined and underlined\n            {\n                pattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n                inside: {\n                    punctuation: /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n                    important: /.+/\n                }\n            },\n            // Underlined only\n            {\n                pattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n                    important: /.+/\n                }\n            }\n        ],\n        hr: {\n            pattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n            lookbehind: true,\n            alias: \"punctuation\"\n        },\n        field: {\n            pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        \"command-line-option\": {\n            pattern: /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n            lookbehind: true,\n            alias: \"symbol\"\n        },\n        \"literal-block\": {\n            pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n            inside: {\n                \"literal-block-punctuation\": {\n                    pattern: /^::/,\n                    alias: \"punctuation\"\n                }\n            }\n        },\n        \"quoted-literal-block\": {\n            pattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n            inside: {\n                \"literal-block-punctuation\": {\n                    pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n                    alias: \"punctuation\"\n                }\n            }\n        },\n        \"list-bullet\": {\n            pattern: /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n            lookbehind: true,\n            alias: \"punctuation\"\n        },\n        \"doctest-block\": {\n            pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n            lookbehind: true,\n            inside: {\n                punctuation: /^>>>/\n            }\n        },\n        inline: [\n            {\n                pattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n                lookbehind: true,\n                inside: {\n                    bold: {\n                        pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n                        lookbehind: true\n                    },\n                    italic: {\n                        pattern: /(^\\*).+(?=\\*$)/,\n                        lookbehind: true\n                    },\n                    \"inline-literal\": {\n                        pattern: /(^``).+(?=``$)/,\n                        lookbehind: true,\n                        alias: \"symbol\"\n                    },\n                    role: {\n                        pattern: /^:[^:]+:|:[^:]+:$/,\n                        alias: \"function\",\n                        inside: {\n                            punctuation: /^:|:$/\n                        }\n                    },\n                    \"interpreted-text\": {\n                        pattern: /(^`).+(?=`$)/,\n                        lookbehind: true,\n                        alias: \"attr-value\"\n                    },\n                    substitution: {\n                        pattern: /(^\\|).+(?=\\|$)/,\n                        lookbehind: true,\n                        alias: \"attr-value\"\n                    },\n                    punctuation: /\\*\\*?|``?|\\|/\n                }\n            }\n        ],\n        link: [\n            {\n                pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^\\[|\\]_$/\n                }\n            },\n            {\n                pattern: /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n                alias: \"string\",\n                inside: {\n                    punctuation: /^_?`|`$|`?_?_$/\n                }\n            }\n        ],\n        // Line block start,\n        // quote attribution,\n        // explicit markup start,\n        // and anonymous hyperlink target shortcut (__)\n        punctuation: {\n            pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n            lookbehind: true\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rip.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rip.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rip)\n/* harmony export */ });\n// @ts-nocheck\nrip.displayName = \"rip\";\nrip.aliases = [];\n/** @type {import('../core.js').Syntax} */ function rip(Prism) {\n    Prism.languages.rip = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        char: {\n            pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n            greedy: true\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        regex: {\n            pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n        builtin: /@|\\bSystem\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n        time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n        datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n        symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n        number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n        punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n        reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yaXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxRQUFRO1lBQ05ILFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FHLE9BQU87WUFDTEosU0FDRTtZQUNGSyxZQUFZO1lBQ1pKLFFBQVE7UUFDVjtRQUNBSyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxNQUFNO1FBQ05DLE1BQU07UUFDTkMsVUFBVTtRQUNWQyxRQUFRO1FBQ1JDLFFBQVE7UUFDUkMsYUFBYTtRQUNiQyxXQUFXO0lBQ2I7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yaXAuanM/YmJmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucmlwLmRpc3BsYXlOYW1lID0gJ3JpcCdcbnJpcC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByaXAoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnJpcCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvIy4qLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogL1xcQmBbXlxcc2AnXCIsLjo7I1xcL1xcXFwoKTw+XFxbXFxde31dXFxiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHJlZ2V4OiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKF58W14vXSlcXC8oPyFcXC8pKD86XFxbW15cXG5cXHJcXF1dKlxcXXxcXFxcLnxbXi9cXFxcXFxyXFxuXFxbXSkrXFwvKD89XFxzKig/OiR8W1xcclxcbiwuO30pXSkpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvKD86PT58LT4pfFxcYig/OmNhc2V8Y2F0Y2h8Y2xhc3N8ZWxzZXxleGl0fGZpbmFsbHl8aWZ8cmFpc2V8cmV0dXJufHN3aXRjaHx0cnkpXFxiLyxcbiAgICBidWlsdGluOiAvQHxcXGJTeXN0ZW1cXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgZGF0ZTogL1xcYlxcZHs0fS1cXGR7Mn0tXFxkezJ9XFxiLyxcbiAgICB0aW1lOiAvXFxiXFxkezJ9OlxcZHsyfTpcXGR7Mn1cXGIvLFxuICAgIGRhdGV0aW1lOiAvXFxiXFxkezR9LVxcZHsyfS1cXGR7Mn1UXFxkezJ9OlxcZHsyfTpcXGR7Mn1cXGIvLFxuICAgIHN5bWJvbDogLzpbXlxcZFxcc2AnXCIsLjo7I1xcL1xcXFwoKTw+XFxbXFxde31dW15cXHNgJ1wiLC46OyNcXC9cXFxcKCk8PlxcW1xcXXt9XSovLFxuICAgIG51bWJlcjogL1srLV0/XFxiKD86XFxkK1xcLlxcZCt8XFxkKylcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvKD86XFwuezIsM30pfFtgLC46Oz1cXC9cXFxcKCk8PlxcW1xcXXt9XS8sXG4gICAgcmVmZXJlbmNlOiAvW15cXGRcXHNgJ1wiLC46OyNcXC9cXFxcKCk8PlxcW1xcXXt9XVteXFxzYCdcIiwuOjsjXFwvXFxcXCgpPD5cXFtcXF17fV0qL1xuICB9XG59XG4iXSwibmFtZXMiOlsicmlwIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImNoYXIiLCJzdHJpbmciLCJyZWdleCIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwiYnVpbHRpbiIsImJvb2xlYW4iLCJkYXRlIiwidGltZSIsImRhdGV0aW1lIiwic3ltYm9sIiwibnVtYmVyIiwicHVuY3R1YXRpb24iLCJyZWZlcmVuY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rip.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/roboconf.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/roboconf.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ roboconf)\n/* harmony export */ });\n// @ts-nocheck\nroboconf.displayName = \"roboconf\";\nroboconf.aliases = [];\n/** @type {import('../core.js').Syntax} */ function roboconf(Prism) {\n    Prism.languages.roboconf = {\n        comment: /#.*/,\n        keyword: {\n            pattern: /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n            lookbehind: true\n        },\n        component: {\n            pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n            alias: \"variable\"\n        },\n        property: /[\\w.-]+(?=[ \\t]*:)/,\n        value: {\n            pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n            lookbehind: true,\n            alias: \"attr-value\"\n        },\n        optional: {\n            pattern: /\\(optional\\)/,\n            alias: \"builtin\"\n        },\n        wildcard: {\n            pattern: /(\\.)\\*/,\n            lookbehind: true,\n            alias: \"operator\"\n        },\n        punctuation: /[{},.;:=]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yb2JvY29uZi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxTQUFTQyxXQUFXLEdBQUc7QUFDdkJELFNBQVNFLE9BQU8sR0FBRyxFQUFFO0FBRXJCLHdDQUF3QyxHQUN6QixTQUFTRixTQUFTRyxLQUFLO0lBQ3BDQSxNQUFNQyxTQUFTLENBQUNKLFFBQVEsR0FBRztRQUN6QkssU0FBUztRQUNUQyxTQUFTO1lBQ1BDLFNBQ0U7WUFDRkMsWUFBWTtRQUNkO1FBQ0FDLFdBQVc7WUFDVEYsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtRQUNWQyxPQUFPO1lBQ0xMLFNBQVM7WUFDVEMsWUFBWTtZQUNaRSxPQUFPO1FBQ1Q7UUFDQUcsVUFBVTtZQUNSTixTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBSSxVQUFVO1lBQ1JQLFNBQVM7WUFDVEMsWUFBWTtZQUNaRSxPQUFPO1FBQ1Q7UUFDQUssYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvcm9ib2NvbmYuanM/N2U4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xucm9ib2NvbmYuZGlzcGxheU5hbWUgPSAncm9ib2NvbmYnXG5yb2JvY29uZi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByb2JvY29uZihQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMucm9ib2NvbmYgPSB7XG4gICAgY29tbWVudDogLyMuKi8sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFxccykoPzooPzpleHRlcm5hbHxpbXBvcnQpXFxifCg/OmZhY2V0fGluc3RhbmNlIG9mKSg/PVsgXFx0XStbXFx3LV0rWyBcXHRdKlxceykpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGNvbXBvbmVudDoge1xuICAgICAgcGF0dGVybjogL1tcXHctXSsoPz1bIFxcdF0qXFx7KS8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcHJvcGVydHk6IC9bXFx3Li1dKyg/PVsgXFx0XSo6KS8sXG4gICAgdmFsdWU6IHtcbiAgICAgIHBhdHRlcm46IC8oPVsgXFx0XSooPyFbIFxcdF0pKVteLDtdKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdhdHRyLXZhbHVlJ1xuICAgIH0sXG4gICAgb3B0aW9uYWw6IHtcbiAgICAgIHBhdHRlcm46IC9cXChvcHRpb25hbFxcKS8sXG4gICAgICBhbGlhczogJ2J1aWx0aW4nXG4gICAgfSxcbiAgICB3aWxkY2FyZDoge1xuICAgICAgcGF0dGVybjogLyhcXC4pXFwqLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9be30sLjs6PV0vXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJyb2JvY29uZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsImtleXdvcmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImNvbXBvbmVudCIsImFsaWFzIiwicHJvcGVydHkiLCJ2YWx1ZSIsIm9wdGlvbmFsIiwid2lsZGNhcmQiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/roboconf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/robotframework.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/robotframework.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ robotframework)\n/* harmony export */ });\n// @ts-nocheck\nrobotframework.displayName = \"robotframework\";\nrobotframework.aliases = [\n    \"robot\"\n];\n/** @type {import('../core.js').Syntax} */ function robotframework(Prism) {\n    ;\n    (function(Prism) {\n        var comment = {\n            pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n            lookbehind: true,\n            greedy: true\n        };\n        var variable = {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n            lookbehind: true,\n            inside: {\n                punctuation: /^[$@&%]\\{|\\}$/\n            }\n        };\n        function createSection(name, inside) {\n            var extendecInside = {};\n            extendecInside[\"section-header\"] = {\n                pattern: /^ ?\\*{3}.+?\\*{3}/,\n                alias: \"keyword\"\n            };\n            // copy inside tokens\n            for(var token in inside){\n                extendecInside[token] = inside[token];\n            }\n            extendecInside[\"tag\"] = {\n                pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\[|\\]/\n                }\n            };\n            extendecInside[\"variable\"] = variable;\n            extendecInside[\"comment\"] = comment;\n            return {\n                pattern: RegExp(/^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(/<name>/g, function() {\n                    return name;\n                }), \"im\"),\n                alias: \"section\",\n                inside: extendecInside\n            };\n        }\n        var docTag = {\n            pattern: /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n            lookbehind: true,\n            alias: \"string\"\n        };\n        var testNameLike = {\n            pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n            lookbehind: true,\n            alias: \"function\",\n            inside: {\n                variable: variable\n            }\n        };\n        var testPropertyLike = {\n            pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n            lookbehind: true,\n            inside: {\n                variable: variable\n            }\n        };\n        Prism.languages[\"robotframework\"] = {\n            settings: createSection(\"Settings\", {\n                documentation: {\n                    pattern: /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n                    lookbehind: true,\n                    alias: \"string\"\n                },\n                property: {\n                    pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n                    lookbehind: true\n                }\n            }),\n            variables: createSection(\"Variables\"),\n            \"test-cases\": createSection(\"Test Cases\", {\n                \"test-name\": testNameLike,\n                documentation: docTag,\n                property: testPropertyLike\n            }),\n            keywords: createSection(\"Keywords\", {\n                \"keyword-name\": testNameLike,\n                documentation: docTag,\n                property: testPropertyLike\n            }),\n            tasks: createSection(\"Tasks\", {\n                \"task-name\": testNameLike,\n                documentation: docTag,\n                property: testPropertyLike\n            }),\n            comment: comment\n        };\n        Prism.languages.robot = Prism.languages[\"robotframework\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yb2JvdGZyYW1ld29yay5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxlQUFlQyxXQUFXLEdBQUc7QUFDN0JELGVBQWVFLE9BQU8sR0FBRztJQUFDO0NBQVE7QUFFbEMsd0NBQXdDLEdBQ3pCLFNBQVNGLGVBQWVHLEtBQUs7O0lBQ3hDLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxVQUFVO1lBQ1pDLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1FBQ1Y7UUFDQSxJQUFJQyxXQUFXO1lBQ2JILFNBQVM7WUFDVEMsWUFBWTtZQUNaRyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBLFNBQVNDLGNBQWNDLElBQUksRUFBRUgsTUFBTTtZQUNqQyxJQUFJSSxpQkFBaUIsQ0FBQztZQUN0QkEsY0FBYyxDQUFDLGlCQUFpQixHQUFHO2dCQUNqQ1IsU0FBUztnQkFDVFMsT0FBTztZQUNUO1lBRUEscUJBQXFCO1lBQ3JCLElBQUssSUFBSUMsU0FBU04sT0FBUTtnQkFDeEJJLGNBQWMsQ0FBQ0UsTUFBTSxHQUFHTixNQUFNLENBQUNNLE1BQU07WUFDdkM7WUFDQUYsY0FBYyxDQUFDLE1BQU0sR0FBRztnQkFDdEJSLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pHLFFBQVE7b0JBQ05DLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBRyxjQUFjLENBQUMsV0FBVyxHQUFHTDtZQUM3QkssY0FBYyxDQUFDLFVBQVUsR0FBR1Q7WUFDNUIsT0FBTztnQkFDTEMsU0FBU1csT0FDUCx3REFBd0RDLE1BQU0sQ0FBQ0MsT0FBTyxDQUNwRSxXQUNBO29CQUNFLE9BQU9OO2dCQUNULElBRUY7Z0JBRUZFLE9BQU87Z0JBQ1BMLFFBQVFJO1lBQ1Y7UUFDRjtRQUNBLElBQUlNLFNBQVM7WUFDWGQsU0FDRTtZQUNGQyxZQUFZO1lBQ1pRLE9BQU87UUFDVDtRQUNBLElBQUlNLGVBQWU7WUFDakJmLFNBQVM7WUFDVEMsWUFBWTtZQUNaUSxPQUFPO1lBQ1BMLFFBQVE7Z0JBQ05ELFVBQVVBO1lBQ1o7UUFDRjtRQUNBLElBQUlhLG1CQUFtQjtZQUNyQmhCLFNBQVM7WUFDVEMsWUFBWTtZQUNaRyxRQUFRO2dCQUNORCxVQUFVQTtZQUNaO1FBQ0Y7UUFDQUwsTUFBTW1CLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRztZQUNsQ0MsVUFBVVosY0FBYyxZQUFZO2dCQUNsQ2EsZUFBZTtvQkFDYm5CLFNBQ0U7b0JBQ0ZDLFlBQVk7b0JBQ1pRLE9BQU87Z0JBQ1Q7Z0JBQ0FXLFVBQVU7b0JBQ1JwQixTQUFTO29CQUNUQyxZQUFZO2dCQUNkO1lBQ0Y7WUFDQW9CLFdBQVdmLGNBQWM7WUFDekIsY0FBY0EsY0FBYyxjQUFjO2dCQUN4QyxhQUFhUztnQkFDYkksZUFBZUw7Z0JBQ2ZNLFVBQVVKO1lBQ1o7WUFDQU0sVUFBVWhCLGNBQWMsWUFBWTtnQkFDbEMsZ0JBQWdCUztnQkFDaEJJLGVBQWVMO2dCQUNmTSxVQUFVSjtZQUNaO1lBQ0FPLE9BQU9qQixjQUFjLFNBQVM7Z0JBQzVCLGFBQWFTO2dCQUNiSSxlQUFlTDtnQkFDZk0sVUFBVUo7WUFDWjtZQUNBakIsU0FBU0E7UUFDWDtRQUNBRCxNQUFNbUIsU0FBUyxDQUFDTyxLQUFLLEdBQUcxQixNQUFNbUIsU0FBUyxDQUFDLGlCQUFpQjtJQUMzRCxHQUFHbkI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9yb2JvdGZyYW1ld29yay5qcz9mMmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5yb2JvdGZyYW1ld29yay5kaXNwbGF5TmFtZSA9ICdyb2JvdGZyYW1ld29yaydcbnJvYm90ZnJhbWV3b3JrLmFsaWFzZXMgPSBbJ3JvYm90J11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByb2JvdGZyYW1ld29yayhQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBjb21tZW50ID0ge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKnwgezJ9fFxcdCkjLiovbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9XG4gICAgdmFyIHZhcmlhYmxlID0ge1xuICAgICAgcGF0dGVybjogLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKVskQCYlXVxceyg/Oltee31cXHJcXG5dfFxce1tee31cXHJcXG5dKlxcfSkqXFx9LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9eWyRAJiVdXFx7fFxcfSQvXG4gICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZVNlY3Rpb24obmFtZSwgaW5zaWRlKSB7XG4gICAgICB2YXIgZXh0ZW5kZWNJbnNpZGUgPSB7fVxuICAgICAgZXh0ZW5kZWNJbnNpZGVbJ3NlY3Rpb24taGVhZGVyJ10gPSB7XG4gICAgICAgIHBhdHRlcm46IC9eID9cXCp7M30uKz9cXCp7M30vLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9XG5cbiAgICAgIC8vIGNvcHkgaW5zaWRlIHRva2Vuc1xuICAgICAgZm9yICh2YXIgdG9rZW4gaW4gaW5zaWRlKSB7XG4gICAgICAgIGV4dGVuZGVjSW5zaWRlW3Rva2VuXSA9IGluc2lkZVt0b2tlbl1cbiAgICAgIH1cbiAgICAgIGV4dGVuZGVjSW5zaWRlWyd0YWcnXSA9IHtcbiAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSg/OiB7Mn18XFx0KVsgXFx0XSopXFxbWy1cXHddK1xcXS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFxbfFxcXS9cbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZXh0ZW5kZWNJbnNpZGVbJ3ZhcmlhYmxlJ10gPSB2YXJpYWJsZVxuICAgICAgZXh0ZW5kZWNJbnNpZGVbJ2NvbW1lbnQnXSA9IGNvbW1lbnRcbiAgICAgIHJldHVybiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvXiA/XFwqezN9WyBcXHRdKjxuYW1lPlsgXFx0XSpcXCp7M30oPzoufFtcXHJcXG5dKD8hXFwqezN9KSkqLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgIC88bmFtZT4vZyxcbiAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIG5hbWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICApLFxuICAgICAgICAgICdpbSdcbiAgICAgICAgKSxcbiAgICAgICAgYWxpYXM6ICdzZWN0aW9uJyxcbiAgICAgICAgaW5zaWRlOiBleHRlbmRlY0luc2lkZVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgZG9jVGFnID0ge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXFtEb2N1bWVudGF0aW9uXFxdKD86IHsyfXxcXHQpWyBcXHRdKikoPyFbIFxcdF18IykoPzoufCg/Olxcclxcbj98XFxuKVsgXFx0XSpcXC57M30pKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgfVxuICAgIHZhciB0ZXN0TmFtZUxpa2UgPSB7XG4gICAgICBwYXR0ZXJuOiAvKFtcXHJcXG5dID8pKD8hIykoPzpcXFMoPzpbIFxcdF1cXFMpKikrLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogdmFyaWFibGVcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIHRlc3RQcm9wZXJ0eUxpa2UgPSB7XG4gICAgICBwYXR0ZXJuOiAvKFtcXHJcXG5dKD86IHsyfXxcXHQpWyBcXHRdKikoPyFcXFt8XFwuezN9fCMpKD86XFxTKD86WyBcXHRdXFxTKSopKy8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiB2YXJpYWJsZVxuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3JvYm90ZnJhbWV3b3JrJ10gPSB7XG4gICAgICBzZXR0aW5nczogY3JlYXRlU2VjdGlvbignU2V0dGluZ3MnLCB7XG4gICAgICAgIGRvY3VtZW50YXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgLyhbXFxyXFxuXSA/RG9jdW1lbnRhdGlvbig/OiB7Mn18XFx0KVsgXFx0XSopKD8hWyBcXHRdfCMpKD86LnwoPzpcXHJcXG4/fFxcbilbIFxcdF0qXFwuezN9KSsvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdzdHJpbmcnXG4gICAgICAgIH0sXG4gICAgICAgIHByb3BlcnR5OiB7XG4gICAgICAgICAgcGF0dGVybjogLyhbXFxyXFxuXSA/KSg/IVxcLnszfXwjKSg/OlxcUyg/OlsgXFx0XVxcUykqKSsvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgfSksXG4gICAgICB2YXJpYWJsZXM6IGNyZWF0ZVNlY3Rpb24oJ1ZhcmlhYmxlcycpLFxuICAgICAgJ3Rlc3QtY2FzZXMnOiBjcmVhdGVTZWN0aW9uKCdUZXN0IENhc2VzJywge1xuICAgICAgICAndGVzdC1uYW1lJzogdGVzdE5hbWVMaWtlLFxuICAgICAgICBkb2N1bWVudGF0aW9uOiBkb2NUYWcsXG4gICAgICAgIHByb3BlcnR5OiB0ZXN0UHJvcGVydHlMaWtlXG4gICAgICB9KSxcbiAgICAgIGtleXdvcmRzOiBjcmVhdGVTZWN0aW9uKCdLZXl3b3JkcycsIHtcbiAgICAgICAgJ2tleXdvcmQtbmFtZSc6IHRlc3ROYW1lTGlrZSxcbiAgICAgICAgZG9jdW1lbnRhdGlvbjogZG9jVGFnLFxuICAgICAgICBwcm9wZXJ0eTogdGVzdFByb3BlcnR5TGlrZVxuICAgICAgfSksXG4gICAgICB0YXNrczogY3JlYXRlU2VjdGlvbignVGFza3MnLCB7XG4gICAgICAgICd0YXNrLW5hbWUnOiB0ZXN0TmFtZUxpa2UsXG4gICAgICAgIGRvY3VtZW50YXRpb246IGRvY1RhZyxcbiAgICAgICAgcHJvcGVydHk6IHRlc3RQcm9wZXJ0eUxpa2VcbiAgICAgIH0pLFxuICAgICAgY29tbWVudDogY29tbWVudFxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMucm9ib3QgPSBQcmlzbS5sYW5ndWFnZXNbJ3JvYm90ZnJhbWV3b3JrJ11cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicm9ib3RmcmFtZXdvcmsiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsInZhcmlhYmxlIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJjcmVhdGVTZWN0aW9uIiwibmFtZSIsImV4dGVuZGVjSW5zaWRlIiwiYWxpYXMiLCJ0b2tlbiIsIlJlZ0V4cCIsInNvdXJjZSIsInJlcGxhY2UiLCJkb2NUYWciLCJ0ZXN0TmFtZUxpa2UiLCJ0ZXN0UHJvcGVydHlMaWtlIiwibGFuZ3VhZ2VzIiwic2V0dGluZ3MiLCJkb2N1bWVudGF0aW9uIiwicHJvcGVydHkiLCJ2YXJpYWJsZXMiLCJrZXl3b3JkcyIsInRhc2tzIiwicm9ib3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/robotframework.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ruby)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nruby.displayName = \"ruby\";\nruby.aliases = [\n    \"rb\"\n];\n/** @type {import('../core.js').Syntax} */ function ruby(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */ ;\n    (function(Prism) {\n        Prism.languages.ruby = Prism.languages.extend(\"clike\", {\n            comment: {\n                pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n                greedy: true\n            },\n            \"class-name\": {\n                pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /[.\\\\]/\n                }\n            },\n            keyword: /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n            operator: /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n            punctuation: /[(){}[\\].,;]/\n        });\n        Prism.languages.insertBefore(\"ruby\", \"operator\", {\n            \"double-colon\": {\n                pattern: /::/,\n                alias: \"punctuation\"\n            }\n        });\n        var interpolation = {\n            pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n            lookbehind: true,\n            inside: {\n                content: {\n                    pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n                    lookbehind: true,\n                    inside: Prism.languages.ruby\n                },\n                delimiter: {\n                    pattern: /^#\\{|\\}$/,\n                    alias: \"punctuation\"\n                }\n            }\n        };\n        delete Prism.languages.ruby.function;\n        var percentExpression = \"(?:\" + [\n            /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n            /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n            /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n            /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n            /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n        ].join(\"|\") + \")\";\n        var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n        Prism.languages.insertBefore(\"ruby\", \"keyword\", {\n            \"regex-literal\": [\n                {\n                    pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        regex: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n                    lookbehind: true,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        regex: /[\\s\\S]+/\n                    }\n                }\n            ],\n            variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n            symbol: [\n                {\n                    pattern: RegExp(/(^|[^:]):/.source + symbolName),\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"method-definition\": {\n                pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n                lookbehind: true,\n                inside: {\n                    function: /\\b\\w+$/,\n                    keyword: /^self\\b/,\n                    \"class-name\": /^\\w+/,\n                    punctuation: /\\./\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"ruby\", \"string\", {\n            \"string-literal\": [\n                {\n                    pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n                    alias: \"heredoc-string\",\n                    greedy: true,\n                    inside: {\n                        delimiter: {\n                            pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n                            inside: {\n                                symbol: /\\b\\w+/,\n                                punctuation: /^<<[-~]?/\n                            }\n                        },\n                        interpolation: interpolation,\n                        string: /[\\s\\S]+/\n                    }\n                },\n                {\n                    pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n                    alias: \"heredoc-string\",\n                    greedy: true,\n                    inside: {\n                        delimiter: {\n                            pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n                            inside: {\n                                symbol: /\\b\\w+/,\n                                punctuation: /^<<[-~]?'|'$/\n                            }\n                        },\n                        string: /[\\s\\S]+/\n                    }\n                }\n            ],\n            \"command-literal\": [\n                {\n                    pattern: RegExp(/%x/.source + percentExpression),\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        command: {\n                            pattern: /[\\s\\S]+/,\n                            alias: \"string\"\n                        }\n                    }\n                },\n                {\n                    pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n                    greedy: true,\n                    inside: {\n                        interpolation: interpolation,\n                        command: {\n                            pattern: /[\\s\\S]+/,\n                            alias: \"string\"\n                        }\n                    }\n                }\n            ]\n        });\n        delete Prism.languages.ruby.string;\n        Prism.languages.insertBefore(\"ruby\", \"number\", {\n            builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n            constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n        });\n        Prism.languages.rb = Prism.languages.ruby;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rust.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rust.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rust)\n/* harmony export */ });\n// @ts-nocheck\nrust.displayName = \"rust\";\nrust.aliases = [];\n/** @type {import('../core.js').Syntax} */ function rust(Prism) {\n    ;\n    (function(Prism) {\n        var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n        for(var i = 0; i < 2; i++){\n            // support 4 levels of nested comments\n            multilineComment = multilineComment.replace(/<self>/g, function() {\n                return multilineComment;\n            });\n        }\n        multilineComment = multilineComment.replace(/<self>/g, function() {\n            return /[^\\s\\S]/.source;\n        });\n        Prism.languages.rust = {\n            comment: [\n                {\n                    pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    pattern: /(^|[^\\\\:])\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            string: {\n                pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n                greedy: true\n            },\n            char: {\n                pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n                greedy: true\n            },\n            attribute: {\n                pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n                greedy: true,\n                alias: \"attr-name\",\n                inside: {\n                    string: null // see below\n                }\n            },\n            // Closure params should not be confused with bitwise OR |\n            \"closure-params\": {\n                pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    \"closure-punctuation\": {\n                        pattern: /^\\||\\|$/,\n                        alias: \"punctuation\"\n                    },\n                    rest: null // see below\n                }\n            },\n            \"lifetime-annotation\": {\n                pattern: /'\\w+/,\n                alias: \"symbol\"\n            },\n            \"fragment-specifier\": {\n                pattern: /(\\$\\w+:)[a-z]+/,\n                lookbehind: true,\n                alias: \"punctuation\"\n            },\n            variable: /\\$\\w+/,\n            \"function-definition\": {\n                pattern: /(\\bfn\\s+)\\w+/,\n                lookbehind: true,\n                alias: \"function\"\n            },\n            \"type-definition\": {\n                pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n                lookbehind: true,\n                alias: \"class-name\"\n            },\n            \"module-declaration\": [\n                {\n                    pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n                    lookbehind: true,\n                    alias: \"namespace\"\n                },\n                {\n                    pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n                    lookbehind: true,\n                    alias: \"namespace\",\n                    inside: {\n                        punctuation: /::/\n                    }\n                }\n            ],\n            keyword: [\n                // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n                /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/,\n                // primitives and str\n                // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n                /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n            ],\n            // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n            // and Rust's naming conventions recommend snake_case anyway.\n            // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n            function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n            macro: {\n                pattern: /\\b\\w+!/,\n                alias: \"property\"\n            },\n            constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n            \"class-name\": /\\b[A-Z]\\w*\\b/,\n            namespace: {\n                pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n                inside: {\n                    punctuation: /::/\n                }\n            },\n            // Hex, oct, bin, dec numbers with visual separators and type suffix\n            number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n            operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n        };\n        Prism.languages.rust[\"closure-params\"].inside.rest = Prism.languages.rust;\n        Prism.languages.rust[\"attribute\"].inside[\"string\"] = Prism.languages.rust[\"string\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rust.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sas.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sas.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sas)\n/* harmony export */ });\n// @ts-nocheck\nsas.displayName = \"sas\";\nsas.aliases = [];\n/** @type {import('../core.js').Syntax} */ function sas(Prism) {\n    ;\n    (function(Prism) {\n        var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source;\n        var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i;\n        var numericConstant = {\n            pattern: RegExp(stringPattern + \"[bx]\"),\n            alias: \"number\"\n        };\n        var macroVariable = {\n            pattern: /&[a-z_]\\w*/i\n        };\n        var macroKeyword = {\n            pattern: /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        };\n        var step = {\n            pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n            alias: \"keyword\",\n            lookbehind: true\n        };\n        var comment = [\n            /\\/\\*[\\s\\S]*?\\*\\//,\n            {\n                pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n                lookbehind: true\n            }\n        ];\n        var string = {\n            pattern: RegExp(stringPattern),\n            greedy: true\n        };\n        var punctuation = /[$%@.(){}\\[\\];,\\\\]/;\n        var func = {\n            pattern: /%?\\b\\w+(?=\\()/,\n            alias: \"keyword\"\n        };\n        var args = {\n            function: func,\n            \"arg-value\": {\n                pattern: /(=\\s*)[A-Z\\.]+/i,\n                lookbehind: true\n            },\n            operator: /=/,\n            \"macro-variable\": macroVariable,\n            arg: {\n                pattern: /[A-Z]+/i,\n                alias: \"keyword\"\n            },\n            number: number,\n            \"numeric-constant\": numericConstant,\n            punctuation: punctuation,\n            string: string\n        };\n        var format = {\n            pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n            inside: {\n                keyword: /^(?:format|put)(?==)/i,\n                equals: /=/,\n                format: {\n                    pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n                    alias: \"number\"\n                }\n            }\n        };\n        var altformat = {\n            pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n            inside: {\n                keyword: /^(?:format|put)/i,\n                format: {\n                    pattern: /[\\w$]+\\.\\d?/,\n                    alias: \"number\"\n                }\n            }\n        };\n        var globalStatements = {\n            pattern: /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        };\n        var submitStatement = {\n            pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n            lookbehind: true,\n            alias: \"keyword\"\n        };\n        var actionSets = /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/.source;\n        var casActions = {\n            pattern: RegExp(/(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(/<act>/g, function() {\n                return actionSets;\n            }), \"i\"),\n            lookbehind: true,\n            inside: {\n                keyword: RegExp(/(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function() {\n                    return actionSets;\n                }), \"i\"),\n                action: {\n                    pattern: /(?:action)/i,\n                    alias: \"keyword\"\n                },\n                comment: comment,\n                function: func,\n                \"arg-value\": args[\"arg-value\"],\n                operator: args.operator,\n                argument: args.arg,\n                number: number,\n                \"numeric-constant\": numericConstant,\n                punctuation: punctuation,\n                string: string\n            }\n        };\n        var keywords = {\n            pattern: /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n            lookbehind: true\n        };\n        Prism.languages.sas = {\n            datalines: {\n                pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    keyword: {\n                        pattern: /^(?:cards|(?:data)?lines)/i\n                    },\n                    punctuation: /;/\n                }\n            },\n            \"proc-sql\": {\n                pattern: /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    sql: {\n                        pattern: RegExp(/^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(/<str>/g, function() {\n                            return stringPattern;\n                        }), \"im\"),\n                        alias: \"language-sql\",\n                        inside: Prism.languages.sql\n                    },\n                    \"global-statements\": globalStatements,\n                    \"sql-statements\": {\n                        pattern: /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n                        lookbehind: true,\n                        alias: \"keyword\"\n                    },\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-groovy\": {\n                pattern: /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    comment: comment,\n                    groovy: {\n                        pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {\n                            return stringPattern;\n                        }), \"im\"),\n                        lookbehind: true,\n                        alias: \"language-groovy\",\n                        inside: Prism.languages.groovy\n                    },\n                    keyword: keywords,\n                    \"submit-statement\": submitStatement,\n                    \"global-statements\": globalStatements,\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-lua\": {\n                pattern: /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    comment: comment,\n                    lua: {\n                        pattern: RegExp(/(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(/<str>/g, function() {\n                            return stringPattern;\n                        }), \"im\"),\n                        lookbehind: true,\n                        alias: \"language-lua\",\n                        inside: Prism.languages.lua\n                    },\n                    keyword: keywords,\n                    \"submit-statement\": submitStatement,\n                    \"global-statements\": globalStatements,\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-cas\": {\n                pattern: /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n                lookbehind: true,\n                inside: {\n                    comment: comment,\n                    \"statement-var\": {\n                        pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n                        lookbehind: true,\n                        inside: {\n                            statement: {\n                                pattern: /^saveresult\\s+\\S+/i,\n                                inside: {\n                                    keyword: /^(?:saveresult)/i\n                                }\n                            },\n                            rest: args\n                        }\n                    },\n                    \"cas-actions\": casActions,\n                    statement: {\n                        pattern: /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n                        lookbehind: true,\n                        inside: args\n                    },\n                    step: step,\n                    keyword: keywords,\n                    function: func,\n                    format: format,\n                    altformat: altformat,\n                    \"global-statements\": globalStatements,\n                    number: number,\n                    \"numeric-constant\": numericConstant,\n                    punctuation: punctuation,\n                    string: string\n                }\n            },\n            \"proc-args\": {\n                pattern: RegExp(/(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(/<str>/g, function() {\n                    return stringPattern;\n                }), \"im\"),\n                lookbehind: true,\n                inside: args\n            },\n            /*Special keywords within macros*/ \"macro-keyword\": macroKeyword,\n            \"macro-variable\": macroVariable,\n            \"macro-string-functions\": {\n                pattern: /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n                lookbehind: true,\n                inside: {\n                    function: {\n                        pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n                        alias: \"keyword\"\n                    },\n                    \"macro-keyword\": macroKeyword,\n                    \"macro-variable\": macroVariable,\n                    \"escaped-char\": {\n                        pattern: /%['\"()<>=¬^~;,#]/\n                    },\n                    punctuation: punctuation\n                }\n            },\n            \"macro-declaration\": {\n                pattern: /^%macro[^;]+(?=;)/im,\n                inside: {\n                    keyword: /%macro/i\n                }\n            },\n            \"macro-end\": {\n                pattern: /^%mend[^;]+(?=;)/im,\n                inside: {\n                    keyword: /%mend/i\n                }\n            },\n            /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */ macro: {\n                pattern: /%_\\w+(?=\\()/,\n                alias: \"keyword\"\n            },\n            input: {\n                pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n                inside: {\n                    input: {\n                        alias: \"keyword\",\n                        pattern: /^input/i\n                    },\n                    comment: comment,\n                    number: number,\n                    \"numeric-constant\": numericConstant\n                }\n            },\n            \"options-args\": {\n                pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n                lookbehind: true,\n                inside: args\n            },\n            \"cas-actions\": casActions,\n            comment: comment,\n            function: func,\n            format: format,\n            altformat: altformat,\n            \"numeric-constant\": numericConstant,\n            datetime: {\n                // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n                pattern: RegExp(stringPattern + \"(?:dt?|t)\"),\n                alias: \"number\"\n            },\n            string: string,\n            step: step,\n            keyword: keywords,\n            // In SAS Studio syntax highlighting, these operators are styled like keywords\n            \"operator-keyword\": {\n                pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n                alias: \"operator\"\n            },\n            // Decimal (1.2e23), hexadecimal (0c1x)\n            number: number,\n            operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n            punctuation: punctuation\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zYXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSzs7SUFDN0IsVUFBVUEsS0FBSztRQUNmLElBQUlDLGdCQUFnQiw4Q0FBOENDLE1BQU07UUFDeEUsSUFBSUMsU0FBUztRQUNiLElBQUlDLGtCQUFrQjtZQUNwQkMsU0FBU0MsT0FBT0wsZ0JBQWdCO1lBQ2hDTSxPQUFPO1FBQ1Q7UUFDQSxJQUFJQyxnQkFBZ0I7WUFDbEJILFNBQVM7UUFDWDtRQUNBLElBQUlJLGVBQWU7WUFDakJKLFNBQ0U7WUFDRkssWUFBWTtZQUNaSCxPQUFPO1FBQ1Q7UUFDQSxJQUFJSSxPQUFPO1lBQ1ROLFNBQVM7WUFDVEUsT0FBTztZQUNQRyxZQUFZO1FBQ2Q7UUFDQSxJQUFJRSxVQUFVO1lBQ1o7WUFDQTtnQkFDRVAsU0FBUztnQkFDVEssWUFBWTtZQUNkO1NBQ0Q7UUFDRCxJQUFJRyxTQUFTO1lBQ1hSLFNBQVNDLE9BQU9MO1lBQ2hCYSxRQUFRO1FBQ1Y7UUFDQSxJQUFJQyxjQUFjO1FBQ2xCLElBQUlDLE9BQU87WUFDVFgsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQSxJQUFJVSxPQUFPO1lBQ1RDLFVBQVVGO1lBQ1YsYUFBYTtnQkFDWFgsU0FBUztnQkFDVEssWUFBWTtZQUNkO1lBQ0FTLFVBQVU7WUFDVixrQkFBa0JYO1lBQ2xCWSxLQUFLO2dCQUNIZixTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7WUFDQUosUUFBUUE7WUFDUixvQkFBb0JDO1lBQ3BCVyxhQUFhQTtZQUNiRixRQUFRQTtRQUNWO1FBQ0EsSUFBSVEsU0FBUztZQUNYaEIsU0FBUztZQUNUaUIsUUFBUTtnQkFDTkMsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkgsUUFBUTtvQkFDTmhCLFNBQVM7b0JBQ1RFLE9BQU87Z0JBQ1Q7WUFDRjtRQUNGO1FBQ0EsSUFBSWtCLFlBQVk7WUFDZHBCLFNBQVM7WUFDVGlCLFFBQVE7Z0JBQ05DLFNBQVM7Z0JBQ1RGLFFBQVE7b0JBQ05oQixTQUFTO29CQUNURSxPQUFPO2dCQUNUO1lBQ0Y7UUFDRjtRQUNBLElBQUltQixtQkFBbUI7WUFDckJyQixTQUNFO1lBQ0ZLLFlBQVk7WUFDWkgsT0FBTztRQUNUO1FBQ0EsSUFBSW9CLGtCQUFrQjtZQUNwQnRCLFNBQVM7WUFDVEssWUFBWTtZQUNaSCxPQUFPO1FBQ1Q7UUFDQSxJQUFJcUIsYUFDRiwraUNBQ0cxQixNQUFNO1FBQ1gsSUFBSTJCLGFBQWE7WUFDZnhCLFNBQVNDLE9BQ1AsK0NBQStDSixNQUFNLENBQUM0QixPQUFPLENBQzNELFVBQ0E7Z0JBQ0UsT0FBT0Y7WUFDVCxJQUVGO1lBRUZsQixZQUFZO1lBQ1pZLFFBQVE7Z0JBQ05DLFNBQVNqQixPQUNQLHNCQUFzQkosTUFBTSxDQUFDNEIsT0FBTyxDQUFDLFVBQVU7b0JBQzdDLE9BQU9GO2dCQUNULElBQ0E7Z0JBRUZHLFFBQVE7b0JBQ04xQixTQUFTO29CQUNURSxPQUFPO2dCQUNUO2dCQUNBSyxTQUFTQTtnQkFDVE0sVUFBVUY7Z0JBQ1YsYUFBYUMsSUFBSSxDQUFDLFlBQVk7Z0JBQzlCRSxVQUFVRixLQUFLRSxRQUFRO2dCQUN2QmEsVUFBVWYsS0FBS0csR0FBRztnQkFDbEJqQixRQUFRQTtnQkFDUixvQkFBb0JDO2dCQUNwQlcsYUFBYUE7Z0JBQ2JGLFFBQVFBO1lBQ1Y7UUFDRjtRQUNBLElBQUlvQixXQUFXO1lBQ2I1QixTQUNFO1lBQ0ZLLFlBQVk7UUFDZDtRQUNBVixNQUFNa0MsU0FBUyxDQUFDckMsR0FBRyxHQUFHO1lBQ3BCc0MsV0FBVztnQkFDVDlCLFNBQVM7Z0JBQ1RLLFlBQVk7Z0JBQ1pILE9BQU87Z0JBQ1BlLFFBQVE7b0JBQ05DLFNBQVM7d0JBQ1BsQixTQUFTO29CQUNYO29CQUNBVSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQSxZQUFZO2dCQUNWVixTQUNFO2dCQUNGSyxZQUFZO2dCQUNaWSxRQUFRO29CQUNOYyxLQUFLO3dCQUNIL0IsU0FBU0MsT0FDUCxvS0FBb0tKLE1BQU0sQ0FBQzRCLE9BQU8sQ0FDaEwsVUFDQTs0QkFDRSxPQUFPN0I7d0JBQ1QsSUFFRjt3QkFFRk0sT0FBTzt3QkFDUGUsUUFBUXRCLE1BQU1rQyxTQUFTLENBQUNFLEdBQUc7b0JBQzdCO29CQUNBLHFCQUFxQlY7b0JBQ3JCLGtCQUFrQjt3QkFDaEJyQixTQUNFO3dCQUNGSyxZQUFZO3dCQUNaSCxPQUFPO29CQUNUO29CQUNBSixRQUFRQTtvQkFDUixvQkFBb0JDO29CQUNwQlcsYUFBYUE7b0JBQ2JGLFFBQVFBO2dCQUNWO1lBQ0Y7WUFDQSxlQUFlO2dCQUNiUixTQUNFO2dCQUNGSyxZQUFZO2dCQUNaWSxRQUFRO29CQUNOVixTQUFTQTtvQkFDVHlCLFFBQVE7d0JBQ05oQyxTQUFTQyxPQUNQLGlGQUFpRkosTUFBTSxDQUFDNEIsT0FBTyxDQUM3RixVQUNBOzRCQUNFLE9BQU83Qjt3QkFDVCxJQUVGO3dCQUVGUyxZQUFZO3dCQUNaSCxPQUFPO3dCQUNQZSxRQUFRdEIsTUFBTWtDLFNBQVMsQ0FBQ0csTUFBTTtvQkFDaEM7b0JBQ0FkLFNBQVNVO29CQUNULG9CQUFvQk47b0JBQ3BCLHFCQUFxQkQ7b0JBQ3JCdkIsUUFBUUE7b0JBQ1Isb0JBQW9CQztvQkFDcEJXLGFBQWFBO29CQUNiRixRQUFRQTtnQkFDVjtZQUNGO1lBQ0EsWUFBWTtnQkFDVlIsU0FDRTtnQkFDRkssWUFBWTtnQkFDWlksUUFBUTtvQkFDTlYsU0FBU0E7b0JBQ1QwQixLQUFLO3dCQUNIakMsU0FBU0MsT0FDUCxpRkFBaUZKLE1BQU0sQ0FBQzRCLE9BQU8sQ0FDN0YsVUFDQTs0QkFDRSxPQUFPN0I7d0JBQ1QsSUFFRjt3QkFFRlMsWUFBWTt3QkFDWkgsT0FBTzt3QkFDUGUsUUFBUXRCLE1BQU1rQyxTQUFTLENBQUNJLEdBQUc7b0JBQzdCO29CQUNBZixTQUFTVTtvQkFDVCxvQkFBb0JOO29CQUNwQixxQkFBcUJEO29CQUNyQnZCLFFBQVFBO29CQUNSLG9CQUFvQkM7b0JBQ3BCVyxhQUFhQTtvQkFDYkYsUUFBUUE7Z0JBQ1Y7WUFDRjtZQUNBLFlBQVk7Z0JBQ1ZSLFNBQ0U7Z0JBQ0ZLLFlBQVk7Z0JBQ1pZLFFBQVE7b0JBQ05WLFNBQVNBO29CQUNULGlCQUFpQjt3QkFDZlAsU0FBUzt3QkFDVEssWUFBWTt3QkFDWlksUUFBUTs0QkFDTmlCLFdBQVc7Z0NBQ1RsQyxTQUFTO2dDQUNUaUIsUUFBUTtvQ0FDTkMsU0FBUztnQ0FDWDs0QkFDRjs0QkFDQWlCLE1BQU12Qjt3QkFDUjtvQkFDRjtvQkFDQSxlQUFlWTtvQkFDZlUsV0FBVzt3QkFDVGxDLFNBQ0U7d0JBQ0ZLLFlBQVk7d0JBQ1pZLFFBQVFMO29CQUNWO29CQUNBTixNQUFNQTtvQkFDTlksU0FBU1U7b0JBQ1RmLFVBQVVGO29CQUNWSyxRQUFRQTtvQkFDUkksV0FBV0E7b0JBQ1gscUJBQXFCQztvQkFDckJ2QixRQUFRQTtvQkFDUixvQkFBb0JDO29CQUNwQlcsYUFBYUE7b0JBQ2JGLFFBQVFBO2dCQUNWO1lBQ0Y7WUFDQSxhQUFhO2dCQUNYUixTQUFTQyxPQUNQLDJDQUEyQ0osTUFBTSxDQUFDNEIsT0FBTyxDQUN2RCxVQUNBO29CQUNFLE9BQU83QjtnQkFDVCxJQUVGO2dCQUVGUyxZQUFZO2dCQUNaWSxRQUFRTDtZQUNWO1lBQ0EsZ0NBQWdDLEdBQ2hDLGlCQUFpQlI7WUFDakIsa0JBQWtCRDtZQUNsQiwwQkFBMEI7Z0JBQ3hCSCxTQUNFO2dCQUNGSyxZQUFZO2dCQUNaWSxRQUFRO29CQUNOSixVQUFVO3dCQUNSYixTQUFTO3dCQUNURSxPQUFPO29CQUNUO29CQUNBLGlCQUFpQkU7b0JBQ2pCLGtCQUFrQkQ7b0JBQ2xCLGdCQUFnQjt3QkFDZEgsU0FBUztvQkFDWDtvQkFDQVUsYUFBYUE7Z0JBQ2Y7WUFDRjtZQUNBLHFCQUFxQjtnQkFDbkJWLFNBQVM7Z0JBQ1RpQixRQUFRO29CQUNOQyxTQUFTO2dCQUNYO1lBQ0Y7WUFDQSxhQUFhO2dCQUNYbEIsU0FBUztnQkFDVGlCLFFBQVE7b0JBQ05DLFNBQVM7Z0JBQ1g7WUFDRjtZQUNBLG1FQUFtRSxHQUNuRWtCLE9BQU87Z0JBQ0xwQyxTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7WUFDQW1DLE9BQU87Z0JBQ0xyQyxTQUFTO2dCQUNUaUIsUUFBUTtvQkFDTm9CLE9BQU87d0JBQ0xuQyxPQUFPO3dCQUNQRixTQUFTO29CQUNYO29CQUNBTyxTQUFTQTtvQkFDVFQsUUFBUUE7b0JBQ1Isb0JBQW9CQztnQkFDdEI7WUFDRjtZQUNBLGdCQUFnQjtnQkFDZEMsU0FBUztnQkFDVEssWUFBWTtnQkFDWlksUUFBUUw7WUFDVjtZQUNBLGVBQWVZO1lBQ2ZqQixTQUFTQTtZQUNUTSxVQUFVRjtZQUNWSyxRQUFRQTtZQUNSSSxXQUFXQTtZQUNYLG9CQUFvQnJCO1lBQ3BCdUMsVUFBVTtnQkFDUixxREFBcUQ7Z0JBQ3JEdEMsU0FBU0MsT0FBT0wsZ0JBQWdCO2dCQUNoQ00sT0FBTztZQUNUO1lBQ0FNLFFBQVFBO1lBQ1JGLE1BQU1BO1lBQ05ZLFNBQVNVO1lBQ1QsOEVBQThFO1lBQzlFLG9CQUFvQjtnQkFDbEI1QixTQUFTO2dCQUNURSxPQUFPO1lBQ1Q7WUFDQSx1Q0FBdUM7WUFDdkNKLFFBQVFBO1lBQ1JnQixVQUFVO1lBQ1ZKLGFBQWFBO1FBQ2Y7SUFDRixHQUFHZjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Nhcy5qcz9iNzMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5zYXMuZGlzcGxheU5hbWUgPSAnc2FzJ1xuc2FzLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNhcyhQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBzdHJpbmdQYXR0ZXJuID0gLyg/OlwiKD86XCJcInxbXlwiXSkqXCIoPyFcIil8Jyg/OicnfFteJ10pKicoPyEnKSkvLnNvdXJjZVxuICAgIHZhciBudW1iZXIgPSAvXFxiKD86XFxkW1xcZGEtZl0qeHxcXGQrKD86XFwuXFxkKyk/KD86ZVsrLV0/XFxkKyk/KVxcYi9pXG4gICAgdmFyIG51bWVyaWNDb25zdGFudCA9IHtcbiAgICAgIHBhdHRlcm46IFJlZ0V4cChzdHJpbmdQYXR0ZXJuICsgJ1tieF0nKSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH1cbiAgICB2YXIgbWFjcm9WYXJpYWJsZSA9IHtcbiAgICAgIHBhdHRlcm46IC8mW2Etel9dXFx3Ki9pXG4gICAgfVxuICAgIHZhciBtYWNyb0tleXdvcmQgPSB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKCg/Ol58XFxzfD18XFwoKSklKD86QUJPUlR8Qll8Q01TfENPUFl8RElTUExBWXxET3xFTFNFfEVORHxFVkFMfEdMT0JBTHxHT3xHT1RPfElGfElOQ3xJTkNMVURFfElOREVYfElOUFVUfEtUUklNfExFTkdUSHxMRVR8TElTVHxMT0NBTHxQVVR8UUtUUklNfFFTQ0FOfFFTVUJTVFJ8UVNZU0ZVTkN8UVVQQ0FTRXxSRVRVUk58UlVOfFNDQU58U1VCU1RSfFNVUEVSUXxTWU1ERUx8U1lNRVhJU1R8U1lNR0xPQkx8U1lNTE9DQUx8U1lTQ0FMTHxTWVNFVkFMRnxTWVNFWEVDfFNZU0ZVTkN8U1lTR0VUfFNZU1JQVVR8VEhFTnxUT3xUU098VU5RVU9URXxVTlRJTHxVUENBU0V8V0hJTEV8V0lORE9XKVxcYi9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9XG4gICAgdmFyIHN0ZXAgPSB7XG4gICAgICBwYXR0ZXJuOiAvKF58XFxzKSg/OnByb2NcXHMrXFx3K3xkYXRhKD8hPSl8cXVpdHxydW4pXFxiL2ksXG4gICAgICBhbGlhczogJ2tleXdvcmQnLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH1cbiAgICB2YXIgY29tbWVudCA9IFtcbiAgICAgIC9cXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyheWyBcXHRdKnw7XFxzKilcXCpbXjtdKjsvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF1cbiAgICB2YXIgc3RyaW5nID0ge1xuICAgICAgcGF0dGVybjogUmVnRXhwKHN0cmluZ1BhdHRlcm4pLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICAgIHZhciBwdW5jdHVhdGlvbiA9IC9bJCVALigpe31cXFtcXF07LFxcXFxdL1xuICAgIHZhciBmdW5jID0ge1xuICAgICAgcGF0dGVybjogLyU/XFxiXFx3Kyg/PVxcKCkvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH1cbiAgICB2YXIgYXJncyA9IHtcbiAgICAgIGZ1bmN0aW9uOiBmdW5jLFxuICAgICAgJ2FyZy12YWx1ZSc6IHtcbiAgICAgICAgcGF0dGVybjogLyg9XFxzKilbQS1aXFwuXSsvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICAnbWFjcm8tdmFyaWFibGUnOiBtYWNyb1ZhcmlhYmxlLFxuICAgICAgYXJnOiB7XG4gICAgICAgIHBhdHRlcm46IC9bQS1aXSsvaSxcbiAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgfSxcbiAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgJ251bWVyaWMtY29uc3RhbnQnOiBudW1lcmljQ29uc3RhbnQsXG4gICAgICBwdW5jdHVhdGlvbjogcHVuY3R1YXRpb24sXG4gICAgICBzdHJpbmc6IHN0cmluZ1xuICAgIH1cbiAgICB2YXIgZm9ybWF0ID0ge1xuICAgICAgcGF0dGVybjogL1xcYig/OmZvcm1hdHxwdXQpXFxiPT9bXFx3JyQuXSsvaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiAvXig/OmZvcm1hdHxwdXQpKD89PSkvaSxcbiAgICAgICAgZXF1YWxzOiAvPS8sXG4gICAgICAgIGZvcm1hdDoge1xuICAgICAgICAgIHBhdHRlcm46IC8oPzpcXHd8XFwkXFxkKStcXC5cXGQ/LyxcbiAgICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICB2YXIgYWx0Zm9ybWF0ID0ge1xuICAgICAgcGF0dGVybjogL1xcYig/OmZvcm1hdHxwdXQpXFxzK1tcXHcnXSsoPzpcXHMrWyQuXFx3XSspKyg/PTspL2ksXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAga2V5d29yZDogL14oPzpmb3JtYXR8cHV0KS9pLFxuICAgICAgICBmb3JtYXQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvW1xcdyRdK1xcLlxcZD8vLFxuICAgICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHZhciBnbG9iYWxTdGF0ZW1lbnRzID0ge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLygoPzpefFxccyk9PykoPzpjYXRuYW1lfGNoZWNrcG9pbnQgZXhlY3V0ZV9hbHdheXN8ZG18ZW5kc2FzfGZpbGVuYW1lfGZvb3Rub3RlfCVpbmNsdWRlfGxpYm5hbWV8JWxpc3R8bG9ja3xtaXNzaW5nfG9wdGlvbnN8cGFnZXxyZXNldGxpbmV8JXJ1bnxzYXNmaWxlfHNraXB8c3lzZWNob3x0aXRsZVxcZD8pXFxiL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH1cbiAgICB2YXIgc3VibWl0U3RhdGVtZW50ID0ge1xuICAgICAgcGF0dGVybjogLyhefFxccykoPzpzdWJtaXQoPzpcXHMrKD86bG9hZHxub3J1bnxwYXJzZW9ubHkpKT98ZW5kc3VibWl0KVxcYi9pLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9XG4gICAgdmFyIGFjdGlvblNldHMgPVxuICAgICAgL2FTdG9yZXxhY2Nlc3NDb250cm9sfGFnZ3JlZ2F0aW9ufGF1ZGlvfGF1dG90dW5lfGJheWVzaWFuTmV0Q2xhc3NpZmllcnxiaW9NZWRJbWFnZXxib29sUnVsZXxidWlsdGluc3xjYXJkaW5hbGl0eXxjZG18Y2x1c3RlcmluZ3xjb25kaXRpb25hbFJhbmRvbUZpZWxkc3xjb25maWd1cmF0aW9ufGNvcHVsYXxjb3VudHJlZ3xkYXRhRGlzY292ZXJ5fGRhdGFQcmVwcm9jZXNzfGRhdGFTY2llbmNlUGlsb3R8ZGF0YVN0ZXB8ZGVjaXNpb25UcmVlfGRlZHVwbGljYXRpb258ZGVlcExlYXJufGRlZXBOZXVyYWx8ZGVlcFJubnxkczJ8ZWNtfGVudGl0eVJlc3xlc3BDbHVzdGVyfGV4cGxhaW5Nb2RlbHxmYWN0bWFjfGZhc3RLbm58ZmNtcGFjdHxmZWRTcWx8ZnJlcVRhYnxnVmFyQ2x1c3RlcnxnYW18Z2xlYW18Z3JhcGhTZW1pU3VwTGVhcm58aGlkZGVuTWFya292TW9kZWx8aHlwZXJHcm91cHxpY2F8aW1hZ2V8aW1sfGtlcm5hbFBjYXxsYW5nTW9kZWx8bGRhVG9waWN8bG9hZFN0cmVhbXN8bWJjfG1peGVkfG1sVG9vbHN8bW9kZWxQdWJsaXNoaW5nfG5ldHdvcmt8bmV1cmFsTmV0fG5tZnxub25QYXJhbWV0cmljQmF5ZXN8bm9ubGluZWFyfG9wdE5ldHdvcmt8b3B0aW1pemF0aW9ufHBhbmVsfHBjYXxwZXJjZW50aWxlfHBocmVnfHBsc3xxa2J8cWxpbXxxdWFudHJlZ3xyZWNvbW1lbmR8cmVncmVzc2lvbnxyZWluZm9yY2VtZW50TGVhcm58cm9idXN0UGNhfHJ1bGVNaW5pbmd8c2FtcGxpbmd8c2FuZHdpY2h8c2NjYXNsfHNlYXJjaCg/OkFuYWx5dGljcyk/fHNlbnRpbWVudEFuYWx5c2lzfHNlcXVlbmNlfHNlc3Npb24oPzpQcm9wKT98c2V2ZXJpdHl8c2ltU3lzdGVtfHNpbXBsZXxzbWFydERhdGF8c3BhcmtFbWJlZGRlZFByb2Nlc3N8c3BhcnNlTUx8c3BhdGlhbHJlZ3xzcGN8c3RhYmlsaXR5TW9uaXRvcmluZ3xzdkRhdGFEZXNjcmlwdGlvbnxzdm18dGFibGV8dGV4dCg/OkZpbHRlcnN8RnJlcXVlbmN5fE1pbmluZ3xQYXJzZXxSdWxlKD86RGV2ZWxvcHxTY29yZSl8VG9waWN8VXRpbCl8dGltZURhdGF8dHJhbnNwb3NlfHRzSW5mb3x0c1JlY29uY2lsZXx1bmlUaW1lU2VyaWVzfHZhclJlZHVjZS9cbiAgICAgICAgLnNvdXJjZVxuICAgIHZhciBjYXNBY3Rpb25zID0ge1xuICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAvKF58XFxzKSg/OmFjdGlvblxccyspPyg/OjxhY3Q+KVxcLlthLXpdK1xcYlteO10rLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAvPGFjdD4vZyxcbiAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gYWN0aW9uU2V0c1xuICAgICAgICAgIH1cbiAgICAgICAgKSxcbiAgICAgICAgJ2knXG4gICAgICApLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBrZXl3b3JkOiBSZWdFeHAoXG4gICAgICAgICAgLyg/OjxhY3Q+KVxcLlthLXpdK1xcYi8uc291cmNlLnJlcGxhY2UoLzxhY3Q+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBhY3Rpb25TZXRzXG4gICAgICAgICAgfSksXG4gICAgICAgICAgJ2knXG4gICAgICAgICksXG4gICAgICAgIGFjdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC8oPzphY3Rpb24pL2ksXG4gICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgICB9LFxuICAgICAgICBjb21tZW50OiBjb21tZW50LFxuICAgICAgICBmdW5jdGlvbjogZnVuYyxcbiAgICAgICAgJ2FyZy12YWx1ZSc6IGFyZ3NbJ2FyZy12YWx1ZSddLFxuICAgICAgICBvcGVyYXRvcjogYXJncy5vcGVyYXRvcixcbiAgICAgICAgYXJndW1lbnQ6IGFyZ3MuYXJnLFxuICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgJ251bWVyaWMtY29uc3RhbnQnOiBudW1lcmljQ29uc3RhbnQsXG4gICAgICAgIHB1bmN0dWF0aW9uOiBwdW5jdHVhdGlvbixcbiAgICAgICAgc3RyaW5nOiBzdHJpbmdcbiAgICAgIH1cbiAgICB9XG4gICAgdmFyIGtleXdvcmRzID0ge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLygoPzpefFxccyk9PykoPzphZnRlcnxhbmFseXNpc3xhbmR8YXJyYXl8YmFyY2hhcnR8YmFyd2lkdGh8YmVnaW5ncmFwaHxieXxjYWxsfGNhc3xjYmFybGluZXxjZmlsbHxjbGFzcyg/Omxldik/fGNsb3NlfGNvbHVtbnxjb21wdXRlZD98Y29udGFpbnN8Y29udGludWV8ZGF0YSg/PT0pfGRlZmluZXxkZWxldGV8ZGVzY3JpYmV8ZG9jdW1lbnR8ZG9cXHMrb3Zlcnxkb3xkb2x8ZHJvcHxkdWx8ZWxzZXxlbmQoPzpjb21wfHNvdXJjZSk/fGVudHJ5VGl0bGV8ZXZhbCg/OnVhdGUpP3xleGVjKD86dXRlKT98ZXhpdHxmaWxlKD86bmFtZSk/fGZpbGwoPzphdHRycyk/fGZsaXN0fGZuY3xmdW5jdGlvbig/Omxpc3QpP3xnbG9iYWx8Z290b3xncm91cCg/OmJ5KT98aGVhZGxpbmV8aGVhZHNraXB8aGlzdG9ncmFtfGlmfGluZmlsZXxrZWVwfGtleWxhYmVsfGtleXdvcmR8bGFiZWx8bGF5b3V0fGxlYXZlfGxlZ2VuZGxhYmVsfGxlbmd0aHxsaWJuYW1lfGxvYWRhY3Rpb25zZXR8bWVyZ2V8bWlkcG9pbnRzfF8/bnVsbF98bmFtZXxub29ic3xub3dkfG9kc3xvcHRpb25zfG9yfG90aGVyd2lzZXxvdXQoPzpwdXQpP3xvdmVyKD86bGF5KT98cGxvdHxwcmludHxwdXR8cmFpc2V8cmFuZXhwfHJhbm5vcnxyYnJlYWt8cmV0YWlufHJldHVybnxzZWxlY3R8c2Vzc2lvbnxzZXNzcmVmfHNldHxzb3VyY2V8c3RhdGdyYXBofHN1bXxzdW1tYXJpemV8dGFibGV8dGVtcHx0ZXJtaW5hdGV8dGhlblxccytkb3x0aGVufHRpdGxlXFxkP3x0b3x2YXJ8d2hlbnx3aGVyZXx4YXhpc29wdHN8eTJheGlzb3B0c3x5YXhpc29wdHMpXFxiL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5zYXMgPSB7XG4gICAgICBkYXRhbGluZXM6IHtcbiAgICAgICAgcGF0dGVybjogL14oWyBcXHRdKikoPzpjYXJkc3woPzpkYXRhKT9saW5lcyk7W1xcc1xcU10rP15bIFxcdF0qOy9pbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBrZXl3b3JkOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXig/OmNhcmRzfCg/OmRhdGEpP2xpbmVzKS9pXG4gICAgICAgICAgfSxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogLzsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAncHJvYy1zcWwnOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhecHJvY1xccysoPzpmZWQpP3NxbCg/OlxccytbXFx3fD1dKyk/OylbXFxzXFxTXSs/KD89Xig/OnByb2NcXHMrXFx3K3xkYXRhfHF1aXR8cnVuKTt8KD8hW1xcc1xcU10pKS9pbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgc3FsOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICAgIC9eWyBcXHRdKig/OnNlbGVjdHxhbHRlclxccyt0YWJsZXwoPzpjcmVhdGV8ZGVzY3JpYmV8ZHJvcClcXHMrKD86aW5kZXh8dGFibGUoPzpcXHMrY29uc3RyYWludHMpP3x2aWV3KXxjcmVhdGVcXHMrdW5pcXVlXFxzK2luZGV4fGluc2VydFxccytpbnRvfHVwZGF0ZSkoPzo8c3RyPnxbXjtcIiddKSs7Ly5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgICAgICAvPHN0cj4vZyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nUGF0dGVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgJ2ltJ1xuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2Utc3FsJyxcbiAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnNxbFxuICAgICAgICAgIH0sXG4gICAgICAgICAgJ2dsb2JhbC1zdGF0ZW1lbnRzJzogZ2xvYmFsU3RhdGVtZW50cyxcbiAgICAgICAgICAnc3FsLXN0YXRlbWVudHMnOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKF58XFxzKSg/OmRpc2Nvbm5lY3RcXHMrZnJvbXxiZWdpbnxjb21taXR8ZXhlYyg/OnV0ZSk/fHJlc2V0fHJvbGxiYWNrfHZhbGlkYXRlKVxcYi9pLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICAgICAgICB9LFxuICAgICAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgICAgICdudW1lcmljLWNvbnN0YW50JzogbnVtZXJpY0NvbnN0YW50LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiBwdW5jdHVhdGlvbixcbiAgICAgICAgICBzdHJpbmc6IHN0cmluZ1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ3Byb2MtZ3Jvb3Z5Jzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnByb2NcXHMrZ3Jvb3Z5KD86XFxzK1tcXHd8PV0rKT87KVtcXHNcXFNdKz8oPz1eKD86cHJvY1xccytcXHcrfGRhdGF8cXVpdHxydW4pO3woPyFbXFxzXFxTXSkpL2ltLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBjb21tZW50OiBjb21tZW50LFxuICAgICAgICAgIGdyb292eToge1xuICAgICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgICAvKF5bIFxcdF0qc3VibWl0KD86XFxzKyg/OmxvYWR8bm9ydW58cGFyc2Vvbmx5KSk/KSg/OjxzdHI+fFteXCInXSkrPyg/PWVuZHN1Ym1pdDspLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgICAgICAvPHN0cj4vZyxcbiAgICAgICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gc3RyaW5nUGF0dGVyblxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgJ2ltJ1xuICAgICAgICAgICAgKSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLWdyb292eScsXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5ncm9vdnlcbiAgICAgICAgICB9LFxuICAgICAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgICAgICdzdWJtaXQtc3RhdGVtZW50Jzogc3VibWl0U3RhdGVtZW50LFxuICAgICAgICAgICdnbG9iYWwtc3RhdGVtZW50cyc6IGdsb2JhbFN0YXRlbWVudHMsXG4gICAgICAgICAgbnVtYmVyOiBudW1iZXIsXG4gICAgICAgICAgJ251bWVyaWMtY29uc3RhbnQnOiBudW1lcmljQ29uc3RhbnQsXG4gICAgICAgICAgcHVuY3R1YXRpb246IHB1bmN0dWF0aW9uLFxuICAgICAgICAgIHN0cmluZzogc3RyaW5nXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAncHJvYy1sdWEnOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhecHJvY1xccytsdWEoPzpcXHMrW1xcd3w9XSspPzspW1xcc1xcU10rPyg/PV4oPzpwcm9jXFxzK1xcdyt8ZGF0YXxxdWl0fHJ1bik7fCg/IVtcXHNcXFNdKSkvaW0sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGNvbW1lbnQ6IGNvbW1lbnQsXG4gICAgICAgICAgbHVhOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICAgIC8oXlsgXFx0XSpzdWJtaXQoPzpcXHMrKD86bG9hZHxub3J1bnxwYXJzZW9ubHkpKT8pKD86PHN0cj58W15cIiddKSs/KD89ZW5kc3VibWl0OykvLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgICAgIC88c3RyPi9nLFxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmdQYXR0ZXJuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAnaW0nXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtbHVhJyxcbiAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmx1YVxuICAgICAgICAgIH0sXG4gICAgICAgICAga2V5d29yZDoga2V5d29yZHMsXG4gICAgICAgICAgJ3N1Ym1pdC1zdGF0ZW1lbnQnOiBzdWJtaXRTdGF0ZW1lbnQsXG4gICAgICAgICAgJ2dsb2JhbC1zdGF0ZW1lbnRzJzogZ2xvYmFsU3RhdGVtZW50cyxcbiAgICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgICAnbnVtZXJpYy1jb25zdGFudCc6IG51bWVyaWNDb25zdGFudCxcbiAgICAgICAgICBwdW5jdHVhdGlvbjogcHVuY3R1YXRpb24sXG4gICAgICAgICAgc3RyaW5nOiBzdHJpbmdcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdwcm9jLWNhcyc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF5wcm9jXFxzK2Nhcyg/OlxccytbXFx3fD1dKyk/OylbXFxzXFxTXSs/KD89Xig/OnByb2NcXHMrXFx3K3xxdWl0fGRhdGEpO3woPyFbXFxzXFxTXSkpL2ltLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBjb21tZW50OiBjb21tZW50LFxuICAgICAgICAgICdzdGF0ZW1lbnQtdmFyJzoge1xuICAgICAgICAgICAgcGF0dGVybjogLygoPzpefFxccyk9PylzYXZlcmVzdWx0XFxzW147XSsvaW0sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHN0YXRlbWVudDoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC9ec2F2ZXJlc3VsdFxccytcXFMrL2ksXG4gICAgICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgICAgICBrZXl3b3JkOiAvXig/OnNhdmVyZXN1bHQpL2lcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHJlc3Q6IGFyZ3NcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgICdjYXMtYWN0aW9ucyc6IGNhc0FjdGlvbnMsXG4gICAgICAgICAgc3RhdGVtZW50OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKCg/Ol58XFxzKT0/KSg/OmRlZmF1bHR8KD86dW4pP3NldHxvbnxvdXRwdXR8dXBsb2FkKVteO10rL2ltLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGluc2lkZTogYXJnc1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc3RlcDogc3RlcCxcbiAgICAgICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgICAgICBmdW5jdGlvbjogZnVuYyxcbiAgICAgICAgICBmb3JtYXQ6IGZvcm1hdCxcbiAgICAgICAgICBhbHRmb3JtYXQ6IGFsdGZvcm1hdCxcbiAgICAgICAgICAnZ2xvYmFsLXN0YXRlbWVudHMnOiBnbG9iYWxTdGF0ZW1lbnRzLFxuICAgICAgICAgIG51bWJlcjogbnVtYmVyLFxuICAgICAgICAgICdudW1lcmljLWNvbnN0YW50JzogbnVtZXJpY0NvbnN0YW50LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiBwdW5jdHVhdGlvbixcbiAgICAgICAgICBzdHJpbmc6IHN0cmluZ1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ3Byb2MtYXJncyc6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8oXnByb2NcXHMrXFx3K1xccyspKD8hXFxzKSg/OlteO1wiJ118PHN0cj4pKzsvLnNvdXJjZS5yZXBsYWNlKFxuICAgICAgICAgICAgLzxzdHI+L2csXG4gICAgICAgICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIHJldHVybiBzdHJpbmdQYXR0ZXJuXG4gICAgICAgICAgICB9XG4gICAgICAgICAgKSxcbiAgICAgICAgICAnaW0nXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZTogYXJnc1xuICAgICAgfSxcbiAgICAgIC8qU3BlY2lhbCBrZXl3b3JkcyB3aXRoaW4gbWFjcm9zKi9cbiAgICAgICdtYWNyby1rZXl3b3JkJzogbWFjcm9LZXl3b3JkLFxuICAgICAgJ21hY3JvLXZhcmlhYmxlJzogbWFjcm9WYXJpYWJsZSxcbiAgICAgICdtYWNyby1zdHJpbmctZnVuY3Rpb25zJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oKD86XnxcXHN8PSkpJSg/OkJRVU9URXxOUkJRVU9URXxOUlFVT1RFfE5SU1RSfFFVT1RFfFNUUilcXCguKj8oPzpbXiVdXFwpKS9pLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBmdW5jdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogLyUoPzpCUVVPVEV8TlJCUVVPVEV8TlJRVU9URXxOUlNUUnxRVU9URXxTVFIpL2ksXG4gICAgICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnbWFjcm8ta2V5d29yZCc6IG1hY3JvS2V5d29yZCxcbiAgICAgICAgICAnbWFjcm8tdmFyaWFibGUnOiBtYWNyb1ZhcmlhYmxlLFxuICAgICAgICAgICdlc2NhcGVkLWNoYXInOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvJVsnXCIoKTw+PcKsXn47LCNdL1xuICAgICAgICAgIH0sXG4gICAgICAgICAgcHVuY3R1YXRpb246IHB1bmN0dWF0aW9uXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnbWFjcm8tZGVjbGFyYXRpb24nOiB7XG4gICAgICAgIHBhdHRlcm46IC9eJW1hY3JvW147XSsoPz07KS9pbSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAga2V5d29yZDogLyVtYWNyby9pXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnbWFjcm8tZW5kJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXiVtZW5kW147XSsoPz07KS9pbSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAga2V5d29yZDogLyVtZW5kL2lcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIC8qJV96c2NvcmUoaGVhZGNpciwgX2xoYywgX21oYywgX3NoYywgaGVhZGN6LCBoZWFkY3BjdCwgX0ZoZWFkY3opOyAqL1xuICAgICAgbWFjcm86IHtcbiAgICAgICAgcGF0dGVybjogLyVfXFx3Kyg/PVxcKCkvLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9LFxuICAgICAgaW5wdXQ6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYmlucHV0XFxzWy1cXHdcXHMvKi4kJl0rOy9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbnB1dDoge1xuICAgICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJyxcbiAgICAgICAgICAgIHBhdHRlcm46IC9eaW5wdXQvaVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29tbWVudDogY29tbWVudCxcbiAgICAgICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgICAgICAnbnVtZXJpYy1jb25zdGFudCc6IG51bWVyaWNDb25zdGFudFxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgJ29wdGlvbnMtYXJncyc6IHtcbiAgICAgICAgcGF0dGVybjogLyheb3B0aW9ucylbLSdcInwvXFxcXDw+Kis9OigpXFx3XFxzXSooPz07KS9pbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiBhcmdzXG4gICAgICB9LFxuICAgICAgJ2Nhcy1hY3Rpb25zJzogY2FzQWN0aW9ucyxcbiAgICAgIGNvbW1lbnQ6IGNvbW1lbnQsXG4gICAgICBmdW5jdGlvbjogZnVuYyxcbiAgICAgIGZvcm1hdDogZm9ybWF0LFxuICAgICAgYWx0Zm9ybWF0OiBhbHRmb3JtYXQsXG4gICAgICAnbnVtZXJpYy1jb25zdGFudCc6IG51bWVyaWNDb25zdGFudCxcbiAgICAgIGRhdGV0aW1lOiB7XG4gICAgICAgIC8vICcxamFuMjAxMydkLCAnOToyNToxOXBtJ3QsICcxOGphbjIwMDM6OToyNzowNWFtJ2R0XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChzdHJpbmdQYXR0ZXJuICsgJyg/OmR0P3x0KScpLFxuICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgIH0sXG4gICAgICBzdHJpbmc6IHN0cmluZyxcbiAgICAgIHN0ZXA6IHN0ZXAsXG4gICAgICBrZXl3b3JkOiBrZXl3b3JkcyxcbiAgICAgIC8vIEluIFNBUyBTdHVkaW8gc3ludGF4IGhpZ2hsaWdodGluZywgdGhlc2Ugb3BlcmF0b3JzIGFyZSBzdHlsZWQgbGlrZSBrZXl3b3Jkc1xuICAgICAgJ29wZXJhdG9yLWtleXdvcmQnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGIoPzplcXxnZXxndHxpbnxsZXxsdHxuZXxub3QpXFxiL2ksXG4gICAgICAgIGFsaWFzOiAnb3BlcmF0b3InXG4gICAgICB9LFxuICAgICAgLy8gRGVjaW1hbCAoMS4yZTIzKSwgaGV4YWRlY2ltYWwgKDBjMXgpXG4gICAgICBudW1iZXI6IG51bWJlcixcbiAgICAgIG9wZXJhdG9yOiAvXFwqXFwqP3xcXHxcXHw/fCEhP3zCpsKmP3w8Wz49XT98Pls8PV0/fFstK1xcLz0mXXxbfsKsXl09Py8sXG4gICAgICBwdW5jdHVhdGlvbjogcHVuY3R1YXRpb25cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInNhcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwic3RyaW5nUGF0dGVybiIsInNvdXJjZSIsIm51bWJlciIsIm51bWVyaWNDb25zdGFudCIsInBhdHRlcm4iLCJSZWdFeHAiLCJhbGlhcyIsIm1hY3JvVmFyaWFibGUiLCJtYWNyb0tleXdvcmQiLCJsb29rYmVoaW5kIiwic3RlcCIsImNvbW1lbnQiLCJzdHJpbmciLCJncmVlZHkiLCJwdW5jdHVhdGlvbiIsImZ1bmMiLCJhcmdzIiwiZnVuY3Rpb24iLCJvcGVyYXRvciIsImFyZyIsImZvcm1hdCIsImluc2lkZSIsImtleXdvcmQiLCJlcXVhbHMiLCJhbHRmb3JtYXQiLCJnbG9iYWxTdGF0ZW1lbnRzIiwic3VibWl0U3RhdGVtZW50IiwiYWN0aW9uU2V0cyIsImNhc0FjdGlvbnMiLCJyZXBsYWNlIiwiYWN0aW9uIiwiYXJndW1lbnQiLCJrZXl3b3JkcyIsImxhbmd1YWdlcyIsImRhdGFsaW5lcyIsInNxbCIsImdyb292eSIsImx1YSIsInN0YXRlbWVudCIsInJlc3QiLCJtYWNybyIsImlucHV0IiwiZGF0ZXRpbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sas.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sass.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sass.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sass)\n/* harmony export */ });\n/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\");\n// @ts-nocheck\n\nsass.displayName = \"sass\";\nsass.aliases = [];\n/** @type {import('../core.js').Syntax} */ function sass(Prism) {\n    Prism.register(_css_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.sass = Prism.languages.extend(\"css\", {\n            // Sass comments don't need to be closed, only indented\n            comment: {\n                pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n                lookbehind: true,\n                greedy: true\n            }\n        });\n        Prism.languages.insertBefore(\"sass\", \"atrule\", {\n            // We want to consume the whole line\n            \"atrule-line\": {\n                // Includes support for = and + shortcuts\n                pattern: /^(?:[ \\t]*)[@+=].+/m,\n                greedy: true,\n                inside: {\n                    atrule: /(?:@[\\w-]+|[+=])/\n                }\n            }\n        });\n        delete Prism.languages.sass.atrule;\n        var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n        var operator = [\n            /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n            {\n                pattern: /(\\s)-(?=\\s)/,\n                lookbehind: true\n            }\n        ];\n        Prism.languages.insertBefore(\"sass\", \"property\", {\n            // We want to consume the whole line\n            \"variable-line\": {\n                pattern: /^[ \\t]*\\$.+/m,\n                greedy: true,\n                inside: {\n                    punctuation: /:/,\n                    variable: variable,\n                    operator: operator\n                }\n            },\n            // We want to consume the whole line\n            \"property-line\": {\n                pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n                greedy: true,\n                inside: {\n                    property: [\n                        /[^:\\s]+(?=\\s*:)/,\n                        {\n                            pattern: /(:)[^:\\s]+/,\n                            lookbehind: true\n                        }\n                    ],\n                    punctuation: /:/,\n                    variable: variable,\n                    operator: operator,\n                    important: Prism.languages.sass.important\n                }\n            }\n        });\n        delete Prism.languages.sass.property;\n        delete Prism.languages.sass.important;\n        // Now that whole lines for other patterns are consumed,\n        // what's left should be selectors\n        Prism.languages.insertBefore(\"sass\", \"punctuation\", {\n            selector: {\n                pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n                lookbehind: true,\n                greedy: true\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zYXNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNuQ0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCwrQ0FBWUE7SUFDekIsVUFBVUksS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLElBQUksR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsT0FBTztZQUNuRCx1REFBdUQ7WUFDdkRDLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtRQUNGO1FBQ0FQLE1BQU1FLFNBQVMsQ0FBQ00sWUFBWSxDQUFDLFFBQVEsVUFBVTtZQUM3QyxvQ0FBb0M7WUFDcEMsZUFBZTtnQkFDYix5Q0FBeUM7Z0JBQ3pDSCxTQUFTO2dCQUNURSxRQUFRO2dCQUNSRSxRQUFRO29CQUNOQyxRQUFRO2dCQUNWO1lBQ0Y7UUFDRjtRQUNBLE9BQU9WLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDYSxNQUFNO1FBQ2xDLElBQUlDLFdBQVc7UUFDZixJQUFJQyxXQUFXO1lBQ2I7WUFDQTtnQkFDRVAsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7UUFDRE4sTUFBTUUsU0FBUyxDQUFDTSxZQUFZLENBQUMsUUFBUSxZQUFZO1lBQy9DLG9DQUFvQztZQUNwQyxpQkFBaUI7Z0JBQ2ZILFNBQVM7Z0JBQ1RFLFFBQVE7Z0JBQ1JFLFFBQVE7b0JBQ05JLGFBQWE7b0JBQ2JGLFVBQVVBO29CQUNWQyxVQUFVQTtnQkFDWjtZQUNGO1lBQ0Esb0NBQW9DO1lBQ3BDLGlCQUFpQjtnQkFDZlAsU0FBUztnQkFDVEUsUUFBUTtnQkFDUkUsUUFBUTtvQkFDTkssVUFBVTt3QkFDUjt3QkFDQTs0QkFDRVQsU0FBUzs0QkFDVEMsWUFBWTt3QkFDZDtxQkFDRDtvQkFDRE8sYUFBYTtvQkFDYkYsVUFBVUE7b0JBQ1ZDLFVBQVVBO29CQUNWRyxXQUFXZixNQUFNRSxTQUFTLENBQUNMLElBQUksQ0FBQ2tCLFNBQVM7Z0JBQzNDO1lBQ0Y7UUFDRjtRQUNBLE9BQU9mLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDaUIsUUFBUTtRQUNwQyxPQUFPZCxNQUFNRSxTQUFTLENBQUNMLElBQUksQ0FBQ2tCLFNBQVM7UUFFckMsd0RBQXdEO1FBQ3hELGtDQUFrQztRQUNsQ2YsTUFBTUUsU0FBUyxDQUFDTSxZQUFZLENBQUMsUUFBUSxlQUFlO1lBQ2xEUSxVQUFVO2dCQUNSWCxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO1lBQ1Y7UUFDRjtJQUNGLEdBQUdQO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2Fzcy5qcz9iNTRjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ3NzIGZyb20gJy4vY3NzLmpzJ1xuc2Fzcy5kaXNwbGF5TmFtZSA9ICdzYXNzJ1xuc2Fzcy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzYXNzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNzcylcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMuc2FzcyA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NzcycsIHtcbiAgICAgIC8vIFNhc3MgY29tbWVudHMgZG9uJ3QgbmVlZCB0byBiZSBjbG9zZWQsIG9ubHkgaW5kZW50ZWRcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogL14oWyBcXHRdKilcXC9bXFwvKl0uKig/Oig/Olxccj9cXG58XFxyKVxcMVsgXFx0XS4rKSovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzYXNzJywgJ2F0cnVsZScsIHtcbiAgICAgIC8vIFdlIHdhbnQgdG8gY29uc3VtZSB0aGUgd2hvbGUgbGluZVxuICAgICAgJ2F0cnVsZS1saW5lJzoge1xuICAgICAgICAvLyBJbmNsdWRlcyBzdXBwb3J0IGZvciA9IGFuZCArIHNob3J0Y3V0c1xuICAgICAgICBwYXR0ZXJuOiAvXig/OlsgXFx0XSopW0ArPV0uKy9tLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGF0cnVsZTogLyg/OkBbXFx3LV0rfFsrPV0pL1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnNhc3MuYXRydWxlXG4gICAgdmFyIHZhcmlhYmxlID0gL1xcJFstXFx3XSt8I1xce1xcJFstXFx3XStcXH0vXG4gICAgdmFyIG9wZXJhdG9yID0gW1xuICAgICAgL1srKlxcLyVdfFs9IV09fDw9P3w+PT98XFxiKD86YW5kfG5vdHxvcilcXGIvLFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKFxccyktKD89XFxzKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnc2FzcycsICdwcm9wZXJ0eScsIHtcbiAgICAgIC8vIFdlIHdhbnQgdG8gY29uc3VtZSB0aGUgd2hvbGUgbGluZVxuICAgICAgJ3ZhcmlhYmxlLWxpbmUnOiB7XG4gICAgICAgIHBhdHRlcm46IC9eWyBcXHRdKlxcJC4rL20sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC86LyxcbiAgICAgICAgICB2YXJpYWJsZTogdmFyaWFibGUsXG4gICAgICAgICAgb3BlcmF0b3I6IG9wZXJhdG9yXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyBXZSB3YW50IHRvIGNvbnN1bWUgdGhlIHdob2xlIGxpbmVcbiAgICAgICdwcm9wZXJ0eS1saW5lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXlsgXFx0XSooPzpbXjpcXHNdKyAqOi4qfDpbXjpcXHNdLiopL20sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHJvcGVydHk6IFtcbiAgICAgICAgICAgIC9bXjpcXHNdKyg/PVxccyo6KS8sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC8oOilbXjpcXHNdKy8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvOi8sXG4gICAgICAgICAgdmFyaWFibGU6IHZhcmlhYmxlLFxuICAgICAgICAgIG9wZXJhdG9yOiBvcGVyYXRvcixcbiAgICAgICAgICBpbXBvcnRhbnQ6IFByaXNtLmxhbmd1YWdlcy5zYXNzLmltcG9ydGFudFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnNhc3MucHJvcGVydHlcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnNhc3MuaW1wb3J0YW50XG5cbiAgICAvLyBOb3cgdGhhdCB3aG9sZSBsaW5lcyBmb3Igb3RoZXIgcGF0dGVybnMgYXJlIGNvbnN1bWVkLFxuICAgIC8vIHdoYXQncyBsZWZ0IHNob3VsZCBiZSBzZWxlY3RvcnNcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzYXNzJywgJ3B1bmN0dWF0aW9uJywge1xuICAgICAgc2VsZWN0b3I6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXihbIFxcdF0qKVxcUyg/OixbXixcXHJcXG5dK3xbXixcXHJcXG5dKikoPzosW14sXFxyXFxuXSspKig/OiwoPzpcXHI/XFxufFxccilcXDFbIFxcdF0rXFxTKD86LFteLFxcclxcbl0rfFteLFxcclxcbl0qKSg/OixbXixcXHJcXG5dKykqKSovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ3NzIiwic2FzcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJpbnNlcnRCZWZvcmUiLCJpbnNpZGUiLCJhdHJ1bGUiLCJ2YXJpYWJsZSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJwcm9wZXJ0eSIsImltcG9ydGFudCIsInNlbGVjdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sass.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scala.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scala.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ scala)\n/* harmony export */ });\n/* harmony import */ var _java_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./java.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js\");\n// @ts-nocheck\n\nscala.displayName = \"scala\";\nscala.aliases = [];\n/** @type {import('../core.js').Syntax} */ function scala(Prism) {\n    Prism.register(_java_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.scala = Prism.languages.extend(\"java\", {\n        \"triple-quoted-string\": {\n            pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        keyword: /<-|=>|\\b(?:abstract|case|catch|class|def|derives|do|else|enum|extends|extension|final|finally|for|forSome|given|if|implicit|import|infix|inline|lazy|match|new|null|object|opaque|open|override|package|private|protected|return|sealed|self|super|this|throw|trait|transparent|try|type|using|val|var|while|with|yield)\\b/,\n        number: /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n        builtin: /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n        symbol: /'[^\\d\\s\\\\]\\w*/\n    });\n    Prism.languages.insertBefore(\"scala\", \"triple-quoted-string\", {\n        \"string-interpolation\": {\n            pattern: /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n            greedy: true,\n            inside: {\n                id: {\n                    pattern: /^\\w+/,\n                    greedy: true,\n                    alias: \"function\"\n                },\n                escape: {\n                    pattern: /\\\\\\$\"|\\$[$\"]/,\n                    greedy: true,\n                    alias: \"symbol\"\n                },\n                interpolation: {\n                    pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n                    greedy: true,\n                    inside: {\n                        punctuation: /^\\$\\{?|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: Prism.languages.scala\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    delete Prism.languages.scala[\"class-name\"];\n    delete Prism.languages.scala[\"function\"];\n    delete Prism.languages.scala[\"constant\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zY2FsYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDdUI7QUFDckNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsZ0RBQWFBO0lBQzVCSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsUUFBUTtRQUNyRCx3QkFBd0I7WUFDdEJDLFNBQVM7WUFDVEMsUUFBUTtZQUNSQyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRyxTQUNFO1FBQ0ZDLFFBQ0U7UUFDRkMsU0FDRTtRQUNGQyxRQUFRO0lBQ1Y7SUFDQVgsTUFBTUUsU0FBUyxDQUFDVSxZQUFZLENBQUMsU0FBUyx3QkFBd0I7UUFDNUQsd0JBQXdCO1lBQ3RCUixTQUNFO1lBQ0ZDLFFBQVE7WUFDUlEsUUFBUTtnQkFDTkMsSUFBSTtvQkFDRlYsU0FBUztvQkFDVEMsUUFBUTtvQkFDUkMsT0FBTztnQkFDVDtnQkFDQVMsUUFBUTtvQkFDTlgsU0FBUztvQkFDVEMsUUFBUTtvQkFDUkMsT0FBTztnQkFDVDtnQkFDQVUsZUFBZTtvQkFDYlosU0FBUztvQkFDVEMsUUFBUTtvQkFDUlEsUUFBUTt3QkFDTkksYUFBYTt3QkFDYkMsWUFBWTs0QkFDVmQsU0FBUzs0QkFDVFMsUUFBUWIsTUFBTUUsU0FBUyxDQUFDTCxLQUFLO3dCQUMvQjtvQkFDRjtnQkFDRjtnQkFDQVUsUUFBUTtZQUNWO1FBQ0Y7SUFDRjtJQUNBLE9BQU9QLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSyxDQUFDLGFBQWE7SUFDMUMsT0FBT0csTUFBTUUsU0FBUyxDQUFDTCxLQUFLLENBQUMsV0FBVztJQUN4QyxPQUFPRyxNQUFNRSxTQUFTLENBQUNMLEtBQUssQ0FBQyxXQUFXO0FBQzFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NjYWxhLmpzPzlkZGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKYXZhIGZyb20gJy4vamF2YS5qcydcbnNjYWxhLmRpc3BsYXlOYW1lID0gJ3NjYWxhJ1xuc2NhbGEuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2NhbGEoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnNjYWxhID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnamF2YScsIHtcbiAgICAndHJpcGxlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJcIlwiW1xcc1xcU10qP1wiXCJcIi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3N0cmluZydcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhcInwnKSg/OlxcXFwufCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgLzwtfD0+fFxcYig/OmFic3RyYWN0fGNhc2V8Y2F0Y2h8Y2xhc3N8ZGVmfGRlcml2ZXN8ZG98ZWxzZXxlbnVtfGV4dGVuZHN8ZXh0ZW5zaW9ufGZpbmFsfGZpbmFsbHl8Zm9yfGZvclNvbWV8Z2l2ZW58aWZ8aW1wbGljaXR8aW1wb3J0fGluZml4fGlubGluZXxsYXp5fG1hdGNofG5ld3xudWxsfG9iamVjdHxvcGFxdWV8b3BlbnxvdmVycmlkZXxwYWNrYWdlfHByaXZhdGV8cHJvdGVjdGVkfHJldHVybnxzZWFsZWR8c2VsZnxzdXBlcnx0aGlzfHRocm93fHRyYWl0fHRyYW5zcGFyZW50fHRyeXx0eXBlfHVzaW5nfHZhbHx2YXJ8d2hpbGV8d2l0aHx5aWVsZClcXGIvLFxuICAgIG51bWJlcjpcbiAgICAgIC9cXGIweCg/OltcXGRhLWZdKlxcLik/W1xcZGEtZl0rfCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzplXFxkKyk/W2RmbF0/L2ksXG4gICAgYnVpbHRpbjpcbiAgICAgIC9cXGIoPzpBbnl8QW55UmVmfEFueVZhbHxCb29sZWFufEJ5dGV8Q2hhcnxEb3VibGV8RmxvYXR8SW50fExvbmd8Tm90aGluZ3xTaG9ydHxTdHJpbmd8VW5pdClcXGIvLFxuICAgIHN5bWJvbDogLydbXlxcZFxcc1xcXFxdXFx3Ki9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnc2NhbGEnLCAndHJpcGxlLXF1b3RlZC1zdHJpbmcnLCB7XG4gICAgJ3N0cmluZy1pbnRlcnBvbGF0aW9uJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYlthLXpdXFx3Kig/OlwiXCJcIig/OlteJF18XFwkKD86W157XXxcXHsoPzpbXnt9XXxcXHtbXnt9XSpcXH0pKlxcfSkpKj9cIlwiXCJ8XCIoPzpbXiRcIlxcclxcbl18XFwkKD86W157XXxcXHsoPzpbXnt9XXxcXHtbXnt9XSpcXH0pKlxcfSkpKlwiKS9pLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGlkOiB7XG4gICAgICAgICAgcGF0dGVybjogL15cXHcrLyxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgICAgfSxcbiAgICAgICAgZXNjYXBlOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcXFxcXCRcInxcXCRbJFwiXS8sXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGFsaWFzOiAnc3ltYm9sJ1xuICAgICAgICB9LFxuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcJCg/Olxcdyt8XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pLyxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBwdW5jdHVhdGlvbjogL15cXCRcXHs/fFxcfSQvLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgaW5zaWRlOiBQcmlzbS5sYW5ndWFnZXMuc2NhbGFcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMuc2NhbGFbJ2NsYXNzLW5hbWUnXVxuICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnNjYWxhWydmdW5jdGlvbiddXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMuc2NhbGFbJ2NvbnN0YW50J11cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JKYXZhIiwic2NhbGEiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwicGF0dGVybiIsImdyZWVkeSIsImFsaWFzIiwic3RyaW5nIiwia2V5d29yZCIsIm51bWJlciIsImJ1aWx0aW4iLCJzeW1ib2wiLCJpbnNlcnRCZWZvcmUiLCJpbnNpZGUiLCJpZCIsImVzY2FwZSIsImludGVycG9sYXRpb24iLCJwdW5jdHVhdGlvbiIsImV4cHJlc3Npb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scala.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scheme.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scheme.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ scheme)\n/* harmony export */ });\n// @ts-nocheck\nscheme.displayName = \"scheme\";\nscheme.aliases = [];\n/** @type {import('../core.js').Syntax} */ function scheme(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.scheme = {\n            // this supports \"normal\" single-line comments:\n            //   ; comment\n            // and (potentially nested) multiline comments:\n            //   #| comment #| nested |# still comment |#\n            // (only 1 level of nesting is supported)\n            comment: /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n            string: {\n                pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true\n            },\n            symbol: {\n                pattern: /'[^()\\[\\]#'\\s]+/,\n                greedy: true\n            },\n            char: {\n                pattern: /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n                greedy: true\n            },\n            \"lambda-parameter\": [\n                // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n                {\n                    pattern: /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n                    lookbehind: true\n                }\n            ],\n            keyword: {\n                pattern: /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            builtin: {\n                // all functions of the base library of R7RS plus some of built-ins of R5Rs\n                pattern: /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            operator: {\n                pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            number: {\n                // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n                //\n                // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n                // <num R>       := <prefix R><complex R>\n                // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n                // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n                // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n                // <ureal R>     := <uint R>(?:\\/<uint R>)?\n                //                | <decimal R>\n                //\n                // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n                // <uint R>      := <digit R>+\n                // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n                // <radix 2>     := #b\n                // <radix 8>     := #o\n                // <radix 10>    := (?:#d)?\n                // <radix 16>    := #x\n                // <digit 2>     := [01]\n                // <digit 8>     := [0-7]\n                // <digit 10>    := \\d\n                // <digit 16>    := [0-9a-f]\n                //\n                // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n                // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n                // pattern:\n                pattern: RegExp(SortedBNF({\n                    \"<ureal dec>\": /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n                    \"<real dec>\": /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n                    \"<imaginary dec>\": /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n                    \"<complex dec>\": /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/.source,\n                    \"<num dec>\": /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n                    \"<ureal box>\": /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n                    \"<real box>\": /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n                    \"<imaginary box>\": /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n                    \"<complex box>\": /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/.source,\n                    \"<num box>\": /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/.source,\n                    \"<number>\": /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/.source\n                }), \"i\"),\n                lookbehind: true\n            },\n            boolean: {\n                pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            function: {\n                pattern: /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true\n            },\n            identifier: {\n                pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n                lookbehind: true,\n                greedy: true\n            },\n            punctuation: /[()\\[\\]']/\n        };\n        /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */ function SortedBNF(grammar) {\n            for(var key in grammar){\n                grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function(key) {\n                    return \"(?:\" + grammar[key].trim() + \")\";\n                });\n            }\n            // return the last item\n            return grammar[key];\n        }\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scheme.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scss.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scss.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ scss)\n/* harmony export */ });\n/* harmony import */ var _css_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./css.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\");\n// @ts-nocheck\n\nscss.displayName = \"scss\";\nscss.aliases = [];\n/** @type {import('../core.js').Syntax} */ function scss(Prism) {\n    Prism.register(_css_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.scss = Prism.languages.extend(\"css\", {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n            lookbehind: true\n        },\n        atrule: {\n            pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n            inside: {\n                rule: /@[\\w-]+/\n            }\n        },\n        // url, compassified\n        url: /(?:[-a-z]+-)?url(?=\\()/i,\n        // CSS selector regex is not appropriate for Sass\n        // since there can be lot more things (var, @ directive, nesting..)\n        // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n        // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n        // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n        // can \"pass\" as a selector- e.g: proper#{$erty})\n        // this one was hard to do, so please be careful if you edit this one :)\n        selector: {\n            // Initial look-ahead is used to prevent matching of blank selectors\n            pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n            inside: {\n                parent: {\n                    pattern: /&/,\n                    alias: \"important\"\n                },\n                placeholder: /%[-\\w]+/,\n                variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n            }\n        },\n        property: {\n            pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n            inside: {\n                variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"scss\", \"atrule\", {\n        keyword: [\n            /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n            {\n                pattern: /( )(?:from|through)(?= )/,\n                lookbehind: true\n            }\n        ]\n    });\n    Prism.languages.insertBefore(\"scss\", \"important\", {\n        // var and interpolated vars\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    });\n    Prism.languages.insertBefore(\"scss\", \"function\", {\n        \"module-modifier\": {\n            pattern: /\\b(?:as|hide|show|with)\\b/i,\n            alias: \"keyword\"\n        },\n        placeholder: {\n            pattern: /%[-\\w]+/,\n            alias: \"selector\"\n        },\n        statement: {\n            pattern: /\\B!(?:default|optional)\\b/i,\n            alias: \"keyword\"\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        null: {\n            pattern: /\\bnull\\b/,\n            alias: \"keyword\"\n        },\n        operator: {\n            pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n            lookbehind: true\n        }\n    });\n    Prism.languages.scss[\"atrule\"].inside.rest = Prism.languages.scss;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNuQ0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCwrQ0FBWUE7SUFDM0JJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxPQUFPO1FBQ25EQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsWUFBWTtRQUNkO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNURyxRQUFRO2dCQUNOQyxNQUFNO1lBRVI7UUFDRjtRQUVBLG9CQUFvQjtRQUNwQkMsS0FBSztRQUNMLGlEQUFpRDtRQUNqRCxtRUFBbUU7UUFDbkUsa0dBQWtHO1FBQ2xHLHVJQUF1STtRQUN2SSxtSUFBbUk7UUFDbkksaURBQWlEO1FBQ2pELHdFQUF3RTtRQUN4RUMsVUFBVTtZQUNSLG9FQUFvRTtZQUNwRU4sU0FDRTtZQUNGRyxRQUFRO2dCQUNOSSxRQUFRO29CQUNOUCxTQUFTO29CQUNUUSxPQUFPO2dCQUNUO2dCQUNBQyxhQUFhO2dCQUNiQyxVQUFVO1lBQ1o7UUFDRjtRQUNBQyxVQUFVO1lBQ1JYLFNBQVM7WUFDVEcsUUFBUTtnQkFDTk8sVUFBVTtZQUNaO1FBQ0Y7SUFDRjtJQUNBZixNQUFNRSxTQUFTLENBQUNlLFlBQVksQ0FBQyxRQUFRLFVBQVU7UUFDN0NDLFNBQVM7WUFDUDtZQUNBO2dCQUNFYixTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7U0FDRDtJQUNIO0lBQ0FOLE1BQU1FLFNBQVMsQ0FBQ2UsWUFBWSxDQUFDLFFBQVEsYUFBYTtRQUNoRCw0QkFBNEI7UUFDNUJGLFVBQVU7SUFDWjtJQUNBZixNQUFNRSxTQUFTLENBQUNlLFlBQVksQ0FBQyxRQUFRLFlBQVk7UUFDL0MsbUJBQW1CO1lBQ2pCWixTQUFTO1lBQ1RRLE9BQU87UUFDVDtRQUNBQyxhQUFhO1lBQ1hULFNBQVM7WUFDVFEsT0FBTztRQUNUO1FBQ0FNLFdBQVc7WUFDVGQsU0FBUztZQUNUUSxPQUFPO1FBQ1Q7UUFDQU8sU0FBUztRQUNUQyxNQUFNO1lBQ0poQixTQUFTO1lBQ1RRLE9BQU87UUFDVDtRQUNBUyxVQUFVO1lBQ1JqQixTQUFTO1lBQ1RDLFlBQVk7UUFDZDtJQUNGO0lBQ0FOLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDLFNBQVMsQ0FBQ1csTUFBTSxDQUFDZSxJQUFJLEdBQUd2QixNQUFNRSxTQUFTLENBQUNMLElBQUk7QUFDbkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc2Nzcy5qcz80ZGI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ3NzIGZyb20gJy4vY3NzLmpzJ1xuc2Nzcy5kaXNwbGF5TmFtZSA9ICdzY3NzJ1xuc2Nzcy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzY3NzKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNzcylcbiAgUHJpc20ubGFuZ3VhZ2VzLnNjc3MgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjc3MnLCB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qP1xcKlxcL3xcXC9cXC8uKikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgYXRydWxlOiB7XG4gICAgICBwYXR0ZXJuOiAvQFtcXHctXSg/OlxcKFteKCldK1xcKXxbXigpXFxzXXxcXHMrKD8hXFxzKSkqPyg/PVxccytbeztdKS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcnVsZTogL0BbXFx3LV0rL1xuICAgICAgICAvLyBTZWUgcmVzdCBiZWxvd1xuICAgICAgfVxuICAgIH0sXG5cbiAgICAvLyB1cmwsIGNvbXBhc3NpZmllZFxuICAgIHVybDogLyg/OlstYS16XSstKT91cmwoPz1cXCgpL2ksXG4gICAgLy8gQ1NTIHNlbGVjdG9yIHJlZ2V4IGlzIG5vdCBhcHByb3ByaWF0ZSBmb3IgU2Fzc1xuICAgIC8vIHNpbmNlIHRoZXJlIGNhbiBiZSBsb3QgbW9yZSB0aGluZ3MgKHZhciwgQCBkaXJlY3RpdmUsIG5lc3RpbmcuLilcbiAgICAvLyBhIHNlbGVjdG9yIG11c3Qgc3RhcnQgYXQgdGhlIGVuZCBvZiBhIHByb3BlcnR5IG9yIGFmdGVyIGEgYnJhY2UgKGVuZCBvZiBvdGhlciBydWxlcyBvciBuZXN0aW5nKVxuICAgIC8vIGl0IGNhbiBjb250YWluIHNvbWUgY2hhcmFjdGVycyB0aGF0IGFyZW4ndCB1c2VkIGZvciBkZWZpbmluZyBydWxlcyBvciBlbmQgb2Ygc2VsZWN0b3IsICYgKHBhcmVudCBzZWxlY3RvciksIG9yIGludGVycG9sYXRlZCB2YXJpYWJsZVxuICAgIC8vIHRoZSBlbmQgb2YgYSBzZWxlY3RvciBpcyBmb3VuZCB3aGVuIHRoZXJlIGlzIG5vIHJ1bGVzIGluIGl0ICgge30gb3Ige1xcc30pIG9yIGlmIHRoZXJlIGlzIGEgcHJvcGVydHkgKGJlY2F1c2UgYW4gaW50ZXJwb2xhdGVkIHZhclxuICAgIC8vIGNhbiBcInBhc3NcIiBhcyBhIHNlbGVjdG9yLSBlLmc6IHByb3BlciN7JGVydHl9KVxuICAgIC8vIHRoaXMgb25lIHdhcyBoYXJkIHRvIGRvLCBzbyBwbGVhc2UgYmUgY2FyZWZ1bCBpZiB5b3UgZWRpdCB0aGlzIG9uZSA6KVxuICAgIHNlbGVjdG9yOiB7XG4gICAgICAvLyBJbml0aWFsIGxvb2stYWhlYWQgaXMgdXNlZCB0byBwcmV2ZW50IG1hdGNoaW5nIG9mIGJsYW5rIHNlbGVjdG9yc1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyg/PVxcUylbXkA7e30oKV0/KD86W15AO3t9KClcXHNdfFxccysoPyFcXHMpfCNcXHtcXCRbLVxcd10rXFx9KSsoPz1cXHMqXFx7KD86XFx9fFxcc3xbXn1dW146e31dKls6e11bXn1dKSkvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHBhcmVudDoge1xuICAgICAgICAgIHBhdHRlcm46IC8mLyxcbiAgICAgICAgICBhbGlhczogJ2ltcG9ydGFudCdcbiAgICAgICAgfSxcbiAgICAgICAgcGxhY2Vob2xkZXI6IC8lWy1cXHddKy8sXG4gICAgICAgIHZhcmlhYmxlOiAvXFwkWy1cXHddK3wjXFx7XFwkWy1cXHddK1xcfS9cbiAgICAgIH1cbiAgICB9LFxuICAgIHByb3BlcnR5OiB7XG4gICAgICBwYXR0ZXJuOiAvKD86Wy1cXHddfFxcJFstXFx3XXwjXFx7XFwkWy1cXHddK1xcfSkrKD89XFxzKjopLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB2YXJpYWJsZTogL1xcJFstXFx3XSt8I1xce1xcJFstXFx3XStcXH0vXG4gICAgICB9XG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzY3NzJywgJ2F0cnVsZScsIHtcbiAgICBrZXl3b3JkOiBbXG4gICAgICAvQCg/OmNvbnRlbnR8ZGVidWd8ZWFjaHxlbHNlKD86IGlmKT98ZXh0ZW5kfGZvcnxmb3J3YXJkfGZ1bmN0aW9ufGlmfGltcG9ydHxpbmNsdWRlfG1peGlufHJldHVybnx1c2V8d2Fybnx3aGlsZSlcXGIvaSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyggKSg/OmZyb218dGhyb3VnaCkoPz0gKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH1cbiAgICBdXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Njc3MnLCAnaW1wb3J0YW50Jywge1xuICAgIC8vIHZhciBhbmQgaW50ZXJwb2xhdGVkIHZhcnNcbiAgICB2YXJpYWJsZTogL1xcJFstXFx3XSt8I1xce1xcJFstXFx3XStcXH0vXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3Njc3MnLCAnZnVuY3Rpb24nLCB7XG4gICAgJ21vZHVsZS1tb2RpZmllcic6IHtcbiAgICAgIHBhdHRlcm46IC9cXGIoPzphc3xoaWRlfHNob3d8d2l0aClcXGIvaSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHBsYWNlaG9sZGVyOiB7XG4gICAgICBwYXR0ZXJuOiAvJVstXFx3XSsvLFxuICAgICAgYWxpYXM6ICdzZWxlY3RvcidcbiAgICB9LFxuICAgIHN0YXRlbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcQiEoPzpkZWZhdWx0fG9wdGlvbmFsKVxcYi9pLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICBudWxsOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxibnVsbFxcYi8sXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBvcGVyYXRvcjoge1xuICAgICAgcGF0dGVybjogLyhcXHMpKD86Wy0rKlxcLyVdfFs9IV09fDw9P3w+PT98YW5kfG5vdHxvcikoPz1cXHMpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9XG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5zY3NzWydhdHJ1bGUnXS5pbnNpZGUucmVzdCA9IFByaXNtLmxhbmd1YWdlcy5zY3NzXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ3NzIiwic2NzcyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJhdHJ1bGUiLCJpbnNpZGUiLCJydWxlIiwidXJsIiwic2VsZWN0b3IiLCJwYXJlbnQiLCJhbGlhcyIsInBsYWNlaG9sZGVyIiwidmFyaWFibGUiLCJwcm9wZXJ0eSIsImluc2VydEJlZm9yZSIsImtleXdvcmQiLCJzdGF0ZW1lbnQiLCJib29sZWFuIiwibnVsbCIsIm9wZXJhdG9yIiwicmVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scss.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/shell-session.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/shell-session.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ shellSession)\n/* harmony export */ });\n/* harmony import */ var _bash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bash.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bash.js\");\n// @ts-nocheck\n\nshellSession.displayName = \"shell-session\";\nshellSession.aliases = [\n    \"sh-session\",\n    \"shellsession\"\n];\n/** @type {import('../core.js').Syntax} */ function shellSession(Prism) {\n    Prism.register(_bash_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        // CAREFUL!\n        // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n        var strings = [\n            // normal string\n            /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n            /'[^']*'/.source,\n            /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source,\n            // here doc\n            // 2 capturing groups\n            /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n        ].join(\"|\");\n        Prism.languages[\"shell-session\"] = {\n            command: {\n                pattern: RegExp(// user info\n                /^/.source + \"(?:\" + // <user> \":\" ( <path> )?\n                (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/.source + \"|\" + // <path>\n                // Since the path pattern is quite general, we will require it to start with a special character to\n                // prevent false positives.\n                /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) + \")?\" + // shell symbol\n                /[$#%](?=\\s)/.source + // bash command\n                /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(/<<str>>/g, function() {\n                    return strings;\n                }), \"m\"),\n                greedy: true,\n                inside: {\n                    info: {\n                        // foo@bar:~/files$ exit\n                        // foo@bar$ exit\n                        // ~/files$ exit\n                        pattern: /^[^#$%]+/,\n                        alias: \"punctuation\",\n                        inside: {\n                            user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n                            punctuation: /:/,\n                            path: /[\\s\\S]+/\n                        }\n                    },\n                    bash: {\n                        pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n                        lookbehind: true,\n                        alias: \"language-bash\",\n                        inside: Prism.languages.bash\n                    },\n                    \"shell-symbol\": {\n                        pattern: /^[$#%]/,\n                        alias: \"important\"\n                    }\n                }\n            },\n            output: /.(?:.*(?:[\\r\\n]|.$))*/\n        };\n        Prism.languages[\"sh-session\"] = Prism.languages[\"shellsession\"] = Prism.languages[\"shell-session\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zaGVsbC1zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN1QjtBQUNyQ0MsYUFBYUMsV0FBVyxHQUFHO0FBQzNCRCxhQUFhRSxPQUFPLEdBQUc7SUFBQztJQUFjO0NBQWU7QUFFckQsd0NBQXdDLEdBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7SUFDeENBLE1BQU1DLFFBQVEsQ0FBQ0wsZ0RBQWFBO0lBQzFCLFVBQVVJLEtBQUs7UUFDZixXQUFXO1FBQ1gsdUdBQXVHO1FBRXZHLElBQUlFLFVBQVU7WUFDWixnQkFBZ0I7WUFDaEIsd0RBQXdEQyxNQUFNO1lBQzlELFVBQVVBLE1BQU07WUFDaEIsMkJBQTJCQSxNQUFNO1lBQ2pDLFdBQVc7WUFDWCxxQkFBcUI7WUFDckIsMENBQTBDQSxNQUFNO1NBQ2pELENBQUNDLElBQUksQ0FBQztRQUNQSixNQUFNSyxTQUFTLENBQUMsZ0JBQWdCLEdBQUc7WUFDakNDLFNBQVM7Z0JBQ1BDLFNBQVNDLE9BQ1AsWUFBWTtnQkFDWixJQUFJTCxNQUFNLEdBQ1IsUUFDQSx5QkFBeUI7Z0JBQ3hCLG1FQUNFQSxNQUFNLEdBQ1AsTUFDQSxTQUFTO2dCQUNULG1HQUFtRztnQkFDbkcsMkJBQTJCO2dCQUMzQiwrQkFBK0JBLE1BQU0sSUFDdkMsT0FDQSxlQUFlO2dCQUNmLGNBQWNBLE1BQU0sR0FDcEIsZUFBZTtnQkFDZixxRkFBcUZBLE1BQU0sQ0FBQ00sT0FBTyxDQUNqRyxZQUNBO29CQUNFLE9BQU9QO2dCQUNULElBRUo7Z0JBRUZRLFFBQVE7Z0JBQ1JDLFFBQVE7b0JBQ05DLE1BQU07d0JBQ0osd0JBQXdCO3dCQUN4QixnQkFBZ0I7d0JBQ2hCLGdCQUFnQjt3QkFDaEJMLFNBQVM7d0JBQ1RNLE9BQU87d0JBQ1BGLFFBQVE7NEJBQ05HLE1BQU07NEJBQ05DLGFBQWE7NEJBQ2JDLE1BQU07d0JBQ1I7b0JBQ0Y7b0JBQ0FDLE1BQU07d0JBQ0pWLFNBQVM7d0JBQ1RXLFlBQVk7d0JBQ1pMLE9BQU87d0JBQ1BGLFFBQVFYLE1BQU1LLFNBQVMsQ0FBQ1ksSUFBSTtvQkFDOUI7b0JBQ0EsZ0JBQWdCO3dCQUNkVixTQUFTO3dCQUNUTSxPQUFPO29CQUNUO2dCQUNGO1lBQ0Y7WUFDQU0sUUFBUTtRQUNWO1FBQ0FuQixNQUFNSyxTQUFTLENBQUMsYUFBYSxHQUFHTCxNQUFNSyxTQUFTLENBQUMsZUFBZSxHQUM3REwsTUFBTUssU0FBUyxDQUFDLGdCQUFnQjtJQUNwQyxHQUFHTDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NoZWxsLXNlc3Npb24uanM/YjQxMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckJhc2ggZnJvbSAnLi9iYXNoLmpzJ1xuc2hlbGxTZXNzaW9uLmRpc3BsYXlOYW1lID0gJ3NoZWxsLXNlc3Npb24nXG5zaGVsbFNlc3Npb24uYWxpYXNlcyA9IFsnc2gtc2Vzc2lvbicsICdzaGVsbHNlc3Npb24nXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoZWxsU2Vzc2lvbihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JCYXNoKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8vIENBUkVGVUwhXG4gICAgLy8gVGhlIGZvbGxvd2luZyBwYXR0ZXJucyBhcmUgY29uY2F0ZW5hdGVkLCBzbyB0aGUgZ3JvdXAgcmVmZXJlbmNlZCBieSBhIGJhY2sgcmVmZXJlbmNlIGlzIG5vbi1vYnZpb3VzIVxuXG4gICAgdmFyIHN0cmluZ3MgPSBbXG4gICAgICAvLyBub3JtYWwgc3RyaW5nXG4gICAgICAvXCIoPzpcXFxcW1xcc1xcU118XFwkXFwoW14pXStcXCl8XFwkKD8hXFwoKXxgW15gXStgfFteXCJcXFxcYCRdKSpcIi8uc291cmNlLFxuICAgICAgLydbXiddKicvLnNvdXJjZSxcbiAgICAgIC9cXCQnKD86W14nXFxcXF18XFxcXFtcXHNcXFNdKSonLy5zb3VyY2UsXG4gICAgICAvLyBoZXJlIGRvY1xuICAgICAgLy8gMiBjYXB0dXJpbmcgZ3JvdXBzXG4gICAgICAvPDwtP1xccyooW1wiJ10/KShcXHcrKVxcMVxcc1tcXHNcXFNdKj9bXFxyXFxuXVxcMi8uc291cmNlXG4gICAgXS5qb2luKCd8JylcbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3NoZWxsLXNlc3Npb24nXSA9IHtcbiAgICAgIGNvbW1hbmQ6IHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgIC8vIHVzZXIgaW5mb1xuICAgICAgICAgIC9eLy5zb3VyY2UgK1xuICAgICAgICAgICAgJyg/OicgK1xuICAgICAgICAgICAgLy8gPHVzZXI+IFwiOlwiICggPHBhdGg+ICk/XG4gICAgICAgICAgICAoL1teXFxzQDokIyUqIS9cXFxcXStAW15cXHJcXG5AOiQjJSohL1xcXFxdKyg/OjpbXlxcMC1cXHgxRiQjJSo/XCI8Pjo7fF0rKT8vXG4gICAgICAgICAgICAgIC5zb3VyY2UgK1xuICAgICAgICAgICAgICAnfCcgK1xuICAgICAgICAgICAgICAvLyA8cGF0aD5cbiAgICAgICAgICAgICAgLy8gU2luY2UgdGhlIHBhdGggcGF0dGVybiBpcyBxdWl0ZSBnZW5lcmFsLCB3ZSB3aWxsIHJlcXVpcmUgaXQgdG8gc3RhcnQgd2l0aCBhIHNwZWNpYWwgY2hhcmFjdGVyIHRvXG4gICAgICAgICAgICAgIC8vIHByZXZlbnQgZmFsc2UgcG9zaXRpdmVzLlxuICAgICAgICAgICAgICAvWy9+Ll1bXlxcMC1cXHgxRiQjJSo/XCI8PkA6O3xdKi8uc291cmNlKSArXG4gICAgICAgICAgICAnKT8nICtcbiAgICAgICAgICAgIC8vIHNoZWxsIHN5bWJvbFxuICAgICAgICAgICAgL1skIyVdKD89XFxzKS8uc291cmNlICtcbiAgICAgICAgICAgIC8vIGJhc2ggY29tbWFuZFxuICAgICAgICAgICAgLyg/OlteXFxcXFxcclxcbiBcXHQnXCI8JF18WyBcXHRdKD86KD8hIyl8Iy4qJCl8XFxcXCg/OlteXFxyXXxcXHJcXG4/KXxcXCQoPyEnKXw8KD8hPCl8PDxzdHI+PikrLy5zb3VyY2UucmVwbGFjZShcbiAgICAgICAgICAgICAgLzw8c3RyPj4vZyxcbiAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdHJpbmdzXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgJ20nXG4gICAgICAgICksXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgaW5mbzoge1xuICAgICAgICAgICAgLy8gZm9vQGJhcjp+L2ZpbGVzJCBleGl0XG4gICAgICAgICAgICAvLyBmb29AYmFyJCBleGl0XG4gICAgICAgICAgICAvLyB+L2ZpbGVzJCBleGl0XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXlteIyQlXSsvLFxuICAgICAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbicsXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgdXNlcjogL15bXlxcc0A6JCMlKiEvXFxcXF0rQFteXFxyXFxuQDokIyUqIS9cXFxcXSsvLFxuICAgICAgICAgICAgICBwdW5jdHVhdGlvbjogLzovLFxuICAgICAgICAgICAgICBwYXRoOiAvW1xcc1xcU10rL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgYmFzaDoge1xuICAgICAgICAgICAgcGF0dGVybjogLyheWyQjJV1cXHMqKVxcU1tcXHNcXFNdKi8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgYWxpYXM6ICdsYW5ndWFnZS1iYXNoJyxcbiAgICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLmJhc2hcbiAgICAgICAgICB9LFxuICAgICAgICAgICdzaGVsbC1zeW1ib2wnOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXlskIyVdLyxcbiAgICAgICAgICAgIGFsaWFzOiAnaW1wb3J0YW50J1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIG91dHB1dDogLy4oPzouKig/OltcXHJcXG5dfC4kKSkqL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3NoLXNlc3Npb24nXSA9IFByaXNtLmxhbmd1YWdlc1snc2hlbGxzZXNzaW9uJ10gPVxuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydzaGVsbC1zZXNzaW9uJ11cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQmFzaCIsInNoZWxsU2Vzc2lvbiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJzdHJpbmdzIiwic291cmNlIiwiam9pbiIsImxhbmd1YWdlcyIsImNvbW1hbmQiLCJwYXR0ZXJuIiwiUmVnRXhwIiwicmVwbGFjZSIsImdyZWVkeSIsImluc2lkZSIsImluZm8iLCJhbGlhcyIsInVzZXIiLCJwdW5jdHVhdGlvbiIsInBhdGgiLCJiYXNoIiwibG9va2JlaGluZCIsIm91dHB1dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/shell-session.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smali.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smali.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ smali)\n/* harmony export */ });\n// @ts-nocheck\nsmali.displayName = \"smali\";\nsmali.aliases = [];\n/** @type {import('../core.js').Syntax} */ function smali(Prism) {\n    // Test files for the parser itself:\n    // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n    Prism.languages.smali = {\n        comment: /#.*/,\n        string: {\n            pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n            lookbehind: true,\n            inside: {\n                \"class-name\": {\n                    pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n                    lookbehind: true\n                },\n                namespace: {\n                    pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n                    lookbehind: true,\n                    inside: {\n                        punctuation: /\\//\n                    }\n                },\n                builtin: /^L/\n            }\n        },\n        builtin: [\n            {\n                // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n                pattern: /([();\\[])[BCDFIJSVZ]+/,\n                lookbehind: true\n            },\n            {\n                // e.g. .field mWifiOnUid:I\n                pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n                lookbehind: true\n            }\n        ],\n        keyword: [\n            {\n                pattern: /(\\.end\\s+)[\\w-]+/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n                lookbehind: true\n            }\n        ],\n        function: {\n            pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n            lookbehind: true\n        },\n        field: {\n            pattern: /[\\w$]+(?=:)/,\n            alias: \"variable\"\n        },\n        register: {\n            pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n            lookbehind: true,\n            alias: \"variable\"\n        },\n        boolean: {\n            pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n            lookbehind: true\n        },\n        number: {\n            pattern: /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n            lookbehind: true\n        },\n        label: {\n            pattern: /(:)\\w+/,\n            lookbehind: true,\n            alias: \"property\"\n        },\n        operator: /->|\\.\\.|[\\[=]/,\n        punctuation: /[{}(),;:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zbWFsaS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsY0FBYztBQUNkQSxNQUFNQyxXQUFXLEdBQUc7QUFDcEJELE1BQU1FLE9BQU8sR0FBRyxFQUFFO0FBRWxCLHdDQUF3QyxHQUN6QixTQUFTRixNQUFNRyxLQUFLO0lBQ2pDLG9DQUFvQztJQUNwQyxxRkFBcUY7SUFFckZBLE1BQU1DLFNBQVMsQ0FBQ0osS0FBSyxHQUFHO1FBQ3RCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxjQUFjO1lBQ1pELFNBQ0U7WUFDRkUsWUFBWTtZQUNaQyxRQUFRO2dCQUNOLGNBQWM7b0JBQ1pILFNBQVM7b0JBQ1RFLFlBQVk7Z0JBQ2Q7Z0JBQ0FFLFdBQVc7b0JBQ1RKLFNBQVM7b0JBQ1RFLFlBQVk7b0JBQ1pDLFFBQVE7d0JBQ05FLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0FDLFNBQVM7WUFDWDtRQUNGO1FBQ0FBLFNBQVM7WUFDUDtnQkFDRSxrRkFBa0Y7Z0JBQ2xGTixTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRSwyQkFBMkI7Z0JBQzNCRixTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7U0FDRDtRQUNESyxTQUFTO1lBQ1A7Z0JBQ0VQLFNBQVM7Z0JBQ1RFLFlBQVk7WUFDZDtZQUNBO2dCQUNFRixTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUYsU0FDRTtnQkFDRkUsWUFBWTtZQUNkO1NBQ0Q7UUFDRE0sVUFBVTtZQUNSUixTQUFTO1lBQ1RFLFlBQVk7UUFDZDtRQUNBTyxPQUFPO1lBQ0xULFNBQVM7WUFDVFUsT0FBTztRQUNUO1FBQ0FDLFVBQVU7WUFDUlgsU0FBUztZQUNURSxZQUFZO1lBQ1pRLE9BQU87UUFDVDtRQUNBRSxTQUFTO1lBQ1BaLFNBQVM7WUFDVEUsWUFBWTtRQUNkO1FBQ0FXLFFBQVE7WUFDTmIsU0FDRTtZQUNGRSxZQUFZO1FBQ2Q7UUFDQVksT0FBTztZQUNMZCxTQUFTO1lBQ1RFLFlBQVk7WUFDWlEsT0FBTztRQUNUO1FBQ0FLLFVBQVU7UUFDVlYsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc21hbGkuanM/ZjM2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuc21hbGkuZGlzcGxheU5hbWUgPSAnc21hbGknXG5zbWFsaS5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzbWFsaShQcmlzbSkge1xuICAvLyBUZXN0IGZpbGVzIGZvciB0aGUgcGFyc2VyIGl0c2VsZjpcbiAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0plc3VzRnJla2Uvc21hbGkvdHJlZS9tYXN0ZXIvc21hbGkvc3JjL3Rlc3QvcmVzb3VyY2VzL0xleGVyVGVzdFxuXG4gIFByaXNtLmxhbmd1YWdlcy5zbWFsaSA9IHtcbiAgICBjb21tZW50OiAvIy4qLyxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXFxyXFxuXFxcXFwiXXxcXFxcLikqXCJ8Jyg/OlteXFxyXFxuXFxcXCddfFxcXFwoPzoufHVbXFxkYS1mQS1GXXs0fSkpJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhefFteTF0pTCg/Oig/Olxcdyt8YFteYFxcclxcbl0qYClcXC8pKig/OltcXHckXSt8YFteYFxcclxcbl0qYCkoPz1cXHMqOykvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKF5MfFxcLykoPzpbXFx3JF0rfGBbXmBcXHJcXG5dKmApJC8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBuYW1lc3BhY2U6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXihMKSg/Oig/Olxcdyt8YFteYFxcclxcbl0qYClcXC8pKy8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwvL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYnVpbHRpbjogL15ML1xuICAgICAgfVxuICAgIH0sXG4gICAgYnVpbHRpbjogW1xuICAgICAge1xuICAgICAgICAvLyBSZWZlcmVuY2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9KZXN1c0ZyZWtlL3NtYWxpL3dpa2kvVHlwZXNNZXRob2RzQW5kRmllbGRzI3R5cGVzXG4gICAgICAgIHBhdHRlcm46IC8oWygpO1xcW10pW0JDREZJSlNWWl0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgLy8gZS5nLiAuZmllbGQgbVdpZmlPblVpZDpJXG4gICAgICAgIHBhdHRlcm46IC8oW1xcdyQ+XTopW0JDREZJSlNWWl0vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXFwuZW5kXFxzKylbXFx3LV0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3Li1dKVxcLig/IVxcZClbXFx3LV0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKF58W15cXHcuLV0pKD86YWJzdHJhY3R8YW5ub3RhdGlvbnxicmlkZ2V8Y29uc3RydWN0b3J8ZW51bXxmaW5hbHxpbnRlcmZhY2V8cHJpdmF0ZXxwcm90ZWN0ZWR8cHVibGljfHJ1bnRpbWV8c3RhdGljfHN5bnRoZXRpY3xzeXN0ZW18dHJhbnNpZW50KSg/IVtcXHcuLV0pLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcdy4tXSkoPzpcXHcrfDxbXFx3JC1dKz4pKD89XFwoKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBmaWVsZDoge1xuICAgICAgcGF0dGVybjogL1tcXHckXSsoPz06KS8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgcmVnaXN0ZXI6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcdy4tXSlbdnBdXFxkKD8hW1xcdy4tXSkvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgfSxcbiAgICBib29sZWFuOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXHcuLV0pKD86ZmFsc2V8dHJ1ZSkoPyFbXFx3Li1dKS8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBudW1iZXI6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXnxbXi9cXHcuLV0pLT8oPzpOQU58SU5GSU5JVFl8MHgoPzpbXFxkQS1GXSsoPzpcXC5bXFxkQS1GXSopP3xcXC5bXFxkQS1GXSspKD86cFsrLV0/W1xcZEEtRl0rKT98KD86XFxkKyg/OlxcLlxcZCopP3xcXC5cXGQrKSg/OmVbKy1dP1xcZCspPylbZGZsc3RdPyg/IVtcXHcuLV0pL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBsYWJlbDoge1xuICAgICAgcGF0dGVybjogLyg6KVxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBvcGVyYXRvcjogLy0+fFxcLlxcLnxbXFxbPV0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9KCksOzpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsic21hbGkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsImluc2lkZSIsIm5hbWVzcGFjZSIsInB1bmN0dWF0aW9uIiwiYnVpbHRpbiIsImtleXdvcmQiLCJmdW5jdGlvbiIsImZpZWxkIiwiYWxpYXMiLCJyZWdpc3RlciIsImJvb2xlYW4iLCJudW1iZXIiLCJsYWJlbCIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smali.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smalltalk.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smalltalk.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ smalltalk)\n/* harmony export */ });\n// @ts-nocheck\nsmalltalk.displayName = \"smalltalk\";\nsmalltalk.aliases = [];\n/** @type {import('../core.js').Syntax} */ function smalltalk(Prism) {\n    Prism.languages.smalltalk = {\n        comment: {\n            pattern: /\"(?:\"\"|[^\"])*\"/,\n            greedy: true\n        },\n        char: {\n            pattern: /\\$./,\n            greedy: true\n        },\n        string: {\n            pattern: /'(?:''|[^'])*'/,\n            greedy: true\n        },\n        symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n        \"block-arguments\": {\n            pattern: /(\\[\\s*):[^\\[|]*\\|/,\n            lookbehind: true,\n            inside: {\n                variable: /:[\\da-z]+/i,\n                punctuation: /\\|/\n            }\n        },\n        \"temporary-variables\": {\n            pattern: /\\|[^|]+\\|/,\n            inside: {\n                variable: /[\\da-z]+/i,\n                punctuation: /\\|/\n            }\n        },\n        keyword: /\\b(?:new|nil|self|super)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: [\n            /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n            /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n        ],\n        operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n        punctuation: /[.;:?\\[\\](){}]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zbWFsbHRhbGsuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsVUFBVUMsV0FBVyxHQUFHO0FBQ3hCRCxVQUFVRSxPQUFPLEdBQUcsRUFBRTtBQUV0Qix3Q0FBd0MsR0FDekIsU0FBU0YsVUFBVUcsS0FBSztJQUNyQ0EsTUFBTUMsU0FBUyxDQUFDSixTQUFTLEdBQUc7UUFDMUJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsTUFBTTtZQUNKRixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxRQUFRO1lBQ05ILFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FHLFFBQVE7UUFDUixtQkFBbUI7WUFDakJKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBLHVCQUF1QjtZQUNyQlIsU0FBUztZQUNUTSxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsUUFBUTtZQUNOO1lBQ0E7U0FDRDtRQUNEQyxVQUFVO1FBQ1ZKLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NtYWxsdGFsay5qcz81MzcyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5zbWFsbHRhbGsuZGlzcGxheU5hbWUgPSAnc21hbGx0YWxrJ1xuc21hbGx0YWxrLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNtYWxsdGFsayhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMuc21hbGx0YWxrID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlwiXCJ8W15cIl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogL1xcJC4vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8nKD86Jyd8W14nXSkqJy8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN5bWJvbDogLyNbXFxkYS16XSt8Iyg/Oi18KFsrXFwvXFxcXCp+PD49QCV8Jj8hXSlcXDE/KXwjKD89XFwoKS9pLFxuICAgICdibG9jay1hcmd1bWVudHMnOiB7XG4gICAgICBwYXR0ZXJuOiAvKFxcW1xccyopOlteXFxbfF0qXFx8LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgdmFyaWFibGU6IC86W1xcZGEtel0rL2ksXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFx8L1xuICAgICAgfVxuICAgIH0sXG4gICAgJ3RlbXBvcmFyeS12YXJpYWJsZXMnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFx8W158XStcXHwvLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHZhcmlhYmxlOiAvW1xcZGEtel0rL2ksXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXFx8L1xuICAgICAgfVxuICAgIH0sXG4gICAga2V5d29yZDogL1xcYig/Om5ld3xuaWx8c2VsZnxzdXBlcilcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiBbXG4gICAgICAvXFxkK3ItP1tcXGRBLVpdKyg/OlxcLltcXGRBLVpdKyk/KD86ZS0/XFxkKyk/LyxcbiAgICAgIC9cXGJcXGQrKD86XFwuXFxkKyk/KD86ZS0/XFxkKyk/L1xuICAgIF0sXG4gICAgb3BlcmF0b3I6IC9bPD1dPT98Oj18flt+PV18XFwvXFwvP3xcXFxcXFxcXHw+Wz49XT98WyFeK1xcLSomfCxAXS8sXG4gICAgcHVuY3R1YXRpb246IC9bLjs6P1xcW1xcXSgpe31dL1xuICB9XG59XG4iXSwibmFtZXMiOlsic21hbGx0YWxrIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImdyZWVkeSIsImNoYXIiLCJzdHJpbmciLCJzeW1ib2wiLCJsb29rYmVoaW5kIiwiaW5zaWRlIiwidmFyaWFibGUiLCJwdW5jdHVhdGlvbiIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smalltalk.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smarty.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smarty.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ smarty)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\nsmarty.displayName = \"smarty\";\nsmarty.aliases = [];\n/** @type {import('../core.js').Syntax} */ function smarty(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.smarty = {\n            comment: {\n                pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n                greedy: true\n            },\n            \"embedded-php\": {\n                pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n                greedy: true,\n                inside: {\n                    smarty: {\n                        pattern: /^\\{php\\}|\\{\\/php\\}$/,\n                        inside: null // see below\n                    },\n                    php: {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"language-php\",\n                        inside: Prism.languages.php\n                    }\n                }\n            },\n            string: [\n                {\n                    pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n                    greedy: true,\n                    inside: {\n                        interpolation: {\n                            pattern: /\\{[^{}]*\\}|`[^`]*`/,\n                            inside: {\n                                \"interpolation-punctuation\": {\n                                    pattern: /^[{`]|[`}]$/,\n                                    alias: \"punctuation\"\n                                },\n                                expression: {\n                                    pattern: /[\\s\\S]+/,\n                                    inside: null // see below\n                                }\n                            }\n                        },\n                        variable: /\\$\\w+/\n                    }\n                },\n                {\n                    pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n                    greedy: true\n                }\n            ],\n            keyword: {\n                pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n                lookbehind: true,\n                greedy: true\n            },\n            delimiter: {\n                pattern: /^\\{\\/?|\\}$/,\n                greedy: true,\n                alias: \"punctuation\"\n            },\n            number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n            variable: [\n                /\\$(?!\\d)\\w+/,\n                /#(?!\\d)\\w+#/,\n                {\n                    pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n                    lookbehind: true\n                },\n                {\n                    pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n                    lookbehind: true\n                }\n            ],\n            function: {\n                pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n                lookbehind: true\n            },\n            \"attr-name\": /\\b[a-z_]\\w*(?=\\s*=)/i,\n            boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n            punctuation: /[\\[\\](){}.,:`]|->/,\n            operator: [\n                /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n                /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n                /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n            ]\n        };\n        Prism.languages.smarty[\"embedded-php\"].inside.smarty.inside = Prism.languages.smarty;\n        Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside = Prism.languages.smarty;\n        var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/;\n        var smartyPattern = RegExp(// comments\n        /\\{\\*[\\s\\S]*?\\*\\}/.source + \"|\" + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source + \"|\" + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(/<str>/g, function() {\n            return string.source;\n        }), \"g\");\n        // Tokenize all inline Smarty expressions\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var smartyLiteralStart = \"{literal}\";\n            var smartyLiteralEnd = \"{/literal}\";\n            var smartyLiteralMode = false;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"smarty\", smartyPattern, function(match) {\n                // Smarty tags inside {literal} block are ignored\n                if (match === smartyLiteralEnd) {\n                    smartyLiteralMode = false;\n                }\n                if (!smartyLiteralMode) {\n                    if (match === smartyLiteralStart) {\n                        smartyLiteralMode = true;\n                    }\n                    return true;\n                }\n                return false;\n            });\n        });\n        // Re-insert the tokens after tokenizing\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"smarty\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smarty.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sml.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sml.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sml)\n/* harmony export */ });\n// @ts-nocheck\nsml.displayName = \"sml\";\nsml.aliases = [\n    \"smlnj\"\n];\n/** @type {import('../core.js').Syntax} */ function sml(Prism) {\n    // https://smlfamily.github.io/sml97-defn.pdf\n    // https://people.mpi-sws.org/~rossberg/sml.html\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i;\n        Prism.languages.sml = {\n            // allow one level of nesting\n            comment: /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n            string: {\n                pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n                greedy: true\n            },\n            \"class-name\": [\n                {\n                    // This is only an approximation since the real grammar is context-free\n                    //\n                    // Why the main loop so complex?\n                    // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n                    // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n                    // followed by a long identifier.\n                    pattern: RegExp(/((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source.replace(/<NOT-LAST>/g, function() {\n                        return /\\s*(?:[*,]|->)/.source;\n                    }).replace(/<TERMINAL>/g, function() {\n                        return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/.source;\n                    }).replace(/<LONG-ID>/g, function() {\n                        return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source;\n                    }).replace(/<KEYWORD>/g, function() {\n                        return keywords.source;\n                    }), \"i\"),\n                    lookbehind: true,\n                    greedy: true,\n                    inside: null // see below\n                },\n                {\n                    pattern: /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n                    lookbehind: true\n                }\n            ],\n            function: {\n                pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n                lookbehind: true\n            },\n            keyword: keywords,\n            variable: {\n                pattern: /(^|[^\\w'])'[\\w']*/,\n                lookbehind: true\n            },\n            number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n            word: {\n                pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n                alias: \"constant\"\n            },\n            boolean: /\\b(?:false|true)\\b/i,\n            operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n            punctuation: /[(){}\\[\\].:,;]/\n        };\n        Prism.languages.sml[\"class-name\"][0].inside = Prism.languages.sml;\n        Prism.languages.smlnj = Prism.languages.sml;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zbWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFRO0FBRXZCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CLDZDQUE2QztJQUM3QyxnREFBZ0Q7O0lBQzlDLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxXQUNGO1FBQ0ZELE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxHQUFHO1lBQ3BCLDZCQUE2QjtZQUM3Qk0sU0FDRTtZQUNGQyxRQUFRO2dCQUNOQyxTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQSxjQUFjO2dCQUNaO29CQUNFLHVFQUF1RTtvQkFDdkUsRUFBRTtvQkFDRixnQ0FBZ0M7b0JBQ2hDLDJHQUEyRztvQkFDM0csMEdBQTBHO29CQUMxRyxpQ0FBaUM7b0JBQ2pDRCxTQUFTRSxPQUNQLDJIQUEySEMsTUFBTSxDQUM5SEMsT0FBTyxDQUFDLGVBQWU7d0JBQ3RCLE9BQU8saUJBQWlCRCxNQUFNO29CQUNoQyxHQUNDQyxPQUFPLENBQUMsZUFBZTt3QkFDdEIsT0FBTyw2RkFDSkQsTUFBTTtvQkFDWCxHQUNDQyxPQUFPLENBQUMsY0FBYzt3QkFDckIsT0FBTywrQkFBK0JELE1BQU07b0JBQzlDLEdBQ0NDLE9BQU8sQ0FBQyxjQUFjO3dCQUNyQixPQUFPUixTQUFTTyxNQUFNO29CQUN4QixJQUNGO29CQUVGRSxZQUFZO29CQUNaSixRQUFRO29CQUNSSyxRQUFRLEtBQUssWUFBWTtnQkFDM0I7Z0JBQ0E7b0JBQ0VOLFNBQ0U7b0JBQ0ZLLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNERSxVQUFVO2dCQUNSUCxTQUFTO2dCQUNUSyxZQUFZO1lBQ2Q7WUFDQUcsU0FBU1o7WUFDVGEsVUFBVTtnQkFDUlQsU0FBUztnQkFDVEssWUFBWTtZQUNkO1lBQ0FLLFFBQVE7WUFDUkMsTUFBTTtnQkFDSlgsU0FBUztnQkFDVFksT0FBTztZQUNUO1lBQ0FDLFNBQVM7WUFDVEMsVUFBVTtZQUNWQyxhQUFhO1FBQ2Y7UUFDQXBCLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDLGFBQWEsQ0FBQyxFQUFFLENBQUNjLE1BQU0sR0FBR1gsTUFBTUUsU0FBUyxDQUFDTCxHQUFHO1FBQ2pFRyxNQUFNRSxTQUFTLENBQUNtQixLQUFLLEdBQUdyQixNQUFNRSxTQUFTLENBQUNMLEdBQUc7SUFDN0MsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zbWwuanM/YzcxZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuc21sLmRpc3BsYXlOYW1lID0gJ3NtbCdcbnNtbC5hbGlhc2VzID0gWydzbWxuaiddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc21sKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vc21sZmFtaWx5LmdpdGh1Yi5pby9zbWw5Ny1kZWZuLnBkZlxuICAvLyBodHRwczovL3Blb3BsZS5tcGktc3dzLm9yZy9+cm9zc2Jlcmcvc21sLmh0bWxcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIga2V5d29yZHMgPVxuICAgICAgL1xcYig/OmFic3R5cGV8YW5kfGFuZGFsc298YXN8Y2FzZXxkYXRhdHlwZXxkb3xlbHNlfGVuZHxlcXR5cGV8ZXhjZXB0aW9ufGZufGZ1bnxmdW5jdG9yfGhhbmRsZXxpZnxpbnxpbmNsdWRlfGluZml4fGluZml4cnxsZXR8bG9jYWx8bm9uZml4fG9mfG9wfG9wZW58b3JlbHNlfHJhaXNlfHJlY3xzaGFyaW5nfHNpZ3xzaWduYXR1cmV8c3RydWN0fHN0cnVjdHVyZXx0aGVufHR5cGV8dmFsfHdoZXJlfHdoaWxlfHdpdGh8d2l0aHR5cGUpXFxiL2lcbiAgICBQcmlzbS5sYW5ndWFnZXMuc21sID0ge1xuICAgICAgLy8gYWxsb3cgb25lIGxldmVsIG9mIG5lc3RpbmdcbiAgICAgIGNvbW1lbnQ6XG4gICAgICAgIC9cXChcXCooPzpbXiooXXxcXCooPyFcXCkpfFxcKCg/IVxcKil8XFwoXFwqKD86W14qKF18XFwqKD8hXFwpKXxcXCgoPyFcXCopKSpcXCpcXCkpKlxcKlxcKS8sXG4gICAgICBzdHJpbmc6IHtcbiAgICAgICAgcGF0dGVybjogLyM/XCIoPzpbXlwiXFxcXF18XFxcXC4pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgJ2NsYXNzLW5hbWUnOiBbXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBUaGlzIGlzIG9ubHkgYW4gYXBwcm94aW1hdGlvbiBzaW5jZSB0aGUgcmVhbCBncmFtbWFyIGlzIGNvbnRleHQtZnJlZVxuICAgICAgICAgIC8vXG4gICAgICAgICAgLy8gV2h5IHRoZSBtYWluIGxvb3Agc28gY29tcGxleD9cbiAgICAgICAgICAvLyBUaGUgbWFpbiBsb29wIGlzIGFwcHJveGltYXRlbHkgdGhlIHNhbWUgYXMgLyg/OlxccyooPzpbKixdfC0+KVxccyo8VEVSTUlOQUw+KSovIHdoaWNoIGlzLCBvYnZpb3VzbHksIGEgbG90XG4gICAgICAgICAgLy8gc2ltcGxlci4gVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCBpZiBhIGNvbW1hIGlzIHRoZSBsYXN0IGl0ZXJhdGlvbiBvZiB0aGUgbG9vcCwgdGhlbiB0aGUgdGVybWluYWwgbXVzdCBiZVxuICAgICAgICAgIC8vIGZvbGxvd2VkIGJ5IGEgbG9uZyBpZGVudGlmaWVyLlxuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oKD86XnxbXjpdKTpcXHMqKTxURVJNSU5BTD4oPzpcXHMqKD86KD86XFwqfC0+KVxccyo8VEVSTUlOQUw+fCxcXHMqPFRFUk1JTkFMPig/Oig/PTxOT1QtTEFTVD4pfCg/ITxOT1QtTEFTVD4pXFxzKzxMT05HLUlEPikpKSovLnNvdXJjZVxuICAgICAgICAgICAgICAucmVwbGFjZSgvPE5PVC1MQVNUPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC9cXHMqKD86WyosXXwtPikvLnNvdXJjZVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAucmVwbGFjZSgvPFRFUk1JTkFMPi9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIC8oPzonW1xcdyddKnw8TE9ORy1JRD58XFwoKD86W14oKV18XFwoW14oKV0qXFwpKSpcXCl8XFx7KD86W157fV18XFx7W157fV0qXFx9KSpcXH0pKD86XFxzKzxMT05HLUlEPikqL1xuICAgICAgICAgICAgICAgICAgLnNvdXJjZVxuICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAucmVwbGFjZSgvPExPTkctSUQ+L2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gLyg/ITxLRVlXT1JEPilbYS16XFxkX11bXFx3Jy5dKi8uc291cmNlXG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIC5yZXBsYWNlKC88S0VZV09SRD4vZywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBrZXl3b3Jkcy5zb3VyY2VcbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAnaSdcbiAgICAgICAgICApLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogbnVsbCAvLyBzZWUgYmVsb3dcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKCg/Ol58W15cXHcnXSkoPzpkYXRhdHlwZXxleGNlcHRpb258ZnVuY3RvcnxzaWduYXR1cmV8c3RydWN0dXJlfHR5cGUpXFxzKylbYS16X11bXFx3Jy5dKi9pLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGZ1bmN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC8oKD86XnxbXlxcdyddKWZ1blxccyspW2Etel9dW1xcdycuXSovaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFx3J10pJ1tcXHcnXSovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgbnVtYmVyOiAvfj9cXGIoPzpcXGQrKD86XFwuXFxkKyk/KD86ZX4/XFxkKyk/fDB4W1xcZGEtZl0rKVxcYi9pLFxuICAgICAgd29yZDoge1xuICAgICAgICBwYXR0ZXJuOiAvXFxiMHcoPzpcXGQrfHhbXFxkYS1mXSspXFxiL2ksXG4gICAgICAgIGFsaWFzOiAnY29uc3RhbnQnXG4gICAgICB9LFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiL2ksXG4gICAgICBvcGVyYXRvcjogL1xcLlxcLlxcLnw6Wz49Ol18PT4/fC0+fFs8Pl09P3xbIStcXC0qL14jfEB+XS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9XFxbXFxdLjosO10vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5zbWxbJ2NsYXNzLW5hbWUnXVswXS5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuc21sXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnNtbG5qID0gUHJpc20ubGFuZ3VhZ2VzLnNtbFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJzbWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImtleXdvcmRzIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJSZWdFeHAiLCJzb3VyY2UiLCJyZXBsYWNlIiwibG9va2JlaGluZCIsImluc2lkZSIsImZ1bmN0aW9uIiwia2V5d29yZCIsInZhcmlhYmxlIiwibnVtYmVyIiwid29yZCIsImFsaWFzIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJzbWxuaiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solidity.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solidity.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ solidity)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nsolidity.displayName = \"solidity\";\nsolidity.aliases = [\n    \"sol\"\n];\n/** @type {import('../core.js').Syntax} */ function solidity(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.solidity = Prism.languages.extend(\"clike\", {\n        \"class-name\": {\n            pattern: /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n        operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n    });\n    Prism.languages.insertBefore(\"solidity\", \"keyword\", {\n        builtin: /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n    });\n    Prism.languages.insertBefore(\"solidity\", \"number\", {\n        version: {\n            pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n            lookbehind: true,\n            alias: \"number\"\n        }\n    });\n    Prism.languages.sol = Prism.languages.solidity;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zb2xpZGl0eS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHO0lBQUM7Q0FBTTtBQUUxQix3Q0FBd0MsR0FDekIsU0FBU0YsU0FBU0csS0FBSztJQUNwQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsUUFBUSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3pELGNBQWM7WUFDWkMsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQUMsU0FDRTtRQUNGQyxVQUFVO0lBQ1o7SUFDQVAsTUFBTUUsU0FBUyxDQUFDTSxZQUFZLENBQUMsWUFBWSxXQUFXO1FBQ2xEQyxTQUNFO0lBQ0o7SUFDQVQsTUFBTUUsU0FBUyxDQUFDTSxZQUFZLENBQUMsWUFBWSxVQUFVO1FBQ2pERSxTQUFTO1lBQ1BOLFNBQVM7WUFDVEMsWUFBWTtZQUNaTSxPQUFPO1FBQ1Q7SUFDRjtJQUNBWCxNQUFNRSxTQUFTLENBQUNVLEdBQUcsR0FBR1osTUFBTUUsU0FBUyxDQUFDTCxRQUFRO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NvbGlkaXR5LmpzPzFjNDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDbGlrZSBmcm9tICcuL2NsaWtlLmpzJ1xuc29saWRpdHkuZGlzcGxheU5hbWUgPSAnc29saWRpdHknXG5zb2xpZGl0eS5hbGlhc2VzID0gWydzb2wnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNvbGlkaXR5KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5sYW5ndWFnZXMuc29saWRpdHkgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiKD86Y29udHJhY3R8ZW51bXxpbnRlcmZhY2V8bGlicmFyeXxuZXd8c3RydWN0fHVzaW5nKVxccyspKD8hXFxkKVtcXHckXSsvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpffGFub255bW91c3xhc3xhc3NlbWJseXxhc3NlcnR8YnJlYWt8Y2FsbGRhdGF8Y2FzZXxjb25zdGFudHxjb25zdHJ1Y3Rvcnxjb250aW51ZXxjb250cmFjdHxkZWZhdWx0fGRlbGV0ZXxkb3xlbHNlfGVtaXR8ZW51bXxldmVudHxleHRlcm5hbHxmb3J8ZnJvbXxmdW5jdGlvbnxpZnxpbXBvcnR8aW5kZXhlZHxpbmhlcml0ZWR8aW50ZXJmYWNlfGludGVybmFsfGlzfGxldHxsaWJyYXJ5fG1hcHBpbmd8bWVtb3J5fG1vZGlmaWVyfG5ld3xwYXlhYmxlfHByYWdtYXxwcml2YXRlfHB1YmxpY3xwdXJlfHJlcXVpcmV8cmV0dXJucz98cmV2ZXJ0fHNlbGZkZXN0cnVjdHxzb2xpZGl0eXxzdG9yYWdlfHN0cnVjdHxzdWljaWRlfHN3aXRjaHx0aGlzfHRocm93fHVzaW5nfHZhcnx2aWV3fHdoaWxlKVxcYi8sXG4gICAgb3BlcmF0b3I6IC89PnwtPnw6PXw9OnxcXCpcXCp8XFwrXFwrfC0tfFxcfFxcfHwmJnw8PD0/fD4+PT98Wy0rKi8lXiZ8PD4hPV09P3xbfj9dL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzb2xpZGl0eScsICdrZXl3b3JkJywge1xuICAgIGJ1aWx0aW46XG4gICAgICAvXFxiKD86YWRkcmVzc3xib29sfGJ5dGV8dT9pbnQoPzo4fDE2fDI0fDMyfDQwfDQ4fDU2fDY0fDcyfDgwfDg4fDk2fDEwNHwxMTJ8MTIwfDEyOHwxMzZ8MTQ0fDE1MnwxNjB8MTY4fDE3NnwxODR8MTkyfDIwMHwyMDh8MjE2fDIyNHwyMzJ8MjQwfDI0OHwyNTYpP3xzdHJpbmd8Ynl0ZXMoPzpbMS05XXxbMTJdXFxkfDNbMC0yXSk/KVxcYi9cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnc29saWRpdHknLCAnbnVtYmVyJywge1xuICAgIHZlcnNpb246IHtcbiAgICAgIHBhdHRlcm46IC8oWzw+XT0/fFxcXilcXGQrXFwuXFxkK1xcLlxcZCtcXGIvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnNvbCA9IFByaXNtLmxhbmd1YWdlcy5zb2xpZGl0eVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwic29saWRpdHkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJidWlsdGluIiwidmVyc2lvbiIsImFsaWFzIiwic29sIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solidity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solution-file.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solution-file.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ solutionFile)\n/* harmony export */ });\n// @ts-nocheck\nsolutionFile.displayName = \"solution-file\";\nsolutionFile.aliases = [\n    \"sln\"\n];\n/** @type {import('../core.js').Syntax} */ function solutionFile(Prism) {\n    ;\n    (function(Prism) {\n        var guid = {\n            // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n            pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n            alias: \"constant\",\n            inside: {\n                punctuation: /[{}]/\n            }\n        };\n        Prism.languages[\"solution-file\"] = {\n            comment: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n                greedy: true,\n                inside: {\n                    guid: guid\n                }\n            },\n            object: {\n                // Foo\n                //   Bar(\"abs\") = 9\n                //   EndBar\n                //   Prop = TRUE\n                // EndFoo\n                pattern: /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n                lookbehind: true,\n                greedy: true,\n                alias: \"keyword\"\n            },\n            property: {\n                pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n                lookbehind: true,\n                inside: {\n                    guid: guid\n                }\n            },\n            guid: guid,\n            number: /\\b\\d+(?:\\.\\d+)*\\b/,\n            boolean: /\\b(?:FALSE|TRUE)\\b/,\n            operator: /=/,\n            punctuation: /[(),]/\n        };\n        Prism.languages[\"sln\"] = Prism.languages[\"solution-file\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zb2x1dGlvbi1maWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHO0lBQUM7Q0FBTTtBQUU5Qix3Q0FBd0MsR0FDekIsU0FBU0YsYUFBYUcsS0FBSzs7SUFDdEMsVUFBVUEsS0FBSztRQUNmLElBQUlDLE9BQU87WUFDVCxxRUFBcUU7WUFDckVDLFNBQVM7WUFDVEMsT0FBTztZQUNQQyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBTCxNQUFNTSxTQUFTLENBQUMsZ0JBQWdCLEdBQUc7WUFDakNDLFNBQVM7Z0JBQ1BMLFNBQVM7Z0JBQ1RNLFFBQVE7WUFDVjtZQUNBQyxRQUFRO2dCQUNOUCxTQUFTO2dCQUNUTSxRQUFRO2dCQUNSSixRQUFRO29CQUNOSCxNQUFNQTtnQkFDUjtZQUNGO1lBQ0FTLFFBQVE7Z0JBQ04sTUFBTTtnQkFDTixtQkFBbUI7Z0JBQ25CLFdBQVc7Z0JBQ1gsZ0JBQWdCO2dCQUNoQixTQUFTO2dCQUNUUixTQUNFO2dCQUNGUyxZQUFZO2dCQUNaSCxRQUFRO2dCQUNSTCxPQUFPO1lBQ1Q7WUFDQVMsVUFBVTtnQkFDUlYsU0FBUztnQkFDVFMsWUFBWTtnQkFDWlAsUUFBUTtvQkFDTkgsTUFBTUE7Z0JBQ1I7WUFDRjtZQUNBQSxNQUFNQTtZQUNOWSxRQUFRO1lBQ1JDLFNBQVM7WUFDVEMsVUFBVTtZQUNWVixhQUFhO1FBQ2Y7UUFDQUwsTUFBTU0sU0FBUyxDQUFDLE1BQU0sR0FBR04sTUFBTU0sU0FBUyxDQUFDLGdCQUFnQjtJQUMzRCxHQUFHTjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NvbHV0aW9uLWZpbGUuanM/Y2NmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuc29sdXRpb25GaWxlLmRpc3BsYXlOYW1lID0gJ3NvbHV0aW9uLWZpbGUnXG5zb2x1dGlvbkZpbGUuYWxpYXNlcyA9IFsnc2xuJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzb2x1dGlvbkZpbGUoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgZ3VpZCA9IHtcbiAgICAgIC8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1VuaXZlcnNhbGx5X3VuaXF1ZV9pZGVudGlmaWVyI0Zvcm1hdFxuICAgICAgcGF0dGVybjogL1xce1tcXGRhLWZdezh9LVtcXGRhLWZdezR9LVtcXGRhLWZdezR9LVtcXGRhLWZdezR9LVtcXGRhLWZdezEyfVxcfS9pLFxuICAgICAgYWxpYXM6ICdjb25zdGFudCcsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9be31dL1xuICAgICAgfVxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3NvbHV0aW9uLWZpbGUnXSA9IHtcbiAgICAgIGNvbW1lbnQ6IHtcbiAgICAgICAgcGF0dGVybjogLyMuKi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBndWlkOiBndWlkXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBvYmplY3Q6IHtcbiAgICAgICAgLy8gRm9vXG4gICAgICAgIC8vICAgQmFyKFwiYWJzXCIpID0gOVxuICAgICAgICAvLyAgIEVuZEJhclxuICAgICAgICAvLyAgIFByb3AgPSBUUlVFXG4gICAgICAgIC8vIEVuZEZvb1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9eKFsgXFx0XSopKD86KFtBLVpdXFx3KilcXGIoPz0uKig/Olxcclxcbj98XFxuKSg/OlxcMVsgXFx0XS4qKD86XFxyXFxuP3xcXG4pKSpcXDFFbmRcXDIoPz1bIFxcdF0qJCkpfEVuZFtBLVpdXFx3Kig/PVsgXFx0XSokKSkvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICB9LFxuICAgICAgcHJvcGVydHk6IHtcbiAgICAgICAgcGF0dGVybjogL14oWyBcXHRdKikoPyFcXHMpW15cXHJcXG5cIiM9KCldKlteXFxzXCIjPSgpXSg/PVxccyo9KS9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBndWlkOiBndWlkXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBndWlkOiBndWlkLFxuICAgICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspKlxcYi8sXG4gICAgICBib29sZWFuOiAvXFxiKD86RkFMU0V8VFJVRSlcXGIvLFxuICAgICAgb3BlcmF0b3I6IC89LyxcbiAgICAgIHB1bmN0dWF0aW9uOiAvWygpLF0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlc1snc2xuJ10gPSBQcmlzbS5sYW5ndWFnZXNbJ3NvbHV0aW9uLWZpbGUnXVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJzb2x1dGlvbkZpbGUiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImd1aWQiLCJwYXR0ZXJuIiwiYWxpYXMiLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJncmVlZHkiLCJzdHJpbmciLCJvYmplY3QiLCJsb29rYmVoaW5kIiwicHJvcGVydHkiLCJudW1iZXIiLCJib29sZWFuIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solution-file.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/soy.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/soy.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ soy)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\nsoy.displayName = \"soy\";\nsoy.aliases = [];\n/** @type {import('../core.js').Syntax} */ function soy(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n        var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;\n        Prism.languages.soy = {\n            comment: [\n                /\\/\\*[\\s\\S]*?\\*\\//,\n                {\n                    pattern: /(\\s)\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            \"command-arg\": {\n                pattern: /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n                lookbehind: true,\n                alias: \"string\",\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            parameter: {\n                pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n                lookbehind: true,\n                alias: \"variable\"\n            },\n            keyword: [\n                {\n                    pattern: /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n                    lookbehind: true\n                },\n                /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n            ],\n            delimiter: {\n                pattern: /^\\{+\\/?|\\/?\\}+$/,\n                alias: \"punctuation\"\n            },\n            property: /\\w+(?==)/,\n            variable: {\n                pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n                inside: {\n                    string: {\n                        pattern: stringPattern,\n                        greedy: true\n                    },\n                    number: numberPattern,\n                    punctuation: /[\\[\\].?]/\n                }\n            },\n            string: {\n                pattern: stringPattern,\n                greedy: true\n            },\n            function: [\n                /\\w+(?=\\()/,\n                {\n                    pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n                    lookbehind: true\n                }\n            ],\n            boolean: /\\b(?:false|true)\\b/,\n            number: numberPattern,\n            operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n            punctuation: /[{}()\\[\\]|.,:]/\n        };\n        // Tokenize all inline Soy expressions\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;\n            var soyLitteralStart = \"{literal}\";\n            var soyLitteralEnd = \"{/literal}\";\n            var soyLitteralMode = false;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"soy\", soyPattern, function(match) {\n                // Soy tags inside {literal} block are ignored\n                if (match === soyLitteralEnd) {\n                    soyLitteralMode = false;\n                }\n                if (!soyLitteralMode) {\n                    if (match === soyLitteralStart) {\n                        soyLitteralMode = true;\n                    }\n                    return true;\n                }\n                return false;\n            });\n        });\n        // Re-insert the tokens after tokenizing\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"soy\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zb3kuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ2dEO0FBQzlEQyxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRyxFQUFFO0FBRWhCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxRQUFRLENBQUNMLDZEQUF5QkE7SUFDdEMsVUFBVUksS0FBSztRQUNmLElBQUlFLGdCQUFnQjtRQUNwQixJQUFJQyxnQkFBZ0I7UUFDcEJILE1BQU1JLFNBQVMsQ0FBQ1AsR0FBRyxHQUFHO1lBQ3BCUSxTQUFTO2dCQUNQO2dCQUNBO29CQUNFQyxTQUFTO29CQUNUQyxZQUFZO29CQUNaQyxRQUFRO2dCQUNWO2FBQ0Q7WUFDRCxlQUFlO2dCQUNiRixTQUNFO2dCQUNGQyxZQUFZO2dCQUNaRSxPQUFPO2dCQUNQQyxRQUFRO29CQUNOQyxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUMsV0FBVztnQkFDVE4sU0FBUztnQkFDVEMsWUFBWTtnQkFDWkUsT0FBTztZQUNUO1lBQ0FJLFNBQVM7Z0JBQ1A7b0JBQ0VQLFNBQ0U7b0JBQ0ZDLFlBQVk7Z0JBQ2Q7Z0JBQ0E7YUFDRDtZQUNETyxXQUFXO2dCQUNUUixTQUFTO2dCQUNURyxPQUFPO1lBQ1Q7WUFDQU0sVUFBVTtZQUNWQyxVQUFVO2dCQUNSVixTQUFTO2dCQUNUSSxRQUFRO29CQUNOTyxRQUFRO3dCQUNOWCxTQUFTSjt3QkFDVE0sUUFBUTtvQkFDVjtvQkFDQVUsUUFBUWY7b0JBQ1JRLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBTSxRQUFRO2dCQUNOWCxTQUFTSjtnQkFDVE0sUUFBUTtZQUNWO1lBQ0FXLFVBQVU7Z0JBQ1I7Z0JBQ0E7b0JBQ0ViLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7YUFDRDtZQUNEYSxTQUFTO1lBQ1RGLFFBQVFmO1lBQ1JrQixVQUFVO1lBQ1ZWLGFBQWE7UUFDZjtRQUVBLHNDQUFzQztRQUN0Q1gsTUFBTXNCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixTQUFVQyxHQUFHO1lBQzlDLElBQUlDLGFBQWE7WUFDakIsSUFBSUMsbUJBQW1CO1lBQ3ZCLElBQUlDLGlCQUFpQjtZQUNyQixJQUFJQyxrQkFBa0I7WUFDdEI1QixNQUFNSSxTQUFTLENBQUMsb0JBQW9CLENBQUN5QixpQkFBaUIsQ0FDcERMLEtBQ0EsT0FDQUMsWUFDQSxTQUFVSyxLQUFLO2dCQUNiLDhDQUE4QztnQkFDOUMsSUFBSUEsVUFBVUgsZ0JBQWdCO29CQUM1QkMsa0JBQWtCO2dCQUNwQjtnQkFDQSxJQUFJLENBQUNBLGlCQUFpQjtvQkFDcEIsSUFBSUUsVUFBVUosa0JBQWtCO3dCQUM5QkUsa0JBQWtCO29CQUNwQjtvQkFDQSxPQUFPO2dCQUNUO2dCQUNBLE9BQU87WUFDVDtRQUVKO1FBRUEsd0NBQXdDO1FBQ3hDNUIsTUFBTXNCLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1lBQzdDeEIsTUFBTUksU0FBUyxDQUFDLG9CQUFvQixDQUFDMkIsb0JBQW9CLENBQUNQLEtBQUs7UUFDakU7SUFDRixHQUFHeEI7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zb3kuanM/ZjU2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgZnJvbSAnLi9tYXJrdXAtdGVtcGxhdGluZy5qcydcbnNveS5kaXNwbGF5TmFtZSA9ICdzb3knXG5zb3kuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc295KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHN0cmluZ1BhdHRlcm4gPSAvKFtcIiddKSg/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCg/IVxcMSlbXlxcXFxcXHJcXG5dKSpcXDEvXG4gICAgdmFyIG51bWJlclBhdHRlcm4gPSAvXFxiXFxkKyg/OlxcLlxcZCspPyg/OltlRV1bKy1dP1xcZCspP1xcYnxcXGIweFtcXGRBLUZdK1xcYi9cbiAgICBQcmlzbS5sYW5ndWFnZXMuc295ID0ge1xuICAgICAgY29tbWVudDogW1xuICAgICAgICAvXFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFxccylcXC9cXC8uKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgICdjb21tYW5kLWFyZyc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxceytcXC8/XFxzKig/OmFsaWFzfGNhbGx8ZGVsY2FsbHxkZWxwYWNrYWdlfGRlbHRlbXBsYXRlfG5hbWVzcGFjZXx0ZW1wbGF0ZSlcXHMrKVxcLj9bXFx3Ll0rLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHBhcmFtZXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxceytcXC8/XFxzKkA/cGFyYW1cXD8/XFxzKylcXC4/W1xcdy5dKy8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC8oXFx7K1xcLz9bXlxcU1xcclxcbl0qKSg/OlxcXFxbbnJ0XXxhbGlhc3xjYWxsfGNhc2V8Y3NzfGRlZmF1bHR8ZGVsY2FsbHxkZWxwYWNrYWdlfGRlbHRlbXBsYXRlfGVsc2UoPzppZik/fGZhbGxiYWNrbXNnfGZvcig/OmVhY2gpP3xpZig/OmVtcHR5KT98bGJ8bGV0fGxpdGVyYWx8bXNnfG5hbWVzcGFjZXxuaWx8QD9wYXJhbVxcPz98cmJ8c3B8c3dpdGNofHRlbXBsYXRlfHhpZCkvLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgL1xcYig/OmFueXxhc3xhdHRyaWJ1dGVzfGJvb2x8Y3NzfGZsb2F0fGh0bWx8aW58aW50fGpzfGxpc3R8bWFwfG51bGx8bnVtYmVyfHN0cmluZ3x1cmkpXFxiL1xuICAgICAgXSxcbiAgICAgIGRlbGltaXRlcjoge1xuICAgICAgICBwYXR0ZXJuOiAvXlxceytcXC8/fFxcLz9cXH0rJC8sXG4gICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICB9LFxuICAgICAgcHJvcGVydHk6IC9cXHcrKD89PSkvLFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcJFteXFxXXFxkXVxcdyooPzpcXD8/KD86XFwuXFx3K3xcXFtbXlxcXV0rXFxdKSkqLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBzdHJpbmdQYXR0ZXJuLFxuICAgICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgICAgfSxcbiAgICAgICAgICBudW1iZXI6IG51bWJlclBhdHRlcm4sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bXFxbXFxdLj9dL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IHN0cmluZ1BhdHRlcm4sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGZ1bmN0aW9uOiBbXG4gICAgICAgIC9cXHcrKD89XFwoKS8sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKFxcfFteXFxTXFxyXFxuXSopXFx3Ky8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfHRydWUpXFxiLyxcbiAgICAgIG51bWJlcjogbnVtYmVyUGF0dGVybixcbiAgICAgIG9wZXJhdG9yOiAvXFw/Oj98PD0/fD49P3w9PT98IT18WysqLyUtXXxcXGIoPzphbmR8bm90fG9yKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1t7fSgpXFxbXFxdfC4sOl0vXG4gICAgfVxuXG4gICAgLy8gVG9rZW5pemUgYWxsIGlubGluZSBTb3kgZXhwcmVzc2lvbnNcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2JlZm9yZS10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIHZhciBzb3lQYXR0ZXJuID0gL1xce1xcey4rP1xcfVxcfXxcXHsuKz9cXH18XFxzXFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcLy9nXG4gICAgICB2YXIgc295TGl0dGVyYWxTdGFydCA9ICd7bGl0ZXJhbH0nXG4gICAgICB2YXIgc295TGl0dGVyYWxFbmQgPSAney9saXRlcmFsfSdcbiAgICAgIHZhciBzb3lMaXR0ZXJhbE1vZGUgPSBmYWxzZVxuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgICBlbnYsXG4gICAgICAgICdzb3knLFxuICAgICAgICBzb3lQYXR0ZXJuLFxuICAgICAgICBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgICAgICAvLyBTb3kgdGFncyBpbnNpZGUge2xpdGVyYWx9IGJsb2NrIGFyZSBpZ25vcmVkXG4gICAgICAgICAgaWYgKG1hdGNoID09PSBzb3lMaXR0ZXJhbEVuZCkge1xuICAgICAgICAgICAgc295TGl0dGVyYWxNb2RlID0gZmFsc2VcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKCFzb3lMaXR0ZXJhbE1vZGUpIHtcbiAgICAgICAgICAgIGlmIChtYXRjaCA9PT0gc295TGl0dGVyYWxTdGFydCkge1xuICAgICAgICAgICAgICBzb3lMaXR0ZXJhbE1vZGUgPSB0cnVlXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgfVxuICAgICAgKVxuICAgIH0pXG5cbiAgICAvLyBSZS1pbnNlcnQgdGhlIHRva2VucyBhZnRlciB0b2tlbml6aW5nXG4gICAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS50b2tlbml6ZVBsYWNlaG9sZGVycyhlbnYsICdzb3knKVxuICAgIH0pXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmciLCJzb3kiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwic3RyaW5nUGF0dGVybiIsIm51bWJlclBhdHRlcm4iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImxvb2tiZWhpbmQiLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwicGFyYW1ldGVyIiwia2V5d29yZCIsImRlbGltaXRlciIsInByb3BlcnR5IiwidmFyaWFibGUiLCJzdHJpbmciLCJudW1iZXIiLCJmdW5jdGlvbiIsImJvb2xlYW4iLCJvcGVyYXRvciIsImhvb2tzIiwiYWRkIiwiZW52Iiwic295UGF0dGVybiIsInNveUxpdHRlcmFsU3RhcnQiLCJzb3lMaXR0ZXJhbEVuZCIsInNveUxpdHRlcmFsTW9kZSIsImJ1aWxkUGxhY2Vob2xkZXJzIiwibWF0Y2giLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/soy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sparql.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sparql.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sparql)\n/* harmony export */ });\n/* harmony import */ var _turtle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./turtle.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/turtle.js\");\n// @ts-nocheck\n\nsparql.displayName = \"sparql\";\nsparql.aliases = [\n    \"rq\"\n];\n/** @type {import('../core.js').Syntax} */ function sparql(Prism) {\n    Prism.register(_turtle_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.sparql = Prism.languages.extend(\"turtle\", {\n        boolean: /\\b(?:false|true)\\b/i,\n        variable: {\n            pattern: /[?$]\\w+/,\n            greedy: true\n        }\n    });\n    Prism.languages.insertBefore(\"sparql\", \"punctuation\", {\n        keyword: [\n            /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n            /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n            /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n        ]\n    });\n    Prism.languages.rq = Prism.languages.sparql;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcGFycWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQzJCO0FBQ3pDQyxPQUFPQyxXQUFXLEdBQUc7QUFDckJELE9BQU9FLE9BQU8sR0FBRztJQUFDO0NBQUs7QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLE9BQU9HLEtBQUs7SUFDbENBLE1BQU1DLFFBQVEsQ0FBQ0wsa0RBQWVBO0lBQzlCSSxNQUFNRSxTQUFTLENBQUNMLE1BQU0sR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsVUFBVTtRQUN4REMsU0FBUztRQUNUQyxVQUFVO1lBQ1JDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO0lBQ0Y7SUFDQVAsTUFBTUUsU0FBUyxDQUFDTSxZQUFZLENBQUMsVUFBVSxlQUFlO1FBQ3BEQyxTQUFTO1lBQ1A7WUFDQTtZQUNBO1NBQ0Q7SUFDSDtJQUNBVCxNQUFNRSxTQUFTLENBQUNRLEVBQUUsR0FBR1YsTUFBTUUsU0FBUyxDQUFDTCxNQUFNO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3NwYXJxbC5qcz80ZGRmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yVHVydGxlIGZyb20gJy4vdHVydGxlLmpzJ1xuc3BhcnFsLmRpc3BsYXlOYW1lID0gJ3NwYXJxbCdcbnNwYXJxbC5hbGlhc2VzID0gWydycSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3BhcnFsKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclR1cnRsZSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnNwYXJxbCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ3R1cnRsZScsIHtcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICB2YXJpYWJsZToge1xuICAgICAgcGF0dGVybjogL1s/JF1cXHcrLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnc3BhcnFsJywgJ3B1bmN0dWF0aW9uJywge1xuICAgIGtleXdvcmQ6IFtcbiAgICAgIC9cXGIoPzpBfEFERHxBTEx8QVN8QVNDfEFTS3xCTk9ERXxCWXxDTEVBUnxDT05TVFJVQ1R8Q09QWXxDUkVBVEV8REFUQXxERUZBVUxUfERFTEVURXxERVNDfERFU0NSSUJFfERJU1RJTkNUfERST1B8RVhJU1RTfEZJTFRFUnxGUk9NfEdST1VQfEhBVklOR3xJTlNFUlR8SU5UT3xMSU1JVHxMT0FEfE1JTlVTfE1PVkV8TkFNRUR8Tk9UfE5PV3xPRkZTRVR8T1BUSU9OQUx8T1JERVJ8UkFORHxSRURVQ0VEfFNFTEVDVHxTRVBBUkFUT1J8U0VSVklDRXxTSUxFTlR8U1RSVVVJRHxVTklPTnxVU0lOR3xVVUlEfFZBTFVFU3xXSEVSRSlcXGIvaSxcbiAgICAgIC9cXGIoPzpBQlN8QVZHfEJJTkR8Qk9VTkR8Q0VJTHxDT0FMRVNDRXxDT05DQVR8Q09OVEFJTlN8Q09VTlR8REFUQVRZUEV8REFZfEVOQ09ERV9GT1JfVVJJfEZMT09SfEdST1VQX0NPTkNBVHxIT1VSU3xJRnxJUkl8aXNCTEFOS3xpc0lSSXxpc0xJVEVSQUx8aXNOVU1FUklDfGlzVVJJfExBTkd8TEFOR01BVENIRVN8TENBU0V8TUFYfE1ENXxNSU58TUlOVVRFU3xNT05USHxSRUdFWHxSRVBMQUNFfFJPVU5EfHNhbWVUZXJtfFNBTVBMRXxTRUNPTkRTfFNIQTF8U0hBMjU2fFNIQTM4NHxTSEE1MTJ8U1RSfFNUUkFGVEVSfFNUUkJFRk9SRXxTVFJEVHxTVFJFTkRTfFNUUkxBTkd8U1RSTEVOfFNUUlNUQVJUU3xTVUJTVFJ8U1VNfFRJTUVaT05FfFRafFVDQVNFfFVSSXxZRUFSKVxcYig/PVxccypcXCgpL2ksXG4gICAgICAvXFxiKD86QkFTRXxHUkFQSHxQUkVGSVgpXFxiL2lcbiAgICBdXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5ycSA9IFByaXNtLmxhbmd1YWdlcy5zcGFycWxcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JUdXJ0bGUiLCJzcGFycWwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiYm9vbGVhbiIsInZhcmlhYmxlIiwicGF0dGVybiIsImdyZWVkeSIsImluc2VydEJlZm9yZSIsImtleXdvcmQiLCJycSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sparql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/splunk-spl.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/splunk-spl.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ splunkSpl)\n/* harmony export */ });\n// @ts-nocheck\nsplunkSpl.displayName = \"splunk-spl\";\nsplunkSpl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function splunkSpl(Prism) {\n    Prism.languages[\"splunk-spl\"] = {\n        comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n            greedy: true\n        },\n        // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n        keyword: /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n        \"operator-word\": {\n            pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n            alias: \"operator\"\n        },\n        function: /\\b\\w+(?=\\s*\\()/,\n        property: /\\b\\w+(?=\\s*=(?!=))/,\n        date: {\n            // MM/DD/YYYY(:HH:MM:SS)?\n            pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n            alias: \"number\"\n        },\n        number: /\\b\\d+(?:\\.\\d+)?\\b/,\n        boolean: /\\b(?:f|false|t|true)\\b/i,\n        operator: /[<>=]=?|[-+*/%|]/,\n        punctuation: /[()[\\],]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcGx1bmstc3BsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFVBQVVDLFdBQVcsR0FBRztBQUN4QkQsVUFBVUUsT0FBTyxHQUFHLEVBQUU7QUFFdEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFVBQVVHLEtBQUs7SUFDckNBLE1BQU1DLFNBQVMsQ0FBQyxhQUFhLEdBQUc7UUFDOUJDLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLDBGQUEwRjtRQUMxRkMsU0FDRTtRQUNGLGlCQUFpQjtZQUNmRixTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBQyxVQUFVO1FBQ1ZDLFVBQVU7UUFDVkMsTUFBTTtZQUNKLHlCQUF5QjtZQUN6Qk4sU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQUksUUFBUTtRQUNSQyxTQUFTO1FBQ1RDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3BsdW5rLXNwbC5qcz80NDk2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5zcGx1bmtTcGwuZGlzcGxheU5hbWUgPSAnc3BsdW5rLXNwbCdcbnNwbHVua1NwbC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzcGx1bmtTcGwoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzWydzcGx1bmstc3BsJ10gPSB7XG4gICAgY29tbWVudDogL2Bjb21tZW50XFwoXCIoPzpcXFxcLnxbXlxcXFxcIl0pKlwiXFwpYC8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpcXFxcLnxbXlxcXFxcIl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgLy8gaHR0cHM6Ly9kb2NzLnNwbHVuay5jb20vRG9jdW1lbnRhdGlvbi9TcGx1bmsvNy4zLjAvU2VhcmNoUmVmZXJlbmNlL0xpc3RPZlNlYXJjaENvbW1hbmRzXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhY2N1bXxhZGRjb2x0b3RhbHN8YWRkaW5mb3xhZGR0b3RhbHN8YW5hbHl6ZWZpZWxkc3xhbm9tYWxpZXN8YW5vbWFsb3VzdmFsdWV8YW5vbWFseWRldGVjdGlvbnxhcHBlbmR8YXBwZW5kY29sc3xhcHBlbmRjc3Z8YXBwZW5kbG9va3VwfGFwcGVuZHBpcGV8YXJ1bGVzfGFzc29jaWF0ZXxhdWRpdHxhdXRvcmVncmVzc3xiaW58YnVja2V0fGJ1Y2tldGRpcnxjaGFydHxjbHVzdGVyfGNvZmlsdGVyfGNvbGxlY3R8Y29uY3VycmVuY3l8Y29udGluZ2VuY3l8Y29udmVydHxjb3JyZWxhdGV8ZGF0YW1vZGVsfGRiaW5zcGVjdHxkZWR1cHxkZWxldGV8ZGVsdGF8ZGlmZnxlcmV4fGV2YWx8ZXZlbnRjb3VudHxldmVudHN0YXRzfGV4dHJhY3R8ZmllbGRmb3JtYXR8ZmllbGRzfGZpZWxkc3VtbWFyeXxmaWxsZG93bnxmaWxsbnVsbHxmaW5kdHlwZXN8Zm9sZGVyaXplfGZvcmVhY2h8Zm9ybWF0fGZyb218Z2F1Z2V8Z2VudGltZXN8Z2VvbXxnZW9tZmlsdGVyfGdlb3N0YXRzfGhlYWR8aGlnaGxpZ2h0fGhpc3Rvcnl8aWNvbmlmeXxpbnB1dHxpbnB1dGNzdnxpbnB1dGxvb2t1cHxpcGxvY2F0aW9ufGpvaW58a21lYW5zfGt2fGt2Zm9ybXxsb2Fkam9ifGxvY2FsaXplfGxvY2Fsb3B8bG9va3VwfG1ha2Vjb250aW51b3VzfG1ha2VtdnxtYWtlcmVzdWx0c3xtYXB8bWNvbGxlY3R8bWV0YWRhdGF8bWV0YXNlYXJjaHxtZXZlbnRjb2xsZWN0fG1zdGF0c3xtdWx0aWt2fG11bHRpc2VhcmNofG12Y29tYmluZXxtdmV4cGFuZHxub212fG91dGxpZXJ8b3V0cHV0Y3N2fG91dHB1dGxvb2t1cHxvdXRwdXR0ZXh0fG92ZXJsYXB8cGl2b3R8cHJlZGljdHxyYW5nZW1hcHxyYXJlfHJlZ2V4fHJlbGV2YW5jeXxyZWx0aW1lfHJlbmFtZXxyZXBsYWNlfHJlc3R8cmV0dXJufHJldmVyc2V8cmV4fHJ0b3JkZXJ8cnVufHNhdmVkc2VhcmNofHNjcmlwdHxzY3J1YnxzZWFyY2h8c2VhcmNodHhufHNlbGZqb2lufHNlbmRlbWFpbHxzZXR8c2V0ZmllbGRzfHNpY2hhcnR8c2lyYXJlfHNpc3RhdHN8c2l0aW1lY2hhcnR8c2l0b3B8c29ydHxzcGF0aHxzdGF0c3xzdHJjYXR8c3RyZWFtc3RhdHN8dGFibGV8dGFnc3x0YWlsfHRpbWVjaGFydHx0aW1ld3JhcHx0b3B8dHJhbnNhY3Rpb258dHJhbnNwb3NlfHRyZW5kbGluZXx0c2NvbGxlY3R8dHN0YXRzfHR5cGVhaGVhZHx0eXBlbGVhcm5lcnx0eXBlcnx1bmlvbnx1bmlxfHVudGFibGV8d2hlcmV8eDExfHhtbGt2fHhtbHVuZXNjYXBlfHhwYXRofHh5c2VyaWVzKVxcYi9pLFxuICAgICdvcGVyYXRvci13b3JkJzoge1xuICAgICAgcGF0dGVybjogL1xcYig/OmFuZHxhc3xieXxub3R8b3J8eG9yKVxcYi9pLFxuICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICB9LFxuICAgIGZ1bmN0aW9uOiAvXFxiXFx3Kyg/PVxccypcXCgpLyxcbiAgICBwcm9wZXJ0eTogL1xcYlxcdysoPz1cXHMqPSg/IT0pKS8sXG4gICAgZGF0ZToge1xuICAgICAgLy8gTU0vREQvWVlZWSg6SEg6TU06U1MpP1xuICAgICAgcGF0dGVybjogL1xcYlxcZHsxLDJ9XFwvXFxkezEsMn1cXC9cXGR7MSw0fSg/Oig/OjpcXGR7MSwyfSl7M30pP1xcYi8sXG4gICAgICBhbGlhczogJ251bWJlcidcbiAgICB9LFxuICAgIG51bWJlcjogL1xcYlxcZCsoPzpcXC5cXGQrKT9cXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmfGZhbHNlfHR8dHJ1ZSlcXGIvaSxcbiAgICBvcGVyYXRvcjogL1s8Pj1dPT98Wy0rKi8lfF0vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXSxdL1xuICB9XG59XG4iXSwibmFtZXMiOlsic3BsdW5rU3BsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsImtleXdvcmQiLCJhbGlhcyIsImZ1bmN0aW9uIiwicHJvcGVydHkiLCJkYXRlIiwibnVtYmVyIiwiYm9vbGVhbiIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/splunk-spl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sqf.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sqf.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sqf)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nsqf.displayName = \"sqf\";\nsqf.aliases = [];\n/** @type {import('../core.js').Syntax} */ function sqf(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.sqf = Prism.languages.extend(\"clike\", {\n        string: {\n            pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n            greedy: true\n        },\n        keyword: /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n        number: /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n        operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n        \"magic-variable\": {\n            pattern: /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n            alias: \"keyword\"\n        },\n        constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n    });\n    Prism.languages.insertBefore(\"sqf\", \"string\", {\n        macro: {\n            pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\",\n            inside: {\n                directive: {\n                    pattern: /#[a-z]+\\b/i,\n                    alias: \"keyword\"\n                },\n                comment: Prism.languages.sqf.comment\n            }\n        }\n    });\n    delete Prism.languages.sqf[\"class-name\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcWYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3lCO0FBQ3ZDQyxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRyxFQUFFO0FBRWhCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUM3QkksTUFBTUUsU0FBUyxDQUFDTCxHQUFHLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFNBQVM7UUFDcERDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQ0U7UUFDRkMsUUFDRTtRQUNGQyxVQUFVO1FBQ1Ysa0JBQWtCO1lBQ2hCTixTQUNFO1lBQ0ZPLE9BQU87UUFDVDtRQUNBQyxVQUFVO0lBQ1o7SUFDQWIsTUFBTUUsU0FBUyxDQUFDWSxZQUFZLENBQUMsT0FBTyxVQUFVO1FBQzVDQyxPQUFPO1lBQ0xWLFNBQVM7WUFDVFcsWUFBWTtZQUNaVixRQUFRO1lBQ1JNLE9BQU87WUFDUEssUUFBUTtnQkFDTkMsV0FBVztvQkFDVGIsU0FBUztvQkFDVE8sT0FBTztnQkFDVDtnQkFDQU8sU0FBU25CLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxDQUFDc0IsT0FBTztZQUN0QztRQUNGO0lBQ0Y7SUFDQSxPQUFPbkIsTUFBTUUsU0FBUyxDQUFDTCxHQUFHLENBQUMsYUFBYTtBQUMxQyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcWYuanM/OGQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5zcWYuZGlzcGxheU5hbWUgPSAnc3FmJ1xuc3FmLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNxZihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgUHJpc20ubGFuZ3VhZ2VzLnNxZiA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86KD86XCJcIik/W15cIl0pKlwiKD8hXCIpfCcoPzpbXiddKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpicmVha091dHxicmVha1RvfGNhbGx8Y2FzZXxjYXRjaHxkZWZhdWx0fGRvfGVjaG98ZWxzZXxleGVjRlNNfGV4ZWNWTXxleGl0V2l0aHxmb3J8Zm9yRWFjaHxmb3JFYWNoTWVtYmVyfGZvckVhY2hNZW1iZXJBZ2VudHxmb3JFYWNoTWVtYmVyVGVhbXxmcm9tfGdvdG98aWZ8bmlsfHByZXByb2Nlc3NGaWxlfHByZXByb2Nlc3NGaWxlTGluZU51bWJlcnN8cHJpdmF0ZXxzY29wZU5hbWV8c3Bhd258c3RlcHxzd2l0Y2h8dGhlbnx0aHJvd3x0b3x0cnl8d2hpbGV8d2l0aClcXGIvaSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzphYnN8YWNjVGltZXxhY29zfGFjdGlvbnxhY3Rpb25JRHN8YWN0aW9uS2V5c3xhY3Rpb25LZXlzSW1hZ2VzfGFjdGlvbktleXNOYW1lc3xhY3Rpb25LZXlzTmFtZXNBcnJheXxhY3Rpb25OYW1lfGFjdGlvblBhcmFtc3xhY3RpdmF0ZUFkZG9uc3xhY3RpdmF0ZWRBZGRvbnN8YWN0aXZhdGVLZXl8YWRkM0RFTkNvbm5lY3Rpb258YWRkM0RFTkV2ZW50SGFuZGxlcnxhZGQzREVOTGF5ZXJ8YWRkQWN0aW9ufGFkZEJhY2twYWNrfGFkZEJhY2twYWNrQ2FyZ298YWRkQmFja3BhY2tDYXJnb0dsb2JhbHxhZGRCYWNrcGFja0dsb2JhbHxhZGRDYW1TaGFrZXxhZGRDdXJhdG9yQWRkb25zfGFkZEN1cmF0b3JDYW1lcmFBcmVhfGFkZEN1cmF0b3JFZGl0YWJsZU9iamVjdHN8YWRkQ3VyYXRvckVkaXRpbmdBcmVhfGFkZEN1cmF0b3JQb2ludHN8YWRkRWRpdG9yT2JqZWN0fGFkZEV2ZW50SGFuZGxlcnxhZGRGb3JjZXxhZGRGb3JjZUdlbmVyYXRvclJURHxhZGRHb2dnbGVzfGFkZEdyb3VwSWNvbnxhZGRIYW5kZ3VuSXRlbXxhZGRIZWFkZ2VhcnxhZGRJdGVtfGFkZEl0ZW1DYXJnb3xhZGRJdGVtQ2FyZ29HbG9iYWx8YWRkSXRlbVBvb2x8YWRkSXRlbVRvQmFja3BhY2t8YWRkSXRlbVRvVW5pZm9ybXxhZGRJdGVtVG9WZXN0fGFkZExpdmVTdGF0c3xhZGRNYWdhemluZXxhZGRNYWdhemluZUFtbW9DYXJnb3xhZGRNYWdhemluZUNhcmdvfGFkZE1hZ2F6aW5lQ2FyZ29HbG9iYWx8YWRkTWFnYXppbmVHbG9iYWx8YWRkTWFnYXppbmVQb29sfGFkZE1hZ2F6aW5lc3xhZGRNYWdhemluZVR1cnJldHxhZGRNZW51fGFkZE1lbnVJdGVtfGFkZE1pc3Npb25FdmVudEhhbmRsZXJ8YWRkTVBFdmVudEhhbmRsZXJ8YWRkTXVzaWNFdmVudEhhbmRsZXJ8YWRkT3duZWRNaW5lfGFkZFBsYXllclNjb3Jlc3xhZGRQcmltYXJ5V2VhcG9uSXRlbXxhZGRQdWJsaWNWYXJpYWJsZUV2ZW50SGFuZGxlcnxhZGRSYXRpbmd8YWRkUmVzb3VyY2VzfGFkZFNjb3JlfGFkZFNjb3JlU2lkZXxhZGRTZWNvbmRhcnlXZWFwb25JdGVtfGFkZFN3aXRjaGFibGVVbml0fGFkZFRlYW1NZW1iZXJ8YWRkVG9SZW1haW5zQ29sbGVjdG9yfGFkZFRvcnF1ZXxhZGRVbmlmb3JtfGFkZFZlaGljbGV8YWRkVmVzdHxhZGRXYXlwb2ludHxhZGRXZWFwb258YWRkV2VhcG9uQ2FyZ298YWRkV2VhcG9uQ2FyZ29HbG9iYWx8YWRkV2VhcG9uR2xvYmFsfGFkZFdlYXBvbkl0ZW18YWRkV2VhcG9uUG9vbHxhZGRXZWFwb25UdXJyZXR8YWRtaW58YWdlbnR8YWdlbnRzfEFHTFRvQVNMfGFpbWVkQXRUYXJnZXR8YWltUG9zfGFpckRlbnNpdHlDdXJ2ZVJURHxhaXJEZW5zaXR5UlREfGFpcnBsYW5lVGhyb3R0bGV8YWlycG9ydFNpZGV8QUlTRmluaXNoSGVhbHxhbGl2ZXxhbGwzREVORW50aXRpZXN8YWxsQWlycG9ydHN8YWxsQ29udHJvbHN8YWxsQ3VyYXRvcnN8YWxsQ3V0TGF5ZXJzfGFsbERlYWR8YWxsRGVhZE1lbnxhbGxEaXNwbGF5c3xhbGxHcm91cHN8YWxsTWFwTWFya2Vyc3xhbGxNaW5lc3xhbGxNaXNzaW9uT2JqZWN0c3xhbGxvdzNETW9kZXxhbGxvd0NyZXdJbkltbW9iaWxlfGFsbG93Q3VyYXRvckxvZ2ljSWdub3JlQXJlYXN8YWxsb3dEYW1hZ2V8YWxsb3dEYW1tYWdlfGFsbG93RmlsZU9wZXJhdGlvbnN8YWxsb3dGbGVlaW5nfGFsbG93R2V0SW58YWxsb3dTcHJpbnR8YWxsUGxheWVyc3xhbGxTaW1wbGVPYmplY3RzfGFsbFNpdGVzfGFsbFR1cnJldHN8YWxsVW5pdHN8YWxsVW5pdHNVQVZ8YWxsVmFyaWFibGVzfGFtbW98YW1tb09uUHlsb258YW5pbWF0ZXxhbmltYXRlQmF5fGFuaW1hdGVEb29yfGFuaW1hdGVQeWxvbnxhbmltYXRlU291cmNlfGFuaW1hdGlvbk5hbWVzfGFuaW1hdGlvblBoYXNlfGFuaW1hdGlvblNvdXJjZVBoYXNlfGFuaW1hdGlvblN0YXRlfGFwcGVuZHxhcHBseXxhcm1vcnlQb2ludHN8YXJyYXlJbnRlcnNlY3R8YXNpbnxBU0xUb0FHTHxBU0xUb0FUTHxhc3NlcnR8YXNzaWduQXNDYXJnb3xhc3NpZ25Bc0NhcmdvSW5kZXh8YXNzaWduQXNDb21tYW5kZXJ8YXNzaWduQXNEcml2ZXJ8YXNzaWduQXNHdW5uZXJ8YXNzaWduQXNUdXJyZXR8YXNzaWduQ3VyYXRvcnxhc3NpZ25lZENhcmdvfGFzc2lnbmVkQ29tbWFuZGVyfGFzc2lnbmVkRHJpdmVyfGFzc2lnbmVkR3VubmVyfGFzc2lnbmVkSXRlbXN8YXNzaWduZWRUYXJnZXR8YXNzaWduZWRUZWFtfGFzc2lnbmVkVmVoaWNsZXxhc3NpZ25lZFZlaGljbGVSb2xlfGFzc2lnbkl0ZW18YXNzaWduVGVhbXxhc3NpZ25Ub0FpcnBvcnR8YXRhbnxhdGFuMnxhdGd8QVRMVG9BU0x8YXR0YWNoZWRPYmplY3R8YXR0YWNoZWRPYmplY3RzfGF0dGFjaGVkVG98YXR0YWNoT2JqZWN0fGF0dGFjaFRvfGF0dGFja0VuYWJsZWR8YmFja3BhY2t8YmFja3BhY2tDYXJnb3xiYWNrcGFja0NvbnRhaW5lcnxiYWNrcGFja0l0ZW1zfGJhY2twYWNrTWFnYXppbmVzfGJhY2twYWNrU3BhY2VGb3J8YmVoYXZpb3VyfGJlbmNobWFya3xiaW5vY3VsYXJ8Ymx1Zm9yfGJvdW5kaW5nQm94fGJvdW5kaW5nQm94UmVhbHxib3VuZGluZ0NlbnRlcnxicmllZmluZ05hbWV8YnVpbGRpbmdFeGl0fGJ1aWxkaW5nUG9zfGJ1bGRvemVyX0VuYWJsZVJvYWREaWFnfGJ1bGRvemVyX0lzRW5hYmxlZFJvYWREaWFnfGJ1bGRvemVyX0xvYWROZXdSb2Fkc3xidWxkb3plcl9yZWxvYWRPcGVyTWFwfGJ1dHRvbkFjdGlvbnxidXR0b25TZXRBY3Rpb258Y2FkZXRNb2RlfGNhbGxFeHRlbnNpb258Y2FtQ29tbWFuZHxjYW1Db21taXR8Y2FtQ29tbWl0UHJlcGFyZWR8Y2FtQ29tbWl0dGVkfGNhbUNvbnN0dWN0aW9uU2V0UGFyYW1zfGNhbUNyZWF0ZXxjYW1EZXN0cm95fGNhbWVyYUVmZmVjdHxjYW1lcmFFZmZlY3RFbmFibGVIVUR8Y2FtZXJhSW50ZXJlc3R8Y2FtZXJhT258Y2FtZXJhVmlld3xjYW1wYWlnbkNvbmZpZ0ZpbGV8Y2FtUHJlbG9hZHxjYW1QcmVsb2FkZWR8Y2FtUHJlcGFyZUJhbmt8Y2FtUHJlcGFyZURpcnxjYW1QcmVwYXJlRGl2ZXxjYW1QcmVwYXJlRm9jdXN8Y2FtUHJlcGFyZUZvdnxjYW1QcmVwYXJlRm92UmFuZ2V8Y2FtUHJlcGFyZVBvc3xjYW1QcmVwYXJlUmVsUG9zfGNhbVByZXBhcmVUYXJnZXR8Y2FtU2V0QmFua3xjYW1TZXREaXJ8Y2FtU2V0RGl2ZXxjYW1TZXRGb2N1c3xjYW1TZXRGb3Z8Y2FtU2V0Rm92UmFuZ2V8Y2FtU2V0UG9zfGNhbVNldFJlbFBvc3xjYW1TZXRUYXJnZXR8Y2FtVGFyZ2V0fGNhbVVzZU5WR3xjYW5BZGR8Y2FuQWRkSXRlbVRvQmFja3BhY2t8Y2FuQWRkSXRlbVRvVW5pZm9ybXxjYW5BZGRJdGVtVG9WZXN0fGNhbmNlbFNpbXBsZVRhc2tEZXN0aW5hdGlvbnxjYW5GaXJlfGNhbk1vdmV8Y2FuU2xpbmdMb2FkfGNhblN0YW5kfGNhblN1c3BlbmR8Y2FuVHJpZ2dlckR5bmFtaWNTaW11bGF0aW9ufGNhblVubG9hZEluQ29tYmF0fGNhblZlaGljbGVDYXJnb3xjYXB0aXZlfGNhcHRpdmVOdW18Y2JDaGVja2VkfGNiU2V0Q2hlY2tlZHxjZWlsfGNoYW5uZWxFbmFibGVkfGNoZWF0c0VuYWJsZWR8Y2hlY2tBSUZlYXR1cmV8Y2hlY2tWaXNpYmlsaXR5fGNpdmlsaWFufGNsYXNzTmFtZXxjbGVhcjNERU5BdHRyaWJ1dGV8Y2xlYXIzREVOSW52ZW50b3J5fGNsZWFyQWxsSXRlbXNGcm9tQmFja3BhY2t8Y2xlYXJCYWNrcGFja0NhcmdvfGNsZWFyQmFja3BhY2tDYXJnb0dsb2JhbHxjbGVhckZvcmNlc1JURHxjbGVhckdyb3VwSWNvbnN8Y2xlYXJJdGVtQ2FyZ298Y2xlYXJJdGVtQ2FyZ29HbG9iYWx8Y2xlYXJJdGVtUG9vbHxjbGVhck1hZ2F6aW5lQ2FyZ298Y2xlYXJNYWdhemluZUNhcmdvR2xvYmFsfGNsZWFyTWFnYXppbmVQb29sfGNsZWFyT3ZlcmxheXxjbGVhclJhZGlvfGNsZWFyVmVoaWNsZUluaXR8Y2xlYXJXZWFwb25DYXJnb3xjbGVhcldlYXBvbkNhcmdvR2xvYmFsfGNsZWFyV2VhcG9uUG9vbHxjbGllbnRPd25lcnxjbG9zZURpYWxvZ3xjbG9zZURpc3BsYXl8Y2xvc2VPdmVybGF5fGNvbGxhcHNlT2JqZWN0VHJlZXxjb2xsZWN0M0RFTkhpc3Rvcnl8Y29sbGVjdGl2ZVJURHxjb21iYXRNb2RlfGNvbW1hbmRBcnRpbGxlcnlGaXJlfGNvbW1hbmRDaGF0fGNvbW1hbmRlcnxjb21tYW5kRmlyZXxjb21tYW5kRm9sbG93fGNvbW1hbmRGU018Y29tbWFuZEdldE91dHxjb21tYW5kaW5nTWVudXxjb21tYW5kTW92ZXxjb21tYW5kUmFkaW98Y29tbWFuZFN0b3B8Y29tbWFuZFN1cHByZXNzaXZlRmlyZXxjb21tYW5kVGFyZ2V0fGNvbW1hbmRXYXRjaHxjb21tZW50fGNvbW1pdE92ZXJsYXl8Y29tcGlsZXxjb21waWxlRmluYWx8Y29tcGxldGVkRlNNfGNvbXBvc2VUZXh0fGNvbmZpZ0NsYXNzZXN8Y29uZmlnRmlsZXxjb25maWdIaWVyYXJjaHl8Y29uZmlnTmFtZXxjb25maWdOdWxsfGNvbmZpZ1Byb3BlcnRpZXN8Y29uZmlnU291cmNlQWRkb25MaXN0fGNvbmZpZ1NvdXJjZU1vZHxjb25maWdTb3VyY2VNb2RMaXN0fGNvbmZpcm1TZW5zb3JUYXJnZXR8Y29ubmVjdFRlcm1pbmFsVG9VQVZ8Y29udHJvbE51bGx8Y29udHJvbHNHcm91cEN0cmx8Y29weUZyb21DbGlwYm9hcmR8Y29weVRvQ2xpcGJvYXJkfGNvcHlXYXlwb2ludHN8Y29zfGNvdW50fGNvdW50RW5lbXl8Y291bnRGcmllbmRseXxjb3VudFNpZGV8Y291bnRUeXBlfGNvdW50VW5rbm93bnxjcmVhdGUzREVOQ29tcG9zaXRpb258Y3JlYXRlM0RFTkVudGl0eXxjcmVhdGVBZ2VudHxjcmVhdGVDZW50ZXJ8Y3JlYXRlRGlhbG9nfGNyZWF0ZURpYXJ5TGlua3xjcmVhdGVEaWFyeVJlY29yZHxjcmVhdGVEaWFyeVN1YmplY3R8Y3JlYXRlRGlzcGxheXxjcmVhdGVHZWFyRGlhbG9nfGNyZWF0ZUdyb3VwfGNyZWF0ZUd1YXJkZWRQb2ludHxjcmVhdGVMb2NhdGlvbnxjcmVhdGVNYXJrZXJ8Y3JlYXRlTWFya2VyTG9jYWx8Y3JlYXRlTWVudXxjcmVhdGVNaW5lfGNyZWF0ZU1pc3Npb25EaXNwbGF5fGNyZWF0ZU1QQ2FtcGFpZ25EaXNwbGF5fGNyZWF0ZVNpbXBsZU9iamVjdHxjcmVhdGVTaW1wbGVUYXNrfGNyZWF0ZVNpdGV8Y3JlYXRlU291bmRTb3VyY2V8Y3JlYXRlVGFza3xjcmVhdGVUZWFtfGNyZWF0ZVRyaWdnZXJ8Y3JlYXRlVW5pdHxjcmVhdGVWZWhpY2xlfGNyZWF0ZVZlaGljbGVDcmV3fGNyZWF0ZVZlaGljbGVMb2NhbHxjcmV3fGN0QWRkSGVhZGVyfGN0QWRkUm93fGN0Q2xlYXJ8Y3RDdXJTZWx8Y3REYXRhfGN0RmluZEhlYWRlclJvd3N8Y3RGaW5kUm93SGVhZGVyfGN0SGVhZGVyQ29udHJvbHN8Y3RIZWFkZXJDb3VudHxjdFJlbW92ZUhlYWRlcnN8Y3RSZW1vdmVSb3dzfGN0cmxBY3RpdmF0ZXxjdHJsQWRkRXZlbnRIYW5kbGVyfGN0cmxBbmdsZXxjdHJsQXV0b1Njcm9sbERlbGF5fGN0cmxBdXRvU2Nyb2xsUmV3aW5kfGN0cmxBdXRvU2Nyb2xsU3BlZWR8Y3RybENoZWNrZWR8Y3RybENsYXNzTmFtZXxjdHJsQ29tbWl0fGN0cmxDb21taXR0ZWR8Y3RybENyZWF0ZXxjdHJsRGVsZXRlfGN0cmxFbmFibGV8Y3RybEVuYWJsZWR8Y3RybEZhZGV8Y3RybEhUTUxMb2FkZWR8Y3RybElEQ3xjdHJsSUREfGN0cmxNYXBBbmltQWRkfGN0cmxNYXBBbmltQ2xlYXJ8Y3RybE1hcEFuaW1Db21taXR8Y3RybE1hcEFuaW1Eb25lfGN0cmxNYXBDdXJzb3J8Y3RybE1hcE1vdXNlT3ZlcnxjdHJsTWFwU2NhbGV8Y3RybE1hcFNjcmVlblRvV29ybGR8Y3RybE1hcFdvcmxkVG9TY3JlZW58Y3RybE1vZGVsfGN0cmxNb2RlbERpckFuZFVwfGN0cmxNb2RlbFNjYWxlfGN0cmxQYXJlbnR8Y3RybFBhcmVudENvbnRyb2xzR3JvdXB8Y3RybFBvc2l0aW9ufGN0cmxSZW1vdmVBbGxFdmVudEhhbmRsZXJzfGN0cmxSZW1vdmVFdmVudEhhbmRsZXJ8Y3RybFNjYWxlfGN0cmxTZXRBY3RpdmVDb2xvcnxjdHJsU2V0QW5nbGV8Y3RybFNldEF1dG9TY3JvbGxEZWxheXxjdHJsU2V0QXV0b1Njcm9sbFJld2luZHxjdHJsU2V0QXV0b1Njcm9sbFNwZWVkfGN0cmxTZXRCYWNrZ3JvdW5kQ29sb3J8Y3RybFNldENoZWNrZWR8Y3RybFNldERpc2FibGVkQ29sb3J8Y3RybFNldEV2ZW50SGFuZGxlcnxjdHJsU2V0RmFkZXxjdHJsU2V0Rm9jdXN8Y3RybFNldEZvbnR8Y3RybFNldEZvbnRIMXxjdHJsU2V0Rm9udEgxQnxjdHJsU2V0Rm9udEgyfGN0cmxTZXRGb250SDJCfGN0cmxTZXRGb250SDN8Y3RybFNldEZvbnRIM0J8Y3RybFNldEZvbnRINHxjdHJsU2V0Rm9udEg0QnxjdHJsU2V0Rm9udEg1fGN0cmxTZXRGb250SDVCfGN0cmxTZXRGb250SDZ8Y3RybFNldEZvbnRINkJ8Y3RybFNldEZvbnRIZWlnaHR8Y3RybFNldEZvbnRIZWlnaHRIMXxjdHJsU2V0Rm9udEhlaWdodEgyfGN0cmxTZXRGb250SGVpZ2h0SDN8Y3RybFNldEZvbnRIZWlnaHRINHxjdHJsU2V0Rm9udEhlaWdodEg1fGN0cmxTZXRGb250SGVpZ2h0SDZ8Y3RybFNldEZvbnRIZWlnaHRTZWNvbmRhcnl8Y3RybFNldEZvbnRQfGN0cmxTZXRGb250UEJ8Y3RybFNldEZvbnRTZWNvbmRhcnl8Y3RybFNldEZvcmVncm91bmRDb2xvcnxjdHJsU2V0TW9kZWx8Y3RybFNldE1vZGVsRGlyQW5kVXB8Y3RybFNldE1vZGVsU2NhbGV8Y3RybFNldFBpeGVsUHJlY2lzaW9ufGN0cmxTZXRQb3NpdGlvbnxjdHJsU2V0U2NhbGV8Y3RybFNldFN0cnVjdHVyZWRUZXh0fGN0cmxTZXRUZXh0fGN0cmxTZXRUZXh0Q29sb3J8Y3RybFNldFRleHRDb2xvclNlY29uZGFyeXxjdHJsU2V0VGV4dFNlY29uZGFyeXxjdHJsU2V0VG9vbHRpcHxjdHJsU2V0VG9vbHRpcENvbG9yQm94fGN0cmxTZXRUb29sdGlwQ29sb3JTaGFkZXxjdHJsU2V0VG9vbHRpcENvbG9yVGV4dHxjdHJsU2hvd3xjdHJsU2hvd258Y3RybFRleHR8Y3RybFRleHRIZWlnaHR8Y3RybFRleHRTZWNvbmRhcnl8Y3RybFRleHRXaWR0aHxjdHJsVHlwZXxjdHJsVmlzaWJsZXxjdFJvd0NvbnRyb2xzfGN0Um93Q291bnR8Y3RTZXRDdXJTZWx8Y3RTZXREYXRhfGN0U2V0SGVhZGVyVGVtcGxhdGV8Y3RTZXRSb3dUZW1wbGF0ZXxjdFNldFZhbHVlfGN0VmFsdWV8Y3VyYXRvckFkZG9uc3xjdXJhdG9yQ2FtZXJhfGN1cmF0b3JDYW1lcmFBcmVhfGN1cmF0b3JDYW1lcmFBcmVhQ2VpbGluZ3xjdXJhdG9yQ29lZnxjdXJhdG9yRWRpdGFibGVPYmplY3RzfGN1cmF0b3JFZGl0aW5nQXJlYXxjdXJhdG9yRWRpdGluZ0FyZWFUeXBlfGN1cmF0b3JNb3VzZU92ZXJ8Y3VyYXRvclBvaW50c3xjdXJhdG9yUmVnaXN0ZXJlZE9iamVjdHN8Y3VyYXRvclNlbGVjdGVkfGN1cmF0b3JXYXlwb2ludENvc3R8Y3VycmVudDNERU5PcGVyYXRpb258Y3VycmVudENoYW5uZWx8Y3VycmVudENvbW1hbmR8Y3VycmVudE1hZ2F6aW5lfGN1cnJlbnRNYWdhemluZURldGFpbHxjdXJyZW50TWFnYXppbmVEZXRhaWxUdXJyZXR8Y3VycmVudE1hZ2F6aW5lVHVycmV0fGN1cnJlbnRNdXp6bGV8Y3VycmVudE5hbWVzcGFjZXxjdXJyZW50VGFza3xjdXJyZW50VGFza3N8Y3VycmVudFRocm93YWJsZXxjdXJyZW50VmlzaW9uTW9kZXxjdXJyZW50V2F5cG9pbnR8Y3VycmVudFdlYXBvbnxjdXJyZW50V2VhcG9uTW9kZXxjdXJyZW50V2VhcG9uVHVycmV0fGN1cnJlbnRaZXJvaW5nfGN1cnNvck9iamVjdHxjdXJzb3JUYXJnZXR8Y3VzdG9tQ2hhdHxjdXN0b21SYWRpb3xjdXRGYWRlT3V0fGN1dE9ianxjdXRSc2N8Y3V0VGV4dHxkYW1hZ2V8ZGF0ZXxkYXRlVG9OdW1iZXJ8ZGF5dGltZXxkZUFjdGl2YXRlS2V5fGRlYnJpZWZpbmdUZXh0fGRlYnVnRlNNfGRlYnVnTG9nfGRlZ3xkZWxldGUzREVORW50aXRpZXN8ZGVsZXRlQXR8ZGVsZXRlQ2VudGVyfGRlbGV0ZUNvbGxlY3Rpb258ZGVsZXRlRWRpdG9yT2JqZWN0fGRlbGV0ZUdyb3VwfGRlbGV0ZUdyb3VwV2hlbkVtcHR5fGRlbGV0ZUlkZW50aXR5fGRlbGV0ZUxvY2F0aW9ufGRlbGV0ZU1hcmtlcnxkZWxldGVNYXJrZXJMb2NhbHxkZWxldGVSYW5nZXxkZWxldGVSZXNvdXJjZXN8ZGVsZXRlU2l0ZXxkZWxldGVTdGF0dXN8ZGVsZXRlVGVhbXxkZWxldGVWZWhpY2xlfGRlbGV0ZVZlaGljbGVDcmV3fGRlbGV0ZVdheXBvaW50fGRldGFjaHxkZXRlY3RlZE1pbmVzfGRpYWdfYWN0aXZlTWlzc2lvbkZTTXN8ZGlhZ19hY3RpdmVTY3JpcHRzfGRpYWdfYWN0aXZlU1FGU2NyaXB0c3xkaWFnX2FjdGl2ZVNRU1NjcmlwdHN8ZGlhZ19jYXB0dXJlRnJhbWV8ZGlhZ19jYXB0dXJlRnJhbWVUb0ZpbGV8ZGlhZ19jYXB0dXJlU2xvd0ZyYW1lfGRpYWdfY29kZVBlcmZvcm1hbmNlfGRpYWdfZHJhd01vZGV8ZGlhZ19keW5hbWljU2ltdWxhdGlvbkVuZHxkaWFnX2VuYWJsZXxkaWFnX2VuYWJsZWR8ZGlhZ19mcHN8ZGlhZ19mcHNNaW58ZGlhZ19mcmFtZU5vfGRpYWdfbGlnaHROZXdMb2FkfGRpYWdfbGlzdHxkaWFnX2xvZ3xkaWFnX2xvZ1Nsb3dGcmFtZXxkaWFnX21lcmdlQ29uZmlnRmlsZXxkaWFnX3JlY29yZFR1cnJldExpbWl0c3xkaWFnX3NldExpZ2h0TmV3fGRpYWdfdGlja1RpbWV8ZGlhZ190b2dnbGV8ZGlhbG9nfGRpYXJ5U3ViamVjdEV4aXN0c3xkaWRKSVB8ZGlkSklQT3duZXJ8ZGlmZmljdWx0eXxkaWZmaWN1bHR5RW5hYmxlZHxkaWZmaWN1bHR5RW5hYmxlZFJURHxkaWZmaWN1bHR5T3B0aW9ufGRpcmVjdGlvbnxkaXJlY3RTYXl8ZGlzYWJsZUFJfGRpc2FibGVDb2xsaXNpb25XaXRofGRpc2FibGVDb252ZXJzYXRpb258ZGlzYWJsZURlYnJpZWZpbmdTdGF0c3xkaXNhYmxlTWFwSW5kaWNhdG9yc3xkaXNhYmxlTlZHRXF1aXBtZW50fGRpc2FibGVSZW1vdGVTZW5zb3JzfGRpc2FibGVTZXJpYWxpemF0aW9ufGRpc2FibGVUSUVxdWlwbWVudHxkaXNhYmxlVUFWQ29ubmVjdGFiaWxpdHl8ZGlzYWJsZVVzZXJJbnB1dHxkaXNwbGF5QWRkRXZlbnRIYW5kbGVyfGRpc3BsYXlDdHJsfGRpc3BsYXlOdWxsfGRpc3BsYXlQYXJlbnR8ZGlzcGxheVJlbW92ZUFsbEV2ZW50SGFuZGxlcnN8ZGlzcGxheVJlbW92ZUV2ZW50SGFuZGxlcnxkaXNwbGF5U2V0RXZlbnRIYW5kbGVyfGRpc3NvbHZlVGVhbXxkaXN0YW5jZXxkaXN0YW5jZTJEfGRpc3RhbmNlU3FyfGRpc3RyaWJ1dGlvblJlZ2lvbnxkbzNERU5BY3Rpb258ZG9BcnRpbGxlcnlGaXJlfGRvRmlyZXxkb0ZvbGxvd3xkb0ZTTXxkb0dldE91dHxkb01vdmV8ZG9vclBoYXNlfGRvU3RvcHxkb1N1cHByZXNzaXZlRmlyZXxkb1RhcmdldHxkb1dhdGNofGRyYXdBcnJvd3xkcmF3RWxsaXBzZXxkcmF3SWNvbnxkcmF3SWNvbjNEfGRyYXdMaW5lfGRyYXdMaW5lM0R8ZHJhd0xpbmt8ZHJhd0xvY2F0aW9ufGRyYXdQb2x5Z29ufGRyYXdSZWN0YW5nbGV8ZHJhd1RyaWFuZ2xlfGRyaXZlcnxkcm9wfGR5bmFtaWNTaW11bGF0aW9uRGlzdGFuY2V8ZHluYW1pY1NpbXVsYXRpb25EaXN0YW5jZUNvZWZ8ZHluYW1pY1NpbXVsYXRpb25FbmFibGVkfGR5bmFtaWNTaW11bGF0aW9uU3lzdGVtRW5hYmxlZHxlYXN0fGVkaXQzREVOTWlzc2lvbkF0dHJpYnV0ZXN8ZWRpdE9iamVjdHxlZGl0b3JTZXRFdmVudEhhbmRsZXJ8ZWZmZWN0aXZlQ29tbWFuZGVyfGVtcHR5UG9zaXRpb25zfGVuYWJsZUFJfGVuYWJsZUFJRmVhdHVyZXxlbmFibGVBaW1QcmVjaXNpb258ZW5hYmxlQXR0YWNrfGVuYWJsZUF1ZGlvRmVhdHVyZXxlbmFibGVBdXRvU3RhcnRVcFJURHxlbmFibGVBdXRvVHJpbVJURHxlbmFibGVDYW1TaGFrZXxlbmFibGVDYXVzdGljc3xlbmFibGVDaGFubmVsfGVuYWJsZUNvbGxpc2lvbldpdGh8ZW5hYmxlQ29waWxvdHxlbmFibGVEZWJyaWVmaW5nU3RhdHN8ZW5hYmxlRGlhZ0xlZ2VuZHxlbmFibGVEeW5hbWljU2ltdWxhdGlvbnxlbmFibGVEeW5hbWljU2ltdWxhdGlvblN5c3RlbXxlbmFibGVFbmREaWFsb2d8ZW5hYmxlRW5naW5lQXJ0aWxsZXJ5fGVuYWJsZUVudmlyb25tZW50fGVuYWJsZUZhdGlndWV8ZW5hYmxlR3VuTGlnaHRzfGVuYWJsZUluZm9QYW5lbENvbXBvbmVudHxlbmFibGVJUkxhc2Vyc3xlbmFibGVNaW1pY3N8ZW5hYmxlUGVyc29uVHVycmV0fGVuYWJsZVJhZGlvfGVuYWJsZVJlbG9hZHxlbmFibGVSb3BlQXR0YWNofGVuYWJsZVNhdE5vcm1hbE9uRGV0YWlsfGVuYWJsZVNhdmluZ3xlbmFibGVTZW50ZW5jZXN8ZW5hYmxlU2ltdWxhdGlvbnxlbmFibGVTaW11bGF0aW9uR2xvYmFsfGVuYWJsZVN0YW1pbmF8ZW5hYmxlU3RyZXNzRGFtYWdlfGVuYWJsZVRlYW1Td2l0Y2h8ZW5hYmxlVHJhZmZpY3xlbmFibGVVQVZDb25uZWN0YWJpbGl0eXxlbmFibGVVQVZXYXlwb2ludHN8ZW5hYmxlVmVoaWNsZUNhcmdvfGVuYWJsZVZlaGljbGVTZW5zb3J8ZW5hYmxlV2VhcG9uRGlzYXNzZW1ibHl8ZW5kbHxlbmRMb2FkaW5nU2NyZWVufGVuZE1pc3Npb258ZW5naW5lT258ZW5naW5lc0lzT25SVER8ZW5naW5lc1Bvd2VyUlREfGVuZ2luZXNScG1SVER8ZW5naW5lc1RvcnF1ZVJURHxlbnRpdGllc3xlbnZpcm9ubWVudEVuYWJsZWR8ZXN0aW1hdGVkRW5kU2VydmVyVGltZXxlc3RpbWF0ZWRUaW1lTGVmdHxldmFsT2JqZWN0QXJndW1lbnR8ZXZlcnlCYWNrcGFja3xldmVyeUNvbnRhaW5lcnxleGVjfGV4ZWNFZGl0b3JTY3JpcHR8ZXhwfGV4cGVjdGVkRGVzdGluYXRpb258ZXhwb3J0SklQTWVzc2FnZXN8ZXllRGlyZWN0aW9ufGV5ZVBvc3xmYWNlfGZhY3Rpb258ZmFkZU11c2ljfGZhZGVSYWRpb3xmYWRlU291bmR8ZmFkZVNwZWVjaHxmYWlsTWlzc2lvbnxmaWxsV2VhcG9uc0Zyb21Qb29sfGZpbmR8ZmluZENvdmVyfGZpbmREaXNwbGF5fGZpbmRFZGl0b3JPYmplY3R8ZmluZEVtcHR5UG9zaXRpb258ZmluZEVtcHR5UG9zaXRpb25SZWFkeXxmaW5kSWZ8ZmluZE5lYXJlc3RFbmVteXxmaW5pc2hNaXNzaW9uSW5pdHxmaW5pdGV8ZmlyZXxmaXJlQXRUYXJnZXR8Zmlyc3RCYWNrcGFja3xmbGFnfGZsYWdBbmltYXRpb25QaGFzZXxmbGFnT3duZXJ8ZmxhZ1NpZGV8ZmxhZ1RleHR1cmV8ZmxlZWluZ3xmbG9vcnxmbHlJbkhlaWdodHxmbHlJbkhlaWdodEFTTHxmb2d8Zm9nRm9yZWNhc3R8Zm9nUGFyYW1zfGZvcmNlQWRkVW5pZm9ybXxmb3JjZUF0UG9zaXRpb25SVER8Zm9yY2VkTWFwfGZvcmNlRW5kfGZvcmNlRmxhZ1RleHR1cmV8Zm9yY2VGb2xsb3dSb2FkfGZvcmNlR2VuZXJhdG9yUlREfGZvcmNlTWFwfGZvcmNlUmVzcGF3bnxmb3JjZVNwZWVkfGZvcmNlV2Fsa3xmb3JjZVdlYXBvbkZpcmV8Zm9yY2VXZWF0aGVyQ2hhbmdlfGZvcmdldFRhcmdldHxmb3JtYXR8Zm9ybWF0aW9ufGZvcm1hdGlvbkRpcmVjdGlvbnxmb3JtYXRpb25MZWFkZXJ8Zm9ybWF0aW9uTWVtYmVyc3xmb3JtYXRpb25Qb3NpdGlvbnxmb3JtYXRpb25UYXNrfGZvcm1hdFRleHR8Zm9ybUxlYWRlcnxmcmVlTG9va3xmcm9tRWRpdG9yfGZ1ZWx8ZnVsbENyZXd8Z2VhcklEQ0FtbW9Db3VudHxnZWFyU2xvdEFtbW9Db3VudHxnZWFyU2xvdERhdGF8Z2V0M0RFTkFjdGlvblN0YXRlfGdldDNERU5BdHRyaWJ1dGV8Z2V0M0RFTkNhbWVyYXxnZXQzREVOQ29ubmVjdGlvbnN8Z2V0M0RFTkVudGl0eXxnZXQzREVORW50aXR5SUR8Z2V0M0RFTkdyaWR8Z2V0M0RFTkljb25zVmlzaWJsZXxnZXQzREVOTGF5ZXJFbnRpdGllc3xnZXQzREVOTGluZXNWaXNpYmxlfGdldDNERU5NaXNzaW9uQXR0cmlidXRlfGdldDNERU5Nb3VzZU92ZXJ8Z2V0M0RFTlNlbGVjdGVkfGdldEFpbWluZ0NvZWZ8Z2V0QWxsRW52U291bmRDb250cm9sbGVyc3xnZXRBbGxIaXRQb2ludHNEYW1hZ2V8Z2V0QWxsT3duZWRNaW5lc3xnZXRBbGxTb3VuZENvbnRyb2xsZXJzfGdldEFtbW9DYXJnb3xnZXRBbmltQWltUHJlY2lzaW9ufGdldEFuaW1TcGVlZENvZWZ8Z2V0QXJyYXl8Z2V0QXJ0aWxsZXJ5QW1tb3xnZXRBcnRpbGxlcnlDb21wdXRlclNldHRpbmdzfGdldEFydGlsbGVyeUVUQXxnZXRBc3NpZ25lZEN1cmF0b3JMb2dpY3xnZXRBc3NpZ25lZEN1cmF0b3JVbml0fGdldEJhY2twYWNrQ2FyZ298Z2V0QmxlZWRpbmdSZW1haW5pbmd8Z2V0QnVybmluZ1ZhbHVlfGdldENhbWVyYVZpZXdEaXJlY3Rpb258Z2V0Q2FyZ29JbmRleHxnZXRDZW50ZXJPZk1hc3N8Z2V0Q2xpZW50U3RhdGV8Z2V0Q2xpZW50U3RhdGVOdW1iZXJ8Z2V0Q29tcGF0aWJsZVB5bG9uTWFnYXppbmVzfGdldENvbm5lY3RlZFVBVnxnZXRDb250YWluZXJNYXhMb2FkfGdldEN1cnNvck9iamVjdFBhcmFtc3xnZXRDdXN0b21BaW1Db2VmfGdldERhbW1hZ2V8Z2V0RGVzY3JpcHRpb258Z2V0RGlyfGdldERpclZpc3VhbHxnZXRETENBc3NldHNVc2FnZXxnZXRETENBc3NldHNVc2FnZUJ5TmFtZXxnZXRETENzfGdldERMQ1VzYWdlVGltZXxnZXRFZGl0b3JDYW1lcmF8Z2V0RWRpdG9yTW9kZXxnZXRFZGl0b3JPYmplY3RTY29wZXxnZXRFbGV2YXRpb25PZmZzZXR8Z2V0RW5naW5lVGFyZ2V0UnBtUlREfGdldEVudlNvdW5kQ29udHJvbGxlcnxnZXRGYXRpZ3VlfGdldEZpZWxkTWFudWFsU3RhcnRQYWdlfGdldEZvcmNlZEZsYWdUZXh0dXJlfGdldEZyaWVuZHxnZXRGU01WYXJpYWJsZXxnZXRGdWVsQ2FyZ298Z2V0R3JvdXBJY29ufGdldEdyb3VwSWNvblBhcmFtc3xnZXRHcm91cEljb25zfGdldEhpZGVGcm9tfGdldEhpdHxnZXRIaXRJbmRleHxnZXRIaXRQb2ludERhbWFnZXxnZXRJdGVtQ2FyZ298Z2V0TWFnYXppbmVDYXJnb3xnZXRNYXJrZXJDb2xvcnxnZXRNYXJrZXJQb3N8Z2V0TWFya2VyU2l6ZXxnZXRNYXJrZXJUeXBlfGdldE1hc3N8Z2V0TWlzc2lvbkNvbmZpZ3xnZXRNaXNzaW9uQ29uZmlnVmFsdWV8Z2V0TWlzc2lvbkRMQ3N8Z2V0TWlzc2lvbkxheWVyRW50aXRpZXN8Z2V0TWlzc2lvbkxheWVyc3xnZXRNb2RlbEluZm98Z2V0TW91c2VQb3NpdGlvbnxnZXRNdXNpY1BsYXllZFRpbWV8Z2V0TnVtYmVyfGdldE9iamVjdEFyZ3VtZW50fGdldE9iamVjdENoaWxkcmVufGdldE9iamVjdERMQ3xnZXRPYmplY3RNYXRlcmlhbHN8Z2V0T2JqZWN0UHJveHl8Z2V0T2JqZWN0VGV4dHVyZXN8Z2V0T2JqZWN0VHlwZXxnZXRPYmplY3RWaWV3RGlzdGFuY2V8Z2V0T3h5Z2VuUmVtYWluaW5nfGdldFBlcnNvblVzZWRETENzfGdldFBpbG90Q2FtZXJhRGlyZWN0aW9ufGdldFBpbG90Q2FtZXJhUG9zaXRpb258Z2V0UGlsb3RDYW1lcmFSb3RhdGlvbnxnZXRQaWxvdENhbWVyYVRhcmdldHxnZXRQbGF0ZU51bWJlcnxnZXRQbGF5ZXJDaGFubmVsfGdldFBsYXllclNjb3Jlc3xnZXRQbGF5ZXJVSUR8Z2V0UGxheWVyVUlET2xkfGdldFBvc3xnZXRQb3NBU0x8Z2V0UG9zQVNMVmlzdWFsfGdldFBvc0FTTFd8Z2V0UG9zQVRMfGdldFBvc0FUTFZpc3VhbHxnZXRQb3NWaXN1YWx8Z2V0UG9zV29ybGR8Z2V0UHlsb25NYWdhemluZXN8Z2V0UmVsRGlyfGdldFJlbFBvc3xnZXRSZW1vdGVTZW5zb3JzRGlzYWJsZWR8Z2V0UmVwYWlyQ2FyZ298Z2V0UmVzb2x1dGlvbnxnZXRSb3RvckJyYWtlUlREfGdldFNoYWRvd0Rpc3RhbmNlfGdldFNob3RQYXJlbnRzfGdldFNsaW5nTG9hZHxnZXRTb3VuZENvbnRyb2xsZXJ8Z2V0U291bmRDb250cm9sbGVyUmVzdWx0fGdldFNwZWVkfGdldFN0YW1pbmF8Z2V0U3RhdFZhbHVlfGdldFN1cHByZXNzaW9ufGdldFRlcnJhaW5HcmlkfGdldFRlcnJhaW5IZWlnaHRBU0x8Z2V0VGV4dHxnZXRUb3RhbERMQ1VzYWdlVGltZXxnZXRUcmltT2Zmc2V0UlREfGdldFVuaXRMb2Fkb3V0fGdldFVuaXRUcmFpdHxnZXRVc2VyTUZEVGV4dHxnZXRVc2VyTUZEVmFsdWV8Z2V0VmFyaWFibGV8Z2V0VmVoaWNsZUNhcmdvfGdldFdlYXBvbkNhcmdvfGdldFdlYXBvblN3YXl8Z2V0V2luZ3NPcmllbnRhdGlvblJURHxnZXRXaW5nc1Bvc2l0aW9uUlREfGdldFdQUG9zfGdsYW5jZUF0fGdsb2JhbENoYXR8Z2xvYmFsUmFkaW98Z29nZ2xlc3xncm91cHxncm91cENoYXR8Z3JvdXBGcm9tTmV0SWR8Z3JvdXBJY29uU2VsZWN0YWJsZXxncm91cEljb25zVmlzaWJsZXxncm91cElkfGdyb3VwT3duZXJ8Z3JvdXBSYWRpb3xncm91cFNlbGVjdGVkVW5pdHN8Z3JvdXBTZWxlY3RVbml0fGdycE51bGx8Z3VubmVyfGd1c3RzfGhhbHR8aGFuZGd1bkl0ZW1zfGhhbmRndW5NYWdhemluZXxoYW5kZ3VuV2VhcG9ufGhhbmRzSGl0fGhhc0ludGVyZmFjZXxoYXNQaWxvdENhbWVyYXxoYXNXZWFwb258aGNBbGxHcm91cHN8aGNHcm91cFBhcmFtc3xoY0xlYWRlcnxoY1JlbW92ZUFsbEdyb3Vwc3xoY1JlbW92ZUdyb3VwfGhjU2VsZWN0ZWR8aGNTZWxlY3RHcm91cHxoY1NldEdyb3VwfGhjU2hvd0JhcnxoY1Nob3duQmFyfGhlYWRnZWFyfGhpZGVCb2R5fGhpZGVPYmplY3R8aGlkZU9iamVjdEdsb2JhbHxoaWRlU2VsZWN0aW9ufGhpbnR8aGludEN8aGludENhZGV0fGhpbnRTaWxlbnR8aG1kfGhvc3RNaXNzaW9ufGh0bWxMb2FkfEhVRE1vdmVtZW50TGV2ZWxzfGh1bWlkaXR5fGltYWdlfGltcG9ydEFsbEdyb3Vwc3xpbXBvcnRhbmNlfGlufGluQXJlYXxpbkFyZWFBcnJheXxpbmNhcGFjaXRhdGVkU3RhdGV8aW5kZXBlbmRlbnR8aW5mbGFtZXxpbmZsYW1lZHxpbmZvUGFuZWx8aW5mb1BhbmVsQ29tcG9uZW50RW5hYmxlZHxpbmZvUGFuZWxDb21wb25lbnRzfGluZm9QYW5lbHN8aW5HYW1lVUlTZXRFdmVudEhhbmRsZXJ8aW5oZXJpdHNGcm9tfGluaXRBbWJpZW50TGlmZXxpblBvbHlnb258aW5wdXRBY3Rpb258aW5SYW5nZU9mQXJ0aWxsZXJ5fGluc2VydEVkaXRvck9iamVjdHxpbnRlcnNlY3R8aXMzREVOfGlzM0RFTk11bHRpcGxheWVyfGlzQWJsZVRvQnJlYXRoZXxpc0FnZW50fGlzQWltUHJlY2lzaW9uRW5hYmxlZHxpc0FycmF5fGlzQXV0b0hvdmVyT258aXNBdXRvbm9tb3VzfGlzQXV0b1N0YXJ0VXBFbmFibGVkUlREfGlzQXV0b3Rlc3R8aXNBdXRvVHJpbU9uUlREfGlzQmxlZWRpbmd8aXNCdXJuaW5nfGlzQ2xhc3N8aXNDb2xsaXNpb25MaWdodE9ufGlzQ29waWxvdEVuYWJsZWR8aXNEYW1hZ2VBbGxvd2VkfGlzRGVkaWNhdGVkfGlzRExDQXZhaWxhYmxlfGlzRW5naW5lT258aXNFcXVhbFRvfGlzRXF1YWxUeXBlfGlzRXF1YWxUeXBlQWxsfGlzRXF1YWxUeXBlQW55fGlzRXF1YWxUeXBlQXJyYXl8aXNFcXVhbFR5cGVQYXJhbXN8aXNGaWxlUGF0Y2hpbmdFbmFibGVkfGlzRmxhc2hsaWdodE9ufGlzRmxhdEVtcHR5fGlzRm9yY2VkV2Fsa3xpc0Zvcm1hdGlvbkxlYWRlcnxpc0dyb3VwRGVsZXRlZFdoZW5FbXB0eXxpc0hpZGRlbnxpc0luUmVtYWluc0NvbGxlY3Rvcnxpc0luc3RydWN0b3JGaWd1cmVFbmFibGVkfGlzSVJMYXNlck9ufGlzS2V5QWN0aXZlfGlzS2luZE9mfGlzTGFzZXJPbnxpc0xpZ2h0T258aXNMb2NhbGl6ZWR8aXNNYW51YWxGaXJlfGlzTWFya2VkRm9yQ29sbGVjdGlvbnxpc011bHRpcGxheWVyfGlzTXVsdGlwbGF5ZXJTb2xvfGlzTmlsfGlzTnVsbHxpc051bWJlcnxpc09iamVjdEhpZGRlbnxpc09iamVjdFJURHxpc09uUm9hZHxpc1BpcEVuYWJsZWR8aXNQbGF5ZXJ8aXNSZWFsVGltZXxpc1JlbW90ZUV4ZWN1dGVkfGlzUmVtb3RlRXhlY3V0ZWRKSVB8aXNTZXJ2ZXJ8aXNTaG93aW5nM0RJY29uc3xpc1NpbXBsZU9iamVjdHxpc1NwcmludEFsbG93ZWR8aXNTdGFtaW5hRW5hYmxlZHxpc1N0ZWFtTWlzc2lvbnxpc1N0cmVhbUZyaWVuZGx5VUlFbmFibGVkfGlzU3RyZXNzRGFtYWdlRW5hYmxlZHxpc1RleHR8aXNUb3VjaGluZ0dyb3VuZHxpc1R1cm5lZE91dHxpc1R1dEhpbnRzRW5hYmxlZHxpc1VBVkNvbm5lY3RhYmxlfGlzVUFWQ29ubmVjdGVkfGlzVUlDb250ZXh0fGlzVW5pZm9ybUFsbG93ZWR8aXNWZWhpY2xlQ2FyZ298aXNWZWhpY2xlUmFkYXJPbnxpc1ZlaGljbGVTZW5zb3JFbmFibGVkfGlzV2Fsa2luZ3xpc1dlYXBvbkRlcGxveWVkfGlzV2VhcG9uUmVzdGVkfGl0ZW1DYXJnb3xpdGVtc3xpdGVtc1dpdGhNYWdhemluZXN8am9pbnxqb2luQXN8am9pbkFzU2lsZW50fGpvaW5TaWxlbnR8am9pblN0cmluZ3xrYkFkZERhdGFiYXNlfGtiQWRkRGF0YWJhc2VUYXJnZXRzfGtiQWRkVG9waWN8a2JIYXNUb3BpY3xrYlJlYWN0fGtiUmVtb3ZlVG9waWN8a2JUZWxsfGtiV2FzU2FpZHxrZXlJbWFnZXxrZXlOYW1lfGtub3dzQWJvdXR8bGFuZHxsYW5kQXR8bGFuZFJlc3VsdHxsYW5ndWFnZXxsYXNlclRhcmdldHxsYkFkZHxsYkNsZWFyfGxiQ29sb3J8bGJDb2xvclJpZ2h0fGxiQ3VyU2VsfGxiRGF0YXxsYkRlbGV0ZXxsYklzU2VsZWN0ZWR8bGJQaWN0dXJlfGxiUGljdHVyZVJpZ2h0fGxiU2VsZWN0aW9ufGxiU2V0Q29sb3J8bGJTZXRDb2xvclJpZ2h0fGxiU2V0Q3VyU2VsfGxiU2V0RGF0YXxsYlNldFBpY3R1cmV8bGJTZXRQaWN0dXJlQ29sb3J8bGJTZXRQaWN0dXJlQ29sb3JEaXNhYmxlZHxsYlNldFBpY3R1cmVDb2xvclNlbGVjdGVkfGxiU2V0UGljdHVyZVJpZ2h0fGxiU2V0UGljdHVyZVJpZ2h0Q29sb3J8bGJTZXRQaWN0dXJlUmlnaHRDb2xvckRpc2FibGVkfGxiU2V0UGljdHVyZVJpZ2h0Q29sb3JTZWxlY3RlZHxsYlNldFNlbGVjdENvbG9yfGxiU2V0U2VsZWN0Q29sb3JSaWdodHxsYlNldFNlbGVjdGVkfGxiU2V0VGV4dHxsYlNldFRleHRSaWdodHxsYlNldFRvb2x0aXB8bGJTZXRWYWx1ZXxsYlNpemV8bGJTb3J0fGxiU29ydEJ5VmFsdWV8bGJUZXh0fGxiVGV4dFJpZ2h0fGxiVmFsdWV8bGVhZGVyfGxlYWRlcmJvYXJkRGVJbml0fGxlYWRlcmJvYXJkR2V0Um93c3xsZWFkZXJib2FyZEluaXR8bGVhZGVyYm9hcmRSZXF1ZXN0Um93c0ZyaWVuZHN8bGVhZGVyYm9hcmRSZXF1ZXN0Um93c0dsb2JhbHxsZWFkZXJib2FyZFJlcXVlc3RSb3dzR2xvYmFsQXJvdW5kVXNlcnxsZWFkZXJib2FyZHNSZXF1ZXN0VXBsb2FkU2NvcmV8bGVhZGVyYm9hcmRzUmVxdWVzdFVwbG9hZFNjb3JlS2VlcEJlc3R8bGVhZGVyYm9hcmRTdGF0ZXxsZWF2ZVZlaGljbGV8bGlicmFyeUNyZWRpdHN8bGlicmFyeURpc2NsYWltZXJzfGxpZmVTdGF0ZXxsaWdodEF0dGFjaE9iamVjdHxsaWdodERldGFjaE9iamVjdHxsaWdodElzT258bGlnaHRuaW5nc3xsaW1pdFNwZWVkfGxpbmVhckNvbnZlcnNpb258bGluZUJyZWFrfGxpbmVJbnRlcnNlY3RzfGxpbmVJbnRlcnNlY3RzT2Jqc3xsaW5lSW50ZXJzZWN0c1N1cmZhY2VzfGxpbmVJbnRlcnNlY3RzV2l0aHxsaW5rSXRlbXxsaXN0fGxpc3RPYmplY3RzfGxpc3RSZW1vdGVUYXJnZXRzfGxpc3RWZWhpY2xlU2Vuc29yc3xsbnxsbmJBZGRBcnJheXxsbmJBZGRDb2x1bW58bG5iQWRkUm93fGxuYkNsZWFyfGxuYkNvbG9yfGxuYkNvbG9yUmlnaHR8bG5iQ3VyU2VsUm93fGxuYkRhdGF8bG5iRGVsZXRlQ29sdW1ufGxuYkRlbGV0ZVJvd3xsbmJHZXRDb2x1bW5zUG9zaXRpb258bG5iUGljdHVyZXxsbmJQaWN0dXJlUmlnaHR8bG5iU2V0Q29sb3J8bG5iU2V0Q29sb3JSaWdodHxsbmJTZXRDb2x1bW5zUG9zfGxuYlNldEN1clNlbFJvd3xsbmJTZXREYXRhfGxuYlNldFBpY3R1cmV8bG5iU2V0UGljdHVyZUNvbG9yfGxuYlNldFBpY3R1cmVDb2xvclJpZ2h0fGxuYlNldFBpY3R1cmVDb2xvclNlbGVjdGVkfGxuYlNldFBpY3R1cmVDb2xvclNlbGVjdGVkUmlnaHR8bG5iU2V0UGljdHVyZVJpZ2h0fGxuYlNldFRleHR8bG5iU2V0VGV4dFJpZ2h0fGxuYlNldFZhbHVlfGxuYlNpemV8bG5iU29ydHxsbmJTb3J0QnlWYWx1ZXxsbmJUZXh0fGxuYlRleHRSaWdodHxsbmJWYWx1ZXxsb2FkfGxvYWRBYnN8bG9hZEJhY2twYWNrfGxvYWRGaWxlfGxvYWRHYW1lfGxvYWRJZGVudGl0eXxsb2FkTWFnYXppbmV8bG9hZE92ZXJsYXl8bG9hZFN0YXR1c3xsb2FkVW5pZm9ybXxsb2FkVmVzdHxsb2NhbHxsb2NhbGl6ZXxsb2NhdGlvbk51bGx8bG9jYXRpb25Qb3NpdGlvbnxsb2NrfGxvY2tDYW1lcmFUb3xsb2NrQ2FyZ298bG9ja0RyaXZlcnxsb2NrZWR8bG9ja2VkQ2FyZ298bG9ja2VkRHJpdmVyfGxvY2tlZFR1cnJldHxsb2NrSWRlbnRpdHl8bG9ja1R1cnJldHxsb2NrV1B8bG9nfGxvZ0VudGl0aWVzfGxvZ05ldHdvcmt8bG9nTmV0d29ya1Rlcm1pbmF0ZXxsb29rQXR8bG9va0F0UG9zfG1hZ2F6aW5lQ2FyZ298bWFnYXppbmVzfG1hZ2F6aW5lc0FsbFR1cnJldHN8bWFnYXppbmVzQW1tb3xtYWdhemluZXNBbW1vQ2FyZ298bWFnYXppbmVzQW1tb0Z1bGx8bWFnYXppbmVzRGV0YWlsfG1hZ2F6aW5lc0RldGFpbEJhY2twYWNrfG1hZ2F6aW5lc0RldGFpbFVuaWZvcm18bWFnYXppbmVzRGV0YWlsVmVzdHxtYWdhemluZXNUdXJyZXR8bWFnYXppbmVUdXJyZXRBbW1vfG1hcEFuaW1BZGR8bWFwQW5pbUNsZWFyfG1hcEFuaW1Db21taXR8bWFwQW5pbURvbmV8bWFwQ2VudGVyT25DYW1lcmF8bWFwR3JpZFBvc2l0aW9ufG1hcmtBc0ZpbmlzaGVkT25TdGVhbXxtYXJrZXJBbHBoYXxtYXJrZXJCcnVzaHxtYXJrZXJDb2xvcnxtYXJrZXJEaXJ8bWFya2VyUG9zfG1hcmtlclNoYXBlfG1hcmtlclNpemV8bWFya2VyVGV4dHxtYXJrZXJUeXBlfG1heHxtZW1iZXJzfG1lbnVBY3Rpb258bWVudUFkZHxtZW51Q2hlY2tlZHxtZW51Q2xlYXJ8bWVudUNvbGxhcHNlfG1lbnVEYXRhfG1lbnVEZWxldGV8bWVudUVuYWJsZXxtZW51RW5hYmxlZHxtZW51RXhwYW5kfG1lbnVIb3ZlcnxtZW51UGljdHVyZXxtZW51U2V0QWN0aW9ufG1lbnVTZXRDaGVja3xtZW51U2V0RGF0YXxtZW51U2V0UGljdHVyZXxtZW51U2V0VmFsdWV8bWVudVNob3J0Y3V0fG1lbnVTaG9ydGN1dFRleHR8bWVudVNpemV8bWVudVNvcnR8bWVudVRleHR8bWVudVVSTHxtZW51VmFsdWV8bWlufG1pbmVBY3RpdmV8bWluZURldGVjdGVkQnl8bWlzc2lvbkNvbmZpZ0ZpbGV8bWlzc2lvbkRpZmZpY3VsdHl8bWlzc2lvbk5hbWV8bWlzc2lvbk5hbWVzcGFjZXxtaXNzaW9uU3RhcnR8bWlzc2lvblZlcnNpb258bW9kZWxUb1dvcmxkfG1vZGVsVG9Xb3JsZFZpc3VhbHxtb2RlbFRvV29ybGRWaXN1YWxXb3JsZHxtb2RlbFRvV29ybGRXb3JsZHxtb2RQYXJhbXN8bW9vbkludGVuc2l0eXxtb29uUGhhc2V8bW9yYWxlfG1vdmV8bW92ZTNERU5DYW1lcmF8bW92ZUluQW55fG1vdmVJbkNhcmdvfG1vdmVJbkNvbW1hbmRlcnxtb3ZlSW5Ecml2ZXJ8bW92ZUluR3VubmVyfG1vdmVJblR1cnJldHxtb3ZlT2JqZWN0VG9FbmR8bW92ZU91dHxtb3ZlVGltZXxtb3ZlVG98bW92ZVRvQ29tcGxldGVkfG1vdmVUb0ZhaWxlZHxtdXNpY1ZvbHVtZXxuYW1lfG5hbWVTb3VuZHxuZWFyRW50aXRpZXN8bmVhcmVzdEJ1aWxkaW5nfG5lYXJlc3RMb2NhdGlvbnxuZWFyZXN0TG9jYXRpb25zfG5lYXJlc3RMb2NhdGlvbldpdGhEdWJiaW5nfG5lYXJlc3RPYmplY3R8bmVhcmVzdE9iamVjdHN8bmVhcmVzdFRlcnJhaW5PYmplY3RzfG5lYXJPYmplY3RzfG5lYXJPYmplY3RzUmVhZHl8bmVhclJvYWRzfG5lYXJTdXBwbGllc3xuZWFyVGFyZ2V0c3xuZWVkUmVsb2FkfG5ldElkfG5ldE9iak51bGx8bmV3T3ZlcmxheXxuZXh0TWVudUl0ZW1JbmRleHxuZXh0V2VhdGhlckNoYW5nZXxuTWVudUl0ZW1zfG51bWJlck9mRW5naW5lc1JURHxudW1iZXJUb0RhdGV8b2JqZWN0Q3VyYXRvcnN8b2JqZWN0RnJvbU5ldElkfG9iamVjdFBhcmVudHxvYmpOdWxsfG9ialN0YXR1c3xvbkJyaWVmaW5nR2VhcnxvbkJyaWVmaW5nR3JvdXB8b25CcmllZmluZ05vdGVzfG9uQnJpZWZpbmdQbGFufG9uQnJpZWZpbmdUZWFtU3dpdGNofG9uQ29tbWFuZE1vZGVDaGFuZ2VkfG9uRG91YmxlQ2xpY2t8b25FYWNoRnJhbWV8b25Hcm91cEljb25DbGlja3xvbkdyb3VwSWNvbk92ZXJFbnRlcnxvbkdyb3VwSWNvbk92ZXJMZWF2ZXxvbkhDR3JvdXBTZWxlY3Rpb25DaGFuZ2VkfG9uTWFwU2luZ2xlQ2xpY2t8b25QbGF5ZXJDb25uZWN0ZWR8b25QbGF5ZXJEaXNjb25uZWN0ZWR8b25QcmVsb2FkRmluaXNoZWR8b25QcmVsb2FkU3RhcnRlZHxvblNob3dOZXdPYmplY3R8b25UZWFtU3dpdGNofG9wZW5DdXJhdG9ySW50ZXJmYWNlfG9wZW5ETENQYWdlfG9wZW5EU0ludGVyZmFjZXxvcGVuTWFwfG9wZW5TdGVhbUFwcHxvcGVuWW91dHViZVZpZGVvfG9wZm9yfG9yZGVyR2V0SW58b3ZlcmNhc3R8b3ZlcmNhc3RGb3JlY2FzdHxvd25lcnxwYXJhbXxwYXJhbXN8cGFyc2VOdW1iZXJ8cGFyc2VTaW1wbGVBcnJheXxwYXJzZVRleHR8cGFyc2luZ05hbWVzcGFjZXxwYXJ0aWNsZXNRdWFsaXR5fHBpfHBpY2tXZWFwb25Qb29sfHBpdGNofHBpeGVsR3JpZHxwaXhlbEdyaWRCYXNlfHBpeGVsR3JpZE5vVUlTY2FsZXxwaXhlbEh8cGl4ZWxXfHBsYXlhYmxlU2xvdHNOdW1iZXJ8cGxheWFibGVVbml0c3xwbGF5QWN0aW9ufHBsYXlBY3Rpb25Ob3d8cGxheWVyfHBsYXllclJlc3Bhd25UaW1lfHBsYXllclNpZGV8cGxheWVyc051bWJlcnxwbGF5R2VzdHVyZXxwbGF5TWlzc2lvbnxwbGF5TW92ZXxwbGF5TW92ZU5vd3xwbGF5TXVzaWN8cGxheVNjcmlwdGVkTWlzc2lvbnxwbGF5U291bmR8cGxheVNvdW5kM0R8cG9zaXRpb258cG9zaXRpb25DYW1lcmFUb1dvcmxkfHBvc1NjcmVlblRvV29ybGR8cG9zV29ybGRUb1NjcmVlbnxwcEVmZmVjdEFkanVzdHxwcEVmZmVjdENvbW1pdHxwcEVmZmVjdENvbW1pdHRlZHxwcEVmZmVjdENyZWF0ZXxwcEVmZmVjdERlc3Ryb3l8cHBFZmZlY3RFbmFibGV8cHBFZmZlY3RFbmFibGVkfHBwRWZmZWN0Rm9yY2VJbk5WR3xwcmVjaXNpb258cHJlbG9hZENhbWVyYXxwcmVsb2FkT2JqZWN0fHByZWxvYWRTb3VuZHxwcmVsb2FkVGl0bGVPYmp8cHJlbG9hZFRpdGxlUnNjfHByaW1hcnlXZWFwb258cHJpbWFyeVdlYXBvbkl0ZW1zfHByaW1hcnlXZWFwb25NYWdhemluZXxwcmlvcml0eXxwcm9jZXNzRGlhcnlMaW5rfHByb2Nlc3NJbml0Q29tbWFuZHN8cHJvZHVjdFZlcnNpb258cHJvZmlsZU5hbWV8cHJvZmlsZU5hbWVzcGFjZXxwcm9maWxlTmFtZVN0ZWFtfHByb2dyZXNzTG9hZGluZ1NjcmVlbnxwcm9ncmVzc1Bvc2l0aW9ufHByb2dyZXNzU2V0UG9zaXRpb258cHVibGljVmFyaWFibGV8cHVibGljVmFyaWFibGVDbGllbnR8cHVibGljVmFyaWFibGVTZXJ2ZXJ8cHVzaEJhY2t8cHVzaEJhY2tVbmlxdWV8cHV0V2VhcG9uUG9vbHxxdWVyeUl0ZW1zUG9vbHxxdWVyeU1hZ2F6aW5lUG9vbHxxdWVyeVdlYXBvblBvb2x8cmFkfHJhZGlvQ2hhbm5lbEFkZHxyYWRpb0NoYW5uZWxDcmVhdGV8cmFkaW9DaGFubmVsUmVtb3ZlfHJhZGlvQ2hhbm5lbFNldENhbGxTaWdufHJhZGlvQ2hhbm5lbFNldExhYmVsfHJhZGlvVm9sdW1lfHJhaW58cmFpbmJvd3xyYW5kb218cmFua3xyYW5rSWR8cmF0aW5nfHJlY3Rhbmd1bGFyfHJlZ2lzdGVyZWRUYXNrc3xyZWdpc3RlclRhc2t8cmVsb2FkfHJlbG9hZEVuYWJsZWR8cmVtb3RlQ29udHJvbHxyZW1vdGVFeGVjfHJlbW90ZUV4ZWNDYWxsfHJlbW90ZUV4ZWN1dGVkT3duZXJ8cmVtb3ZlM0RFTkNvbm5lY3Rpb258cmVtb3ZlM0RFTkV2ZW50SGFuZGxlcnxyZW1vdmUzREVOTGF5ZXJ8cmVtb3ZlQWN0aW9ufHJlbW92ZUFsbDNERU5FdmVudEhhbmRsZXJzfHJlbW92ZUFsbEFjdGlvbnN8cmVtb3ZlQWxsQXNzaWduZWRJdGVtc3xyZW1vdmVBbGxDb250YWluZXJzfHJlbW92ZUFsbEN1cmF0b3JBZGRvbnN8cmVtb3ZlQWxsQ3VyYXRvckNhbWVyYUFyZWFzfHJlbW92ZUFsbEN1cmF0b3JFZGl0aW5nQXJlYXN8cmVtb3ZlQWxsRXZlbnRIYW5kbGVyc3xyZW1vdmVBbGxIYW5kZ3VuSXRlbXN8cmVtb3ZlQWxsSXRlbXN8cmVtb3ZlQWxsSXRlbXNXaXRoTWFnYXppbmVzfHJlbW92ZUFsbE1pc3Npb25FdmVudEhhbmRsZXJzfHJlbW92ZUFsbE1QRXZlbnRIYW5kbGVyc3xyZW1vdmVBbGxNdXNpY0V2ZW50SGFuZGxlcnN8cmVtb3ZlQWxsT3duZWRNaW5lc3xyZW1vdmVBbGxQcmltYXJ5V2VhcG9uSXRlbXN8cmVtb3ZlQWxsV2VhcG9uc3xyZW1vdmVCYWNrcGFja3xyZW1vdmVCYWNrcGFja0dsb2JhbHxyZW1vdmVDdXJhdG9yQWRkb25zfHJlbW92ZUN1cmF0b3JDYW1lcmFBcmVhfHJlbW92ZUN1cmF0b3JFZGl0YWJsZU9iamVjdHN8cmVtb3ZlQ3VyYXRvckVkaXRpbmdBcmVhfHJlbW92ZURyYXdJY29ufHJlbW92ZURyYXdMaW5rc3xyZW1vdmVFdmVudEhhbmRsZXJ8cmVtb3ZlRnJvbVJlbWFpbnNDb2xsZWN0b3J8cmVtb3ZlR29nZ2xlc3xyZW1vdmVHcm91cEljb258cmVtb3ZlSGFuZGd1bkl0ZW18cmVtb3ZlSGVhZGdlYXJ8cmVtb3ZlSXRlbXxyZW1vdmVJdGVtRnJvbUJhY2twYWNrfHJlbW92ZUl0ZW1Gcm9tVW5pZm9ybXxyZW1vdmVJdGVtRnJvbVZlc3R8cmVtb3ZlSXRlbXN8cmVtb3ZlTWFnYXppbmV8cmVtb3ZlTWFnYXppbmVHbG9iYWx8cmVtb3ZlTWFnYXppbmVzfHJlbW92ZU1hZ2F6aW5lc1R1cnJldHxyZW1vdmVNYWdhemluZVR1cnJldHxyZW1vdmVNZW51SXRlbXxyZW1vdmVNaXNzaW9uRXZlbnRIYW5kbGVyfHJlbW92ZU1QRXZlbnRIYW5kbGVyfHJlbW92ZU11c2ljRXZlbnRIYW5kbGVyfHJlbW92ZU93bmVkTWluZXxyZW1vdmVQcmltYXJ5V2VhcG9uSXRlbXxyZW1vdmVTZWNvbmRhcnlXZWFwb25JdGVtfHJlbW92ZVNpbXBsZVRhc2t8cmVtb3ZlU3dpdGNoYWJsZVVuaXR8cmVtb3ZlVGVhbU1lbWJlcnxyZW1vdmVVbmlmb3JtfHJlbW92ZVZlc3R8cmVtb3ZlV2VhcG9ufHJlbW92ZVdlYXBvbkF0dGFjaG1lbnRDYXJnb3xyZW1vdmVXZWFwb25DYXJnb3xyZW1vdmVXZWFwb25HbG9iYWx8cmVtb3ZlV2VhcG9uVHVycmV0fHJlcG9ydFJlbW90ZVRhcmdldHxyZXF1aXJlZFZlcnNpb258cmVzZXRDYW1TaGFrZXxyZXNldFN1Ymdyb3VwRGlyZWN0aW9ufHJlc2lzdGFuY2V8cmVzaXplfHJlc291cmNlc3xyZXNwYXduVmVoaWNsZXxyZXN0YXJ0RWRpdG9yQ2FtZXJhfHJldmVhbHxyZXZlYWxNaW5lfHJldmVyc2V8cmV2ZXJzZWRNb3VzZVl8cm9hZEF0fHJvYWRzQ29ubmVjdGVkVG98cm9sZURlc2NyaXB0aW9ufHJvcGVBdHRhY2hlZE9iamVjdHN8cm9wZUF0dGFjaGVkVG98cm9wZUF0dGFjaEVuYWJsZWR8cm9wZUF0dGFjaFRvfHJvcGVDcmVhdGV8cm9wZUN1dHxyb3BlRGVzdHJveXxyb3BlRGV0YWNofHJvcGVFbmRQb3NpdGlvbnxyb3BlTGVuZ3RofHJvcGVzfHJvcGVVbndpbmR8cm9wZVVud291bmR8cm90b3JzRm9yY2VzUlREfHJvdG9yc1JwbVJURHxyb3VuZHxydW5Jbml0U2NyaXB0fHNhZmVab25lSHxzYWZlWm9uZVd8c2FmZVpvbmVXQWJzfHNhZmVab25lWHxzYWZlWm9uZVhBYnN8c2FmZVpvbmVZfHNhdmUzREVOSW52ZW50b3J5fHNhdmVHYW1lfHNhdmVJZGVudGl0eXxzYXZlSm95c3RpY2tzfHNhdmVPdmVybGF5fHNhdmVQcm9maWxlTmFtZXNwYWNlfHNhdmVTdGF0dXN8c2F2ZVZhcnxzYXZpbmdFbmFibGVkfHNheXxzYXkyRHxzYXkzRHxzY29yZXxzY29yZVNpZGV8c2NyZWVuc2hvdHxzY3JlZW5Ub1dvcmxkfHNjcmlwdERvbmV8c2NyaXB0TmFtZXxzY3JpcHROdWxsfHNjdWRTdGF0ZXxzZWNvbmRhcnlXZWFwb258c2Vjb25kYXJ5V2VhcG9uSXRlbXN8c2Vjb25kYXJ5V2VhcG9uTWFnYXppbmV8c2VsZWN0fHNlbGVjdEJlc3RQbGFjZXN8c2VsZWN0RGlhcnlTdWJqZWN0fHNlbGVjdGVkRWRpdG9yT2JqZWN0c3xzZWxlY3RFZGl0b3JPYmplY3R8c2VsZWN0aW9uTmFtZXN8c2VsZWN0aW9uUG9zaXRpb258c2VsZWN0TGVhZGVyfHNlbGVjdE1heHxzZWxlY3RNaW58c2VsZWN0Tm9QbGF5ZXJ8c2VsZWN0UGxheWVyfHNlbGVjdFJhbmRvbXxzZWxlY3RSYW5kb21XZWlnaHRlZHxzZWxlY3RXZWFwb258c2VsZWN0V2VhcG9uVHVycmV0fHNlbmRBVU1lc3NhZ2V8c2VuZFNpbXBsZUNvbW1hbmR8c2VuZFRhc2t8c2VuZFRhc2tSZXN1bHR8c2VuZFVEUE1lc3NhZ2V8c2VydmVyQ29tbWFuZHxzZXJ2ZXJDb21tYW5kQXZhaWxhYmxlfHNlcnZlckNvbW1hbmRFeGVjdXRhYmxlfHNlcnZlck5hbWV8c2VydmVyVGltZXxzZXR8c2V0M0RFTkF0dHJpYnV0ZXxzZXQzREVOQXR0cmlidXRlc3xzZXQzREVOR3JpZHxzZXQzREVOSWNvbnNWaXNpYmxlfHNldDNERU5MYXllcnxzZXQzREVOTGluZXNWaXNpYmxlfHNldDNERU5Mb2dpY1R5cGV8c2V0M0RFTk1pc3Npb25BdHRyaWJ1dGV8c2V0M0RFTk1pc3Npb25BdHRyaWJ1dGVzfHNldDNERU5Nb2RlbHNWaXNpYmxlfHNldDNERU5PYmplY3RUeXBlfHNldDNERU5TZWxlY3RlZHxzZXRBY2NUaW1lfHNldEFjdHVhbENvbGxlY3RpdmVSVER8c2V0QWlycGxhbmVUaHJvdHRsZXxzZXRBaXJwb3J0U2lkZXxzZXRBbW1vfHNldEFtbW9DYXJnb3xzZXRBbW1vT25QeWxvbnxzZXRBbmltU3BlZWRDb2VmfHNldEFwZXJ0dXJlfHNldEFwZXJ0dXJlTmV3fHNldEFybW9yeVBvaW50c3xzZXRBdHRyaWJ1dGVzfHNldEF1dG9ub21vdXN8c2V0QmVoYXZpb3VyfHNldEJsZWVkaW5nUmVtYWluaW5nfHNldEJyYWtlc1JURHxzZXRDYW1lcmFJbnRlcmVzdHxzZXRDYW1TaGFrZURlZlBhcmFtc3xzZXRDYW1TaGFrZVBhcmFtc3xzZXRDYW1Vc2VUSXxzZXRDYXB0aXZlfHNldENlbnRlck9mTWFzc3xzZXRDb2xsaXNpb25MaWdodHxzZXRDb21iYXRNb2RlfHNldENvbXBhc3NPc2NpbGxhdGlvbnxzZXRDb252b3lTZXBhcmF0aW9ufHNldEN1cmF0b3JDYW1lcmFBcmVhQ2VpbGluZ3xzZXRDdXJhdG9yQ29lZnxzZXRDdXJhdG9yRWRpdGluZ0FyZWFUeXBlfHNldEN1cmF0b3JXYXlwb2ludENvc3R8c2V0Q3VycmVudENoYW5uZWx8c2V0Q3VycmVudFRhc2t8c2V0Q3VycmVudFdheXBvaW50fHNldEN1c3RvbUFpbUNvZWZ8c2V0Q3VzdG9tV2VpZ2h0UlREfHNldERhbWFnZXxzZXREYW1tYWdlfHNldERhdGV8c2V0RGVicmllZmluZ1RleHR8c2V0RGVmYXVsdENhbWVyYXxzZXREZXN0aW5hdGlvbnxzZXREZXRhaWxNYXBCbGVuZFBhcnN8c2V0RGlyfHNldERpcmVjdGlvbnxzZXREcmF3SWNvbnxzZXREcml2ZU9uUGF0aHxzZXREcm9wSW50ZXJ2YWx8c2V0RHluYW1pY1NpbXVsYXRpb25EaXN0YW5jZXxzZXREeW5hbWljU2ltdWxhdGlvbkRpc3RhbmNlQ29lZnxzZXRFZGl0b3JNb2RlfHNldEVkaXRvck9iamVjdFNjb3BlfHNldEVmZmVjdENvbmRpdGlvbnxzZXRFbmdpbmVScG1SVER8c2V0RmFjZXxzZXRGYWNlQW5pbWF0aW9ufHNldEZhdGlndWV8c2V0RmVhdHVyZVR5cGV8c2V0RmxhZ0FuaW1hdGlvblBoYXNlfHNldEZsYWdPd25lcnxzZXRGbGFnU2lkZXxzZXRGbGFnVGV4dHVyZXxzZXRGb2d8c2V0Rm9yY2VHZW5lcmF0b3JSVER8c2V0Rm9ybWF0aW9ufHNldEZvcm1hdGlvblRhc2t8c2V0Rm9ybURpcnxzZXRGcmllbmR8c2V0RnJvbUVkaXRvcnxzZXRGU01WYXJpYWJsZXxzZXRGdWVsfHNldEZ1ZWxDYXJnb3xzZXRHcm91cEljb258c2V0R3JvdXBJY29uUGFyYW1zfHNldEdyb3VwSWNvbnNTZWxlY3RhYmxlfHNldEdyb3VwSWNvbnNWaXNpYmxlfHNldEdyb3VwSWR8c2V0R3JvdXBJZEdsb2JhbHxzZXRHcm91cE93bmVyfHNldEd1c3RzfHNldEhpZGVCZWhpbmR8c2V0SGl0fHNldEhpdEluZGV4fHNldEhpdFBvaW50RGFtYWdlfHNldEhvcml6b25QYXJhbGxheENvZWZ8c2V0SFVETW92ZW1lbnRMZXZlbHN8c2V0SWRlbnRpdHl8c2V0SW1wb3J0YW5jZXxzZXRJbmZvUGFuZWx8c2V0TGVhZGVyfHNldExpZ2h0QW1iaWVudHxzZXRMaWdodEF0dGVudWF0aW9ufHNldExpZ2h0QnJpZ2h0bmVzc3xzZXRMaWdodENvbG9yfHNldExpZ2h0RGF5TGlnaHR8c2V0TGlnaHRGbGFyZU1heERpc3RhbmNlfHNldExpZ2h0RmxhcmVTaXplfHNldExpZ2h0SW50ZW5zaXR5fHNldExpZ2h0bmluZ3N8c2V0TGlnaHRVc2VGbGFyZXxzZXRMb2NhbFdpbmRQYXJhbXN8c2V0TWFnYXppbmVUdXJyZXRBbW1vfHNldE1hcmtlckFscGhhfHNldE1hcmtlckFscGhhTG9jYWx8c2V0TWFya2VyQnJ1c2h8c2V0TWFya2VyQnJ1c2hMb2NhbHxzZXRNYXJrZXJDb2xvcnxzZXRNYXJrZXJDb2xvckxvY2FsfHNldE1hcmtlckRpcnxzZXRNYXJrZXJEaXJMb2NhbHxzZXRNYXJrZXJQb3N8c2V0TWFya2VyUG9zTG9jYWx8c2V0TWFya2VyU2hhcGV8c2V0TWFya2VyU2hhcGVMb2NhbHxzZXRNYXJrZXJTaXplfHNldE1hcmtlclNpemVMb2NhbHxzZXRNYXJrZXJUZXh0fHNldE1hcmtlclRleHRMb2NhbHxzZXRNYXJrZXJUeXBlfHNldE1hcmtlclR5cGVMb2NhbHxzZXRNYXNzfHNldE1pbWljfHNldE1vdXNlUG9zaXRpb258c2V0TXVzaWNFZmZlY3R8c2V0TXVzaWNFdmVudEhhbmRsZXJ8c2V0TmFtZXxzZXROYW1lU291bmR8c2V0T2JqZWN0QXJndW1lbnRzfHNldE9iamVjdE1hdGVyaWFsfHNldE9iamVjdE1hdGVyaWFsR2xvYmFsfHNldE9iamVjdFByb3h5fHNldE9iamVjdFRleHR1cmV8c2V0T2JqZWN0VGV4dHVyZUdsb2JhbHxzZXRPYmplY3RWaWV3RGlzdGFuY2V8c2V0T3ZlcmNhc3R8c2V0T3duZXJ8c2V0T3h5Z2VuUmVtYWluaW5nfHNldFBhcnRpY2xlQ2lyY2xlfHNldFBhcnRpY2xlQ2xhc3N8c2V0UGFydGljbGVGaXJlfHNldFBhcnRpY2xlUGFyYW1zfHNldFBhcnRpY2xlUmFuZG9tfHNldFBpbG90Q2FtZXJhRGlyZWN0aW9ufHNldFBpbG90Q2FtZXJhUm90YXRpb258c2V0UGlsb3RDYW1lcmFUYXJnZXR8c2V0UGlsb3RMaWdodHxzZXRQaVBFZmZlY3R8c2V0UGl0Y2h8c2V0UGxhdGVOdW1iZXJ8c2V0UGxheWFibGV8c2V0UGxheWVyUmVzcGF3blRpbWV8c2V0UG9zfHNldFBvc0FTTHxzZXRQb3NBU0wyfHNldFBvc0FTTFd8c2V0UG9zQVRMfHNldFBvc2l0aW9ufHNldFBvc1dvcmxkfHNldFB5bG9uTG9hZE91dHxzZXRQeWxvbnNQcmlvcml0eXxzZXRSYWRpb01zZ3xzZXRSYWlufHNldFJhaW5ib3d8c2V0UmFuZG9tTGlwfHNldFJhbmt8c2V0UmVjdGFuZ3VsYXJ8c2V0UmVwYWlyQ2FyZ298c2V0Um90b3JCcmFrZVJURHxzZXRTaGFkb3dEaXN0YW5jZXxzZXRTaG90UGFyZW50c3xzZXRTaWRlfHNldFNpbXBsZVRhc2tBbHdheXNWaXNpYmxlfHNldFNpbXBsZVRhc2tDdXN0b21EYXRhfHNldFNpbXBsZVRhc2tEZXNjcmlwdGlvbnxzZXRTaW1wbGVUYXNrRGVzdGluYXRpb258c2V0U2ltcGxlVGFza1RhcmdldHxzZXRTaW1wbGVUYXNrVHlwZXxzZXRTaW11bFdlYXRoZXJMYXllcnN8c2V0U2l6ZXxzZXRTa2lsbHxzZXRTbGluZ0xvYWR8c2V0U291bmRFZmZlY3R8c2V0U3BlYWtlcnxzZXRTcGVlY2h8c2V0U3BlZWRNb2RlfHNldFN0YW1pbmF8c2V0U3RhbWluYVNjaGVtZXxzZXRTdGF0VmFsdWV8c2V0U3VwcHJlc3Npb258c2V0U3lzdGVtT2ZVbml0c3xzZXRUYXJnZXRBZ2V8c2V0VGFza01hcmtlck9mZnNldHxzZXRUYXNrUmVzdWx0fHNldFRhc2tTdGF0ZXxzZXRUZXJyYWluR3JpZHxzZXRUZXh0fHNldFRpbWVNdWx0aXBsaWVyfHNldFRpdGxlRWZmZWN0fHNldFRvbmVNYXBwaW5nfHNldFRvbmVNYXBwaW5nUGFyYW1zfHNldFRyYWZmaWNEZW5zaXR5fHNldFRyYWZmaWNEaXN0YW5jZXxzZXRUcmFmZmljR2FwfHNldFRyYWZmaWNTcGVlZHxzZXRUcmlnZ2VyQWN0aXZhdGlvbnxzZXRUcmlnZ2VyQXJlYXxzZXRUcmlnZ2VyU3RhdGVtZW50c3xzZXRUcmlnZ2VyVGV4dHxzZXRUcmlnZ2VyVGltZW91dHxzZXRUcmlnZ2VyVHlwZXxzZXRUeXBlfHNldFVuY29uc2Npb3VzfHNldFVuaXRBYmlsaXR5fHNldFVuaXRMb2Fkb3V0fHNldFVuaXRQb3N8c2V0VW5pdFBvc1dlYWt8c2V0VW5pdFJhbmt8c2V0VW5pdFJlY29pbENvZWZmaWNpZW50fHNldFVuaXRUcmFpdHxzZXRVbmxvYWRJbkNvbWJhdHxzZXRVc2VyQWN0aW9uVGV4dHxzZXRVc2VyTUZEVGV4dHxzZXRVc2VyTUZEVmFsdWV8c2V0VmFyaWFibGV8c2V0VmVjdG9yRGlyfHNldFZlY3RvckRpckFuZFVwfHNldFZlY3RvclVwfHNldFZlaGljbGVBbW1vfHNldFZlaGljbGVBbW1vRGVmfHNldFZlaGljbGVBcm1vcnxzZXRWZWhpY2xlQ2FyZ298c2V0VmVoaWNsZUlkfHNldFZlaGljbGVJbml0fHNldFZlaGljbGVMb2NrfHNldFZlaGljbGVQb3NpdGlvbnxzZXRWZWhpY2xlUmFkYXJ8c2V0VmVoaWNsZVJlY2VpdmVSZW1vdGVUYXJnZXRzfHNldFZlaGljbGVSZXBvcnRPd25Qb3NpdGlvbnxzZXRWZWhpY2xlUmVwb3J0UmVtb3RlVGFyZ2V0c3xzZXRWZWhpY2xlVElQYXJzfHNldFZlaGljbGVWYXJOYW1lfHNldFZlbG9jaXR5fHNldFZlbG9jaXR5TW9kZWxTcGFjZXxzZXRWZWxvY2l0eVRyYW5zZm9ybWF0aW9ufHNldFZpZXdEaXN0YW5jZXxzZXRWaXNpYmxlSWZUcmVlQ29sbGFwc2VkfHNldFdhbnRlZFJwbVJURHxzZXRXYXZlc3xzZXRXYXlwb2ludEJlaGF2aW91cnxzZXRXYXlwb2ludENvbWJhdE1vZGV8c2V0V2F5cG9pbnRDb21wbGV0aW9uUmFkaXVzfHNldFdheXBvaW50RGVzY3JpcHRpb258c2V0V2F5cG9pbnRGb3JjZUJlaGF2aW91cnxzZXRXYXlwb2ludEZvcm1hdGlvbnxzZXRXYXlwb2ludEhvdXNlUG9zaXRpb258c2V0V2F5cG9pbnRMb2l0ZXJSYWRpdXN8c2V0V2F5cG9pbnRMb2l0ZXJUeXBlfHNldFdheXBvaW50TmFtZXxzZXRXYXlwb2ludFBvc2l0aW9ufHNldFdheXBvaW50U2NyaXB0fHNldFdheXBvaW50U3BlZWR8c2V0V2F5cG9pbnRTdGF0ZW1lbnRzfHNldFdheXBvaW50VGltZW91dHxzZXRXYXlwb2ludFR5cGV8c2V0V2F5cG9pbnRWaXNpYmxlfHNldFdlYXBvblJlbG9hZGluZ1RpbWV8c2V0V2luZHxzZXRXaW5kRGlyfHNldFdpbmRGb3JjZXxzZXRXaW5kU3RyfHNldFdpbmdGb3JjZVNjYWxlUlREfHNldFdQUG9zfHNob3czREljb25zfHNob3dDaGF0fHNob3dDaW5lbWFCb3JkZXJ8c2hvd0NvbW1hbmRpbmdNZW51fHNob3dDb21wYXNzfHNob3dDdXJhdG9yQ29tcGFzc3xzaG93R1BTfHNob3dIVUR8c2hvd0xlZ2VuZHxzaG93TWFwfHNob3duQXJ0aWxsZXJ5Q29tcHV0ZXJ8c2hvd25DaGF0fHNob3duQ29tcGFzc3xzaG93bkN1cmF0b3JDb21wYXNzfHNob3dOZXdFZGl0b3JPYmplY3R8c2hvd25HUFN8c2hvd25IVUR8c2hvd25NYXB8c2hvd25QYWR8c2hvd25SYWRpb3xzaG93blNjb3JldGFibGV8c2hvd25VQVZGZWVkfHNob3duV2FycmFudHxzaG93bldhdGNofHNob3dQYWR8c2hvd1JhZGlvfHNob3dTY29yZXRhYmxlfHNob3dTdWJ0aXRsZXN8c2hvd1VBVkZlZWR8c2hvd1dhcnJhbnR8c2hvd1dhdGNofHNob3dXYXlwb2ludHxzaG93V2F5cG9pbnRzfHNpZGV8c2lkZUFtYmllbnRMaWZlfHNpZGVDaGF0fHNpZGVFbXB0eXxzaWRlRW5lbXl8c2lkZUZyaWVuZGx5fHNpZGVMb2dpY3xzaWRlUmFkaW98c2lkZVVua25vd258c2ltcGxlVGFza3N8c2ltdWxhdGlvbkVuYWJsZWR8c2ltdWxDbG91ZERlbnNpdHl8c2ltdWxDbG91ZE9jY2x1c2lvbnxzaW11bEluQ2xvdWRzfHNpbXVsV2VhdGhlclN5bmN8c2lufHNpemV8c2l6ZU9mfHNraWxsfHNraWxsRmluYWx8c2tpcFRpbWV8c2xlZXB8c2xpZGVyUG9zaXRpb258c2xpZGVyUmFuZ2V8c2xpZGVyU2V0UG9zaXRpb258c2xpZGVyU2V0UmFuZ2V8c2xpZGVyU2V0U3BlZWR8c2xpZGVyU3BlZWR8c2xpbmdMb2FkQXNzaXN0YW50U2hvd258c29sZGllck1hZ2F6aW5lc3xzb21lQW1tb3xzb3J0fHNvdW5kVm9sdW1lfHNwZWFrZXJ8c3BlZWR8c3BlZWRNb2RlfHNwbGl0U3RyaW5nfHNxcnR8c3F1YWRQYXJhbXN8c3RhbmNlfHN0YXJ0TG9hZGluZ1NjcmVlbnxzdG9wfHN0b3BFbmdpbmVSVER8c3RvcHBlZHxzdHJ8c3VuT3JNb29ufHN1cHBvcnRJbmZvfHN1cHByZXNzRm9yfHN1cmZhY2VJc1dhdGVyfHN1cmZhY2VOb3JtYWx8c3VyZmFjZVR5cGV8c3dpbUluRGVwdGh8c3dpdGNoYWJsZVVuaXRzfHN3aXRjaEFjdGlvbnxzd2l0Y2hDYW1lcmF8c3dpdGNoR2VzdHVyZXxzd2l0Y2hMaWdodHxzd2l0Y2hNb3ZlfHN5bmNocm9uaXplZE9iamVjdHN8c3luY2hyb25pemVkVHJpZ2dlcnN8c3luY2hyb25pemVkV2F5cG9pbnRzfHN5bmNocm9uaXplT2JqZWN0c0FkZHxzeW5jaHJvbml6ZU9iamVjdHNSZW1vdmV8c3luY2hyb25pemVUcmlnZ2VyfHN5bmNocm9uaXplV2F5cG9pbnR8c3lzdGVtQ2hhdHxzeXN0ZW1PZlVuaXRzfHRhbnx0YXJnZXRLbm93bGVkZ2V8dGFyZ2V0c3x0YXJnZXRzQWdncmVnYXRlfHRhcmdldHNRdWVyeXx0YXNrQWx3YXlzVmlzaWJsZXx0YXNrQ2hpbGRyZW58dGFza0NvbXBsZXRlZHx0YXNrQ3VzdG9tRGF0YXx0YXNrRGVzY3JpcHRpb258dGFza0Rlc3RpbmF0aW9ufHRhc2tIaW50fHRhc2tNYXJrZXJPZmZzZXR8dGFza051bGx8dGFza1BhcmVudHx0YXNrUmVzdWx0fHRhc2tTdGF0ZXx0YXNrVHlwZXx0ZWFtTWVtYmVyfHRlYW1NZW1iZXJOdWxsfHRlYW1OYW1lfHRlYW1zfHRlYW1Td2l0Y2h8dGVhbVN3aXRjaEVuYWJsZWR8dGVhbVR5cGV8dGVybWluYXRlfHRlcnJhaW5JbnRlcnNlY3R8dGVycmFpbkludGVyc2VjdEFTTHx0ZXJyYWluSW50ZXJzZWN0QXRBU0x8dGV4dHx0ZXh0TG9nfHRleHRMb2dGb3JtYXR8dGd8dGltZXx0aW1lTXVsdGlwbGllcnx0aXRsZUN1dHx0aXRsZUZhZGVPdXR8dGl0bGVPYmp8dGl0bGVSc2N8dGl0bGVUZXh0fHRvQXJyYXl8dG9GaXhlZHx0b0xvd2VyfHRvU3RyaW5nfHRvVXBwZXJ8dHJpZ2dlckFjdGl2YXRlZHx0cmlnZ2VyQWN0aXZhdGlvbnx0cmlnZ2VyQXJlYXx0cmlnZ2VyQXR0YWNoZWRWZWhpY2xlfHRyaWdnZXJBdHRhY2hPYmplY3R8dHJpZ2dlckF0dGFjaFZlaGljbGV8dHJpZ2dlckR5bmFtaWNTaW11bGF0aW9ufHRyaWdnZXJTdGF0ZW1lbnRzfHRyaWdnZXJUZXh0fHRyaWdnZXJUaW1lb3V0fHRyaWdnZXJUaW1lb3V0Q3VycmVudHx0cmlnZ2VyVHlwZXx0dXJyZXRMb2NhbHx0dXJyZXRPd25lcnx0dXJyZXRVbml0fHR2QWRkfHR2Q2xlYXJ8dHZDb2xsYXBzZXx0dkNvbGxhcHNlQWxsfHR2Q291bnR8dHZDdXJTZWx8dHZEYXRhfHR2RGVsZXRlfHR2RXhwYW5kfHR2RXhwYW5kQWxsfHR2UGljdHVyZXx0dlBpY3R1cmVSaWdodHx0dlNldENvbG9yfHR2U2V0Q3VyU2VsfHR2U2V0RGF0YXx0dlNldFBpY3R1cmV8dHZTZXRQaWN0dXJlQ29sb3J8dHZTZXRQaWN0dXJlQ29sb3JEaXNhYmxlZHx0dlNldFBpY3R1cmVDb2xvclNlbGVjdGVkfHR2U2V0UGljdHVyZVJpZ2h0fHR2U2V0UGljdHVyZVJpZ2h0Q29sb3J8dHZTZXRQaWN0dXJlUmlnaHRDb2xvckRpc2FibGVkfHR2U2V0UGljdHVyZVJpZ2h0Q29sb3JTZWxlY3RlZHx0dlNldFNlbGVjdENvbG9yfHR2U2V0VGV4dHx0dlNldFRvb2x0aXB8dHZTZXRWYWx1ZXx0dlNvcnR8dHZTb3J0QnlWYWx1ZXx0dlRleHR8dHZUb29sdGlwfHR2VmFsdWV8dHlwZXx0eXBlTmFtZXx0eXBlT2Z8VUFWQ29udHJvbHx1aU5hbWVzcGFjZXx1aVNsZWVwfHVuYXNzaWduQ3VyYXRvcnx1bmFzc2lnbkl0ZW18dW5hc3NpZ25UZWFtfHVuYXNzaWduVmVoaWNsZXx1bmRlcndhdGVyfHVuaWZvcm18dW5pZm9ybUNvbnRhaW5lcnx1bmlmb3JtSXRlbXN8dW5pZm9ybU1hZ2F6aW5lc3x1bml0QWRkb25zfHVuaXRBaW1Qb3NpdGlvbnx1bml0QWltUG9zaXRpb25WaXN1YWx8dW5pdEJhY2twYWNrfHVuaXRJc1VBVnx1bml0UG9zfHVuaXRSZWFkeXx1bml0UmVjb2lsQ29lZmZpY2llbnR8dW5pdHN8dW5pdHNCZWxvd0hlaWdodHx1bmxpbmtJdGVtfHVubG9ja0FjaGlldmVtZW50fHVucmVnaXN0ZXJUYXNrfHVwZGF0ZURyYXdJY29ufHVwZGF0ZU1lbnVJdGVtfHVwZGF0ZU9iamVjdFRyZWV8dXNlQUlPcGVyTWFwT2JzdHJ1Y3Rpb25UZXN0fHVzZUFJU3RlZXJpbmdDb21wb25lbnR8dXNlQXVkaW9UaW1lRm9yTW92ZXN8dXNlcklucHV0RGlzYWJsZWR8dmVjdG9yQWRkfHZlY3RvckNvc3x2ZWN0b3JDcm9zc1Byb2R1Y3R8dmVjdG9yRGlmZnx2ZWN0b3JEaXJ8dmVjdG9yRGlyVmlzdWFsfHZlY3RvckRpc3RhbmNlfHZlY3RvckRpc3RhbmNlU3FyfHZlY3RvckRvdFByb2R1Y3R8dmVjdG9yRnJvbVRvfHZlY3Rvck1hZ25pdHVkZXx2ZWN0b3JNYWduaXR1ZGVTcXJ8dmVjdG9yTW9kZWxUb1dvcmxkfHZlY3Rvck1vZGVsVG9Xb3JsZFZpc3VhbHx2ZWN0b3JNdWx0aXBseXx2ZWN0b3JOb3JtYWxpemVkfHZlY3RvclVwfHZlY3RvclVwVmlzdWFsfHZlY3RvcldvcmxkVG9Nb2RlbHx2ZWN0b3JXb3JsZFRvTW9kZWxWaXN1YWx8dmVoaWNsZXx2ZWhpY2xlQ2FyZ29FbmFibGVkfHZlaGljbGVDaGF0fHZlaGljbGVSYWRpb3x2ZWhpY2xlUmVjZWl2ZVJlbW90ZVRhcmdldHN8dmVoaWNsZVJlcG9ydE93blBvc2l0aW9ufHZlaGljbGVSZXBvcnRSZW1vdGVUYXJnZXRzfHZlaGljbGVzfHZlaGljbGVWYXJOYW1lfHZlbG9jaXR5fHZlbG9jaXR5TW9kZWxTcGFjZXx2ZXJpZnlTaWduYXR1cmV8dmVzdHx2ZXN0Q29udGFpbmVyfHZlc3RJdGVtc3x2ZXN0TWFnYXppbmVzfHZpZXdEaXN0YW5jZXx2aXNpYmxlQ29tcGFzc3x2aXNpYmxlR1BTfHZpc2libGVNYXB8dmlzaWJsZVBvc2l0aW9ufHZpc2libGVQb3NpdGlvbkFTTHx2aXNpYmxlU2NvcmV0YWJsZXx2aXNpYmxlV2F0Y2h8d2FpdFVudGlsfHdhdmVzfHdheXBvaW50QXR0YWNoZWRPYmplY3R8d2F5cG9pbnRBdHRhY2hlZFZlaGljbGV8d2F5cG9pbnRBdHRhY2hPYmplY3R8d2F5cG9pbnRBdHRhY2hWZWhpY2xlfHdheXBvaW50QmVoYXZpb3VyfHdheXBvaW50Q29tYmF0TW9kZXx3YXlwb2ludENvbXBsZXRpb25SYWRpdXN8d2F5cG9pbnREZXNjcmlwdGlvbnx3YXlwb2ludEZvcmNlQmVoYXZpb3VyfHdheXBvaW50Rm9ybWF0aW9ufHdheXBvaW50SG91c2VQb3NpdGlvbnx3YXlwb2ludExvaXRlclJhZGl1c3x3YXlwb2ludExvaXRlclR5cGV8d2F5cG9pbnROYW1lfHdheXBvaW50UG9zaXRpb258d2F5cG9pbnRzfHdheXBvaW50U2NyaXB0fHdheXBvaW50c0VuYWJsZWRVQVZ8d2F5cG9pbnRTaG93fHdheXBvaW50U3BlZWR8d2F5cG9pbnRTdGF0ZW1lbnRzfHdheXBvaW50VGltZW91dHx3YXlwb2ludFRpbWVvdXRDdXJyZW50fHdheXBvaW50VHlwZXx3YXlwb2ludFZpc2libGV8d2VhcG9uQWNjZXNzb3JpZXN8d2VhcG9uQWNjZXNzb3JpZXNDYXJnb3x3ZWFwb25DYXJnb3x3ZWFwb25EaXJlY3Rpb258d2VhcG9uSW5lcnRpYXx3ZWFwb25Mb3dlcmVkfHdlYXBvbnN8d2VhcG9uc0l0ZW1zfHdlYXBvbnNJdGVtc0NhcmdvfHdlYXBvblN0YXRlfHdlYXBvbnNUdXJyZXR8d2VpZ2h0UlREfHdlc3R8V0ZTaWRlVGV4dHx3aW5kfHdpbmREaXJ8d2luZFJURHx3aW5kU3RyfHdpbmdzRm9yY2VzUlREfHdvcmxkTmFtZXx3b3JsZFNpemV8d29ybGRUb01vZGVsfHdvcmxkVG9Nb2RlbFZpc3VhbHx3b3JsZFRvU2NyZWVuKVxcYi9pLFxuICAgIG51bWJlcjpcbiAgICAgIC8oPzpcXCR8XFxiMHgpW1xcZGEtZl0rXFxifCg/OlxcQlxcLlxcZCt8XFxiXFxkKyg/OlxcLlxcZCspPykoPzplWystXT9cXGQrKT9cXGIvaSxcbiAgICBvcGVyYXRvcjogLyMjfD4+fCYmfFxcfFxcfHxbIT08Pl09P3xbLSsqLyUjXl18XFxiKD86YW5kfG1vZHxub3R8b3IpXFxiL2ksXG4gICAgJ21hZ2ljLXZhcmlhYmxlJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcYig/OnRoaXN8dGhpc0xpc3R8dGhpc1RyaWdnZXJ8X2V4Y2VwdGlvbnxfZm5jX3NjcmlwdE5hbWV8X2ZuY19zY3JpcHROYW1lUGFyZW50fF9mb3JFYWNoSW5kZXh8X3RoaXN8X3RoaXNFdmVudEhhbmRsZXJ8X3RoaXNGU018X3RoaXNTY3JpcHR8X3gpXFxiL2ksXG4gICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgfSxcbiAgICBjb25zdGFudDogL1xcYkRJSyg/Ol9bYS16XFxkXSspK1xcYi9pXG4gIH0pXG4gIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3NxZicsICdzdHJpbmcnLCB7XG4gICAgbWFjcm86IHtcbiAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopI1thLXpdKD86W15cXHJcXG5cXFxcXXxcXFxcKD86XFxyXFxufFtcXHNcXFNdKSkqL2ltLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICAgIHBhdHRlcm46IC8jW2Etel0rXFxiL2ksXG4gICAgICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgICAgICB9LFxuICAgICAgICBjb21tZW50OiBQcmlzbS5sYW5ndWFnZXMuc3FmLmNvbW1lbnRcbiAgICAgIH1cbiAgICB9XG4gIH0pXG4gIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMuc3FmWydjbGFzcy1uYW1lJ11cbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsInNxZiIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwia2V5d29yZCIsImJvb2xlYW4iLCJmdW5jdGlvbiIsIm51bWJlciIsIm9wZXJhdG9yIiwiYWxpYXMiLCJjb25zdGFudCIsImluc2VydEJlZm9yZSIsIm1hY3JvIiwibG9va2JlaGluZCIsImluc2lkZSIsImRpcmVjdGl2ZSIsImNvbW1lbnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sqf.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ sql)\n/* harmony export */ });\n// @ts-nocheck\nsql.displayName = \"sql\";\nsql.aliases = [];\n/** @type {import('../core.js').Syntax} */ function sql(Prism) {\n    Prism.languages.sql = {\n        comment: {\n            pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n            lookbehind: true\n        },\n        variable: [\n            {\n                pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n                greedy: true\n            },\n            /@[\\w.$]+/\n        ],\n        string: {\n            pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n            greedy: true,\n            lookbehind: true\n        },\n        identifier: {\n            pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n            greedy: true,\n            lookbehind: true,\n            inside: {\n                punctuation: /^`|`$/\n            }\n        },\n        function: /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n        // Should we highlight user defined functions too?\n        keyword: /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n        boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n        number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n        operator: /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n        punctuation: /[;[\\]()`,.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQUMsVUFBVTtZQUNSO2dCQUNFRixTQUFTO2dCQUNURyxRQUFRO1lBQ1Y7WUFDQTtTQUNEO1FBQ0RDLFFBQVE7WUFDTkosU0FBUztZQUNURyxRQUFRO1lBQ1JGLFlBQVk7UUFDZDtRQUNBSSxZQUFZO1lBQ1ZMLFNBQVM7WUFDVEcsUUFBUTtZQUNSRixZQUFZO1lBQ1pLLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtRQUNGO1FBQ0FDLFVBQ0U7UUFDRixrREFBa0Q7UUFDbERDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLFVBQ0U7UUFDRkwsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3FsLmpzPzM3OTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnNxbC5kaXNwbGF5TmFtZSA9ICdzcWwnXG5zcWwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3FsKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy5zcWwgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pKD86XFwvXFwqW1xcc1xcU10qP1xcKlxcL3woPzotLXxcXC9cXC98IykuKikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogL0AoW1wiJ2BdKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDEpW15cXFxcXSkrXFwxLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgL0BbXFx3LiRdKy9cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteQFxcXFxdKShcInwnKSg/OlxcXFxbXFxzXFxTXXwoPyFcXDIpW15cXFxcXXxcXDJcXDIpKlxcMi8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBpZGVudGlmaWVyOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15AXFxcXF0pYCg/OlxcXFxbXFxzXFxTXXxbXmBcXFxcXXxgYCkqYC8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXmB8YCQvXG4gICAgICB9XG4gICAgfSxcbiAgICBmdW5jdGlvbjpcbiAgICAgIC9cXGIoPzpBVkd8Q09VTlR8RklSU1R8Rk9STUFUfExBU1R8TENBU0V8TEVOfE1BWHxNSUR8TUlOfE1PRHxOT1d8Uk9VTkR8U1VNfFVDQVNFKSg/PVxccypcXCgpL2ksXG4gICAgLy8gU2hvdWxkIHdlIGhpZ2hsaWdodCB1c2VyIGRlZmluZWQgZnVuY3Rpb25zIHRvbz9cbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFDVElPTnxBRER8QUZURVJ8QUxHT1JJVEhNfEFMTHxBTFRFUnxBTkFMWVpFfEFOWXxBUFBMWXxBU3xBU0N8QVVUSE9SSVpBVElPTnxBVVRPX0lOQ1JFTUVOVHxCQUNLVVB8QkRCfEJFR0lOfEJFUktFTEVZREJ8QklHSU5UfEJJTkFSWXxCSVR8QkxPQnxCT09MfEJPT0xFQU58QlJFQUt8QlJPV1NFfEJUUkVFfEJVTEt8Qll8Q0FMTHxDQVNDQURFRD98Q0FTRXxDSEFJTnxDSEFSKD86QUNURVJ8U0VUKT98Q0hFQ0soPzpQT0lOVCk/fENMT1NFfENMVVNURVJFRHxDT0FMRVNDRXxDT0xMQVRFfENPTFVNTlM/fENPTU1FTlR8Q09NTUlUKD86VEVEKT98Q09NUFVURXxDT05ORUNUfENPTlNJU1RFTlR8Q09OU1RSQUlOVHxDT05UQUlOUyg/OlRBQkxFKT98Q09OVElOVUV8Q09OVkVSVHxDUkVBVEV8Q1JPU1N8Q1VSUkVOVCg/Ol9EQVRFfF9USU1FfF9USU1FU1RBTVB8X1VTRVIpP3xDVVJTT1J8Q1lDTEV8REFUQSg/OkJBU0VTPyk/fERBVEUoPzpUSU1FKT98REFZfERCQ0N8REVBTExPQ0FURXxERUN8REVDSU1BTHxERUNMQVJFfERFRkFVTFR8REVGSU5FUnxERUxBWUVEfERFTEVURXxERUxJTUlURVJTP3xERU5ZfERFU0N8REVTQ1JJQkV8REVURVJNSU5JU1RJQ3xESVNBQkxFfERJU0NBUkR8RElTS3xESVNUSU5DVHxESVNUSU5DVFJPV3xESVNUUklCVVRFRHxET3xET1VCTEV8RFJPUHxEVU1NWXxEVU1QKD86RklMRSk/fERVUExJQ0FURXxFTFNFKD86SUYpP3xFTkFCTEV8RU5DTE9TRUR8RU5EfEVOR0lORXxFTlVNfEVSUkxWTHxFUlJPUlN8RVNDQVBFRD98RVhDRVBUfEVYRUMoPzpVVEUpP3xFWElTVFN8RVhJVHxFWFBMQUlOfEVYVEVOREVEfEZFVENIfEZJRUxEU3xGSUxFfEZJTExGQUNUT1J8RklSU1R8RklYRUR8RkxPQVR8Rk9MTE9XSU5HfEZPUig/OiBFQUNIIFJPVyk/fEZPUkNFfEZPUkVJR058RlJFRVRFWFQoPzpUQUJMRSk/fEZST018RlVMTHxGVU5DVElPTnxHRU9NRVRSWSg/OkNPTExFQ1RJT04pP3xHTE9CQUx8R09UT3xHUkFOVHxHUk9VUHxIQU5ETEVSfEhBU0h8SEFWSU5HfEhPTERMT0NLfEhPVVJ8SURFTlRJVFkoPzpDT0x8X0lOU0VSVCk/fElGfElHTk9SRXxJTVBPUlR8SU5ERVh8SU5GSUxFfElOTkVSfElOTk9EQnxJTk9VVHxJTlNFUlR8SU5UfElOVEVHRVJ8SU5URVJTRUNUfElOVEVSVkFMfElOVE98SU5WT0tFUnxJU09MQVRJT058SVRFUkFURXxKT0lOfEtFWVM/fEtJTEx8TEFOR1VBR0V8TEFTVHxMRUFWRXxMRUZUfExFVkVMfExJTUlUfExJTkVOT3xMSU5FU3xMSU5FU1RSSU5HfExPQUR8TE9DQUx8TE9DS3xMT05HKD86QkxPQnxURVhUKXxMT09QfE1BVENIKD86RUQpP3xNRURJVU0oPzpCTE9CfElOVHxURVhUKXxNRVJHRXxNSURETEVJTlR8TUlOVVRFfE1PREV8TU9ESUZJRVN8TU9ESUZZfE1PTlRIfE1VTFRJKD86TElORVNUUklOR3xQT0lOVHxQT0xZR09OKXxOQVRJT05BTHxOQVRVUkFMfE5DSEFSfE5FWFR8Tk98Tk9OQ0xVU1RFUkVEfE5VTExJRnxOVU1FUklDfE9GRj98T0ZGU0VUUz98T058T1BFTig/OkRBVEFTT1VSQ0V8UVVFUll8Uk9XU0VUKT98T1BUSU1JWkV8T1BUSU9OKD86QUxMWSk/fE9SREVSfE9VVCg/OkVSfEZJTEUpP3xPVkVSfFBBUlRJQUx8UEFSVElUSU9OfFBFUkNFTlR8UElWT1R8UExBTnxQT0lOVHxQT0xZR09OfFBSRUNFRElOR3xQUkVDSVNJT058UFJFUEFSRXxQUkVWfFBSSU1BUll8UFJJTlR8UFJJVklMRUdFU3xQUk9DKD86RURVUkUpP3xQVUJMSUN8UFVSR0V8UVVJQ0t8UkFJU0VSUk9SfFJFQURTP3xSRUFMfFJFQ09ORklHVVJFfFJFRkVSRU5DRVN8UkVMRUFTRXxSRU5BTUV8UkVQRUFUKD86QUJMRSk/fFJFUExBQ0V8UkVQTElDQVRJT058UkVRVUlSRXxSRVNJR05BTHxSRVNUT1JFfFJFU1RSSUNUfFJFVFVSTig/OklOR3xTKT98UkVWT0tFfFJJR0hUfFJPTExCQUNLfFJPVVRJTkV8Uk9XKD86Q09VTlR8R1VJRENPTHxTKT98UlRSRUV8UlVMRXxTQVZFKD86UE9JTlQpP3xTQ0hFTUF8U0VDT05EfFNFTEVDVHxTRVJJQUwoPzpJWkFCTEUpP3xTRVNTSU9OKD86X1VTRVIpP3xTRVQoPzpVU0VSKT98U0hBUkV8U0hPV3xTSFVURE9XTnxTSU1QTEV8U01BTExJTlR8U05BUFNIT1R8U09NRXxTT05BTUV8U1FMfFNUQVJUKD86SU5HKT98U1RBVElTVElDU3xTVEFUVVN8U1RSSVBFRHxTWVNURU1fVVNFUnxUQUJMRVM/fFRBQkxFU1BBQ0V8VEVNUCg/Ok9SQVJZfFRBQkxFKT98VEVSTUlOQVRFRHxURVhUKD86U0laRSk/fFRIRU58VElNRSg/OlNUQU1QKT98VElOWSg/OkJMT0J8SU5UfFRFWFQpfFRPUD98VFJBTig/OlNBQ1RJT05TPyk/fFRSSUdHRVJ8VFJVTkNBVEV8VFNFUVVBTHxUWVBFUz98VU5CT1VOREVEfFVOQ09NTUlUVEVEfFVOREVGSU5FRHxVTklPTnxVTklRVUV8VU5MT0NLfFVOUElWT1R8VU5TSUdORUR8VVBEQVRFKD86VEVYVCk/fFVTQUdFfFVTRXxVU0VSfFVTSU5HfFZBTFVFUz98VkFSKD86QklOQVJZfENIQVJ8Q0hBUkFDVEVSfFlJTkcpfFZJRVd8V0FJVEZPUnxXQVJOSU5HU3xXSEVOfFdIRVJFfFdISUxFfFdJVEgoPzogUk9MTFVQfElOKT98V09SS3xXUklURSg/OlRFWFQpP3xZRUFSKVxcYi9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGQUxTRXxOVUxMfFRSVUUpXFxiL2ksXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrXFxiL2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWy0rKlxcLz0lXn5dfCYmP3xcXHxcXHw/fCE9P3w8KD86PT4/fDx8Pik/fD5bPj1dP3xcXGIoPzpBTkR8QkVUV0VFTnxESVZ8SUxJS0V8SU58SVN8TElLRXxOT1R8T1J8UkVHRVhQfFJMSUtFfFNPVU5EUyBMSUtFfFhPUilcXGIvaSxcbiAgICBwdW5jdHVhdGlvbjogL1s7W1xcXSgpYCwuXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInNxbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwidmFyaWFibGUiLCJncmVlZHkiLCJzdHJpbmciLCJpZGVudGlmaWVyIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJmdW5jdGlvbiIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/squirrel.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/squirrel.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ squirrel)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nsquirrel.displayName = \"squirrel\";\nsquirrel.aliases = [];\n/** @type {import('../core.js').Syntax} */ function squirrel(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.squirrel = Prism.languages.extend(\"clike\", {\n        comment: [\n            Prism.languages.clike[\"comment\"][0],\n            {\n                pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n            lookbehind: true,\n            inside: {\n                punctuation: /\\./\n            }\n        },\n        keyword: /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n        number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n        operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n        punctuation: /[(){}\\[\\],;.]/\n    });\n    Prism.languages.insertBefore(\"squirrel\", \"string\", {\n        char: {\n            pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n            lookbehind: true,\n            greedy: true\n        }\n    });\n    Prism.languages.insertBefore(\"squirrel\", \"operator\", {\n        \"attribute-punctuation\": {\n            pattern: /<\\/|\\/>/,\n            alias: \"important\"\n        },\n        lambda: {\n            pattern: /@(?=\\()/,\n            alias: \"operator\"\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zcXVpcnJlbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHLEVBQUU7QUFFckIsd0NBQXdDLEdBQ3pCLFNBQVNGLFNBQVNHLEtBQUs7SUFDcENBLE1BQU1DLFFBQVEsQ0FBQ0wsaURBQWNBO0lBQzdCSSxNQUFNRSxTQUFTLENBQUNMLFFBQVEsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUN6REMsU0FBUztZQUNQSixNQUFNRSxTQUFTLENBQUNHLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUNuQztnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0EsY0FBYztZQUNaRixTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsUUFBUTtnQkFDTkMsYUFBYTtZQUNmO1FBQ0Y7UUFDQUMsU0FDRTtRQUNGQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkgsYUFBYTtJQUNmO0lBQ0FYLE1BQU1FLFNBQVMsQ0FBQ2EsWUFBWSxDQUFDLFlBQVksVUFBVTtRQUNqREMsTUFBTTtZQUNKVixTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtRQUNWO0lBQ0Y7SUFDQVIsTUFBTUUsU0FBUyxDQUFDYSxZQUFZLENBQUMsWUFBWSxZQUFZO1FBQ25ELHlCQUF5QjtZQUN2QlQsU0FBUztZQUNUVyxPQUFPO1FBQ1Q7UUFDQUMsUUFBUTtZQUNOWixTQUFTO1lBQ1RXLE9BQU87UUFDVDtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3F1aXJyZWwuanM/YTZhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG5zcXVpcnJlbC5kaXNwbGF5TmFtZSA9ICdzcXVpcnJlbCdcbnNxdWlycmVsLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNxdWlycmVsKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5sYW5ndWFnZXMuc3F1aXJyZWwgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICBjb21tZW50OiBbXG4gICAgICBQcmlzbS5sYW5ndWFnZXMuY2xpa2VbJ2NvbW1lbnQnXVswXSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhefFteXFxcXDpdKSg/OlxcL1xcL3wjKS4qLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9XG4gICAgXSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxcIidAXSkoPzpAXCIoPzpbXlwiXXxcIlwiKSpcIig/IVwiKXxcIig/OlteXFxcXFxcclxcblwiXXxcXFxcLikqXCIpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjogLyhcXGIoPzpjbGFzc3xlbnVtfGV4dGVuZHN8aW5zdGFuY2VvZilcXHMrKVxcdysoPzpcXC5cXHcrKSovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgIH1cbiAgICB9LFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86X19GSUxFX198X19MSU5FX198YmFzZXxicmVha3xjYXNlfGNhdGNofGNsYXNzfGNsb25lfGNvbnN0fGNvbnN0cnVjdG9yfGNvbnRpbnVlfGRlZmF1bHR8ZGVsZXRlfGVsc2V8ZW51bXxleHRlbmRzfGZvcnxmb3JlYWNofGZ1bmN0aW9ufGlmfGlufGluc3RhbmNlb2Z8bG9jYWx8bnVsbHxyZXN1bWV8cmV0dXJufHN0YXRpY3xzd2l0Y2h8dGhpc3x0aHJvd3x0cnl8dHlwZW9mfHdoaWxlfHlpZWxkKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiKD86MHhbMC05YS1mQS1GXSt8XFxkKyg/OlxcLig/OlxcZCt8W2VFXVsrLV0/XFxkKykpPylcXGIvLFxuICAgIG9wZXJhdG9yOiAvXFwrXFwrfC0tfDw9Pnw8Wy08XXw+Pj4/fCYmP3xcXHxcXHw/fFstKyovJSE9PD5dPT98W35eXXw6Oj8vLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpe31cXFtcXF0sOy5dL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCdzcXVpcnJlbCcsICdzdHJpbmcnLCB7XG4gICAgY2hhcjoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXFwiJ10pJyg/OlteXFxcXCddfFxcXFwoPzpbeHVVXVswLTlhLWZBLUZdezAsOH18W1xcc1xcU10pKScvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH1cbiAgfSlcbiAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgnc3F1aXJyZWwnLCAnb3BlcmF0b3InLCB7XG4gICAgJ2F0dHJpYnV0ZS1wdW5jdHVhdGlvbic6IHtcbiAgICAgIHBhdHRlcm46IC88XFwvfFxcLz4vLFxuICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgfSxcbiAgICBsYW1iZGE6IHtcbiAgICAgIHBhdHRlcm46IC9AKD89XFwoKS8sXG4gICAgICBhbGlhczogJ29wZXJhdG9yJ1xuICAgIH1cbiAgfSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDbGlrZSIsInNxdWlycmVsIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJjbGlrZSIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwibnVtYmVyIiwib3BlcmF0b3IiLCJpbnNlcnRCZWZvcmUiLCJjaGFyIiwiYWxpYXMiLCJsYW1iZGEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/squirrel.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stan.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stan.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ stan)\n/* harmony export */ });\n// @ts-nocheck\nstan.displayName = \"stan\";\nstan.aliases = [];\n/** @type {import('../core.js').Syntax} */ function stan(Prism) {\n    ;\n    (function(Prism) {\n        // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n        var higherOrderFunctions = /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/;\n        Prism.languages.stan = {\n            comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n            string: {\n                // String literals can contain spaces and any printable ASCII characters except for \" and \\\n                // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n                pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n                greedy: true\n            },\n            directive: {\n                pattern: /^([ \\t]*)#include\\b.*/m,\n                lookbehind: true,\n                alias: \"property\"\n            },\n            \"function-arg\": {\n                pattern: RegExp(\"(\" + higherOrderFunctions.source + /\\s*\\(\\s*/.source + \")\" + /[a-zA-Z]\\w*/.source),\n                lookbehind: true,\n                alias: \"function\"\n            },\n            constraint: {\n                pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n                lookbehind: true,\n                inside: {\n                    expression: {\n                        pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    property: /\\b[a-z]\\w*(?=\\s*=)/i,\n                    operator: /=/,\n                    punctuation: /^<|>$|,/\n                }\n            },\n            keyword: [\n                {\n                    pattern: /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n                    alias: \"program-block\"\n                },\n                /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/,\n                // these are functions that are known to take another function as their first argument.\n                higherOrderFunctions\n            ],\n            function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n            number: /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n            punctuation: /[()\\[\\]{},;]/\n        };\n        Prism.languages.stan.constraint.inside.expression.inside = Prism.languages.stan;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdGFuLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZixtRUFBbUU7UUFFbkUsSUFBSUMsdUJBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxJQUFJLEdBQUc7WUFDckJNLFNBQVM7WUFDVEMsUUFBUTtnQkFDTiwyRkFBMkY7Z0JBQzNGLCtGQUErRjtnQkFDL0ZDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBQyxXQUFXO2dCQUNURixTQUFTO2dCQUNURyxZQUFZO2dCQUNaQyxPQUFPO1lBQ1Q7WUFDQSxnQkFBZ0I7Z0JBQ2RKLFNBQVNLLE9BQ1AsTUFDRVQscUJBQXFCVSxNQUFNLEdBQzNCLFdBQVdBLE1BQU0sR0FDakIsTUFDQSxjQUFjQSxNQUFNO2dCQUV4QkgsWUFBWTtnQkFDWkMsT0FBTztZQUNUO1lBQ0FHLFlBQVk7Z0JBQ1ZQLFNBQVM7Z0JBQ1RHLFlBQVk7Z0JBQ1pLLFFBQVE7b0JBQ05DLFlBQVk7d0JBQ1ZULFNBQVM7d0JBQ1RHLFlBQVk7d0JBQ1pLLFFBQVEsS0FBSyxZQUFZO29CQUMzQjtvQkFFQUUsVUFBVTtvQkFDVkMsVUFBVTtvQkFDVkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0FDLFNBQVM7Z0JBQ1A7b0JBQ0ViLFNBQ0U7b0JBQ0ZJLE9BQU87Z0JBQ1Q7Z0JBQ0E7Z0JBQ0EsdUZBQXVGO2dCQUN2RlI7YUFDRDtZQUNEa0IsVUFBVTtZQUNWQyxRQUNFO1lBQ0ZDLFNBQVM7WUFDVEwsVUFBVTtZQUNWQyxhQUFhO1FBQ2Y7UUFDQWpCLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxDQUFDZSxVQUFVLENBQUNDLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDRCxNQUFNLEdBQ3REYixNQUFNRSxTQUFTLENBQUNMLElBQUk7SUFDeEIsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdGFuLmpzP2Q2ODYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnN0YW4uZGlzcGxheU5hbWUgPSAnc3RhbidcbnN0YW4uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhbihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIC8vIGh0dHBzOi8vbWMtc3Rhbi5vcmcvZG9jcy8yXzI4L3JlZmVyZW5jZS1tYW51YWwvYm5mLWdyYW1tYXJzLmh0bWxcblxuICAgIHZhciBoaWdoZXJPcmRlckZ1bmN0aW9ucyA9XG4gICAgICAvXFxiKD86YWxnZWJyYV9zb2x2ZXJ8YWxnZWJyYV9zb2x2ZXJfbmV3dG9ufGludGVncmF0ZV8xZHxpbnRlZ3JhdGVfb2RlfGludGVncmF0ZV9vZGVfYmRmfGludGVncmF0ZV9vZGVfcms0NXxtYXBfcmVjdHxvZGVfKD86YWRhbXN8YmRmfGNrcmt8cms0NSkoPzpfdG9sKT98b2RlX2Fkam9pbnRfdG9sX2N0bHxyZWR1Y2Vfc3VtfHJlZHVjZV9zdW1fc3RhdGljKVxcYi9cbiAgICBQcmlzbS5sYW5ndWFnZXMuc3RhbiA9IHtcbiAgICAgIGNvbW1lbnQ6IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvfCMoPyFpbmNsdWRlKS4qLyxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICAvLyBTdHJpbmcgbGl0ZXJhbHMgY2FuIGNvbnRhaW4gc3BhY2VzIGFuZCBhbnkgcHJpbnRhYmxlIEFTQ0lJIGNoYXJhY3RlcnMgZXhjZXB0IGZvciBcIiBhbmQgXFxcbiAgICAgICAgLy8gaHR0cHM6Ly9tYy1zdGFuLm9yZy9kb2NzLzJfMjQvcmVmZXJlbmNlLW1hbnVhbC9wcmludC1zdGF0ZW1lbnRzLXNlY3Rpb24uaHRtbCNzdHJpbmctbGl0ZXJhbHNcbiAgICAgICAgcGF0dGVybjogL1wiW1xceDIwXFx4MjFcXHgyMy1cXHg1QlxceDVELVxceDdFXSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfSxcbiAgICAgIGRpcmVjdGl2ZToge1xuICAgICAgICBwYXR0ZXJuOiAvXihbIFxcdF0qKSNpbmNsdWRlXFxiLiovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICAgIH0sXG4gICAgICAnZnVuY3Rpb24tYXJnJzoge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgJygnICtcbiAgICAgICAgICAgIGhpZ2hlck9yZGVyRnVuY3Rpb25zLnNvdXJjZSArXG4gICAgICAgICAgICAvXFxzKlxcKFxccyovLnNvdXJjZSArXG4gICAgICAgICAgICAnKScgK1xuICAgICAgICAgICAgL1thLXpBLVpdXFx3Ki8uc291cmNlXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgY29uc3RyYWludDoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcYig/OmludHxtYXRyaXh8cmVhbHxyb3dfdmVjdG9yfHZlY3RvcilcXHMqKTxbXjw+XSo+LyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogLyg9XFxzKilcXFMoPzpcXFN8XFxzKyg/IVxccykpKj8oPz1cXHMqKD86PiR8LFxccypcXHcrXFxzKj0pKS8sXG4gICAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICAgIH0sXG5cbiAgICAgICAgICBwcm9wZXJ0eTogL1xcYlthLXpdXFx3Kig/PVxccyo9KS9pLFxuICAgICAgICAgIG9wZXJhdG9yOiAvPS8sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9ePHw+JHwsL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAga2V5d29yZDogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXGJkYXRhKD89XFxzKlxceyl8XFxiKD86ZnVuY3Rpb25zfGdlbmVyYXRlZHxtb2RlbHxwYXJhbWV0ZXJzfHF1YW50aXRpZXN8dHJhbnNmb3JtZWQpXFxiLyxcbiAgICAgICAgICBhbGlhczogJ3Byb2dyYW0tYmxvY2snXG4gICAgICAgIH0sXG4gICAgICAgIC9cXGIoPzphcnJheXxicmVha3xjaG9sZXNreV9mYWN0b3JfY29ycnxjaG9sZXNreV9mYWN0b3JfY292fGNvbXBsZXh8Y29udGludWV8Y29ycl9tYXRyaXh8Y292X21hdHJpeHxkYXRhfGVsc2V8Zm9yfGlmfGlufGluY3JlbWVudF9sb2dfcHJvYnxpbnR8bWF0cml4fG9yZGVyZWR8cG9zaXRpdmVfb3JkZXJlZHxwcmludHxyZWFsfHJlamVjdHxyZXR1cm58cm93X3ZlY3RvcnxzaW1wbGV4fHRhcmdldHx1bml0X3ZlY3Rvcnx2ZWN0b3J8dm9pZHx3aGlsZSlcXGIvLFxuICAgICAgICAvLyB0aGVzZSBhcmUgZnVuY3Rpb25zIHRoYXQgYXJlIGtub3duIHRvIHRha2UgYW5vdGhlciBmdW5jdGlvbiBhcyB0aGVpciBmaXJzdCBhcmd1bWVudC5cbiAgICAgICAgaGlnaGVyT3JkZXJGdW5jdGlvbnNcbiAgICAgIF0sXG4gICAgICBmdW5jdGlvbjogL1xcYlthLXpdXFx3Kig/PVxccypcXCgpL2ksXG4gICAgICBudW1iZXI6XG4gICAgICAgIC8oPzpcXGJcXGQrKD86X1xcZCspKig/OlxcLig/OlxcZCsoPzpfXFxkKykqKT8pP3xcXEJcXC5cXGQrKD86X1xcZCspKikoPzpFWystXT9cXGQrKD86X1xcZCspKik/aT8oPyFcXHcpL2ksXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgb3BlcmF0b3I6IC88LXxcXC5bKi9dPT98XFx8XFx8P3wmJnxbIT08PitcXC0qL109P3xbJ14lfj86XS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKVxcW1xcXXt9LDtdL1xuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMuc3Rhbi5jb25zdHJhaW50Lmluc2lkZS5leHByZXNzaW9uLmluc2lkZSA9XG4gICAgICBQcmlzbS5sYW5ndWFnZXMuc3RhblxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJzdGFuIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJoaWdoZXJPcmRlckZ1bmN0aW9ucyIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiZGlyZWN0aXZlIiwibG9va2JlaGluZCIsImFsaWFzIiwiUmVnRXhwIiwic291cmNlIiwiY29uc3RyYWludCIsImluc2lkZSIsImV4cHJlc3Npb24iLCJwcm9wZXJ0eSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJrZXl3b3JkIiwiZnVuY3Rpb24iLCJudW1iZXIiLCJib29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stan.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stata.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stata.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ stata)\n/* harmony export */ });\n/* harmony import */ var _java_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./java.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js\");\n/* harmony import */ var _mata_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mata.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mata.js\");\n/* harmony import */ var _python_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./python.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/python.js\");\n// @ts-nocheck\n\n\n\nstata.displayName = \"stata\";\nstata.aliases = [];\n/** @type {import('../core.js').Syntax} */ function stata(Prism) {\n    Prism.register(_java_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_mata_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.register(_python_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n    // https://www.stata.com/manuals/u.pdf\n    // https://www.stata.com/manuals/p.pdf\n    Prism.languages.stata = {\n        comment: [\n            {\n                pattern: /(^[ \\t]*)\\*.*/m,\n                lookbehind: true,\n                greedy: true\n            },\n            {\n                pattern: /(^|\\s)\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        \"string-literal\": {\n            pattern: /\"[^\"\\r\\n]*\"|[‘`']\".*?\"[’`']/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$\\{[^{}]*\\}|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n                    inside: {\n                        punctuation: /^\\$\\{|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: null // see below\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        },\n        mata: {\n            pattern: /(^[ \\t]*mata[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"language-mata\",\n            inside: Prism.languages.mata\n        },\n        java: {\n            pattern: /(^[ \\t]*java[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"language-java\",\n            inside: Prism.languages.java\n        },\n        python: {\n            pattern: /(^[ \\t]*python[ \\t]*:)[\\s\\S]+?(?=^end\\b)/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"language-python\",\n            inside: Prism.languages.python\n        },\n        command: {\n            pattern: /(^[ \\t]*(?:\\.[ \\t]+)?(?:(?:bayes|bootstrap|by|bysort|capture|collect|fmm|fp|frame|jackknife|mfp|mi|nestreg|noisily|permute|quietly|rolling|simulate|statsby|stepwise|svy|version|xi)\\b[^:\\r\\n]*:[ \\t]*|(?:capture|noisily|quietly|version)[ \\t]+)?)[a-zA-Z]\\w*/m,\n            lookbehind: true,\n            greedy: true,\n            alias: \"keyword\"\n        },\n        variable: /\\$\\w+|[‘`']\\w[^’`'\\r\\n]*[’`']/,\n        keyword: /\\b(?:bayes|bootstrap|by|bysort|capture|clear|collect|fmm|fp|frame|if|in|jackknife|mi[ \\t]+estimate|mfp|nestreg|noisily|of|permute|quietly|rolling|simulate|sort|statsby|stepwise|svy|varlist|version|xi)\\b/,\n        boolean: /\\b(?:off|on)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+/,\n        function: /\\b[a-z_]\\w*(?=\\()/i,\n        operator: /\\+\\+|--|##?|[<>!=~]=?|[+\\-*^&|/]/,\n        punctuation: /[(){}[\\],:]/\n    };\n    Prism.languages.stata[\"string-literal\"].inside.interpolation.inside.expression.inside = Prism.languages.stata;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsY0FBYztBQUN1QjtBQUNBO0FBQ0k7QUFDekNHLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ1AsZ0RBQWFBO0lBQzVCTSxNQUFNQyxRQUFRLENBQUNOLGdEQUFhQTtJQUM1QkssTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDOUIsc0NBQXNDO0lBQ3RDLHNDQUFzQztJQUV0Q0ksTUFBTUUsU0FBUyxDQUFDTCxLQUFLLEdBQUc7UUFDdEJNLFNBQVM7WUFDUDtnQkFDRUMsU0FBUztnQkFDVEMsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1lBQ0E7Z0JBQ0VGLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pDLFFBQVE7WUFDVjtTQUNEO1FBQ0Qsa0JBQWtCO1lBQ2hCRixTQUFTO1lBQ1RFLFFBQVE7WUFDUkMsUUFBUTtnQkFDTkMsZUFBZTtvQkFDYkosU0FBUztvQkFDVEcsUUFBUTt3QkFDTkUsYUFBYTt3QkFDYkMsWUFBWTs0QkFDVk4sU0FBUzs0QkFDVEcsUUFBUSxLQUFLLFlBQVk7d0JBQzNCO29CQUNGO2dCQUNGO2dCQUVBSSxRQUFRO1lBQ1Y7UUFDRjtRQUNBQyxNQUFNO1lBQ0pSLFNBQVM7WUFDVEMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JPLE9BQU87WUFDUE4sUUFBUVAsTUFBTUUsU0FBUyxDQUFDVSxJQUFJO1FBQzlCO1FBQ0FFLE1BQU07WUFDSlYsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLFFBQVE7WUFDUk8sT0FBTztZQUNQTixRQUFRUCxNQUFNRSxTQUFTLENBQUNZLElBQUk7UUFDOUI7UUFDQUMsUUFBUTtZQUNOWCxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsUUFBUTtZQUNSTyxPQUFPO1lBQ1BOLFFBQVFQLE1BQU1FLFNBQVMsQ0FBQ2EsTUFBTTtRQUNoQztRQUNBQyxTQUFTO1lBQ1BaLFNBQ0U7WUFDRkMsWUFBWTtZQUNaQyxRQUFRO1lBQ1JPLE9BQU87UUFDVDtRQUNBSSxVQUFVO1FBQ1ZDLFNBQ0U7UUFDRkMsU0FBUztRQUNUQyxRQUFRO1FBQ1JDLFVBQVU7UUFDVkMsVUFBVTtRQUNWYixhQUFhO0lBQ2Y7SUFDQVQsTUFBTUUsU0FBUyxDQUFDTCxLQUFLLENBQ25CLGlCQUNELENBQUNVLE1BQU0sQ0FBQ0MsYUFBYSxDQUFDRCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0gsTUFBTSxHQUFHUCxNQUFNRSxTQUFTLENBQUNMLEtBQUs7QUFDekUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvc3RhdGEuanM/OTRiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckphdmEgZnJvbSAnLi9qYXZhLmpzJ1xuaW1wb3J0IHJlZnJhY3Rvck1hdGEgZnJvbSAnLi9tYXRhLmpzJ1xuaW1wb3J0IHJlZnJhY3RvclB5dGhvbiBmcm9tICcuL3B5dGhvbi5qcydcbnN0YXRhLmRpc3BsYXlOYW1lID0gJ3N0YXRhJ1xuc3RhdGEuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhdGEoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWF0YSlcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yUHl0aG9uKVxuICAvLyBodHRwczovL3d3dy5zdGF0YS5jb20vbWFudWFscy91LnBkZlxuICAvLyBodHRwczovL3d3dy5zdGF0YS5jb20vbWFudWFscy9wLnBkZlxuXG4gIFByaXNtLmxhbmd1YWdlcy5zdGF0YSA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSopXFwqLiovbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF58XFxzKVxcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgICdzdHJpbmctbGl0ZXJhbCc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5dKlwifFvigJhgJ11cIi4qP1wiW+KAmWAnXS8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgaW50ZXJwb2xhdGlvbjoge1xuICAgICAgICAgIHBhdHRlcm46IC9cXCRcXHtbXnt9XSpcXH18W+KAmGAnXVxcd1te4oCZYCdcXHJcXG5dKlvigJlgJ10vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgcHVuY3R1YXRpb246IC9eXFwkXFx7fFxcfSQvLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgaW5zaWRlOiBudWxsIC8vIHNlZSBiZWxvd1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfSxcbiAgICBtYXRhOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcdF0qbWF0YVsgXFx0XSo6KVtcXHNcXFNdKz8oPz1eZW5kXFxiKS9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtbWF0YScsXG4gICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5tYXRhXG4gICAgfSxcbiAgICBqYXZhOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bIFxcdF0qamF2YVsgXFx0XSo6KVtcXHNcXFNdKz8oPz1eZW5kXFxiKS9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnbGFuZ3VhZ2UtamF2YScsXG4gICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5qYXZhXG4gICAgfSxcbiAgICBweXRob246IHtcbiAgICAgIHBhdHRlcm46IC8oXlsgXFx0XSpweXRob25bIFxcdF0qOilbXFxzXFxTXSs/KD89XmVuZFxcYikvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ2xhbmd1YWdlLXB5dGhvbicsXG4gICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5weXRob25cbiAgICB9LFxuICAgIGNvbW1hbmQ6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXlsgXFx0XSooPzpcXC5bIFxcdF0rKT8oPzooPzpiYXllc3xib290c3RyYXB8Ynl8Ynlzb3J0fGNhcHR1cmV8Y29sbGVjdHxmbW18ZnB8ZnJhbWV8amFja2tuaWZlfG1mcHxtaXxuZXN0cmVnfG5vaXNpbHl8cGVybXV0ZXxxdWlldGx5fHJvbGxpbmd8c2ltdWxhdGV8c3RhdHNieXxzdGVwd2lzZXxzdnl8dmVyc2lvbnx4aSlcXGJbXjpcXHJcXG5dKjpbIFxcdF0qfCg/OmNhcHR1cmV8bm9pc2lseXxxdWlldGx5fHZlcnNpb24pWyBcXHRdKyk/KVthLXpBLVpdXFx3Ki9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIHZhcmlhYmxlOiAvXFwkXFx3K3xb4oCYYCddXFx3W17igJlgJ1xcclxcbl0qW+KAmWAnXS8sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpiYXllc3xib290c3RyYXB8Ynl8Ynlzb3J0fGNhcHR1cmV8Y2xlYXJ8Y29sbGVjdHxmbW18ZnB8ZnJhbWV8aWZ8aW58amFja2tuaWZlfG1pWyBcXHRdK2VzdGltYXRlfG1mcHxuZXN0cmVnfG5vaXNpbHl8b2Z8cGVybXV0ZXxxdWlldGx5fHJvbGxpbmd8c2ltdWxhdGV8c29ydHxzdGF0c2J5fHN0ZXB3aXNlfHN2eXx2YXJsaXN0fHZlcnNpb258eGkpXFxiLyxcbiAgICBib29sZWFuOiAvXFxiKD86b2ZmfG9uKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiXFxkKyg/OlxcLlxcZCspP1xcYnxcXEJcXC5cXGQrLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXCgpL2ksXG4gICAgb3BlcmF0b3I6IC9cXCtcXCt8LS18IyM/fFs8PiE9fl09P3xbK1xcLSpeJnwvXS8sXG4gICAgcHVuY3R1YXRpb246IC9bKCl7fVtcXF0sOl0vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnN0YXRhW1xuICAgICdzdHJpbmctbGl0ZXJhbCdcbiAgXS5pbnNpZGUuaW50ZXJwb2xhdGlvbi5pbnNpZGUuZXhwcmVzc2lvbi5pbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuc3RhdGFcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JKYXZhIiwicmVmcmFjdG9yTWF0YSIsInJlZnJhY3RvclB5dGhvbiIsInN0YXRhIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImluc2lkZSIsImludGVycG9sYXRpb24iLCJwdW5jdHVhdGlvbiIsImV4cHJlc3Npb24iLCJzdHJpbmciLCJtYXRhIiwiYWxpYXMiLCJqYXZhIiwicHl0aG9uIiwiY29tbWFuZCIsInZhcmlhYmxlIiwia2V5d29yZCIsImJvb2xlYW4iLCJudW1iZXIiLCJmdW5jdGlvbiIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stylus.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stylus.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ stylus)\n/* harmony export */ });\n// @ts-nocheck\nstylus.displayName = \"stylus\";\nstylus.aliases = [];\n/** @type {import('../core.js').Syntax} */ function stylus(Prism) {\n    ;\n    (function(Prism) {\n        var unit = {\n            pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n            lookbehind: true\n        };\n        // 123 -123 .123 -.123 12.3 -12.3\n        var number = {\n            pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n            lookbehind: true\n        };\n        var inside = {\n            comment: {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n                lookbehind: true\n            },\n            url: {\n                pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n                greedy: true\n            },\n            string: {\n                pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n                greedy: true\n            },\n            interpolation: null,\n            // See below\n            func: null,\n            // See below\n            important: /\\B!(?:important|optional)\\b/i,\n            keyword: {\n                pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n                lookbehind: true\n            },\n            hexcode: /#[\\da-f]{3,6}/i,\n            color: [\n                /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n                {\n                    pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n                    inside: {\n                        unit: unit,\n                        number: number,\n                        function: /[\\w-]+(?=\\()/,\n                        punctuation: /[(),]/\n                    }\n                }\n            ],\n            entity: /\\\\[\\da-f]{1,8}/i,\n            unit: unit,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: [\n                // We want non-word chars around \"-\" because it is\n                // accepted in property names.\n                /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n            ],\n            number: number,\n            punctuation: /[{}()\\[\\];:,]/\n        };\n        inside[\"interpolation\"] = {\n            pattern: /\\{[^\\r\\n}:]+\\}/,\n            alias: \"variable\",\n            inside: {\n                delimiter: {\n                    pattern: /^\\{|\\}$/,\n                    alias: \"punctuation\"\n                },\n                rest: inside\n            }\n        };\n        inside[\"func\"] = {\n            pattern: /[\\w-]+\\([^)]*\\).*/,\n            inside: {\n                function: /^[^(]+/,\n                rest: inside\n            }\n        };\n        Prism.languages.stylus = {\n            \"atrule-declaration\": {\n                pattern: /(^[ \\t]*)@.+/m,\n                lookbehind: true,\n                inside: {\n                    atrule: /^@[\\w-]+/,\n                    rest: inside\n                }\n            },\n            \"variable-declaration\": {\n                pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n                lookbehind: true,\n                inside: {\n                    variable: /^\\S+/,\n                    rest: inside\n                }\n            },\n            statement: {\n                pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n                lookbehind: true,\n                inside: {\n                    keyword: /^\\S+/,\n                    rest: inside\n                }\n            },\n            // A property/value pair cannot end with a comma or a brace\n            // It cannot have indented content unless it ended with a semicolon\n            \"property-declaration\": {\n                pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n                lookbehind: true,\n                inside: {\n                    property: {\n                        pattern: /^[^\\s:]+/,\n                        inside: {\n                            interpolation: inside.interpolation\n                        }\n                    },\n                    rest: inside\n                }\n            },\n            // A selector can contain parentheses only as part of a pseudo-element\n            // It can span multiple lines.\n            // It must end with a comma or an accolade or have indented content.\n            selector: {\n                pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n                lookbehind: true,\n                inside: {\n                    interpolation: inside.interpolation,\n                    comment: inside.comment,\n                    punctuation: /[{},]/\n                }\n            },\n            func: inside.func,\n            string: inside.string,\n            comment: {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n                lookbehind: true,\n                greedy: true\n            },\n            interpolation: inside.interpolation,\n            punctuation: /[{}()\\[\\];:.]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stylus.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/supercollider.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/supercollider.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ supercollider)\n/* harmony export */ });\n// @ts-nocheck\nsupercollider.displayName = \"supercollider\";\nsupercollider.aliases = [\n    \"sclang\"\n];\n/** @type {import('../core.js').Syntax} */ function supercollider(Prism) {\n    Prism.languages.supercollider = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /(^|[^\\\\])\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n            lookbehind: true,\n            greedy: true\n        },\n        char: {\n            pattern: /\\$(?:[^\\\\\\r\\n]|\\\\.)/,\n            greedy: true\n        },\n        symbol: {\n            pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'|\\\\\\w+/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /\\b(?:_|arg|classvar|const|nil|var|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        label: {\n            pattern: /\\b[a-z_]\\w*(?=\\s*:)/,\n            alias: \"property\"\n        },\n        number: /\\b(?:inf|pi|0x[0-9a-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?(?:pi)?|\\d+r[0-9a-zA-Z]+(?:\\.[0-9a-zA-Z]+)?|\\d+[sb]{1,4}\\d*)\\b/,\n        \"class-name\": /\\b[A-Z]\\w*\\b/,\n        operator: /\\.{2,3}|#(?![[{])|&&|[!=]==?|\\+>>|\\+{1,3}|-[->]|=>|>>|\\?\\?|@\\|?@|\\|(?:@|[!=]=)?\\||!\\?|<[!=>]|\\*{1,2}|<{2,3}\\*?|[-!%&/<>?@|=`]/,\n        punctuation: /[{}()[\\].:,;]|#[[{]/\n    };\n    Prism.languages.sclang = Prism.languages.supercollider;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zdXBlcmNvbGxpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLGNBQWNDLFdBQVcsR0FBRztBQUM1QkQsY0FBY0UsT0FBTyxHQUFHO0lBQUM7Q0FBUztBQUVsQyx3Q0FBd0MsR0FDekIsU0FBU0YsY0FBY0csS0FBSztJQUN6Q0EsTUFBTUMsU0FBUyxDQUFDSixhQUFhLEdBQUc7UUFDOUJLLFNBQVM7WUFDUEMsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RHLFlBQVk7WUFDWkYsUUFBUTtRQUNWO1FBQ0FHLE1BQU07WUFDSkosU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUksUUFBUTtZQUNOTCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkYsUUFBUTtRQUNWO1FBQ0FLLFNBQVM7UUFDVEMsU0FBUztRQUNUQyxPQUFPO1lBQ0xSLFNBQVM7WUFDVFMsT0FBTztRQUNUO1FBQ0FDLFFBQ0U7UUFDRixjQUFjO1FBQ2RDLFVBQ0U7UUFDRkMsYUFBYTtJQUNmO0lBQ0FmLE1BQU1DLFNBQVMsQ0FBQ2UsTUFBTSxHQUFHaEIsTUFBTUMsU0FBUyxDQUFDSixhQUFhO0FBQ3hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3N1cGVyY29sbGlkZXIuanM/ODUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuc3VwZXJjb2xsaWRlci5kaXNwbGF5TmFtZSA9ICdzdXBlcmNvbGxpZGVyJ1xuc3VwZXJjb2xsaWRlci5hbGlhc2VzID0gWydzY2xhbmcnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN1cGVyY29sbGlkZXIoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnN1cGVyY29sbGlkZXIgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgL1xcL1xcLy4qfFxcL1xcKig/OlteKi9dfFxcKig/IVxcLyl8XFwvKD8hXFwqKXxcXC9cXCooPzpbXipdfFxcKig/IVxcLykpKlxcKlxcLykqXFwqXFwvLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSlcIig/OlteXCJcXFxcXXxcXFxcW1xcc1xcU10pKlwiLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIGNoYXI6IHtcbiAgICAgIHBhdHRlcm46IC9cXCQoPzpbXlxcXFxcXHJcXG5dfFxcXFwuKS8sXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN5bWJvbDoge1xuICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pJyg/OlteJ1xcXFxdfFxcXFxbXFxzXFxTXSkqJ3xcXFxcXFx3Ky8sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiAvXFxiKD86X3xhcmd8Y2xhc3N2YXJ8Y29uc3R8bmlsfHZhcnx3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbGFiZWw6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqKD89XFxzKjopLyxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBudW1iZXI6XG4gICAgICAvXFxiKD86aW5mfHBpfDB4WzAtOWEtZkEtRl0rfFxcZCsoPzpcXC5cXGQrKT8oPzpbZUVdWystXT9cXGQrKT8oPzpwaSk/fFxcZCtyWzAtOWEtekEtWl0rKD86XFwuWzAtOWEtekEtWl0rKT98XFxkK1tzYl17MSw0fVxcZCopXFxiLyxcbiAgICAnY2xhc3MtbmFtZSc6IC9cXGJbQS1aXVxcdypcXGIvLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcLnsyLDN9fCMoPyFbW3tdKXwmJnxbIT1dPT0/fFxcKz4+fFxcK3sxLDN9fC1bLT5dfD0+fD4+fFxcP1xcP3xAXFx8P0B8XFx8KD86QHxbIT1dPSk/XFx8fCFcXD98PFshPT5dfFxcKnsxLDJ9fDx7MiwzfVxcKj98Wy0hJSYvPD4/QHw9YF0vLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9KClbXFxdLjosO118I1tbe10vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnNjbGFuZyA9IFByaXNtLmxhbmd1YWdlcy5zdXBlcmNvbGxpZGVyXG59XG4iXSwibmFtZXMiOlsic3VwZXJjb2xsaWRlciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJzdHJpbmciLCJsb29rYmVoaW5kIiwiY2hhciIsInN5bWJvbCIsImtleXdvcmQiLCJib29sZWFuIiwibGFiZWwiLCJhbGlhcyIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJzY2xhbmciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/supercollider.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/swift.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/swift.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ swift)\n/* harmony export */ });\n// @ts-nocheck\nswift.displayName = \"swift\";\nswift.aliases = [];\n/** @type {import('../core.js').Syntax} */ function swift(Prism) {\n    Prism.languages.swift = {\n        comment: {\n            // Nested comments are supported up to 2 levels\n            pattern: /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n            lookbehind: true,\n            greedy: true\n        },\n        \"string-literal\": [\n            // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n            {\n                pattern: RegExp(/(^|[^\"#])/.source + \"(?:\" + // single-line string\n                /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/.source + \"|\" + // multi-line string\n                /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/.source + \")\" + /(?![\"#])/.source),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    \"interpolation-punctuation\": {\n                        pattern: /^\\)|\\\\\\($/,\n                        alias: \"punctuation\"\n                    },\n                    punctuation: /\\\\(?=[\\r\\n])/,\n                    string: /[\\s\\S]+/\n                }\n            },\n            {\n                pattern: RegExp(/(^|[^\"#])(#+)/.source + \"(?:\" + // single-line string\n                /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/.source + \"|\" + // multi-line string\n                /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source + \")\" + \"\\\\2\"),\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n                        lookbehind: true,\n                        inside: null // see below\n                    },\n                    \"interpolation-punctuation\": {\n                        pattern: /^\\)|\\\\#+\\($/,\n                        alias: \"punctuation\"\n                    },\n                    string: /[\\s\\S]+/\n                }\n            }\n        ],\n        directive: {\n            // directives with conditions\n            pattern: RegExp(/#/.source + \"(?:\" + (/(?:elseif|if)\\b/.source + \"(?:[ \t]*\" + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/.source + \")+\") + \"|\" + /(?:else|endif)\\b/.source + \")\"),\n            alias: \"property\",\n            inside: {\n                \"directive-name\": /^#\\w+/,\n                boolean: /\\b(?:false|true)\\b/,\n                number: /\\b\\d+(?:\\.\\d+)*\\b/,\n                operator: /!|&&|\\|\\||[<>]=?/,\n                punctuation: /[(),]/\n            }\n        },\n        literal: {\n            pattern: /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n            alias: \"constant\"\n        },\n        \"other-directive\": {\n            pattern: /#\\w+\\b/,\n            alias: \"property\"\n        },\n        attribute: {\n            pattern: /@\\w+/,\n            alias: \"atrule\"\n        },\n        \"function-definition\": {\n            pattern: /(\\bfunc\\s+)\\w+/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        label: {\n            // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n            pattern: /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n            lookbehind: true,\n            alias: \"important\"\n        },\n        keyword: /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        nil: {\n            pattern: /\\bnil\\b/,\n            alias: \"constant\"\n        },\n        \"short-argument\": /\\$\\d+\\b/,\n        omit: {\n            pattern: /\\b_\\b/,\n            alias: \"keyword\"\n        },\n        number: /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n        // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n        \"class-name\": /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n        // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n        // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n        // This regex only supports ASCII operators.\n        operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n        punctuation: /[{}[\\]();,.:\\\\]/\n    };\n    Prism.languages.swift[\"string-literal\"].forEach(function(rule) {\n        rule.inside[\"interpolation\"].inside = Prism.languages.swift;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/swift.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/systemd.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/systemd.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ systemd)\n/* harmony export */ });\n// @ts-nocheck\nsystemd.displayName = \"systemd\";\nsystemd.aliases = [];\n/** @type {import('../core.js').Syntax} */ function systemd(Prism) {\n    // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n    ;\n    (function(Prism) {\n        var comment = {\n            pattern: /^[;#].*/m,\n            greedy: true\n        };\n        var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source;\n        Prism.languages.systemd = {\n            comment: comment,\n            section: {\n                pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n                greedy: true,\n                inside: {\n                    punctuation: /^\\[|\\]$/,\n                    \"section-name\": {\n                        pattern: /[\\s\\S]+/,\n                        alias: \"selector\"\n                    }\n                }\n            },\n            key: {\n                pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n                greedy: true,\n                alias: \"attr-name\"\n            },\n            value: {\n                // This pattern is quite complex because of two properties:\n                //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n                //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n                //  2) Line continuations.\n                //     After line continuations, empty lines and comments are ignored so we have to consume them.\n                pattern: RegExp(/(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n                \"(?:\" + quotesSource + '|(?=[^\"\\r\\n]))' + // main loop\n                \"(?:\" + (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n                \"|\" + '[ \t]+(?:(?![ \t\"])|' + quotesSource + \")\" + // line continuation\n                \"|\" + /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) + \")*\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"attr-value\",\n                inside: {\n                    comment: comment,\n                    quoted: {\n                        pattern: RegExp(/(^|\\s)/.source + quotesSource),\n                        lookbehind: true,\n                        greedy: true\n                    },\n                    punctuation: /\\\\$/m,\n                    boolean: {\n                        pattern: /^(?:false|no|off|on|true|yes)$/,\n                        greedy: true\n                    }\n                }\n            },\n            punctuation: /=/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zeXN0ZW1kLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkMsdUVBQXVFOztJQUVyRSxVQUFVQSxLQUFLO1FBQ2YsSUFBSUMsVUFBVTtZQUNaQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLElBQUlDLGVBQWUsNENBQTRDQyxNQUFNO1FBQ3JFTCxNQUFNTSxTQUFTLENBQUNULE9BQU8sR0FBRztZQUN4QkksU0FBU0E7WUFDVE0sU0FBUztnQkFDUEwsU0FBUztnQkFDVEMsUUFBUTtnQkFDUkssUUFBUTtvQkFDTkMsYUFBYTtvQkFDYixnQkFBZ0I7d0JBQ2RQLFNBQVM7d0JBQ1RRLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtZQUNBQyxLQUFLO2dCQUNIVCxTQUFTO2dCQUNUQyxRQUFRO2dCQUNSTyxPQUFPO1lBQ1Q7WUFDQUUsT0FBTztnQkFDTCwyREFBMkQ7Z0JBQzNELHlHQUF5RztnQkFDekcsOEZBQThGO2dCQUM5RiwwQkFBMEI7Z0JBQzFCLGlHQUFpRztnQkFDakdWLFNBQVNXLE9BQ1Asa0JBQWtCUixNQUFNLEdBQ3RCLDZDQUE2QztnQkFDN0MsUUFDQUQsZUFDQSxtQkFDQSxZQUFZO2dCQUNaLFFBQ0MsV0FBVUMsTUFBTSxHQUNmLDZDQUE2QztnQkFDN0MsTUFDQSx1QkFDQUQsZUFDQSxNQUNBLG9CQUFvQjtnQkFDcEIsTUFDQSxzQ0FBc0NDLE1BQU0sSUFDOUM7Z0JBRUpTLFlBQVk7Z0JBQ1pYLFFBQVE7Z0JBQ1JPLE9BQU87Z0JBQ1BGLFFBQVE7b0JBQ05QLFNBQVNBO29CQUNUYyxRQUFRO3dCQUNOYixTQUFTVyxPQUFPLFNBQVNSLE1BQU0sR0FBR0Q7d0JBQ2xDVSxZQUFZO3dCQUNaWCxRQUFRO29CQUNWO29CQUNBTSxhQUFhO29CQUNiTyxTQUFTO3dCQUNQZCxTQUFTO3dCQUNUQyxRQUFRO29CQUNWO2dCQUNGO1lBQ0Y7WUFDQU0sYUFBYTtRQUNmO0lBQ0YsR0FBR1Q7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy9zeXN0ZW1kLmpzPzYxYzQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnN5c3RlbWQuZGlzcGxheU5hbWUgPSAnc3lzdGVtZCdcbnN5c3RlbWQuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3lzdGVtZChQcmlzbSkge1xuICAvLyBodHRwczovL3d3dy5mcmVlZGVza3RvcC5vcmcvc29mdHdhcmUvc3lzdGVtZC9tYW4vc3lzdGVtZC5zeW50YXguaHRtbFxuXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIGNvbW1lbnQgPSB7XG4gICAgICBwYXR0ZXJuOiAvXls7I10uKi9tLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfVxuICAgIHZhciBxdW90ZXNTb3VyY2UgPSAvXCIoPzpbXlxcclxcblwiXFxcXF18XFxcXCg/OlteXFxyXXxcXHJcXG4/KSkqXCIoPyFcXFMpLy5zb3VyY2VcbiAgICBQcmlzbS5sYW5ndWFnZXMuc3lzdGVtZCA9IHtcbiAgICAgIGNvbW1lbnQ6IGNvbW1lbnQsXG4gICAgICBzZWN0aW9uOiB7XG4gICAgICAgIHBhdHRlcm46IC9eXFxbW15cXG5cXHJcXFtcXF1dKlxcXSg/PVsgXFx0XSokKS9tLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXlxcW3xcXF0kLyxcbiAgICAgICAgICAnc2VjdGlvbi1uYW1lJzoge1xuICAgICAgICAgICAgcGF0dGVybjogL1tcXHNcXFNdKy8sXG4gICAgICAgICAgICBhbGlhczogJ3NlbGVjdG9yJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGtleToge1xuICAgICAgICBwYXR0ZXJuOiAvXlteXFxzPV0rKD89WyBcXHRdKj0pL20sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdhdHRyLW5hbWUnXG4gICAgICB9LFxuICAgICAgdmFsdWU6IHtcbiAgICAgICAgLy8gVGhpcyBwYXR0ZXJuIGlzIHF1aXRlIGNvbXBsZXggYmVjYXVzZSBvZiB0d28gcHJvcGVydGllczpcbiAgICAgICAgLy8gIDEpIFF1b3RlcyAoc3RyaW5ncykgbXVzdCBiZSBwcmVjZWRlZCBieSBhIHNwYWNlLiBTaW5jZSB3ZSBjYW4ndCB1c2UgbG9va2JlaGluZHMsIHdlIGhhdmUgdG8gXCJyZXNvbHZlXCJcbiAgICAgICAgLy8gICAgIHRoZSBsb29rYmVoaW5kLiBZb3Ugd2lsbCBzZWUgdGhpcyBpbiB0aGUgbWFpbiBsb29wIHdoZXJlIHNwYWNlcyBhcmUgaGFuZGxlZCBzZXBhcmF0ZWx5LlxuICAgICAgICAvLyAgMikgTGluZSBjb250aW51YXRpb25zLlxuICAgICAgICAvLyAgICAgQWZ0ZXIgbGluZSBjb250aW51YXRpb25zLCBlbXB0eSBsaW5lcyBhbmQgY29tbWVudHMgYXJlIGlnbm9yZWQgc28gd2UgaGF2ZSB0byBjb25zdW1lIHRoZW0uXG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAvKD1bIFxcdF0qKD8hXFxzKSkvLnNvdXJjZSArXG4gICAgICAgICAgICAvLyB0aGUgdmFsdWUgZWl0aGVyIHN0YXJ0cyB3aXRoIHF1b3RlcyBvciBub3RcbiAgICAgICAgICAgICcoPzonICtcbiAgICAgICAgICAgIHF1b3Rlc1NvdXJjZSArXG4gICAgICAgICAgICAnfCg/PVteXCJcXHJcXG5dKSknICtcbiAgICAgICAgICAgIC8vIG1haW4gbG9vcFxuICAgICAgICAgICAgJyg/OicgK1xuICAgICAgICAgICAgKC9bXlxcc1xcXFxdLy5zb3VyY2UgK1xuICAgICAgICAgICAgICAvLyBoYW5kbGUgc3BhY2VzIHNlcGFyYXRlbHkgYmVjYXVzZSBvZiBxdW90ZXNcbiAgICAgICAgICAgICAgJ3wnICtcbiAgICAgICAgICAgICAgJ1sgXFx0XSsoPzooPyFbIFxcdFwiXSl8JyArXG4gICAgICAgICAgICAgIHF1b3Rlc1NvdXJjZSArXG4gICAgICAgICAgICAgICcpJyArXG4gICAgICAgICAgICAgIC8vIGxpbmUgY29udGludWF0aW9uXG4gICAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICAgIC9cXFxcW1xcclxcbl0rKD86WyM7XS4qW1xcclxcbl0rKSooPyFbIztdKS8uc291cmNlKSArXG4gICAgICAgICAgICAnKSonXG4gICAgICAgICksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdhdHRyLXZhbHVlJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgY29tbWVudDogY29tbWVudCxcbiAgICAgICAgICBxdW90ZWQ6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKF58XFxzKS8uc291cmNlICsgcXVvdGVzU291cmNlKSxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFxcXCQvbSxcbiAgICAgICAgICBib29sZWFuOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXig/OmZhbHNlfG5vfG9mZnxvbnx0cnVlfHllcykkLyxcbiAgICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHB1bmN0dWF0aW9uOiAvPS9cbiAgICB9XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInN5c3RlbWQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwicXVvdGVzU291cmNlIiwic291cmNlIiwibGFuZ3VhZ2VzIiwic2VjdGlvbiIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiYWxpYXMiLCJrZXkiLCJ2YWx1ZSIsIlJlZ0V4cCIsImxvb2tiZWhpbmQiLCJxdW90ZWQiLCJib29sZWFuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/systemd.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-cs.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-cs.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ t4Cs)\n/* harmony export */ });\n/* harmony import */ var _csharp_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./csharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js\");\n/* harmony import */ var _t4_templating_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./t4-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-templating.js\");\n// @ts-nocheck\n\n\nt4Cs.displayName = \"t4-cs\";\nt4Cs.aliases = [\n    \"t4\"\n];\n/** @type {import('../core.js').Syntax} */ function t4Cs(Prism) {\n    Prism.register(_csharp_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_t4_templating_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.languages.t4 = Prism.languages[\"t4-cs\"] = Prism.languages[\"t4-templating\"].createT4(\"csharp\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90NC1jcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxjQUFjO0FBQzJCO0FBQ2E7QUFDdERFLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHO0lBQUM7Q0FBSztBQUVyQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTixrREFBZUE7SUFDOUJLLE1BQU1DLFFBQVEsQ0FBQ0wseURBQXFCQTtJQUNwQ0ksTUFBTUUsU0FBUyxDQUFDQyxFQUFFLEdBQUdILE1BQU1FLFNBQVMsQ0FBQyxRQUFRLEdBQzNDRixNQUFNRSxTQUFTLENBQUMsZ0JBQWdCLENBQUNFLFFBQVEsQ0FBQztBQUM5QyIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90NC1jcy5qcz9lZjEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ3NoYXJwIGZyb20gJy4vY3NoYXJwLmpzJ1xuaW1wb3J0IHJlZnJhY3RvclQ0VGVtcGxhdGluZyBmcm9tICcuL3Q0LXRlbXBsYXRpbmcuanMnXG50NENzLmRpc3BsYXlOYW1lID0gJ3Q0LWNzJ1xudDRDcy5hbGlhc2VzID0gWyd0NCddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdDRDcyhQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDc2hhcnApXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclQ0VGVtcGxhdGluZylcbiAgUHJpc20ubGFuZ3VhZ2VzLnQ0ID0gUHJpc20ubGFuZ3VhZ2VzWyd0NC1jcyddID1cbiAgICBQcmlzbS5sYW5ndWFnZXNbJ3Q0LXRlbXBsYXRpbmcnXS5jcmVhdGVUNCgnY3NoYXJwJylcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JDc2hhcnAiLCJyZWZyYWN0b3JUNFRlbXBsYXRpbmciLCJ0NENzIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsInQ0IiwiY3JlYXRlVDQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-cs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-templating.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-templating.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ t4Templating)\n/* harmony export */ });\n// @ts-nocheck\nt4Templating.displayName = \"t4-templating\";\nt4Templating.aliases = [];\n/** @type {import('../core.js').Syntax} */ function t4Templating(Prism) {\n    ;\n    (function(Prism) {\n        function createBlock(prefix, inside, contentAlias) {\n            return {\n                pattern: RegExp(\"<#\" + prefix + \"[\\\\s\\\\S]*?#>\"),\n                alias: \"block\",\n                inside: {\n                    delimiter: {\n                        pattern: RegExp(\"^<#\" + prefix + \"|#>$\"),\n                        alias: \"important\"\n                    },\n                    content: {\n                        pattern: /[\\s\\S]+/,\n                        inside: inside,\n                        alias: contentAlias\n                    }\n                }\n            };\n        }\n        function createT4(insideLang) {\n            var grammar = Prism.languages[insideLang];\n            var className = \"language-\" + insideLang;\n            return {\n                block: {\n                    pattern: /<#[\\s\\S]+?#>/,\n                    inside: {\n                        directive: createBlock(\"@\", {\n                            \"attr-value\": {\n                                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                                inside: {\n                                    punctuation: /^=|^[\"']|[\"']$/\n                                }\n                            },\n                            keyword: /\\b\\w+(?=\\s)/,\n                            \"attr-name\": /\\b\\w+/\n                        }),\n                        expression: createBlock(\"=\", grammar, className),\n                        \"class-feature\": createBlock(\"\\\\+\", grammar, className),\n                        standard: createBlock(\"\", grammar, className)\n                    }\n                }\n            };\n        }\n        Prism.languages[\"t4-templating\"] = Object.defineProperty({}, \"createT4\", {\n            value: createT4\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90NC10ZW1wbGF0aW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLGFBQWFDLFdBQVcsR0FBRztBQUMzQkQsYUFBYUUsT0FBTyxHQUFHLEVBQUU7QUFFekIsd0NBQXdDLEdBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7O0lBQ3RDLFVBQVVBLEtBQUs7UUFDZixTQUFTQyxZQUFZQyxNQUFNLEVBQUVDLE1BQU0sRUFBRUMsWUFBWTtZQUMvQyxPQUFPO2dCQUNMQyxTQUFTQyxPQUFPLE9BQU9KLFNBQVM7Z0JBQ2hDSyxPQUFPO2dCQUNQSixRQUFRO29CQUNOSyxXQUFXO3dCQUNUSCxTQUFTQyxPQUFPLFFBQVFKLFNBQVM7d0JBQ2pDSyxPQUFPO29CQUNUO29CQUNBRSxTQUFTO3dCQUNQSixTQUFTO3dCQUNURixRQUFRQTt3QkFDUkksT0FBT0g7b0JBQ1Q7Z0JBQ0Y7WUFDRjtRQUNGO1FBQ0EsU0FBU00sU0FBU0MsVUFBVTtZQUMxQixJQUFJQyxVQUFVWixNQUFNYSxTQUFTLENBQUNGLFdBQVc7WUFDekMsSUFBSUcsWUFBWSxjQUFjSDtZQUM5QixPQUFPO2dCQUNMSSxPQUFPO29CQUNMVixTQUFTO29CQUNURixRQUFRO3dCQUNOYSxXQUFXZixZQUFZLEtBQUs7NEJBQzFCLGNBQWM7Z0NBQ1pJLFNBQVM7Z0NBQ1RGLFFBQVE7b0NBQ05jLGFBQWE7Z0NBQ2Y7NEJBQ0Y7NEJBQ0FDLFNBQVM7NEJBQ1QsYUFBYTt3QkFDZjt3QkFDQUMsWUFBWWxCLFlBQVksS0FBS1csU0FBU0U7d0JBQ3RDLGlCQUFpQmIsWUFBWSxPQUFPVyxTQUFTRTt3QkFDN0NNLFVBQVVuQixZQUFZLElBQUlXLFNBQVNFO29CQUNyQztnQkFDRjtZQUNGO1FBQ0Y7UUFDQWQsTUFBTWEsU0FBUyxDQUFDLGdCQUFnQixHQUFHUSxPQUFPQyxjQUFjLENBQUMsQ0FBQyxHQUFHLFlBQVk7WUFDdkVDLE9BQU9iO1FBQ1Q7SUFDRixHQUFHVjtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Q0LXRlbXBsYXRpbmcuanM/NzUwYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xudDRUZW1wbGF0aW5nLmRpc3BsYXlOYW1lID0gJ3Q0LXRlbXBsYXRpbmcnXG50NFRlbXBsYXRpbmcuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdDRUZW1wbGF0aW5nKFByaXNtKSB7XG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgZnVuY3Rpb24gY3JlYXRlQmxvY2socHJlZml4LCBpbnNpZGUsIGNvbnRlbnRBbGlhcykge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGF0dGVybjogUmVnRXhwKCc8IycgKyBwcmVmaXggKyAnW1xcXFxzXFxcXFNdKj8jPicpLFxuICAgICAgICBhbGlhczogJ2Jsb2NrJyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoJ148IycgKyBwcmVmaXggKyAnfCM+JCcpLFxuICAgICAgICAgICAgYWxpYXM6ICdpbXBvcnRhbnQnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb250ZW50OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICAgIGluc2lkZTogaW5zaWRlLFxuICAgICAgICAgICAgYWxpYXM6IGNvbnRlbnRBbGlhc1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiBjcmVhdGVUNChpbnNpZGVMYW5nKSB7XG4gICAgICB2YXIgZ3JhbW1hciA9IFByaXNtLmxhbmd1YWdlc1tpbnNpZGVMYW5nXVxuICAgICAgdmFyIGNsYXNzTmFtZSA9ICdsYW5ndWFnZS0nICsgaW5zaWRlTGFuZ1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYmxvY2s6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvPCNbXFxzXFxTXSs/Iz4vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgZGlyZWN0aXZlOiBjcmVhdGVCbG9jaygnQCcsIHtcbiAgICAgICAgICAgICAgJ2F0dHItdmFsdWUnOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLz0oPzooXCJ8JykoPzpcXFxcW1xcc1xcU118KD8hXFwxKVteXFxcXF0pKlxcMXxbXlxccydcIj49XSspLyxcbiAgICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXj18XltcIiddfFtcIiddJC9cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIGtleXdvcmQ6IC9cXGJcXHcrKD89XFxzKS8sXG4gICAgICAgICAgICAgICdhdHRyLW5hbWUnOiAvXFxiXFx3Ky9cbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZXhwcmVzc2lvbjogY3JlYXRlQmxvY2soJz0nLCBncmFtbWFyLCBjbGFzc05hbWUpLFxuICAgICAgICAgICAgJ2NsYXNzLWZlYXR1cmUnOiBjcmVhdGVCbG9jaygnXFxcXCsnLCBncmFtbWFyLCBjbGFzc05hbWUpLFxuICAgICAgICAgICAgc3RhbmRhcmQ6IGNyZWF0ZUJsb2NrKCcnLCBncmFtbWFyLCBjbGFzc05hbWUpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlc1sndDQtdGVtcGxhdGluZyddID0gT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAnY3JlYXRlVDQnLCB7XG4gICAgICB2YWx1ZTogY3JlYXRlVDRcbiAgICB9KVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJ0NFRlbXBsYXRpbmciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImNyZWF0ZUJsb2NrIiwicHJlZml4IiwiaW5zaWRlIiwiY29udGVudEFsaWFzIiwicGF0dGVybiIsIlJlZ0V4cCIsImFsaWFzIiwiZGVsaW1pdGVyIiwiY29udGVudCIsImNyZWF0ZVQ0IiwiaW5zaWRlTGFuZyIsImdyYW1tYXIiLCJsYW5ndWFnZXMiLCJjbGFzc05hbWUiLCJibG9jayIsImRpcmVjdGl2ZSIsInB1bmN0dWF0aW9uIiwia2V5d29yZCIsImV4cHJlc3Npb24iLCJzdGFuZGFyZCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-templating.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-vb.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-vb.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ t4Vb)\n/* harmony export */ });\n/* harmony import */ var _t4_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./t4-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-templating.js\");\n/* harmony import */ var _vbnet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vbnet.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vbnet.js\");\n// @ts-nocheck\n\n\nt4Vb.displayName = \"t4-vb\";\nt4Vb.aliases = [];\n/** @type {import('../core.js').Syntax} */ function t4Vb(Prism) {\n    Prism.register(_t4_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_vbnet_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    Prism.languages[\"t4-vb\"] = Prism.languages[\"t4-templating\"].createT4(\"vbnet\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90NC12Yi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxjQUFjO0FBQ3dDO0FBQ2Y7QUFDdkNFLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFFBQVEsQ0FBQ04seURBQXFCQTtJQUNwQ0ssTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQyxRQUFRLEdBQUdGLE1BQU1FLFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQ0MsUUFBUSxDQUFDO0FBQ3ZFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3Q0LXZiLmpzPzU0ZjAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JUNFRlbXBsYXRpbmcgZnJvbSAnLi90NC10ZW1wbGF0aW5nLmpzJ1xuaW1wb3J0IHJlZnJhY3RvclZibmV0IGZyb20gJy4vdmJuZXQuanMnXG50NFZiLmRpc3BsYXlOYW1lID0gJ3Q0LXZiJ1xudDRWYi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0NFZiKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclQ0VGVtcGxhdGluZylcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yVmJuZXQpXG4gIFByaXNtLmxhbmd1YWdlc1sndDQtdmInXSA9IFByaXNtLmxhbmd1YWdlc1sndDQtdGVtcGxhdGluZyddLmNyZWF0ZVQ0KCd2Ym5ldCcpXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yVDRUZW1wbGF0aW5nIiwicmVmcmFjdG9yVmJuZXQiLCJ0NFZiIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImNyZWF0ZVQ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-vb.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tap.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tap.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tap)\n/* harmony export */ });\n/* harmony import */ var _yaml_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./yaml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yaml.js\");\n// @ts-nocheck\n\ntap.displayName = \"tap\";\ntap.aliases = [];\n/** @type {import('../core.js').Syntax} */ function tap(Prism) {\n    Prism.register(_yaml_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n    Prism.languages.tap = {\n        fail: /not ok[^#{\\n\\r]*/,\n        pass: /ok[^#{\\n\\r]*/,\n        pragma: /pragma [+-][a-z]+/,\n        bailout: /bail out!.*/i,\n        version: /TAP version \\d+/i,\n        plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n        subtest: {\n            pattern: /# Subtest(?:: .*)?/,\n            greedy: true\n        },\n        punctuation: /[{}]/,\n        directive: /#.*/,\n        yamlish: {\n            pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n            lookbehind: true,\n            inside: Prism.languages.yaml,\n            alias: \"language-yaml\"\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90YXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxjQUFjO0FBQ3VCO0FBQ3JDQyxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRyxFQUFFO0FBRWhCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxRQUFRLENBQUNMLGdEQUFhQTtJQUM1Qix1REFBdUQ7SUFFdkRJLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxHQUFHO1FBQ3BCTSxNQUFNO1FBQ05DLE1BQU07UUFDTkMsUUFBUTtRQUNSQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsTUFBTTtRQUNOQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLGFBQWE7UUFDYkMsV0FBVztRQUNYQyxTQUFTO1lBQ1BKLFNBQVM7WUFDVEssWUFBWTtZQUNaQyxRQUFRaEIsTUFBTUUsU0FBUyxDQUFDZSxJQUFJO1lBQzVCQyxPQUFPO1FBQ1Q7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3RhcC5qcz83YjBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yWWFtbCBmcm9tICcuL3lhbWwuanMnXG50YXAuZGlzcGxheU5hbWUgPSAndGFwJ1xudGFwLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRhcChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JZYW1sKVxuICAvLyBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9UZXN0X0FueXRoaW5nX1Byb3RvY29sXG5cbiAgUHJpc20ubGFuZ3VhZ2VzLnRhcCA9IHtcbiAgICBmYWlsOiAvbm90IG9rW14je1xcblxccl0qLyxcbiAgICBwYXNzOiAvb2tbXiN7XFxuXFxyXSovLFxuICAgIHByYWdtYTogL3ByYWdtYSBbKy1dW2Etel0rLyxcbiAgICBiYWlsb3V0OiAvYmFpbCBvdXQhLiovaSxcbiAgICB2ZXJzaW9uOiAvVEFQIHZlcnNpb24gXFxkKy9pLFxuICAgIHBsYW46IC9cXGJcXGQrXFwuXFwuXFxkKyg/OiArIy4qKT8vLFxuICAgIHN1YnRlc3Q6IHtcbiAgICAgIHBhdHRlcm46IC8jIFN1YnRlc3QoPzo6IC4qKT8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBwdW5jdHVhdGlvbjogL1t7fV0vLFxuICAgIGRpcmVjdGl2ZTogLyMuKi8sXG4gICAgeWFtbGlzaDoge1xuICAgICAgcGF0dGVybjogLyheWyBcXHRdKiktLS1bXFxzXFxTXSo/W1xcclxcbl1bIFxcdF0qXFwuXFwuXFwuJC9tLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLnlhbWwsXG4gICAgICBhbGlhczogJ2xhbmd1YWdlLXlhbWwnXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yWWFtbCIsInRhcCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJmYWlsIiwicGFzcyIsInByYWdtYSIsImJhaWxvdXQiLCJ2ZXJzaW9uIiwicGxhbiIsInN1YnRlc3QiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwicHVuY3R1YXRpb24iLCJkaXJlY3RpdmUiLCJ5YW1saXNoIiwibG9va2JlaGluZCIsImluc2lkZSIsInlhbWwiLCJhbGlhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tap.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tcl.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tcl.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tcl)\n/* harmony export */ });\n// @ts-nocheck\ntcl.displayName = \"tcl\";\ntcl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function tcl(Prism) {\n    Prism.languages.tcl = {\n        comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n        },\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n            greedy: true\n        },\n        variable: [\n            {\n                pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n                lookbehind: true\n            },\n            {\n                pattern: /(\\$)\\{[^}]+\\}/,\n                lookbehind: true\n            },\n            {\n                pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n                lookbehind: true\n            }\n        ],\n        function: {\n            pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n            lookbehind: true\n        },\n        builtin: [\n            {\n                pattern: /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n                lookbehind: true\n            },\n            /\\b(?:else|elseif)\\b/\n        ],\n        scope: {\n            pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n            lookbehind: true,\n            alias: \"constant\"\n        },\n        keyword: {\n            pattern: /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n            lookbehind: true\n        },\n        operator: /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n        punctuation: /[{}()\\[\\]]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90Y2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxZQUFZO1FBQ2Q7UUFDQUMsUUFBUTtZQUNORixTQUFTO1lBQ1RHLFFBQVE7UUFDVjtRQUNBQyxVQUFVO1lBQ1I7Z0JBQ0VKLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBO2dCQUNFRCxTQUFTO2dCQUNUQyxZQUFZO1lBQ2Q7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1NBQ0Q7UUFDREksVUFBVTtZQUNSTCxTQUFTO1lBQ1RDLFlBQVk7UUFDZDtRQUNBSyxTQUFTO1lBQ1A7Z0JBQ0VOLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDRE0sT0FBTztZQUNMUCxTQUFTO1lBQ1RDLFlBQVk7WUFDWk8sT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUFQsU0FDRTtZQUNGQyxZQUFZO1FBQ2Q7UUFDQVMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90Y2wuanM/MmNkYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xudGNsLmRpc3BsYXlOYW1lID0gJ3RjbCdcbnRjbC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0Y2woUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnRjbCA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjLiovLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlwiXFxcXFxcclxcbl18XFxcXCg/OlxcclxcbnxbXFxzXFxTXSkpKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdmFyaWFibGU6IFtcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXCQpKD86OjopPyg/OlthLXpBLVowLTldKzo6KSpcXHcrLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLyhcXCQpXFx7W159XStcXH0vLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qc2V0WyBcXHRdKykoPzo6Oik/KD86W2EtekEtWjAtOV0rOjopKlxcdysvbSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgZnVuY3Rpb246IHtcbiAgICAgIHBhdHRlcm46IC8oXltcXHQgXSpwcm9jWyBcXHRdKylcXFMrL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBidWlsdGluOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyheW1xcdCBdKikoPzpicmVha3xjbGFzc3xjb250aW51ZXxlcnJvcnxldmFsfGV4aXR8Zm9yfGZvcmVhY2h8aWZ8cHJvY3xyZXR1cm58c3dpdGNofHdoaWxlKVxcYi9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgL1xcYig/OmVsc2V8ZWxzZWlmKVxcYi9cbiAgICBdLFxuICAgIHNjb3BlOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5bXFx0IF0qKSg/Omdsb2JhbHx1cHZhcnx2YXJpYWJsZSlcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBhbGlhczogJ2NvbnN0YW50J1xuICAgIH0sXG4gICAga2V5d29yZDoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyheW1xcdCBdKnxcXFspKD86U2FmZV9CYXNlfFRjbHxhZnRlcnxhcHBlbmR8YXBwbHl8YXJyYXl8YXV0b18oPzpleGVjb2t8aW1wb3J0fGxvYWR8bWtpbmRleHxxdWFsaWZ5fHJlc2V0KXxhdXRvbWtpbmRleF9vbGR8YmdlcnJvcnxiaW5hcnl8Y2F0Y2h8Y2R8Y2hhbnxjbG9ja3xjbG9zZXxjb25jYXR8ZGRlfGRpY3R8ZW5jb2Rpbmd8ZW9mfGV4ZWN8ZXhwcnxmYmxvY2tlZHxmY29uZmlndXJlfGZjb3B5fGZpbGUoPzpldmVudHxuYW1lKT98Zmx1c2h8Z2V0c3xnbG9ifGhpc3Rvcnl8aHR0cHxpbmNyfGluZm98aW50ZXJwfGpvaW58bGFwcGVuZHxsYXNzaWdufGxpbmRleHxsaW5zZXJ0fGxpc3R8bGxlbmd0aHxsb2FkfGxyYW5nZXxscmVwZWF0fGxyZXBsYWNlfGxyZXZlcnNlfGxzZWFyY2h8bHNldHxsc29ydHxtYXRoKD86ZnVuY3xvcCl8bWVtb3J5fG1zZ2NhdHxuYW1lc3BhY2V8b3BlbnxwYWNrYWdlfHBhcnJheXxwaWR8cGtnX21rSW5kZXh8cGxhdGZvcm18cHV0c3xwd2R8cmVfc3ludGF4fHJlYWR8cmVmY2hhbnxyZWdleHB8cmVnaXN0cnl8cmVnc3VifHJlbmFtZXxzY2FufHNlZWt8c2V0fHNvY2tldHxzb3VyY2V8c3BsaXR8c3RyaW5nfHN1YnN0fHRjbCg/Ol9lbmRPZldvcmR8X2ZpbmRMaWJyYXJ5fHN0YXJ0T2YoPzpOZXh0fFByZXZpb3VzKVdvcmR8dGVzdHx2YXJzfHdvcmRCcmVhayg/OkFmdGVyfEJlZm9yZSkpfHRlbGx8dGltZXx0bXx0cmFjZXx1bmtub3dufHVubG9hZHx1bnNldHx1cGRhdGV8dXBsZXZlbHx2d2FpdClcXGIvbSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIG9wZXJhdG9yOlxuICAgICAgLyE9P3xcXCpcXCo/fD09fCYmP3xcXHxcXHw/fDxbPTxdP3w+Wz0+XT98Wy0rflxcLyU/Xl18XFxiKD86ZXF8aW58bmV8bmkpXFxiLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fSgpXFxbXFxdXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInRjbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwic3RyaW5nIiwiZ3JlZWR5IiwidmFyaWFibGUiLCJmdW5jdGlvbiIsImJ1aWx0aW4iLCJzY29wZSIsImFsaWFzIiwia2V5d29yZCIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tcl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/textile.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/textile.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ textile)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\ntextile.displayName = \"textile\";\ntextile.aliases = [];\n/** @type {import('../core.js').Syntax} */ function textile(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        // We don't allow for pipes inside parentheses\n        // to not break table pattern |(. foo |). bar |\n        var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source;\n        // Opening and closing parentheses which are not a modifier\n        // This pattern is necessary to prevent exponential backtracking\n        var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source;\n        /**\n     * @param {string} source\n     * @param {string} [flags]\n     */ function withModifier(source, flags) {\n            return RegExp(source.replace(/<MOD>/g, function() {\n                return \"(?:\" + modifierRegex + \")\";\n            }).replace(/<PAR>/g, function() {\n                return \"(?:\" + parenthesesRegex + \")\";\n            }), flags || \"\");\n        }\n        var modifierTokens = {\n            css: {\n                pattern: /\\{[^{}]+\\}/,\n                inside: {\n                    rest: Prism.languages.css\n                }\n            },\n            \"class-id\": {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true,\n                alias: \"attr-value\"\n            },\n            lang: {\n                pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n                lookbehind: true,\n                alias: \"attr-value\"\n            },\n            // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n            punctuation: /[\\\\\\/]\\d+|\\S/\n        };\n        var textile = Prism.languages.textile = Prism.languages.extend(\"markup\", {\n            phrase: {\n                pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n                lookbehind: true,\n                inside: {\n                    // h1. Header 1\n                    \"block-tag\": {\n                        pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n                        inside: {\n                            modifier: {\n                                pattern: withModifier(/(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            tag: /^[a-z]\\w*/,\n                            punctuation: /\\.$/\n                        }\n                    },\n                    // # List item\n                    // * List item\n                    list: {\n                        pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, \"m\"),\n                        inside: {\n                            modifier: {\n                                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            punctuation: /^[*#]+/\n                        }\n                    },\n                    // | cell | cell | cell |\n                    table: {\n                        // Modifiers can be applied to the row: {color:red}.|1|2|3|\n                        // or the cell: |{color:red}.1|2|3|\n                        pattern: withModifier(/^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/.source, \"m\"),\n                        inside: {\n                            modifier: {\n                                // Modifiers for rows after the first one are\n                                // preceded by a pipe and a line feed\n                                pattern: withModifier(/(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            punctuation: /\\||^\\./\n                        }\n                    },\n                    inline: {\n                        // eslint-disable-next-line regexp/no-super-linear-backtracking\n                        pattern: withModifier(/(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/.source),\n                        lookbehind: true,\n                        inside: {\n                            // Note: superscripts and subscripts are not handled specifically\n                            // *bold*, **bold**\n                            bold: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                                lookbehind: true\n                            },\n                            // _italic_, __italic__\n                            italic: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                                lookbehind: true\n                            },\n                            // ??cite??\n                            cite: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                                lookbehind: true,\n                                alias: \"string\"\n                            },\n                            // @code@\n                            code: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                                lookbehind: true,\n                                alias: \"keyword\"\n                            },\n                            // +inserted+\n                            inserted: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                                lookbehind: true\n                            },\n                            // -deleted-\n                            deleted: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                                lookbehind: true\n                            },\n                            // %span%\n                            span: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                                lookbehind: true\n                            },\n                            modifier: {\n                                pattern: withModifier(/(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            punctuation: /[*_%?@+\\-^~]+/\n                        }\n                    },\n                    // [alias]http://example.com\n                    \"link-ref\": {\n                        pattern: /^\\[[^\\]]+\\]\\S+$/m,\n                        inside: {\n                            string: {\n                                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                                lookbehind: true\n                            },\n                            url: {\n                                pattern: /(^\\])\\S+$/,\n                                lookbehind: true\n                            },\n                            punctuation: /[\\[\\]]/\n                        }\n                    },\n                    // \"text\":http://example.com\n                    // \"text\":link-ref\n                    link: {\n                        // eslint-disable-next-line regexp/no-super-linear-backtracking\n                        pattern: withModifier(/\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source),\n                        inside: {\n                            text: {\n                                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                                lookbehind: true\n                            },\n                            modifier: {\n                                pattern: withModifier(/(^\")<MOD>+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            url: {\n                                pattern: /(:).+/,\n                                lookbehind: true\n                            },\n                            punctuation: /[\":]/\n                        }\n                    },\n                    // !image.jpg!\n                    // !image.jpg(Title)!:http://example.com\n                    image: {\n                        pattern: withModifier(/!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/.source),\n                        inside: {\n                            source: {\n                                pattern: withModifier(/(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/.source),\n                                lookbehind: true,\n                                alias: \"url\"\n                            },\n                            modifier: {\n                                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                                lookbehind: true,\n                                inside: modifierTokens\n                            },\n                            url: {\n                                pattern: /(:).+/,\n                                lookbehind: true\n                            },\n                            punctuation: /[!:]/\n                        }\n                    },\n                    // Footnote[1]\n                    footnote: {\n                        pattern: /\\b\\[\\d+\\]/,\n                        alias: \"comment\",\n                        inside: {\n                            punctuation: /\\[|\\]/\n                        }\n                    },\n                    // CSS(Cascading Style Sheet)\n                    acronym: {\n                        pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n                        inside: {\n                            comment: {\n                                pattern: /(\\()[^()]+(?=\\))/,\n                                lookbehind: true\n                            },\n                            punctuation: /[()]/\n                        }\n                    },\n                    // Prism(C)\n                    mark: {\n                        pattern: /\\b\\((?:C|R|TM)\\)/,\n                        alias: \"comment\",\n                        inside: {\n                            punctuation: /[()]/\n                        }\n                    }\n                }\n            }\n        });\n        var phraseInside = textile[\"phrase\"].inside;\n        var nestedPatterns = {\n            inline: phraseInside[\"inline\"],\n            link: phraseInside[\"link\"],\n            image: phraseInside[\"image\"],\n            footnote: phraseInside[\"footnote\"],\n            acronym: phraseInside[\"acronym\"],\n            mark: phraseInside[\"mark\"]\n        };\n        // Only allow alpha-numeric HTML tags, not XML tags\n        textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;\n        // Allow some nesting\n        var phraseInlineInside = phraseInside[\"inline\"].inside;\n        phraseInlineInside[\"bold\"].inside = nestedPatterns;\n        phraseInlineInside[\"italic\"].inside = nestedPatterns;\n        phraseInlineInside[\"inserted\"].inside = nestedPatterns;\n        phraseInlineInside[\"deleted\"].inside = nestedPatterns;\n        phraseInlineInside[\"span\"].inside = nestedPatterns;\n        // Allow some styles inside table cells\n        var phraseTableInside = phraseInside[\"table\"].inside;\n        phraseTableInside[\"inline\"] = nestedPatterns[\"inline\"];\n        phraseTableInside[\"link\"] = nestedPatterns[\"link\"];\n        phraseTableInside[\"image\"] = nestedPatterns[\"image\"];\n        phraseTableInside[\"footnote\"] = nestedPatterns[\"footnote\"];\n        phraseTableInside[\"acronym\"] = nestedPatterns[\"acronym\"];\n        phraseTableInside[\"mark\"] = nestedPatterns[\"mark\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/textile.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/toml.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/toml.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toml)\n/* harmony export */ });\n// @ts-nocheck\ntoml.displayName = \"toml\";\ntoml.aliases = [];\n/** @type {import('../core.js').Syntax} */ function toml(Prism) {\n    ;\n    (function(Prism) {\n        var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source;\n        /**\n     * @param {string} pattern\n     */ function insertKey(pattern) {\n            return pattern.replace(/__/g, function() {\n                return key;\n            });\n        }\n        Prism.languages.toml = {\n            comment: {\n                pattern: /#.*/,\n                greedy: true\n            },\n            table: {\n                pattern: RegExp(insertKey(/(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"class-name\"\n            },\n            key: {\n                pattern: RegExp(insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source), \"m\"),\n                lookbehind: true,\n                greedy: true,\n                alias: \"property\"\n            },\n            string: {\n                pattern: /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n                greedy: true\n            },\n            date: [\n                {\n                    // Offset Date-Time, Local Date-Time, Local Date\n                    pattern: /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n                    alias: \"number\"\n                },\n                {\n                    // Local Time\n                    pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n                    alias: \"number\"\n                }\n            ],\n            number: /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            punctuation: /[.,=[\\]{}]/\n        };\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90b21sLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7O0lBQzlCLFVBQVVBLEtBQUs7UUFDZixJQUFJQyxNQUFNLCtDQUErQ0MsTUFBTTtRQUUvRDs7S0FFQyxHQUNELFNBQVNDLFVBQVVDLE9BQU87WUFDeEIsT0FBT0EsUUFBUUMsT0FBTyxDQUFDLE9BQU87Z0JBQzVCLE9BQU9KO1lBQ1Q7UUFDRjtRQUNBRCxNQUFNTSxTQUFTLENBQUNULElBQUksR0FBRztZQUNyQlUsU0FBUztnQkFDUEgsU0FBUztnQkFDVEksUUFBUTtZQUNWO1lBQ0FDLE9BQU87Z0JBQ0xMLFNBQVNNLE9BQ1BQLFVBQ0UscURBQXFERCxNQUFNLEdBRTdEO2dCQUVGUyxZQUFZO2dCQUNaSCxRQUFRO2dCQUNSSSxPQUFPO1lBQ1Q7WUFDQVgsS0FBSztnQkFDSEcsU0FBU00sT0FDUFAsVUFBVSw2Q0FBNkNELE1BQU0sR0FDN0Q7Z0JBRUZTLFlBQVk7Z0JBQ1pILFFBQVE7Z0JBQ1JJLE9BQU87WUFDVDtZQUNBQyxRQUFRO2dCQUNOVCxTQUNFO2dCQUNGSSxRQUFRO1lBQ1Y7WUFDQU0sTUFBTTtnQkFDSjtvQkFDRSxnREFBZ0Q7b0JBQ2hEVixTQUNFO29CQUNGUSxPQUFPO2dCQUNUO2dCQUNBO29CQUNFLGFBQWE7b0JBQ2JSLFNBQVM7b0JBQ1RRLE9BQU87Z0JBQ1Q7YUFDRDtZQUNERyxRQUNFO1lBQ0ZDLFNBQVM7WUFDVEMsYUFBYTtRQUNmO0lBQ0YsR0FBR2pCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdG9tbC5qcz80YTBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG50b21sLmRpc3BsYXlOYW1lID0gJ3RvbWwnXG50b21sLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRvbWwoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIga2V5ID0gLyg/OltcXHctXSt8J1teJ1xcblxccl0qJ3xcIig/OlxcXFwufFteXFxcXFwiXFxyXFxuXSkqXCIpLy5zb3VyY2VcblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBwYXR0ZXJuXG4gICAgICovXG4gICAgZnVuY3Rpb24gaW5zZXJ0S2V5KHBhdHRlcm4pIHtcbiAgICAgIHJldHVybiBwYXR0ZXJuLnJlcGxhY2UoL19fL2csIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIGtleVxuICAgICAgfSlcbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRvbWwgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB0YWJsZToge1xuICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgaW5zZXJ0S2V5KFxuICAgICAgICAgICAgLyheW1xcdCBdKlxcW1xccyooPzpcXFtcXHMqKT8pX18oPzpcXHMqXFwuXFxzKl9fKSooPz1cXHMqXFxdKS8uc291cmNlXG4gICAgICAgICAgKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnXG4gICAgICB9LFxuICAgICAga2V5OiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICBpbnNlcnRLZXkoLyheW1xcdCBdKnxbeyxdXFxzKilfXyg/OlxccypcXC5cXHMqX18pKig/PVxccyo9KS8uc291cmNlKSxcbiAgICAgICAgICAnbSdcbiAgICAgICAgKSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgICAgfSxcbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cIlwiXCIoPzpcXFxcW1xcc1xcU118W15cXFxcXSkqP1wiXCJcInwnJydbXFxzXFxTXSo/JycnfCdbXidcXG5cXHJdKid8XCIoPzpcXFxcLnxbXlxcXFxcIlxcclxcbl0pKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgZGF0ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gT2Zmc2V0IERhdGUtVGltZSwgTG9jYWwgRGF0ZS1UaW1lLCBMb2NhbCBEYXRlXG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC9cXGJcXGR7NH0tXFxkezJ9LVxcZHsyfSg/OltUXFxzXVxcZHsyfTpcXGR7Mn06XFxkezJ9KD86XFwuXFxkKyk/KD86WnxbKy1dXFxkezJ9OlxcZHsyfSk/KT9cXGIvaSxcbiAgICAgICAgICBhbGlhczogJ251bWJlcidcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIExvY2FsIFRpbWVcbiAgICAgICAgICBwYXR0ZXJuOiAvXFxiXFxkezJ9OlxcZHsyfTpcXGR7Mn0oPzpcXC5cXGQrKT9cXGIvLFxuICAgICAgICAgIGFsaWFzOiAnbnVtYmVyJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvKD86XFxiMCg/OnhbXFxkYS16QS1aXSsoPzpfW1xcZGEtekEtWl0rKSp8b1swLTddKyg/Ol9bMC03XSspKnxiWzEwXSsoPzpfWzEwXSspKikpXFxifFstK10/XFxiXFxkKyg/Ol9cXGQrKSooPzpcXC5cXGQrKD86X1xcZCspKik/KD86W2VFXVsrLV0/XFxkKyg/Ol9cXGQrKSopP1xcYnxbLStdP1xcYig/OmluZnxuYW4pXFxiLyxcbiAgICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1suLD1bXFxde31dL1xuICAgIH1cbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsidG9tbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwia2V5Iiwic291cmNlIiwiaW5zZXJ0S2V5IiwicGF0dGVybiIsInJlcGxhY2UiLCJsYW5ndWFnZXMiLCJjb21tZW50IiwiZ3JlZWR5IiwidGFibGUiLCJSZWdFeHAiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJzdHJpbmciLCJkYXRlIiwibnVtYmVyIiwiYm9vbGVhbiIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/toml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tremor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tremor.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tremor)\n/* harmony export */ });\n// @ts-nocheck\ntremor.displayName = \"tremor\";\ntremor.aliases = [\n    \"trickle\",\n    \"troy\"\n];\n/** @type {import('../core.js').Syntax} */ function tremor(Prism) {\n    ;\n    (function(Prism) {\n        Prism.languages.tremor = {\n            comment: {\n                pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n                lookbehind: true\n            },\n            \"interpolated-string\": null,\n            // see below\n            extractor: {\n                pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n                greedy: true,\n                inside: {\n                    regex: {\n                        pattern: /(^re)\\|[\\s\\S]+/,\n                        lookbehind: true\n                    },\n                    function: /^\\w+/,\n                    value: /\\|[\\s\\S]+/\n                }\n            },\n            identifier: {\n                pattern: /`[^`]*`/,\n                greedy: true\n            },\n            function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n            keyword: /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n            boolean: /\\b(?:false|null|true)\\b/i,\n            number: /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n            \"pattern-punctuation\": {\n                pattern: /%(?=[({[])/,\n                alias: \"punctuation\"\n            },\n            operator: /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n            punctuation: /::|[;\\[\\]()\\{\\},.:]/\n        };\n        var interpolationPattern = /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source;\n        Prism.languages.tremor[\"interpolated-string\"] = {\n            pattern: RegExp(/(^|[^\\\\])/.source + \"(?:\" + '\"\"\"(?:' + /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source + \"|\" + interpolationPattern + ')*\"\"\"' + \"|\" + '\"(?:' + /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source + \"|\" + interpolationPattern + ')*\"' + \")\"),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: RegExp(interpolationPattern),\n                    inside: {\n                        punctuation: /^#\\{|\\}$/,\n                        expression: {\n                            pattern: /[\\s\\S]+/,\n                            inside: Prism.languages.tremor\n                        }\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        };\n        Prism.languages.troy = Prism.languages[\"tremor\"];\n        Prism.languages.trickle = Prism.languages[\"tremor\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90cmVtb3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztJQUFXO0NBQU87QUFFcEMsd0NBQXdDLEdBQ3pCLFNBQVNGLE9BQU9HLEtBQUs7O0lBQ2hDLFVBQVVBLEtBQUs7UUFDZkEsTUFBTUMsU0FBUyxDQUFDSixNQUFNLEdBQUc7WUFDdkJLLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFlBQVk7WUFDZDtZQUNBLHVCQUF1QjtZQUN2QixZQUFZO1lBQ1pDLFdBQVc7Z0JBQ1RGLFNBQVM7Z0JBQ1RHLFFBQVE7Z0JBQ1JDLFFBQVE7b0JBQ05DLE9BQU87d0JBQ0xMLFNBQVM7d0JBQ1RDLFlBQVk7b0JBQ2Q7b0JBQ0FLLFVBQVU7b0JBQ1ZDLE9BQU87Z0JBQ1Q7WUFDRjtZQUNBQyxZQUFZO2dCQUNWUixTQUFTO2dCQUNURyxRQUFRO1lBQ1Y7WUFDQUcsVUFBVTtZQUNWRyxTQUNFO1lBQ0ZDLFNBQVM7WUFDVEMsUUFDRTtZQUNGLHVCQUF1QjtnQkFDckJYLFNBQVM7Z0JBQ1RZLE9BQU87WUFDVDtZQUNBQyxVQUNFO1lBQ0ZDLGFBQWE7UUFDZjtRQUNBLElBQUlDLHVCQUNGLGtFQUFrRUMsTUFBTTtRQUMxRW5CLE1BQU1DLFNBQVMsQ0FBQ0osTUFBTSxDQUFDLHNCQUFzQixHQUFHO1lBQzlDTSxTQUFTaUIsT0FDUCxZQUFZRCxNQUFNLEdBQ2hCLFFBQ0EsV0FDQSxtQ0FBbUNBLE1BQU0sR0FDekMsTUFDQUQsdUJBQ0EsVUFDQSxNQUNBLFNBQ0Esd0NBQXdDQyxNQUFNLEdBQzlDLE1BQ0FELHVCQUNBLFFBQ0E7WUFFSmQsWUFBWTtZQUNaRSxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ05jLGVBQWU7b0JBQ2JsQixTQUFTaUIsT0FBT0Y7b0JBQ2hCWCxRQUFRO3dCQUNOVSxhQUFhO3dCQUNiSyxZQUFZOzRCQUNWbkIsU0FBUzs0QkFDVEksUUFBUVAsTUFBTUMsU0FBUyxDQUFDSixNQUFNO3dCQUNoQztvQkFDRjtnQkFDRjtnQkFDQTBCLFFBQVE7WUFDVjtRQUNGO1FBQ0F2QixNQUFNQyxTQUFTLENBQUN1QixJQUFJLEdBQUd4QixNQUFNQyxTQUFTLENBQUMsU0FBUztRQUNoREQsTUFBTUMsU0FBUyxDQUFDd0IsT0FBTyxHQUFHekIsTUFBTUMsU0FBUyxDQUFDLFNBQVM7SUFDckQsR0FBR0Q7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90cmVtb3IuanM/MDE3NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xudHJlbW9yLmRpc3BsYXlOYW1lID0gJ3RyZW1vcidcbnRyZW1vci5hbGlhc2VzID0gWyd0cmlja2xlJywgJ3Ryb3knXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRyZW1vcihQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy50cmVtb3IgPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSg/OlxcL1xcKltcXHNcXFNdKj9cXCpcXC98KD86LS18XFwvXFwvfCMpLiopLyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgfSxcbiAgICAgICdpbnRlcnBvbGF0ZWQtc3RyaW5nJzogbnVsbCxcbiAgICAgIC8vIHNlZSBiZWxvd1xuICAgICAgZXh0cmFjdG9yOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXGJbYS16X11cXHcqXFx8KD86W15cXHJcXG5cXFxcfF18XFxcXCg/OlxcclxcbnxbXFxzXFxTXSkpKlxcfC9pLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHJlZ2V4OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvKF5yZSlcXHxbXFxzXFxTXSsvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICAgIH0sXG4gICAgICAgICAgZnVuY3Rpb246IC9eXFx3Ky8sXG4gICAgICAgICAgdmFsdWU6IC9cXHxbXFxzXFxTXSsvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBpZGVudGlmaWVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9gW15gXSpgLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKig/Ojo6XFxzKjx8XFwoKSlcXGIvLFxuICAgICAga2V5d29yZDpcbiAgICAgICAgL1xcYig/OmFyZ3N8YXN8Ynl8Y2FzZXxjb25maWd8Y29ubmVjdHxjb25uZWN0b3J8Y29uc3R8Y29weXxjcmVhdGV8ZGVmYXVsdHxkZWZpbmV8ZGVwbG95fGRyb3B8ZWFjaHxlbWl0fGVuZHxlcmFzZXxldmVudHxmbG93fGZufGZvcnxmcm9tfGdyb3VwfGhhdmluZ3xpbnNlcnR8aW50b3xpbnRyaW5zaWN8bGV0fGxpbmtzfG1hdGNofG1lcmdlfG1vZHxtb3ZlfG9mfG9wZXJhdG9yfHBhdGNofHBpcGVsaW5lfHJlY3VyfHNjcmlwdHxzZWxlY3R8c2V0fHNsaWRpbmd8c3RhdGV8c3RyZWFtfHRvfHR1bWJsaW5nfHVwZGF0ZXx1c2V8d2hlbnx3aGVyZXx3aW5kb3d8d2l0aClcXGIvLFxuICAgICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvaSxcbiAgICAgIG51bWJlcjpcbiAgICAgICAgL1xcYig/OjBiWzAxX10qfDB4WzAtOWEtZkEtRl9dKnxcXGRbXFxkX10qKD86XFwuXFxkW1xcZF9dKik/KD86W0VlXVsrLV0/W1xcZF9dKyk/KVxcYi8sXG4gICAgICAncGF0dGVybi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgcGF0dGVybjogLyUoPz1bKHtbXSkvLFxuICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgfSxcbiAgICAgIG9wZXJhdG9yOlxuICAgICAgICAvWy0rKlxcLyV+IV5dPT98PVs9Pl0/fCZbJj1dP3xcXHxbfD1dP3w8PD89P3w+Pj8+Pz0/fCg/OmFic2VudHxhbmR8bm90fG9yfHByZXNlbnR8eG9yKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogLzo6fFs7XFxbXFxdKClcXHtcXH0sLjpdL1xuICAgIH1cbiAgICB2YXIgaW50ZXJwb2xhdGlvblBhdHRlcm4gPVxuICAgICAgLyNcXHsoPzpbXlwie31dfFxce1tee31dKlxcfXxcIig/OlteXCJcXFxcXFxyXFxuXXxcXFxcKD86XFxyXFxufFtcXHNcXFNdKSkqXCIpKlxcfS8uc291cmNlXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRyZW1vclsnaW50ZXJwb2xhdGVkLXN0cmluZyddID0ge1xuICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAvKF58W15cXFxcXSkvLnNvdXJjZSArXG4gICAgICAgICAgJyg/OicgK1xuICAgICAgICAgICdcIlwiXCIoPzonICtcbiAgICAgICAgICAvW15cIlxcXFwjXXxcXFxcW1xcc1xcU118XCIoPyFcIlwiKXwjKD8hXFx7KS8uc291cmNlICtcbiAgICAgICAgICAnfCcgK1xuICAgICAgICAgIGludGVycG9sYXRpb25QYXR0ZXJuICtcbiAgICAgICAgICAnKSpcIlwiXCInICtcbiAgICAgICAgICAnfCcgK1xuICAgICAgICAgICdcIig/OicgK1xuICAgICAgICAgIC9bXlwiXFxcXFxcclxcbiNdfFxcXFwoPzpcXHJcXG58W1xcc1xcU10pfCMoPyFcXHspLy5zb3VyY2UgK1xuICAgICAgICAgICd8JyArXG4gICAgICAgICAgaW50ZXJwb2xhdGlvblBhdHRlcm4gK1xuICAgICAgICAgICcpKlwiJyArXG4gICAgICAgICAgJyknXG4gICAgICApLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKGludGVycG9sYXRpb25QYXR0ZXJuKSxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXiNcXHt8XFx9JC8sXG4gICAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy50cmVtb3JcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHN0cmluZzogL1tcXHNcXFNdKy9cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRyb3kgPSBQcmlzbS5sYW5ndWFnZXNbJ3RyZW1vciddXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnRyaWNrbGUgPSBQcmlzbS5sYW5ndWFnZXNbJ3RyZW1vciddXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInRyZW1vciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZXh0cmFjdG9yIiwiZ3JlZWR5IiwiaW5zaWRlIiwicmVnZXgiLCJmdW5jdGlvbiIsInZhbHVlIiwiaWRlbnRpZmllciIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwiYWxpYXMiLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiaW50ZXJwb2xhdGlvblBhdHRlcm4iLCJzb3VyY2UiLCJSZWdFeHAiLCJpbnRlcnBvbGF0aW9uIiwiZXhwcmVzc2lvbiIsInN0cmluZyIsInRyb3kiLCJ0cmlja2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tremor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tsx.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tsx.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tsx)\n/* harmony export */ });\n/* harmony import */ var _jsx_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsx.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsx.js\");\n/* harmony import */ var _typescript_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js\");\n// @ts-nocheck\n\n\ntsx.displayName = \"tsx\";\ntsx.aliases = [];\n/** @type {import('../core.js').Syntax} */ function tsx(Prism) {\n    Prism.register(_jsx_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_typescript_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        var typescript = Prism.util.clone(Prism.languages.typescript);\n        Prism.languages.tsx = Prism.languages.extend(\"jsx\", typescript);\n        // doesn't work with TS because TS is too complex\n        delete Prism.languages.tsx[\"parameter\"];\n        delete Prism.languages.tsx[\"literal-property\"];\n        // This will prevent collisions between TSX tags and TS generic types.\n        // Idea by https://github.com/karlhorky\n        // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n        var tag = Prism.languages.tsx.tag;\n        tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + \"(?:\" + tag.pattern.source + \")\", tag.pattern.flags);\n        tag.lookbehind = true;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYztBQUNxQjtBQUNjO0FBQ2pERSxJQUFJQyxXQUFXLEdBQUc7QUFDbEJELElBQUlFLE9BQU8sR0FBRyxFQUFFO0FBRWhCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CQSxNQUFNQyxRQUFRLENBQUNOLCtDQUFZQTtJQUMzQkssTUFBTUMsUUFBUSxDQUFDTCxzREFBbUJBO0lBQ2hDLFVBQVVJLEtBQUs7UUFDZixJQUFJRSxhQUFhRixNQUFNRyxJQUFJLENBQUNDLEtBQUssQ0FBQ0osTUFBTUssU0FBUyxDQUFDSCxVQUFVO1FBQzVERixNQUFNSyxTQUFTLENBQUNSLEdBQUcsR0FBR0csTUFBTUssU0FBUyxDQUFDQyxNQUFNLENBQUMsT0FBT0o7UUFFcEQsaURBQWlEO1FBQ2pELE9BQU9GLE1BQU1LLFNBQVMsQ0FBQ1IsR0FBRyxDQUFDLFlBQVk7UUFDdkMsT0FBT0csTUFBTUssU0FBUyxDQUFDUixHQUFHLENBQUMsbUJBQW1CO1FBRTlDLHNFQUFzRTtRQUN0RSx1Q0FBdUM7UUFDdkMsa0ZBQWtGO1FBQ2xGLElBQUlVLE1BQU1QLE1BQU1LLFNBQVMsQ0FBQ1IsR0FBRyxDQUFDVSxHQUFHO1FBQ2pDQSxJQUFJQyxPQUFPLEdBQUdDLE9BQ1oscUJBQXFCQyxNQUFNLEdBQUcsUUFBUUgsSUFBSUMsT0FBTyxDQUFDRSxNQUFNLEdBQUcsS0FDM0RILElBQUlDLE9BQU8sQ0FBQ0csS0FBSztRQUVuQkosSUFBSUssVUFBVSxHQUFHO0lBQ25CLEdBQUdaO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHN4LmpzP2ZkZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKc3ggZnJvbSAnLi9qc3guanMnXG5pbXBvcnQgcmVmcmFjdG9yVHlwZXNjcmlwdCBmcm9tICcuL3R5cGVzY3JpcHQuanMnXG50c3guZGlzcGxheU5hbWUgPSAndHN4J1xudHN4LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHRzeChQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JKc3gpXG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvclR5cGVzY3JpcHQpXG4gIDsoZnVuY3Rpb24gKFByaXNtKSB7XG4gICAgdmFyIHR5cGVzY3JpcHQgPSBQcmlzbS51dGlsLmNsb25lKFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0KVxuICAgIFByaXNtLmxhbmd1YWdlcy50c3ggPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdqc3gnLCB0eXBlc2NyaXB0KVxuXG4gICAgLy8gZG9lc24ndCB3b3JrIHdpdGggVFMgYmVjYXVzZSBUUyBpcyB0b28gY29tcGxleFxuICAgIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMudHN4WydwYXJhbWV0ZXInXVxuICAgIGRlbGV0ZSBQcmlzbS5sYW5ndWFnZXMudHN4WydsaXRlcmFsLXByb3BlcnR5J11cblxuICAgIC8vIFRoaXMgd2lsbCBwcmV2ZW50IGNvbGxpc2lvbnMgYmV0d2VlbiBUU1ggdGFncyBhbmQgVFMgZ2VuZXJpYyB0eXBlcy5cbiAgICAvLyBJZGVhIGJ5IGh0dHBzOi8vZ2l0aHViLmNvbS9rYXJsaG9ya3lcbiAgICAvLyBEaXNjdXNzaW9uOiBodHRwczovL2dpdGh1Yi5jb20vUHJpc21KUy9wcmlzbS9pc3N1ZXMvMjU5NCNpc3N1ZWNvbW1lbnQtNzEwNjY2OTI4XG4gICAgdmFyIHRhZyA9IFByaXNtLmxhbmd1YWdlcy50c3gudGFnXG4gICAgdGFnLnBhdHRlcm4gPSBSZWdFeHAoXG4gICAgICAvKF58W15cXHckXXwoPz08XFwvKSkvLnNvdXJjZSArICcoPzonICsgdGFnLnBhdHRlcm4uc291cmNlICsgJyknLFxuICAgICAgdGFnLnBhdHRlcm4uZmxhZ3NcbiAgICApXG4gICAgdGFnLmxvb2tiZWhpbmQgPSB0cnVlXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckpzeCIsInJlZnJhY3RvclR5cGVzY3JpcHQiLCJ0c3giLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwidHlwZXNjcmlwdCIsInV0aWwiLCJjbG9uZSIsImxhbmd1YWdlcyIsImV4dGVuZCIsInRhZyIsInBhdHRlcm4iLCJSZWdFeHAiLCJzb3VyY2UiLCJmbGFncyIsImxvb2tiZWhpbmQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tsx.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tt2.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tt2.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ tt2)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\n\ntt2.displayName = \"tt2\";\ntt2.aliases = [];\n/** @type {import('../core.js').Syntax} */ function tt2(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.tt2 = Prism.languages.extend(\"clike\", {\n            comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n            keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n            punctuation: /[[\\]{},()]/\n        });\n        Prism.languages.insertBefore(\"tt2\", \"number\", {\n            operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n            variable: {\n                pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n            }\n        });\n        Prism.languages.insertBefore(\"tt2\", \"keyword\", {\n            delimiter: {\n                pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n                alias: \"punctuation\"\n            }\n        });\n        Prism.languages.insertBefore(\"tt2\", \"string\", {\n            \"single-quoted-string\": {\n                pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n                greedy: true,\n                alias: \"string\"\n            },\n            \"double-quoted-string\": {\n                pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n                greedy: true,\n                alias: \"string\",\n                inside: {\n                    variable: {\n                        pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n                    }\n                }\n            }\n        });\n        // The different types of TT2 strings \"replace\" the C-like standard string\n        delete Prism.languages.tt2.string;\n        Prism.hooks.add(\"before-tokenize\", function(env) {\n            var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n            Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"tt2\", tt2Pattern);\n        });\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"tt2\");\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90dDIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN1QjtBQUM5REUsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUcsRUFBRTtBQUVoQix3Q0FBd0MsR0FDekIsU0FBU0YsSUFBSUcsS0FBSztJQUMvQkEsTUFBTUMsUUFBUSxDQUFDTixpREFBY0E7SUFDN0JLLE1BQU1DLFFBQVEsQ0FBQ0wsNkRBQXlCQTtJQUN0QyxVQUFVSSxLQUFLO1FBQ2ZBLE1BQU1FLFNBQVMsQ0FBQ0wsR0FBRyxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1lBQ3BEQyxTQUFTO1lBQ1RDLFNBQ0U7WUFDRkMsYUFBYTtRQUNmO1FBQ0FOLE1BQU1FLFNBQVMsQ0FBQ0ssWUFBWSxDQUFDLE9BQU8sVUFBVTtZQUM1Q0MsVUFBVTtZQUNWQyxVQUFVO2dCQUNSQyxTQUFTO1lBQ1g7UUFDRjtRQUNBVixNQUFNRSxTQUFTLENBQUNLLFlBQVksQ0FBQyxPQUFPLFdBQVc7WUFDN0NJLFdBQVc7Z0JBQ1RELFNBQVM7Z0JBQ1RFLE9BQU87WUFDVDtRQUNGO1FBQ0FaLE1BQU1FLFNBQVMsQ0FBQ0ssWUFBWSxDQUFDLE9BQU8sVUFBVTtZQUM1Qyx3QkFBd0I7Z0JBQ3RCRyxTQUFTO2dCQUNURyxRQUFRO2dCQUNSRCxPQUFPO1lBQ1Q7WUFDQSx3QkFBd0I7Z0JBQ3RCRixTQUFTO2dCQUNURyxRQUFRO2dCQUNSRCxPQUFPO2dCQUNQRSxRQUFRO29CQUNOTCxVQUFVO3dCQUNSQyxTQUFTO29CQUNYO2dCQUNGO1lBQ0Y7UUFDRjtRQUVBLDBFQUEwRTtRQUMxRSxPQUFPVixNQUFNRSxTQUFTLENBQUNMLEdBQUcsQ0FBQ2tCLE1BQU07UUFDakNmLE1BQU1nQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxtQkFBbUIsU0FBVUMsR0FBRztZQUM5QyxJQUFJQyxhQUFhO1lBQ2pCbkIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDa0IsaUJBQWlCLENBQ3BERixLQUNBLE9BQ0FDO1FBRUo7UUFDQW5CLE1BQU1nQixLQUFLLENBQUNDLEdBQUcsQ0FBQyxrQkFBa0IsU0FBVUMsR0FBRztZQUM3Q2xCLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ21CLG9CQUFvQixDQUFDSCxLQUFLO1FBQ2pFO0lBQ0YsR0FBR2xCO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdHQyLmpzP2ZhNDYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JDbGlrZSBmcm9tICcuL2NsaWtlLmpzJ1xuaW1wb3J0IHJlZnJhY3Rvck1hcmt1cFRlbXBsYXRpbmcgZnJvbSAnLi9tYXJrdXAtdGVtcGxhdGluZy5qcydcbnR0Mi5kaXNwbGF5TmFtZSA9ICd0dDInXG50dDIuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHQyKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckNsaWtlKVxuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy50dDIgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdjbGlrZScsIHtcbiAgICAgIGNvbW1lbnQ6IC8jLip8XFxbJSNbXFxzXFxTXSo/JVxcXS8sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvXFxiKD86QkxPQ0t8Q0FMTHxDQVNFfENBVENIfENMRUFSfERFQlVHfERFRkFVTFR8RUxTRXxFTFNJRnxFTkR8RklMVEVSfEZJTkFMfEZPUkVBQ0h8R0VUfElGfElOfElOQ0xVREV8SU5TRVJUfExBU1R8TUFDUk98TUVUQXxORVhUfFBFUkx8UFJPQ0VTU3xSQVdQRVJMfFJFVFVSTnxTRVR8U1RPUHxTV0lUQ0h8VEFHU3xUSFJPV3xUUll8VU5MRVNTfFVTRXxXSElMRXxXUkFQUEVSKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1tbXFxde30sKCldL1xuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgndHQyJywgJ251bWJlcicsIHtcbiAgICAgIG9wZXJhdG9yOiAvPVs+PV0/fCE9P3w8PT98Pj0/fCYmfFxcfFxcfD98XFxiKD86YW5kfG5vdHxvcilcXGIvLFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcYlthLXpdXFx3Kig/OlxccypcXC5cXHMqKD86XFxkK3xcXCQ/W2Etel1cXHcqKSkqXFxiL2lcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3R0MicsICdrZXl3b3JkJywge1xuICAgICAgZGVsaW1pdGVyOiB7XG4gICAgICAgIHBhdHRlcm46IC9eKD86XFxbJXwlJSktP3wtPyVcXF0kLyxcbiAgICAgICAgYWxpYXM6ICdwdW5jdHVhdGlvbidcbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3R0MicsICdzdHJpbmcnLCB7XG4gICAgICAnc2luZ2xlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICAgIHBhdHRlcm46IC8nW15cXFxcJ10qKD86XFxcXFtcXHNcXFNdW15cXFxcJ10qKSonLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBhbGlhczogJ3N0cmluZydcbiAgICAgIH0sXG4gICAgICAnZG91YmxlLXF1b3RlZC1zdHJpbmcnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIlteXFxcXFwiXSooPzpcXFxcW1xcc1xcU11bXlxcXFxcIl0qKSpcIi8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICB2YXJpYWJsZToge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/OlthLXpdXFx3Kig/OlxcLig/OlxcZCt8XFwkP1thLXpdXFx3KikpKikvaVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pXG5cbiAgICAvLyBUaGUgZGlmZmVyZW50IHR5cGVzIG9mIFRUMiBzdHJpbmdzIFwicmVwbGFjZVwiIHRoZSBDLWxpa2Ugc3RhbmRhcmQgc3RyaW5nXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy50dDIuc3RyaW5nXG4gICAgUHJpc20uaG9va3MuYWRkKCdiZWZvcmUtdG9rZW5pemUnLCBmdW5jdGlvbiAoZW52KSB7XG4gICAgICB2YXIgdHQyUGF0dGVybiA9IC9cXFslW1xcc1xcU10rPyVcXF0vZ1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLmJ1aWxkUGxhY2Vob2xkZXJzKFxuICAgICAgICBlbnYsXG4gICAgICAgICd0dDInLFxuICAgICAgICB0dDJQYXR0ZXJuXG4gICAgICApXG4gICAgfSlcbiAgICBQcmlzbS5ob29rcy5hZGQoJ2FmdGVyLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgICAgUHJpc20ubGFuZ3VhZ2VzWydtYXJrdXAtdGVtcGxhdGluZyddLnRva2VuaXplUGxhY2Vob2xkZXJzKGVudiwgJ3R0MicpXG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJyZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIiwidHQyIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImxhbmd1YWdlcyIsImV4dGVuZCIsImNvbW1lbnQiLCJrZXl3b3JkIiwicHVuY3R1YXRpb24iLCJpbnNlcnRCZWZvcmUiLCJvcGVyYXRvciIsInZhcmlhYmxlIiwicGF0dGVybiIsImRlbGltaXRlciIsImFsaWFzIiwiZ3JlZWR5IiwiaW5zaWRlIiwic3RyaW5nIiwiaG9va3MiLCJhZGQiLCJlbnYiLCJ0dDJQYXR0ZXJuIiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tt2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/turtle.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/turtle.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ turtle)\n/* harmony export */ });\n// @ts-nocheck\nturtle.displayName = \"turtle\";\nturtle.aliases = [\n    \"trig\"\n];\n/** @type {import('../core.js').Syntax} */ function turtle(Prism) {\n    Prism.languages.turtle = {\n        comment: {\n            pattern: /#.*/,\n            greedy: true\n        },\n        \"multiline-string\": {\n            pattern: /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n            greedy: true,\n            alias: \"string\",\n            inside: {\n                comment: /#.*/\n            }\n        },\n        string: {\n            pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n            greedy: true\n        },\n        url: {\n            pattern: /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n            greedy: true,\n            inside: {\n                punctuation: /[<>]/\n            }\n        },\n        function: {\n            pattern: /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n            inside: {\n                \"local-name\": {\n                    pattern: /([^:]*:)[\\s\\S]+/,\n                    lookbehind: true\n                },\n                prefix: {\n                    pattern: /[\\s\\S]+/,\n                    inside: {\n                        punctuation: /:/\n                    }\n                }\n            }\n        },\n        number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n        punctuation: /[{}.,;()[\\]]|\\^\\^/,\n        boolean: /\\b(?:false|true)\\b/,\n        keyword: [\n            /(?:\\ba|@prefix|@base)\\b|=/,\n            /\\b(?:base|graph|prefix)\\b/i\n        ],\n        tag: {\n            pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n            inside: {\n                punctuation: /@/\n            }\n        }\n    };\n    Prism.languages.trig = Prism.languages[\"turtle\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90dXJ0bGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUc7SUFBQztDQUFPO0FBRXpCLHdDQUF3QyxHQUN6QixTQUFTRixPQUFPRyxLQUFLO0lBQ2xDQSxNQUFNQyxTQUFTLENBQUNKLE1BQU0sR0FBRztRQUN2QkssU0FBUztZQUNQQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBLG9CQUFvQjtZQUNsQkQsU0FDRTtZQUNGQyxRQUFRO1lBQ1JDLE9BQU87WUFDUEMsUUFBUTtnQkFDTkosU0FBUztZQUNYO1FBQ0Y7UUFDQUssUUFBUTtZQUNOSixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSSxLQUFLO1lBQ0hMLFNBQ0U7WUFDRkMsUUFBUTtZQUNSRSxRQUFRO2dCQUNORyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxVQUFVO1lBQ1JQLFNBQ0U7WUFDRkcsUUFBUTtnQkFDTixjQUFjO29CQUNaSCxTQUFTO29CQUNUUSxZQUFZO2dCQUNkO2dCQUNBQyxRQUFRO29CQUNOVCxTQUFTO29CQUNURyxRQUFRO3dCQUNORyxhQUFhO29CQUNmO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBSSxRQUFRO1FBQ1JKLGFBQWE7UUFDYkssU0FBUztRQUNUQyxTQUFTO1lBQUM7WUFBNkI7U0FBNkI7UUFDcEVDLEtBQUs7WUFDSGIsU0FBUztZQUNURyxRQUFRO2dCQUNORyxhQUFhO1lBQ2Y7UUFDRjtJQUNGO0lBQ0FULE1BQU1DLFNBQVMsQ0FBQ2dCLElBQUksR0FBR2pCLE1BQU1DLFNBQVMsQ0FBQyxTQUFTO0FBQ2xEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3R1cnRsZS5qcz9kNTVlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG50dXJ0bGUuZGlzcGxheU5hbWUgPSAndHVydGxlJ1xudHVydGxlLmFsaWFzZXMgPSBbJ3RyaWcnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHR1cnRsZShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMudHVydGxlID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAnbXVsdGlsaW5lLXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cIlwiXCIoPzooPzpcIlwiPyk/KD86W15cIlxcXFxdfFxcXFwuKSkqXCJcIlwifCcnJyg/Oig/OicnPyk/KD86W14nXFxcXF18XFxcXC4pKSonJycvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdzdHJpbmcnLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGNvbW1lbnQ6IC8jLiovXG4gICAgICB9XG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlteXFxcXFwiXFxyXFxuXXxcXFxcLikqXCJ8Jyg/OlteXFxcXCdcXHJcXG5dfFxcXFwuKSonLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgdXJsOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvPCg/OlteXFx4MDAtXFx4MjA8Plwie318XmBcXFxcXXxcXFxcKD86dVtcXGRhLWZBLUZdezR9fFVbXFxkYS1mQS1GXXs4fSkpKj4vLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIHB1bmN0dWF0aW9uOiAvWzw+XS9cbiAgICAgIH1cbiAgICB9LFxuICAgIGZ1bmN0aW9uOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvKD86KD8hWy0uXFxkXFx4QjddKVstLlxcd1xceEI3XFx4QzAtXFx1RkZGRF0rKT86KD86KD8hWy0uXSkoPzpbLS46XFx3XFx4QzAtXFx1RkZGRF18JVtcXGRhLWZdezJ9fFxcXFwuKSspPy9pLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdsb2NhbC1uYW1lJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oW146XSo6KVtcXHNcXFNdKy8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBwcmVmaXg6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIHB1bmN0dWF0aW9uOiAvOi9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIG51bWJlcjogL1srLV0/XFxiXFxkKyg/OlxcLlxcZCopPyg/OmVbKy1dP1xcZCspPy9pLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9Liw7KClbXFxdXXxcXF5cXF4vLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAga2V5d29yZDogWy8oPzpcXGJhfEBwcmVmaXh8QGJhc2UpXFxifD0vLCAvXFxiKD86YmFzZXxncmFwaHxwcmVmaXgpXFxiL2ldLFxuICAgIHRhZzoge1xuICAgICAgcGF0dGVybjogL0BbYS16XSsoPzotW2EtelxcZF0rKSovaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL0AvXG4gICAgICB9XG4gICAgfVxuICB9XG4gIFByaXNtLmxhbmd1YWdlcy50cmlnID0gUHJpc20ubGFuZ3VhZ2VzWyd0dXJ0bGUnXVxufVxuIl0sIm5hbWVzIjpbInR1cnRsZSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJncmVlZHkiLCJhbGlhcyIsImluc2lkZSIsInN0cmluZyIsInVybCIsInB1bmN0dWF0aW9uIiwiZnVuY3Rpb24iLCJsb29rYmVoaW5kIiwicHJlZml4IiwibnVtYmVyIiwiYm9vbGVhbiIsImtleXdvcmQiLCJ0YWciLCJ0cmlnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/turtle.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/twig.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/twig.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ twig)\n/* harmony export */ });\n/* harmony import */ var _markup_templating_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n// @ts-nocheck\n\ntwig.displayName = \"twig\";\ntwig.aliases = [];\n/** @type {import('../core.js').Syntax} */ function twig(Prism) {\n    Prism.register(_markup_templating_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.twig = {\n        comment: /^\\{#[\\s\\S]*?#\\}$/,\n        \"tag-name\": {\n            pattern: /(^\\{%-?\\s*)\\w+/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        delimiter: {\n            pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n            alias: \"punctuation\"\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n                punctuation: /^['\"]|['\"]$/\n            }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:false|null|true)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n            {\n                pattern: /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n                lookbehind: true\n            },\n            /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        punctuation: /[()\\[\\]{}:.,]/\n    };\n    Prism.hooks.add(\"before-tokenize\", function(env) {\n        if (env.language !== \"twig\") {\n            return;\n        }\n        var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g;\n        Prism.languages[\"markup-templating\"].buildPlaceholders(env, \"twig\", pattern);\n    });\n    Prism.hooks.add(\"after-tokenize\", function(env) {\n        Prism.languages[\"markup-templating\"].tokenizePlaceholders(env, \"twig\");\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90d2lnLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNnRDtBQUM5REMsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCw2REFBeUJBO0lBQ3hDSSxNQUFNRSxTQUFTLENBQUNMLElBQUksR0FBRztRQUNyQk0sU0FBUztRQUNULFlBQVk7WUFDVkMsU0FBUztZQUNUQyxZQUFZO1lBQ1pDLE9BQU87UUFDVDtRQUNBQyxXQUFXO1lBQ1RILFNBQVM7WUFDVEUsT0FBTztRQUNUO1FBQ0FFLFFBQVE7WUFDTkosU0FBUztZQUNUSyxRQUFRO2dCQUNOQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxTQUFTO1FBQ1RDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxVQUFVO1lBQ1I7Z0JBQ0VWLFNBQ0U7Z0JBQ0ZDLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDREssYUFBYTtJQUNmO0lBQ0FWLE1BQU1lLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLG1CQUFtQixTQUFVQyxHQUFHO1FBQzlDLElBQUlBLElBQUlDLFFBQVEsS0FBSyxRQUFRO1lBQzNCO1FBQ0Y7UUFDQSxJQUFJZCxVQUFVO1FBQ2RKLE1BQU1FLFNBQVMsQ0FBQyxvQkFBb0IsQ0FBQ2lCLGlCQUFpQixDQUFDRixLQUFLLFFBQVFiO0lBQ3RFO0lBQ0FKLE1BQU1lLEtBQUssQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixTQUFVQyxHQUFHO1FBQzdDakIsTUFBTUUsU0FBUyxDQUFDLG9CQUFvQixDQUFDa0Isb0JBQW9CLENBQUNILEtBQUs7SUFDakU7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90d2lnLmpzPzk0NGUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JNYXJrdXBUZW1wbGF0aW5nIGZyb20gJy4vbWFya3VwLXRlbXBsYXRpbmcuanMnXG50d2lnLmRpc3BsYXlOYW1lID0gJ3R3aWcnXG50d2lnLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHR3aWcoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZylcbiAgUHJpc20ubGFuZ3VhZ2VzLnR3aWcgPSB7XG4gICAgY29tbWVudDogL15cXHsjW1xcc1xcU10qPyNcXH0kLyxcbiAgICAndGFnLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5cXHslLT9cXHMqKVxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGRlbGltaXRlcjoge1xuICAgICAgcGF0dGVybjogL15cXHtbeyVdLT98LT9bJX1dXFx9JC8sXG4gICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9eWydcIl18WydcIl0kL1xuICAgICAgfVxuICAgIH0sXG4gICAga2V5d29yZDogL1xcYig/OmV2ZW58aWZ8b2RkKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvLFxuICAgIG51bWJlcjogL1xcYjB4W1xcZEEtRmEtZl0rfCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRWVdWy0rXT9cXGQrKT8vLFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhcXHMpKD86YW5kfGItYW5kfGItb3J8Yi14b3J8ZW5kcyB3aXRofGlufGlzfG1hdGNoZXN8bm90fG9yfHNhbWUgYXN8c3RhcnRzIHdpdGgpKD89XFxzKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvWz08Pl09P3whPXxcXCpcXCo/fFxcL1xcLz98XFw/Oj98Wy0rfiV8XS9cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde306LixdL1xuICB9XG4gIFByaXNtLmhvb2tzLmFkZCgnYmVmb3JlLXRva2VuaXplJywgZnVuY3Rpb24gKGVudikge1xuICAgIGlmIChlbnYubGFuZ3VhZ2UgIT09ICd0d2lnJykge1xuICAgICAgcmV0dXJuXG4gICAgfVxuICAgIHZhciBwYXR0ZXJuID0gL1xceyg/OiNbXFxzXFxTXSo/I3wlW1xcc1xcU10qPyV8XFx7W1xcc1xcU10qP1xcfSlcXH0vZ1xuICAgIFByaXNtLmxhbmd1YWdlc1snbWFya3VwLXRlbXBsYXRpbmcnXS5idWlsZFBsYWNlaG9sZGVycyhlbnYsICd0d2lnJywgcGF0dGVybilcbiAgfSlcbiAgUHJpc20uaG9va3MuYWRkKCdhZnRlci10b2tlbml6ZScsIGZ1bmN0aW9uIChlbnYpIHtcbiAgICBQcmlzbS5sYW5ndWFnZXNbJ21hcmt1cC10ZW1wbGF0aW5nJ10udG9rZW5pemVQbGFjZWhvbGRlcnMoZW52LCAndHdpZycpXG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwVGVtcGxhdGluZyIsInR3aWciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJkZWxpbWl0ZXIiLCJzdHJpbmciLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsImtleXdvcmQiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJob29rcyIsImFkZCIsImVudiIsImxhbmd1YWdlIiwiYnVpbGRQbGFjZWhvbGRlcnMiLCJ0b2tlbml6ZVBsYWNlaG9sZGVycyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/twig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ typescript)\n/* harmony export */ });\n/* harmony import */ var _javascript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n// @ts-nocheck\n\ntypescript.displayName = \"typescript\";\ntypescript.aliases = [\n    \"ts\"\n];\n/** @type {import('../core.js').Syntax} */ function typescript(Prism) {\n    Prism.register(_javascript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.typescript = Prism.languages.extend(\"javascript\", {\n            \"class-name\": {\n                pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n                lookbehind: true,\n                greedy: true,\n                inside: null // see below\n            },\n            builtin: /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n        });\n        // The keywords TypeScript adds to JavaScript\n        Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n        /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n        /\\btype\\b(?=\\s*(?:[\\{*]|$))/);\n        // doesn't work with TS because TS is too complex\n        delete Prism.languages.typescript[\"parameter\"];\n        delete Prism.languages.typescript[\"literal-property\"];\n        // a version of typescript specifically for highlighting types\n        var typeInside = Prism.languages.extend(\"typescript\", {});\n        delete typeInside[\"class-name\"];\n        Prism.languages.typescript[\"class-name\"].inside = typeInside;\n        Prism.languages.insertBefore(\"typescript\", \"function\", {\n            decorator: {\n                pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n                inside: {\n                    at: {\n                        pattern: /^@/,\n                        alias: \"operator\"\n                    },\n                    function: /^[\\s\\S]+/\n                }\n            },\n            \"generic-function\": {\n                // e.g. foo<T extends \"bar\" | \"baz\">( ...\n                pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n                greedy: true,\n                inside: {\n                    function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n                    generic: {\n                        pattern: /<[\\s\\S]+/,\n                        // everything after the first <\n                        alias: \"class-name\",\n                        inside: typeInside\n                    }\n                }\n            }\n        });\n        Prism.languages.ts = Prism.languages.typescript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90eXBlc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUNtQztBQUNqREMsV0FBV0MsV0FBVyxHQUFHO0FBQ3pCRCxXQUFXRSxPQUFPLEdBQUc7SUFBQztDQUFLO0FBRTNCLHdDQUF3QyxHQUN6QixTQUFTRixXQUFXRyxLQUFLO0lBQ3RDQSxNQUFNQyxRQUFRLENBQUNMLHNEQUFtQkE7SUFDaEMsVUFBVUksS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLFVBQVUsR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsY0FBYztZQUNoRSxjQUFjO2dCQUNaQyxTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO2dCQUNSQyxRQUFRLEtBQUssWUFBWTtZQUMzQjtZQUVBQyxTQUNFO1FBQ0o7UUFFQSw2Q0FBNkM7UUFDN0NSLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxDQUFDWSxPQUFPLENBQUNDLElBQUksQ0FDckMsc0RBQ0EscURBQXFEO1FBQ3JELDRGQUNBLGtDQUFrQztRQUNsQztRQUdGLGlEQUFpRDtRQUNqRCxPQUFPVixNQUFNRSxTQUFTLENBQUNMLFVBQVUsQ0FBQyxZQUFZO1FBQzlDLE9BQU9HLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVSxDQUFDLG1CQUFtQjtRQUVyRCw4REFBOEQ7UUFDOUQsSUFBSWMsYUFBYVgsTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsY0FBYyxDQUFDO1FBQ3ZELE9BQU9RLFVBQVUsQ0FBQyxhQUFhO1FBQy9CWCxNQUFNRSxTQUFTLENBQUNMLFVBQVUsQ0FBQyxhQUFhLENBQUNVLE1BQU0sR0FBR0k7UUFDbERYLE1BQU1FLFNBQVMsQ0FBQ1UsWUFBWSxDQUFDLGNBQWMsWUFBWTtZQUNyREMsV0FBVztnQkFDVFQsU0FBUztnQkFDVEcsUUFBUTtvQkFDTk8sSUFBSTt3QkFDRlYsU0FBUzt3QkFDVFcsT0FBTztvQkFDVDtvQkFDQUMsVUFBVTtnQkFDWjtZQUNGO1lBQ0Esb0JBQW9CO2dCQUNsQix5Q0FBeUM7Z0JBQ3pDWixTQUNFO2dCQUNGRSxRQUFRO2dCQUNSQyxRQUFRO29CQUNOUyxVQUFVO29CQUNWQyxTQUFTO3dCQUNQYixTQUFTO3dCQUNULCtCQUErQjt3QkFDL0JXLE9BQU87d0JBQ1BSLFFBQVFJO29CQUNWO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBWCxNQUFNRSxTQUFTLENBQUNnQixFQUFFLEdBQUdsQixNQUFNRSxTQUFTLENBQUNMLFVBQVU7SUFDakQsR0FBR0c7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90eXBlc2NyaXB0LmpzPzZkMWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JKYXZhc2NyaXB0IGZyb20gJy4vamF2YXNjcmlwdC5qcydcbnR5cGVzY3JpcHQuZGlzcGxheU5hbWUgPSAndHlwZXNjcmlwdCdcbnR5cGVzY3JpcHQuYWxpYXNlcyA9IFsndHMnXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHR5cGVzY3JpcHQoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9ySmF2YXNjcmlwdClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2phdmFzY3JpcHQnLCB7XG4gICAgICAnY2xhc3MtbmFtZSc6IHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxcYig/OmNsYXNzfGV4dGVuZHN8aW1wbGVtZW50c3xpbnN0YW5jZW9mfGludGVyZmFjZXxuZXd8dHlwZSlcXHMrKSg/IWtleW9mXFxiKSg/IVxccylbXyRhLXpBLVpcXHhBMC1cXHVGRkZGXSg/Oig/IVxccylbJFxcd1xceEEwLVxcdUZGRkZdKSooPzpcXHMqPCg/OltePD5dfDwoPzpbXjw+XXw8W148Pl0qPikqPikqPik/LyxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IG51bGwgLy8gc2VlIGJlbG93XG4gICAgICB9LFxuXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86QXJyYXl8RnVuY3Rpb258UHJvbWlzZXxhbnl8Ym9vbGVhbnxjb25zb2xlfG5ldmVyfG51bWJlcnxzdHJpbmd8c3ltYm9sfHVua25vd24pXFxiL1xuICAgIH0pXG5cbiAgICAvLyBUaGUga2V5d29yZHMgVHlwZVNjcmlwdCBhZGRzIHRvIEphdmFTY3JpcHRcbiAgICBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdC5rZXl3b3JkLnB1c2goXG4gICAgICAvXFxiKD86YWJzdHJhY3R8ZGVjbGFyZXxpc3xrZXlvZnxyZWFkb25seXxyZXF1aXJlKVxcYi8sXG4gICAgICAvLyBrZXl3b3JkcyB0aGF0IGhhdmUgdG8gYmUgZm9sbG93ZWQgYnkgYW4gaWRlbnRpZmllclxuICAgICAgL1xcYig/OmFzc2VydHN8aW5mZXJ8aW50ZXJmYWNlfG1vZHVsZXxuYW1lc3BhY2V8dHlwZSlcXGIoPz1cXHMqKD86W3tfJGEtekEtWlxceEEwLVxcdUZGRkZdfCQpKS8sXG4gICAgICAvLyBUaGlzIGlzIGZvciBgaW1wb3J0IHR5cGUgKiwge31gXG4gICAgICAvXFxidHlwZVxcYig/PVxccyooPzpbXFx7Kl18JCkpL1xuICAgIClcblxuICAgIC8vIGRvZXNuJ3Qgd29yayB3aXRoIFRTIGJlY2F1c2UgVFMgaXMgdG9vIGNvbXBsZXhcbiAgICBkZWxldGUgUHJpc20ubGFuZ3VhZ2VzLnR5cGVzY3JpcHRbJ3BhcmFtZXRlciddXG4gICAgZGVsZXRlIFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0WydsaXRlcmFsLXByb3BlcnR5J11cblxuICAgIC8vIGEgdmVyc2lvbiBvZiB0eXBlc2NyaXB0IHNwZWNpZmljYWxseSBmb3IgaGlnaGxpZ2h0aW5nIHR5cGVzXG4gICAgdmFyIHR5cGVJbnNpZGUgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCd0eXBlc2NyaXB0Jywge30pXG4gICAgZGVsZXRlIHR5cGVJbnNpZGVbJ2NsYXNzLW5hbWUnXVxuICAgIFByaXNtLmxhbmd1YWdlcy50eXBlc2NyaXB0WydjbGFzcy1uYW1lJ10uaW5zaWRlID0gdHlwZUluc2lkZVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3R5cGVzY3JpcHQnLCAnZnVuY3Rpb24nLCB7XG4gICAgICBkZWNvcmF0b3I6IHtcbiAgICAgICAgcGF0dGVybjogL0BbJFxcd1xceEEwLVxcdUZGRkZdKy8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIGF0OiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXkAvLFxuICAgICAgICAgICAgYWxpYXM6ICdvcGVyYXRvcidcbiAgICAgICAgICB9LFxuICAgICAgICAgIGZ1bmN0aW9uOiAvXltcXHNcXFNdKy9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdnZW5lcmljLWZ1bmN0aW9uJzoge1xuICAgICAgICAvLyBlLmcuIGZvbzxUIGV4dGVuZHMgXCJiYXJcIiB8IFwiYmF6XCI+KCAuLi5cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvIz8oPyFcXHMpW18kYS16QS1aXFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWyRcXHdcXHhBMC1cXHVGRkZGXSkqXFxzKjwoPzpbXjw+XXw8KD86W148Pl18PFtePD5dKj4pKj4pKj4oPz1cXHMqXFwoKS8sXG4gICAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZnVuY3Rpb246IC9eIz8oPyFcXHMpW18kYS16QS1aXFx4QTAtXFx1RkZGRl0oPzooPyFcXHMpWyRcXHdcXHhBMC1cXHVGRkZGXSkqLyxcbiAgICAgICAgICBnZW5lcmljOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvPFtcXHNcXFNdKy8sXG4gICAgICAgICAgICAvLyBldmVyeXRoaW5nIGFmdGVyIHRoZSBmaXJzdCA8XG4gICAgICAgICAgICBhbGlhczogJ2NsYXNzLW5hbWUnLFxuICAgICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMudHMgPSBQcmlzbS5sYW5ndWFnZXMudHlwZXNjcmlwdFxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JKYXZhc2NyaXB0IiwidHlwZXNjcmlwdCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImdyZWVkeSIsImluc2lkZSIsImJ1aWx0aW4iLCJrZXl3b3JkIiwicHVzaCIsInR5cGVJbnNpZGUiLCJpbnNlcnRCZWZvcmUiLCJkZWNvcmF0b3IiLCJhdCIsImFsaWFzIiwiZnVuY3Rpb24iLCJnZW5lcmljIiwidHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typoscript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typoscript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ typoscript)\n/* harmony export */ });\n// @ts-nocheck\ntyposcript.displayName = \"typoscript\";\ntyposcript.aliases = [\n    \"tsconfig\"\n];\n/** @type {import('../core.js').Syntax} */ function typoscript(Prism) {\n    ;\n    (function(Prism) {\n        var keywords = /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/;\n        Prism.languages.typoscript = {\n            comment: [\n                {\n                    // multiline comments /* */\n                    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n                    lookbehind: true\n                },\n                {\n                    // double-slash comments - ignored when backslashes or colon is found in front\n                    // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n                    pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // hash comments - ignored when leading quote is found for hex colors in strings\n                    pattern: /(^|[^\"'])#.*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            function: [\n                {\n                    // old include style\n                    pattern: /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n                    inside: {\n                        string: {\n                            pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n                            inside: {\n                                keyword: keywords\n                            }\n                        },\n                        keyword: {\n                            pattern: /INCLUDE_TYPOSCRIPT/\n                        }\n                    }\n                },\n                {\n                    // new include style\n                    pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n                    inside: {\n                        string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n                    }\n                }\n            ],\n            string: {\n                pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n                lookbehind: true,\n                inside: {\n                    function: /\\{\\$.*\\}/,\n                    // constants include\n                    keyword: keywords,\n                    number: /^\\d+$/,\n                    punctuation: /[,|:]/\n                }\n            },\n            keyword: keywords,\n            number: {\n                // special highlighting for indexes of arrays in tags\n                pattern: /\\b\\d+\\s*[.{=]/,\n                inside: {\n                    operator: /[.{=]/\n                }\n            },\n            tag: {\n                pattern: /\\.?[-\\w\\\\]+\\.?/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            punctuation: /[{}[\\];(),.:|]/,\n            operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n        };\n        Prism.languages.tsconfig = Prism.languages.typoscript;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy90eXBvc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHO0lBQUM7Q0FBVztBQUVqQyx3Q0FBd0MsR0FDekIsU0FBU0YsV0FBV0csS0FBSzs7SUFDcEMsVUFBVUEsS0FBSztRQUNmLElBQUlDLFdBQ0Y7UUFDRkQsTUFBTUUsU0FBUyxDQUFDTCxVQUFVLEdBQUc7WUFDM0JNLFNBQVM7Z0JBQ1A7b0JBQ0UsMkJBQTJCO29CQUMzQkMsU0FBUztvQkFDVEMsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRSw4RUFBOEU7b0JBQzlFLDJHQUEyRztvQkFDM0dELFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pDLFFBQVE7Z0JBQ1Y7Z0JBQ0E7b0JBQ0UsZ0ZBQWdGO29CQUNoRkYsU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsUUFBUTtnQkFDVjthQUNEO1lBQ0RDLFVBQVU7Z0JBQ1I7b0JBQ0Usb0JBQW9CO29CQUNwQkgsU0FDRTtvQkFDRkksUUFBUTt3QkFDTkMsUUFBUTs0QkFDTkwsU0FBUzs0QkFDVEksUUFBUTtnQ0FDTkUsU0FBU1Q7NEJBQ1g7d0JBQ0Y7d0JBQ0FTLFNBQVM7NEJBQ1BOLFNBQVM7d0JBQ1g7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0E7b0JBQ0Usb0JBQW9CO29CQUNwQkEsU0FBUztvQkFDVEksUUFBUTt3QkFDTkMsUUFBUTtvQkFDVjtnQkFDRjthQUNEO1lBQ0RBLFFBQVE7Z0JBQ05MLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pHLFFBQVE7b0JBQ05ELFVBQVU7b0JBQ1Ysb0JBQW9CO29CQUNwQkcsU0FBU1Q7b0JBQ1RVLFFBQVE7b0JBQ1JDLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBRixTQUFTVDtZQUNUVSxRQUFRO2dCQUNOLHFEQUFxRDtnQkFDckRQLFNBQVM7Z0JBQ1RJLFFBQVE7b0JBQ05LLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBQyxLQUFLO2dCQUNIVixTQUFTO2dCQUNUSSxRQUFRO29CQUNOSSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQUEsYUFBYTtZQUNiQyxVQUFVO1FBQ1o7UUFDQWIsTUFBTUUsU0FBUyxDQUFDYSxRQUFRLEdBQUdmLE1BQU1FLFNBQVMsQ0FBQ0wsVUFBVTtJQUN2RCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3R5cG9zY3JpcHQuanM/MDFkNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xudHlwb3NjcmlwdC5kaXNwbGF5TmFtZSA9ICd0eXBvc2NyaXB0J1xudHlwb3NjcmlwdC5hbGlhc2VzID0gWyd0c2NvbmZpZyddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHlwb3NjcmlwdChQcmlzbSkge1xuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIHZhciBrZXl3b3JkcyA9XG4gICAgICAvXFxiKD86QUNUfEFDVElGU1VCfENBUlJBWXxDQVNFfENMRUFSR0lGfENPQXxDT0FfSU5UfENPTlNUQU5UU3xDT05URU5UfENVUnxFRElUUEFORUx8RUZGRUNUfEVYVHxGSUxFfEZMVUlEVEVNUExBVEV8Rk9STXxGUkFNRXxGUkFNRVNFVHxHSUZCVUlMREVSfEdNRU5VfEdNRU5VX0ZPTERPVVR8R01FTlVfTEFZRVJTfEdQfEhNRU5VfEhSVUxFUnxIVE1MfElFTlZ8SUZTVUJ8SU1BR0V8SU1HTUVOVXxJTUdNRU5VSVRFTXxJTUdURVhUfElNR19SRVNPVVJDRXxJTkNMVURFX1RZUE9TQ1JJUFR8SlNNRU5VfEpTTUVOVUlURU18TExMfExPQURfUkVHSVNURVJ8Tk98UEFHRXxSRUNPUkRTfFJFU1RPUkVfUkVHSVNURVJ8VEVNUExBVEV8VEVYVHxUTUVOVXxUTUVOVUlURU18VE1FTlVfTEFZRVJTfFVTRVJ8VVNFUl9JTlR8X0dJRkJVSUxERVJ8Z2xvYmFsfGdsb2JhbFN0cmluZ3xnbG9iYWxWYXIpXFxiL1xuICAgIFByaXNtLmxhbmd1YWdlcy50eXBvc2NyaXB0ID0ge1xuICAgICAgY29tbWVudDogW1xuICAgICAgICB7XG4gICAgICAgICAgLy8gbXVsdGlsaW5lIGNvbW1lbnRzIC8qICovXG4gICAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pXFwvXFwqW1xcc1xcU10qPyg/OlxcKlxcL3wkKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gZG91YmxlLXNsYXNoIGNvbW1lbnRzIC0gaWdub3JlZCB3aGVuIGJhY2tzbGFzaGVzIG9yIGNvbG9uIGlzIGZvdW5kIGluIGZyb250XG4gICAgICAgICAgLy8gYWxzbyBpZ25vcmVkIHdoZW5ldmVyIGRpcmVjdGx5IGFmdGVyIGFuIGVxdWFsLXNpZ24sIGJlY2F1c2UgaXQgd291bGQgcHJvYmFibHkgYmUgYW4gdXJsIHdpdGhvdXQgcHJvdG9jb2xcbiAgICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcOj0gXFx0XXwoPzpefFtePSBcXHRdKVsgXFx0XSspXFwvXFwvLiovLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAvLyBoYXNoIGNvbW1lbnRzIC0gaWdub3JlZCB3aGVuIGxlYWRpbmcgcXVvdGUgaXMgZm91bmQgZm9yIGhleCBjb2xvcnMgaW4gc3RyaW5nc1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlwiJ10pIy4qLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgZnVuY3Rpb246IFtcbiAgICAgICAge1xuICAgICAgICAgIC8vIG9sZCBpbmNsdWRlIHN0eWxlXG4gICAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAgIC88SU5DTFVERV9UWVBPU0NSSVBUOlxccypzb3VyY2VcXHMqPVxccyooPzpcIlteXCJcXHJcXG5dKlwifCdbXidcXHJcXG5dKicpXFxzKj4vLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgc3RyaW5nOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9cIlteXCJcXHJcXG5dKlwifCdbXidcXHJcXG5dKicvLFxuICAgICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgICBrZXl3b3JkOiBrZXl3b3Jkc1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAga2V5d29yZDoge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvSU5DTFVERV9UWVBPU0NSSVBUL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIG5ldyBpbmNsdWRlIHN0eWxlXG4gICAgICAgICAgcGF0dGVybjogL0BpbXBvcnRcXHMqKD86XCJbXlwiXFxyXFxuXSpcInwnW14nXFxyXFxuXSonKS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBzdHJpbmc6IC9cIlteXCJcXHJcXG5dKlwifCdbXidcXHJcXG5dKicvXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9eKFtePV0qPVs8IF0/KSg/Oig/IVxcXVxcbikuKSovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBmdW5jdGlvbjogL1xce1xcJC4qXFx9LyxcbiAgICAgICAgICAvLyBjb25zdGFudHMgaW5jbHVkZVxuICAgICAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgICAgIG51bWJlcjogL15cXGQrJC8sXG4gICAgICAgICAgcHVuY3R1YXRpb246IC9bLHw6XS9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGtleXdvcmQ6IGtleXdvcmRzLFxuICAgICAgbnVtYmVyOiB7XG4gICAgICAgIC8vIHNwZWNpYWwgaGlnaGxpZ2h0aW5nIGZvciBpbmRleGVzIG9mIGFycmF5cyBpbiB0YWdzXG4gICAgICAgIHBhdHRlcm46IC9cXGJcXGQrXFxzKlsuez1dLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgb3BlcmF0b3I6IC9bLns9XS9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRhZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFwuP1stXFx3XFxcXF0rXFwuPy8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46fF0vLFxuICAgICAgb3BlcmF0b3I6IC9bPD5dPT98WyE9XT0/PT98LS0/fFxcK1xcKz98JiY/fFxcfFxcfD98Wz8qL35eJV0vXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy50c2NvbmZpZyA9IFByaXNtLmxhbmd1YWdlcy50eXBvc2NyaXB0XG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInR5cG9zY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImtleXdvcmRzIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInBhdHRlcm4iLCJsb29rYmVoaW5kIiwiZ3JlZWR5IiwiZnVuY3Rpb24iLCJpbnNpZGUiLCJzdHJpbmciLCJrZXl3b3JkIiwibnVtYmVyIiwicHVuY3R1YXRpb24iLCJvcGVyYXRvciIsInRhZyIsInRzY29uZmlnIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typoscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/unrealscript.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/unrealscript.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ unrealscript)\n/* harmony export */ });\n// @ts-nocheck\nunrealscript.displayName = \"unrealscript\";\nunrealscript.aliases = [\n    \"uc\",\n    \"uscript\"\n];\n/** @type {import('../core.js').Syntax} */ function unrealscript(Prism) {\n    Prism.languages.unrealscript = {\n        comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        string: {\n            pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            greedy: true\n        },\n        category: {\n            pattern: /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n            lookbehind: true,\n            greedy: true,\n            alias: \"property\"\n        },\n        metadata: {\n            pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n                property: /\\b\\w+(?=\\s*=)/,\n                operator: /=/,\n                punctuation: /[<>|]/\n            }\n        },\n        macro: {\n            pattern: /`\\w+/,\n            alias: \"property\"\n        },\n        \"class-name\": {\n            pattern: /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n            lookbehind: true\n        },\n        keyword: /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n        function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n        // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n        operator: />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n        punctuation: /[()[\\]{};,.]/\n    };\n    Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy91bnJlYWxzY3JpcHQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsYUFBYUMsV0FBVyxHQUFHO0FBQzNCRCxhQUFhRSxPQUFPLEdBQUc7SUFBQztJQUFNO0NBQVU7QUFFeEMsd0NBQXdDLEdBQ3pCLFNBQVNGLGFBQWFHLEtBQUs7SUFDeENBLE1BQU1DLFNBQVMsQ0FBQ0osWUFBWSxHQUFHO1FBQzdCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtZQUNSRixTQUNFO1lBQ0ZHLFlBQVk7WUFDWkYsUUFBUTtZQUNSRyxPQUFPO1FBQ1Q7UUFDQUMsVUFBVTtZQUNSTCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkYsUUFBUTtZQUNSSyxRQUFRO2dCQUNOQyxVQUFVO2dCQUNWQyxVQUFVO2dCQUNWQyxhQUFhO1lBQ2Y7UUFDRjtRQUNBQyxPQUFPO1lBQ0xWLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0EsY0FBYztZQUNaSixTQUNFO1lBQ0ZHLFlBQVk7UUFDZDtRQUNBUSxTQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsU0FBUztRQUNUQyxRQUFRO1FBQ1IsdUVBQXVFO1FBQ3ZFTixVQUNFO1FBQ0ZDLGFBQWE7SUFDZjtJQUNBYixNQUFNQyxTQUFTLENBQUNrQixFQUFFLEdBQUduQixNQUFNQyxTQUFTLENBQUNtQixPQUFPLEdBQUdwQixNQUFNQyxTQUFTLENBQUNKLFlBQVk7QUFDN0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdW5yZWFsc2NyaXB0LmpzPzIyNzMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnVucmVhbHNjcmlwdC5kaXNwbGF5TmFtZSA9ICd1bnJlYWxzY3JpcHQnXG51bnJlYWxzY3JpcHQuYWxpYXNlcyA9IFsndWMnLCAndXNjcmlwdCddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdW5yZWFsc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy51bnJlYWxzY3JpcHQgPSB7XG4gICAgY29tbWVudDogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgY2F0ZWdvcnk6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC8oXFxiKD86KD86YXV0b2V4cGFuZHxoaWRlfHNob3cpY2F0ZWdvcmllc3x2YXIpXFxzKlxcKClbXigpXSsoPz1cXCkpLyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgbWV0YWRhdGE6IHtcbiAgICAgIHBhdHRlcm46IC8oXFx3XFxzKik8XFxzKlxcdytcXHMqPVtePD58PVxcclxcbl0rKD86XFx8XFxzKlxcdytcXHMqPVtePD58PVxcclxcbl0rKSo+LyxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHJvcGVydHk6IC9cXGJcXHcrKD89XFxzKj0pLyxcbiAgICAgICAgb3BlcmF0b3I6IC89LyxcbiAgICAgICAgcHVuY3R1YXRpb246IC9bPD58XS9cbiAgICAgIH1cbiAgICB9LFxuICAgIG1hY3JvOiB7XG4gICAgICBwYXR0ZXJuOiAvYFxcdysvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyhcXGIoPzpjbGFzc3xlbnVtfGV4dGVuZHN8aW50ZXJmYWNlfHN0YXRlKD86XFwoXFwpKT98c3RydWN0fHdpdGhpbilcXHMrKVxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhY3RvcnxhcnJheXxhdXRvfGF1dG9leHBhbmRjYXRlZ29yaWVzfGJvb2x8YnJlYWt8Ynl0ZXxjYXNlfGNsYXNzfGNsYXNzZ3JvdXB8Y2xpZW50fGNvZXJjZXxjb2xsYXBzZWNhdGVnb3JpZXN8Y29uZmlnfGNvbnN0fGNvbnRpbnVlfGRlZmF1bHR8ZGVmYXVsdHByb3BlcnRpZXN8ZGVsZWdhdGV8ZGVwZW5kc29ufGRlcHJlY2F0ZWR8ZG98ZG9udGNvbGxhcHNlY2F0ZWdvcmllc3xlZGl0Y29uc3R8ZWRpdGlubGluZW5ld3xlbHNlfGVudW18ZXZlbnR8ZXhlY3xleHBvcnR8ZXh0ZW5kc3xmaW5hbHxmbG9hdHxmb3J8Zm9yY2VzY3JpcHRvcmRlcnxmb3JlYWNofGZ1bmN0aW9ufGdvdG98Z3VpZHxoaWRlY2F0ZWdvcmllc3xoaWRlZHJvcGRvd258aWZ8aWdub3Jlc3xpbXBsZW1lbnRzfGluaGVyaXRzfGlucHV0fGludHxpbnRlcmZhY2V8aXRlcmF0b3J8bGF0ZW50fGxvY2FsfG1hdGVyaWFsfG5hbWV8bmF0aXZlfG5hdGl2ZXJlcGxpY2F0aW9ufG5vZXhwb3J0fG5vbnRyYW5zaWVudHxub3RlZGl0aW5saW5lbmV3fG5vdHBsYWNlYWJsZXxvcGVyYXRvcnxvcHRpb25hbHxvdXR8cGF3bnxwZXJvYmplY3Rjb25maWd8cGVyb2JqZWN0bG9jYWxpemVkfHBsYWNlYWJsZXxwb3N0b3BlcmF0b3J8cHJlb3BlcmF0b3J8cHJpdmF0ZXxwcm90ZWN0ZWR8cmVsaWFibGV8cmVwbGljYXRpb258cmV0dXJufHNlcnZlcnxzaG93Y2F0ZWdvcmllc3xzaW11bGF0ZWR8c2luZ3VsYXJ8c3RhdGV8c3RhdGljfHN0cmluZ3xzdHJ1Y3R8c3RydWN0ZGVmYXVsdHxzdHJ1Y3RkZWZhdWx0cHJvcGVydGllc3xzd2l0Y2h8dGV4dHVyZXx0cmFuc2llbnR8dHJhdmVsfHVucmVsaWFibGV8dW50aWx8dmFyfHZlY3Rvcnx3aGlsZXx3aXRoaW4pXFxiLyxcbiAgICBmdW5jdGlvbjogL1xcYlthLXpfXVxcdyooPz1cXHMqXFwoKS9pLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiMHhbXFxkYS1mXStcXGJ8KD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OmVbKy1dP1xcZCspPy9pLFxuICAgIC8vIGh0dHBzOi8vZG9jcy51bnJlYWxlbmdpbmUuY29tL3Vkay9UaHJlZS9VbnJlYWxTY3JpcHRFeHByZXNzaW9ucy5odG1sXG4gICAgb3BlcmF0b3I6XG4gICAgICAvPj58PDx8LS18XFwrXFwrfFxcKlxcKnxbLSsqL34hPTw+JEBdPT98JiY/fFxcfFxcfD98XFxeXFxeP3xbPzolXXxcXGIoPzpDbG9ja3dpc2VGcm9tfENyb3NzfERvdClcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpW1xcXXt9OywuXS9cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMudWMgPSBQcmlzbS5sYW5ndWFnZXMudXNjcmlwdCA9IFByaXNtLmxhbmd1YWdlcy51bnJlYWxzY3JpcHRcbn1cbiJdLCJuYW1lcyI6WyJ1bnJlYWxzY3JpcHQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJzdHJpbmciLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiY2F0ZWdvcnkiLCJsb29rYmVoaW5kIiwiYWxpYXMiLCJtZXRhZGF0YSIsImluc2lkZSIsInByb3BlcnR5Iiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsIm1hY3JvIiwia2V5d29yZCIsImZ1bmN0aW9uIiwiYm9vbGVhbiIsIm51bWJlciIsInVjIiwidXNjcmlwdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/unrealscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uorazor.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uorazor.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ uorazor)\n/* harmony export */ });\n// @ts-nocheck\nuorazor.displayName = \"uorazor\";\nuorazor.aliases = [];\n/** @type {import('../core.js').Syntax} */ function uorazor(Prism) {\n    Prism.languages.uorazor = {\n        \"comment-hash\": {\n            pattern: /#.*/,\n            alias: \"comment\",\n            greedy: true\n        },\n        \"comment-slash\": {\n            pattern: /\\/\\/.*/,\n            alias: \"comment\",\n            greedy: true\n        },\n        string: {\n            pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n            inside: {\n                punctuation: /^['\"]|['\"]$/\n            },\n            greedy: true\n        },\n        \"source-layers\": {\n            pattern: /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n            alias: \"function\"\n        },\n        \"source-commands\": {\n            pattern: /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n            alias: \"function\"\n        },\n        \"tag-name\": {\n            pattern: /(^\\{%-?\\s*)\\w+/,\n            lookbehind: true,\n            alias: \"keyword\"\n        },\n        delimiter: {\n            pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n            alias: \"punctuation\"\n        },\n        function: /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n        keyword: /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n        boolean: /\\b(?:false|null|true)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n            {\n                pattern: /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n                lookbehind: true\n            },\n            /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        punctuation: /[()\\[\\]{}:.,]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy91b3Jhem9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCLGdCQUFnQjtZQUNkSyxTQUFTO1lBQ1RDLE9BQU87WUFDUEMsUUFBUTtRQUNWO1FBQ0EsaUJBQWlCO1lBQ2ZGLFNBQVM7WUFDVEMsT0FBTztZQUNQQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOSCxTQUFTO1lBQ1RJLFFBQVE7Z0JBQ05DLGFBQWE7WUFDZjtZQUNBSCxRQUFRO1FBQ1Y7UUFDQSxpQkFBaUI7WUFDZkYsU0FDRTtZQUNGQyxPQUFPO1FBQ1Q7UUFDQSxtQkFBbUI7WUFDakJELFNBQ0U7WUFDRkMsT0FBTztRQUNUO1FBQ0EsWUFBWTtZQUNWRCxTQUFTO1lBQ1RNLFlBQVk7WUFDWkwsT0FBTztRQUNUO1FBQ0FNLFdBQVc7WUFDVFAsU0FBUztZQUNUQyxPQUFPO1FBQ1Q7UUFDQU8sVUFDRTtRQUNGQyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSQyxVQUFVO1lBQ1I7Z0JBQ0VaLFNBQ0U7Z0JBQ0ZNLFlBQVk7WUFDZDtZQUNBO1NBQ0Q7UUFDREQsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdW9yYXpvci5qcz85ZTljIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG51b3Jhem9yLmRpc3BsYXlOYW1lID0gJ3VvcmF6b3InXG51b3Jhem9yLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHVvcmF6b3IoUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnVvcmF6b3IgPSB7XG4gICAgJ2NvbW1lbnQtaGFzaCc6IHtcbiAgICAgIHBhdHRlcm46IC8jLiovLFxuICAgICAgYWxpYXM6ICdjb21tZW50JyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ2NvbW1lbnQtc2xhc2gnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwvLiovLFxuICAgICAgYWxpYXM6ICdjb21tZW50JyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvKFwifCcpKD86XFxcXC58KD8hXFwxKVteXFxcXFxcclxcbl0pKlxcMS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgcHVuY3R1YXRpb246IC9eWydcIl18WydcIl0kL1xuICAgICAgfSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgJ3NvdXJjZS1sYXllcnMnOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXFxiKD86YXJtc3xiYWNrcGFja3xibHVlfGJyYWNlbGV0fGNhbmNlbHxjbGVhcnxjbG9ha3xjcmltaW5hbHxlYXJyaW5nc3xlbmVteXxmYWNpYWxoYWlyfGZyaWVuZHxmcmllbmRseXxnbG92ZXN8Z3JheXxncmV5fGdyb3VuZHxoYWlyfGhlYWR8aW5uZXJsZWdzfGlubmVydG9yc298aW5ub2NlbnR8bGVmdGhhbmR8bWlkZGxldG9yc298bXVyZGVyZXJ8bmVja3xub25mcmllbmRseXxvbmVoYW5kZWRzZWNvbmRhcnl8b3V0ZXJsZWdzfG91dGVydG9yc298cGFudHN8cmVkfHJpZ2h0aGFuZHxyaW5nfHNlbGZ8c2hpcnR8c2hvZXN8dGFsaXNtYW58d2Fpc3QpXFxiL2ksXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgJ3NvdXJjZS1jb21tYW5kcyc6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXGIoPzphbGxpYW5jZXxhdHRhY2t8Y2FzdHxjbGVhcmFsbHxjbGVhcmlnbm9yZXxjbGVhcmpvdXJuYWx8Y2xlYXJsaXN0fGNsZWFyc3lzbXNnfGNyZWF0ZWxpc3R8Y3JlYXRldGltZXJ8ZGNsaWNrfGRjbGlja3R5cGV8ZGNsaWNrdmFyfGRyZXNzfGRyZXNzY29uZmlnfGRyb3B8ZHJvcHJlbGxvY3xlbW90ZXxnZXRsYWJlbHxndWlsZHxndW1wY2xvc2V8Z3VtcHJlc3BvbnNlfGhvdGtleXxpZ25vcmV8bGFzdHRhcmdldHxsaWZ0fGxpZnR0eXBlfG1lbnV8bWVudXJlc3BvbnNlfG1zZ3xvcmd8b3JnYW5pemV8b3JnYW5pemVyfG92ZXJoZWFkfHBhdXNlfHBvcGxpc3R8cG90aW9ufHByb21wdHJlc3BvbnNlfHB1c2hsaXN0fHJlbW92ZWxpc3R8cmVtb3ZldGltZXJ8cmVuYW1lfHJlc3RvY2t8c2F5fHNjYXZ8c2NhdmVuZ2VyfHNjcmlwdHxzZXRhYmlsaXR5fHNldGxhc3R0YXJnZXR8c2V0c2tpbGx8c2V0dGltZXJ8c2V0dmFyfHN5c21zZ3x0YXJnZXR8dGFyZ2V0bG9jfHRhcmdldHJlbGxvY3x0YXJnZXR0eXBlfHVuZHJlc3N8dW5pZ25vcmV8dW5zZXR2YXJ8dXNlb2JqZWN0fHVzZW9uY2V8dXNlc2tpbGx8dXNldHlwZXx2aXJ0dWV8d2FpdHx3YWl0Zm9yZ3VtcHx3YWl0Zm9ybWVudXx3YWl0Zm9ycHJvbXB0fHdhaXRmb3JzdGF0fHdhaXRmb3JzeXNtc2d8d2FpdGZvcnRhcmdldHx3YWxrfHdmc3lzbXNnfHdmdHx3aGlzcGVyfHllbGwpXFxiLyxcbiAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgfSxcbiAgICAndGFnLW5hbWUnOiB7XG4gICAgICBwYXR0ZXJuOiAvKF5cXHslLT9cXHMqKVxcdysvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgIGRlbGltaXRlcjoge1xuICAgICAgcGF0dGVybjogL15cXHtbeyVdLT98LT9bJX1dXFx9JC8sXG4gICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgIH0sXG4gICAgZnVuY3Rpb246XG4gICAgICAvXFxiKD86YXRsaXN0fGNsb3NlfGNsb3Nlc3R8Y291bnR8Y291bnRlcnxjb3VudHR5cGV8ZGVhZHxkZXh8ZGlmZmhpdHN8ZGlmZm1hbmF8ZGlmZnN0YW18ZGlmZndlaWdodHxmaW5kfGZpbmRidWZmfGZpbmRkZWJ1ZmZ8ZmluZGxheWVyfGZpbmR0eXBlfGZpbmR0eXBlbGlzdHxmb2xsb3dlcnN8Z3VtcGV4aXN0c3xoaWRkZW58aGl0c3xocHxodWV8aHVtYW58aHVtYW5vaWR8aW5ndW1wfGlubGlzdHxpbnN5c21lc3NhZ2V8aW5zeXNtc2d8aW50fGludnVsfGxoYW5kZW1wdHl8bGlzdHxsaXN0ZXhpc3RzfG1hbmF8bWF4aGl0c3xtYXhocHxtYXhtYW5hfG1heHN0YW18bWF4d2VpZ2h0fG1vbnN0ZXJ8bW91bnRlZHxuYW1lfG5leHR8bm90b3xwYXJhbHl6ZWR8cG9pc29uZWR8cG9zaXRpb258cHJldnxwcmV2aW91c3xxdWV1ZWR8cmFuZHxyYW5kb218cmhhbmRlbXB0eXxza2lsbHxzdGFtfHN0cnx0YXJnZXRleGlzdHN8dGltZXJ8dGltZXJleGlzdHN8dmFyZXhpc3R8d2FybW9kZXx3ZWlnaHQpXFxiLyxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFuZHxhc3xicmVha3xjb250aW51ZXxlbHNlfGVsc2VpZnxlbmRmb3J8ZW5kaWZ8ZW5kd2hpbGV8Zm9yfGlmfGxvb3B8bm90fG9yfHJlcGxheXxzdG9wfHdoaWxlKVxcYi8sXG4gICAgYm9vbGVhbjogL1xcYig/OmZhbHNlfG51bGx8dHJ1ZSlcXGIvLFxuICAgIG51bWJlcjogL1xcYjB4W1xcZEEtRmEtZl0rfCg/OlxcYlxcZCsoPzpcXC5cXGQqKT98XFxCXFwuXFxkKykoPzpbRWVdWy0rXT9cXGQrKT8vLFxuICAgIG9wZXJhdG9yOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhcXHMpKD86YW5kfGItYW5kfGItb3J8Yi14b3J8ZW5kcyB3aXRofGlufGlzfG1hdGNoZXN8bm90fG9yfHNhbWUgYXN8c3RhcnRzIHdpdGgpKD89XFxzKS8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvWz08Pl09P3whPXxcXCpcXCo/fFxcL1xcLz98XFw/Oj98Wy0rfiV8XS9cbiAgICBdLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXFxbXFxde306LixdL1xuICB9XG59XG4iXSwibmFtZXMiOlsidW9yYXpvciIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwicGF0dGVybiIsImFsaWFzIiwiZ3JlZWR5Iiwic3RyaW5nIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJsb29rYmVoaW5kIiwiZGVsaW1pdGVyIiwiZnVuY3Rpb24iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uorazor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uri.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uri.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ uri)\n/* harmony export */ });\n// @ts-nocheck\nuri.displayName = \"uri\";\nuri.aliases = [\n    \"url\"\n];\n/** @type {import('../core.js').Syntax} */ function uri(Prism) {\n    // https://tools.ietf.org/html/rfc3986#appendix-A\n    Prism.languages.uri = {\n        scheme: {\n            pattern: /^[a-z][a-z0-9+.-]*:/im,\n            greedy: true,\n            inside: {\n                \"scheme-delimiter\": /:$/\n            }\n        },\n        fragment: {\n            pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n            inside: {\n                \"fragment-delimiter\": /^#/\n            }\n        },\n        query: {\n            pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n            inside: {\n                \"query-delimiter\": {\n                    pattern: /^\\?/,\n                    greedy: true\n                },\n                \"pair-delimiter\": /[&;]/,\n                pair: {\n                    pattern: /^[^=][\\s\\S]*/,\n                    inside: {\n                        key: /^[^=]+/,\n                        value: {\n                            pattern: /(^=)[\\s\\S]+/,\n                            lookbehind: true\n                        }\n                    }\n                }\n            }\n        },\n        authority: {\n            pattern: RegExp(/^\\/\\//.source + // [ userinfo \"@\" ]\n            /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n            (\"(?:\" + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/.source + \"|\" + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source + \")\") + // [ \":\" port ]\n            /(?::\\d*)?/.source, \"m\"),\n            inside: {\n                \"authority-delimiter\": /^\\/\\//,\n                \"user-info-segment\": {\n                    pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n                    inside: {\n                        \"user-info-delimiter\": /@$/,\n                        \"user-info\": /^[\\w\\-.~!$&'()*+,;=%:]+/\n                    }\n                },\n                \"port-segment\": {\n                    pattern: /:\\d*$/,\n                    inside: {\n                        \"port-delimiter\": /^:/,\n                        port: /^\\d+/\n                    }\n                },\n                host: {\n                    pattern: /[\\s\\S]+/,\n                    inside: {\n                        \"ip-literal\": {\n                            pattern: /^\\[[\\s\\S]+\\]$/,\n                            inside: {\n                                \"ip-literal-delimiter\": /^\\[|\\]$/,\n                                \"ipv-future\": /^v[\\s\\S]+/,\n                                \"ipv6-address\": /^[\\s\\S]+/\n                            }\n                        },\n                        \"ipv4-address\": /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n                    }\n                }\n            }\n        },\n        path: {\n            pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n            inside: {\n                \"path-separator\": /\\//\n            }\n        }\n    };\n    Prism.languages.url = Prism.languages.uri;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy91cmkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsSUFBSUMsV0FBVyxHQUFHO0FBQ2xCRCxJQUFJRSxPQUFPLEdBQUc7SUFBQztDQUFNO0FBRXJCLHdDQUF3QyxHQUN6QixTQUFTRixJQUFJRyxLQUFLO0lBQy9CLGlEQUFpRDtJQUVqREEsTUFBTUMsU0FBUyxDQUFDSixHQUFHLEdBQUc7UUFDcEJLLFFBQVE7WUFDTkMsU0FBUztZQUNUQyxRQUFRO1lBQ1JDLFFBQVE7Z0JBQ04sb0JBQW9CO1lBQ3RCO1FBQ0Y7UUFDQUMsVUFBVTtZQUNSSCxTQUFTO1lBQ1RFLFFBQVE7Z0JBQ04sc0JBQXNCO1lBQ3hCO1FBQ0Y7UUFDQUUsT0FBTztZQUNMSixTQUFTO1lBQ1RFLFFBQVE7Z0JBQ04sbUJBQW1CO29CQUNqQkYsU0FBUztvQkFDVEMsUUFBUTtnQkFDVjtnQkFDQSxrQkFBa0I7Z0JBQ2xCSSxNQUFNO29CQUNKTCxTQUFTO29CQUNURSxRQUFRO3dCQUNOSSxLQUFLO3dCQUNMQyxPQUFPOzRCQUNMUCxTQUFTOzRCQUNUUSxZQUFZO3dCQUNkO29CQUNGO2dCQUNGO1lBQ0Y7UUFDRjtRQUNBQyxXQUFXO1lBQ1RULFNBQVNVLE9BQ1AsUUFBUUMsTUFBTSxHQUNaLG1CQUFtQjtZQUNuQiwrQkFBK0JBLE1BQU0sR0FDckMsT0FBTztZQUNOLFNBQ0MsYUFBYTtZQUNiLGtFQUNHQSxNQUFNLEdBQ1QsTUFDQSxpQ0FBaUM7WUFDakMsd0JBQXdCQSxNQUFNLEdBQzlCLEdBQUUsSUFDSixlQUFlO1lBQ2YsWUFBWUEsTUFBTSxFQUNwQjtZQUVGVCxRQUFRO2dCQUNOLHVCQUF1QjtnQkFDdkIscUJBQXFCO29CQUNuQkYsU0FBUztvQkFDVEUsUUFBUTt3QkFDTix1QkFBdUI7d0JBQ3ZCLGFBQWE7b0JBQ2Y7Z0JBQ0Y7Z0JBQ0EsZ0JBQWdCO29CQUNkRixTQUFTO29CQUNURSxRQUFRO3dCQUNOLGtCQUFrQjt3QkFDbEJVLE1BQU07b0JBQ1I7Z0JBQ0Y7Z0JBQ0FDLE1BQU07b0JBQ0piLFNBQVM7b0JBQ1RFLFFBQVE7d0JBQ04sY0FBYzs0QkFDWkYsU0FBUzs0QkFDVEUsUUFBUTtnQ0FDTix3QkFBd0I7Z0NBQ3hCLGNBQWM7Z0NBQ2QsZ0JBQWdCOzRCQUNsQjt3QkFDRjt3QkFDQSxnQkFDRTtvQkFDSjtnQkFDRjtZQUNGO1FBQ0Y7UUFDQVksTUFBTTtZQUNKZCxTQUFTO1lBQ1RFLFFBQVE7Z0JBQ04sa0JBQWtCO1lBQ3BCO1FBQ0Y7SUFDRjtJQUNBTCxNQUFNQyxTQUFTLENBQUNpQixHQUFHLEdBQUdsQixNQUFNQyxTQUFTLENBQUNKLEdBQUc7QUFDM0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdXJpLmpzPzc1YjgiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnVyaS5kaXNwbGF5TmFtZSA9ICd1cmknXG51cmkuYWxpYXNlcyA9IFsndXJsJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1cmkoUHJpc20pIHtcbiAgLy8gaHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzM5ODYjYXBwZW5kaXgtQVxuXG4gIFByaXNtLmxhbmd1YWdlcy51cmkgPSB7XG4gICAgc2NoZW1lOiB7XG4gICAgICBwYXR0ZXJuOiAvXlthLXpdW2EtejAtOSsuLV0qOi9pbSxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAnc2NoZW1lLWRlbGltaXRlcic6IC86JC9cbiAgICAgIH1cbiAgICB9LFxuICAgIGZyYWdtZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvI1tcXHdcXC0ufiEkJicoKSorLDs9JTpALz9dKi8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ2ZyYWdtZW50LWRlbGltaXRlcic6IC9eIy9cbiAgICAgIH1cbiAgICB9LFxuICAgIHF1ZXJ5OiB7XG4gICAgICBwYXR0ZXJuOiAvXFw/W1xcd1xcLS5+ISQmJygpKissOz0lOkAvP10qLyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAncXVlcnktZGVsaW1pdGVyJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eXFw/LyxcbiAgICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAgJ3BhaXItZGVsaW1pdGVyJzogL1smO10vLFxuICAgICAgICBwYWlyOiB7XG4gICAgICAgICAgcGF0dGVybjogL15bXj1dW1xcc1xcU10qLyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgIGtleTogL15bXj1dKy8sXG4gICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICBwYXR0ZXJuOiAvKF49KVtcXHNcXFNdKy8sXG4gICAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGF1dGhvcml0eToge1xuICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAvXlxcL1xcLy8uc291cmNlICtcbiAgICAgICAgICAvLyBbIHVzZXJpbmZvIFwiQFwiIF1cbiAgICAgICAgICAvKD86W1xcd1xcLS5+ISQmJygpKissOz0lOl0qQCk/Ly5zb3VyY2UgK1xuICAgICAgICAgIC8vIGhvc3RcbiAgICAgICAgICAoJyg/OicgK1xuICAgICAgICAgICAgLy8gSVAtbGl0ZXJhbFxuICAgICAgICAgICAgL1xcWyg/OlswLTlhLWZBLUY6Ll17Miw0OH18dlswLTlhLWZBLUZdK1xcLltcXHdcXC0ufiEkJicoKSorLDs9XSspXFxdL1xuICAgICAgICAgICAgICAuc291cmNlICtcbiAgICAgICAgICAgICd8JyArXG4gICAgICAgICAgICAvLyBJUHY0YWRkcmVzcyBvciByZWdpc3RlcmVkIG5hbWVcbiAgICAgICAgICAgIC9bXFx3XFwtLn4hJCYnKCkqKyw7PSVdKi8uc291cmNlICtcbiAgICAgICAgICAgICcpJykgK1xuICAgICAgICAgIC8vIFsgXCI6XCIgcG9ydCBdXG4gICAgICAgICAgLyg/OjpcXGQqKT8vLnNvdXJjZSxcbiAgICAgICAgJ20nXG4gICAgICApLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICdhdXRob3JpdHktZGVsaW1pdGVyJzogL15cXC9cXC8vLFxuICAgICAgICAndXNlci1pbmZvLXNlZ21lbnQnOiB7XG4gICAgICAgICAgcGF0dGVybjogL15bXFx3XFwtLn4hJCYnKCkqKyw7PSU6XSpALyxcbiAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICd1c2VyLWluZm8tZGVsaW1pdGVyJzogL0AkLyxcbiAgICAgICAgICAgICd1c2VyLWluZm8nOiAvXltcXHdcXC0ufiEkJicoKSorLDs9JTpdKy9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICdwb3J0LXNlZ21lbnQnOiB7XG4gICAgICAgICAgcGF0dGVybjogLzpcXGQqJC8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAncG9ydC1kZWxpbWl0ZXInOiAvXjovLFxuICAgICAgICAgICAgcG9ydDogL15cXGQrL1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgaG9zdDoge1xuICAgICAgICAgIHBhdHRlcm46IC9bXFxzXFxTXSsvLFxuICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgJ2lwLWxpdGVyYWwnOiB7XG4gICAgICAgICAgICAgIHBhdHRlcm46IC9eXFxbW1xcc1xcU10rXFxdJC8sXG4gICAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICAgICdpcC1saXRlcmFsLWRlbGltaXRlcic6IC9eXFxbfFxcXSQvLFxuICAgICAgICAgICAgICAgICdpcHYtZnV0dXJlJzogL152W1xcc1xcU10rLyxcbiAgICAgICAgICAgICAgICAnaXB2Ni1hZGRyZXNzJzogL15bXFxzXFxTXSsvXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnaXB2NC1hZGRyZXNzJzpcbiAgICAgICAgICAgICAgL14oPzooPzpbMDMtOV1cXGQ/fFsxMl1cXGR7MCwyfSlcXC4pezN9KD86WzAzLTldXFxkP3xbMTJdXFxkezAsMn0pJC9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIHBhdGg6IHtcbiAgICAgIHBhdHRlcm46IC9eW1xcd1xcLS5+ISQmJygpKissOz0lOkAvXSsvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAncGF0aC1zZXBhcmF0b3InOiAvXFwvL1xuICAgICAgfVxuICAgIH1cbiAgfVxuICBQcmlzbS5sYW5ndWFnZXMudXJsID0gUHJpc20ubGFuZ3VhZ2VzLnVyaVxufVxuIl0sIm5hbWVzIjpbInVyaSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwic2NoZW1lIiwicGF0dGVybiIsImdyZWVkeSIsImluc2lkZSIsImZyYWdtZW50IiwicXVlcnkiLCJwYWlyIiwia2V5IiwidmFsdWUiLCJsb29rYmVoaW5kIiwiYXV0aG9yaXR5IiwiUmVnRXhwIiwic291cmNlIiwicG9ydCIsImhvc3QiLCJwYXRoIiwidXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uri.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/v.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/v.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ v)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nv.displayName = \"v\";\nv.aliases = [];\n/** @type {import('../core.js').Syntax} */ function v(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        var interpolationExpr = {\n            pattern: /[\\s\\S]+/,\n            inside: null\n        };\n        Prism.languages.v = Prism.languages.extend(\"clike\", {\n            string: {\n                pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n                alias: \"quoted-string\",\n                greedy: true,\n                inside: {\n                    interpolation: {\n                        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n                        lookbehind: true,\n                        inside: {\n                            \"interpolation-variable\": {\n                                pattern: /^\\$\\w[\\s\\S]*$/,\n                                alias: \"variable\"\n                            },\n                            \"interpolation-punctuation\": {\n                                pattern: /^\\$\\{|\\}$/,\n                                alias: \"punctuation\"\n                            },\n                            \"interpolation-expression\": interpolationExpr\n                        }\n                    }\n                }\n            },\n            \"class-name\": {\n                pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n                lookbehind: true\n            },\n            keyword: /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n            number: /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n            operator: /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n            builtin: /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n        });\n        interpolationExpr.inside = Prism.languages.v;\n        Prism.languages.insertBefore(\"v\", \"string\", {\n            char: {\n                pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n                // using {1,2} instead of `u` flag for compatibility\n                alias: \"rune\"\n            }\n        });\n        Prism.languages.insertBefore(\"v\", \"operator\", {\n            attribute: {\n                pattern: /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n                lookbehind: true,\n                alias: \"annotation\",\n                inside: {\n                    punctuation: /[\\[\\]]/,\n                    keyword: /\\w+/\n                }\n            },\n            generic: {\n                pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n                inside: {\n                    punctuation: /[<>]/,\n                    \"class-name\": /\\w+/\n                }\n            }\n        });\n        Prism.languages.insertBefore(\"v\", \"function\", {\n            \"generic-function\": {\n                // e.g. foo<T>( ...\n                pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n                inside: {\n                    function: /^\\w+/,\n                    generic: {\n                        pattern: /<\\w+>/,\n                        inside: Prism.languages.v.generic.inside\n                    }\n                }\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsRUFBRUMsV0FBVyxHQUFHO0FBQ2hCRCxFQUFFRSxPQUFPLEdBQUcsRUFBRTtBQUVkLHdDQUF3QyxHQUN6QixTQUFTRixFQUFFRyxLQUFLO0lBQzdCQSxNQUFNQyxRQUFRLENBQUNMLGlEQUFjQTtJQUMzQixVQUFVSSxLQUFLO1FBQ2YsSUFBSUUsb0JBQW9CO1lBQ3RCQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBSixNQUFNSyxTQUFTLENBQUNSLENBQUMsR0FBR0csTUFBTUssU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztZQUNsREMsUUFBUTtnQkFDTkosU0FBUztnQkFDVEssT0FBTztnQkFDUEMsUUFBUTtnQkFDUkwsUUFBUTtvQkFDTk0sZUFBZTt3QkFDYlAsU0FDRTt3QkFDRlEsWUFBWTt3QkFDWlAsUUFBUTs0QkFDTiwwQkFBMEI7Z0NBQ3hCRCxTQUFTO2dDQUNUSyxPQUFPOzRCQUNUOzRCQUNBLDZCQUE2QjtnQ0FDM0JMLFNBQVM7Z0NBQ1RLLE9BQU87NEJBQ1Q7NEJBQ0EsNEJBQTRCTjt3QkFDOUI7b0JBQ0Y7Z0JBQ0Y7WUFDRjtZQUNBLGNBQWM7Z0JBQ1pDLFNBQVM7Z0JBQ1RRLFlBQVk7WUFDZDtZQUNBQyxTQUNFO1lBQ0ZDLFFBQ0U7WUFDRkMsVUFDRTtZQUNGQyxTQUNFO1FBQ0o7UUFDQWIsa0JBQWtCRSxNQUFNLEdBQUdKLE1BQU1LLFNBQVMsQ0FBQ1IsQ0FBQztRQUM1Q0csTUFBTUssU0FBUyxDQUFDVyxZQUFZLENBQUMsS0FBSyxVQUFVO1lBQzFDQyxNQUFNO2dCQUNKZCxTQUFTO2dCQUNULG9EQUFvRDtnQkFDcERLLE9BQU87WUFDVDtRQUNGO1FBQ0FSLE1BQU1LLFNBQVMsQ0FBQ1csWUFBWSxDQUFDLEtBQUssWUFBWTtZQUM1Q0UsV0FBVztnQkFDVGYsU0FDRTtnQkFDRlEsWUFBWTtnQkFDWkgsT0FBTztnQkFDUEosUUFBUTtvQkFDTmUsYUFBYTtvQkFDYlAsU0FBUztnQkFDWDtZQUNGO1lBQ0FRLFNBQVM7Z0JBQ1BqQixTQUFTO2dCQUNUQyxRQUFRO29CQUNOZSxhQUFhO29CQUNiLGNBQWM7Z0JBQ2hCO1lBQ0Y7UUFDRjtRQUNBbkIsTUFBTUssU0FBUyxDQUFDVyxZQUFZLENBQUMsS0FBSyxZQUFZO1lBQzVDLG9CQUFvQjtnQkFDbEIsbUJBQW1CO2dCQUNuQmIsU0FBUztnQkFDVEMsUUFBUTtvQkFDTmlCLFVBQVU7b0JBQ1ZELFNBQVM7d0JBQ1BqQixTQUFTO3dCQUNUQyxRQUFRSixNQUFNSyxTQUFTLENBQUNSLENBQUMsQ0FBQ3VCLE9BQU8sQ0FBQ2hCLE1BQU07b0JBQzFDO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGLEdBQUdKO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdi5qcz9iNDU2Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yQ2xpa2UgZnJvbSAnLi9jbGlrZS5qcydcbnYuZGlzcGxheU5hbWUgPSAndidcbnYuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdihQcmlzbSkge1xuICBQcmlzbS5yZWdpc3RlcihyZWZyYWN0b3JDbGlrZSlcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgaW50ZXJwb2xhdGlvbkV4cHIgPSB7XG4gICAgICBwYXR0ZXJuOiAvW1xcc1xcU10rLyxcbiAgICAgIGluc2lkZTogbnVsbFxuICAgIH1cbiAgICBQcmlzbS5sYW5ndWFnZXMudiA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ2NsaWtlJywge1xuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9yPyhbXCInXSkoPzpcXFxcKD86XFxyXFxufFtcXHNcXFNdKXwoPyFcXDEpW15cXFxcXFxyXFxuXSkqXFwxLyxcbiAgICAgICAgYWxpYXM6ICdxdW90ZWQtc3RyaW5nJyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgICAgICAvKCg/Ol58W15cXFxcXSkoPzpcXFxcezJ9KSopXFwkKD86XFx7W157fV0qXFx9fFxcdysoPzpcXC5cXHcrKD86XFwoW15cXChcXCldKlxcKSk/fFxcW1teXFxbXFxdXStcXF0pKikvLFxuICAgICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICAnaW50ZXJwb2xhdGlvbi12YXJpYWJsZSc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvXlxcJFxcd1tcXHNcXFNdKiQvLFxuICAgICAgICAgICAgICAgIGFsaWFzOiAndmFyaWFibGUnXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLXB1bmN0dWF0aW9uJzoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC9eXFwkXFx7fFxcfSQvLFxuICAgICAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICdpbnRlcnBvbGF0aW9uLWV4cHJlc3Npb24nOiBpbnRlcnBvbGF0aW9uRXhwclxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgICdjbGFzcy1uYW1lJzoge1xuICAgICAgICBwYXR0ZXJuOiAvKFxcYig/OmVudW18aW50ZXJmYWNlfHN0cnVjdHx0eXBlKVxccyspKD86Q1xcLik/XFx3Ky8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBrZXl3b3JkOlxuICAgICAgICAvKD86XFxiKD86X19nbG9iYWx8YXN8YXNtfGFzc2VydHxhdG9taWN8YnJlYWt8Y2hhbnxjb25zdHxjb250aW51ZXxkZWZlcnxlbHNlfGVtYmVkfGVudW18Zm58Zm9yfGdvKD86dG8pP3xpZnxpbXBvcnR8aW58aW50ZXJmYWNlfGlzfGxvY2t8bWF0Y2h8bW9kdWxlfG11dHxub25lfG9yfHB1YnxyZXR1cm58cmxvY2t8c2VsZWN0fHNoYXJlZHxzaXplb2Z8c3RhdGljfHN0cnVjdHx0eXBlKD86b2YpP3x1bmlvbnx1bnNhZmUpfFxcJCg/OmVsc2V8Zm9yfGlmKXwjKD86ZmxhZ3xpbmNsdWRlKSlcXGIvLFxuICAgICAgbnVtYmVyOlxuICAgICAgICAvXFxiKD86MHhbYS1mXFxkXSsoPzpfW2EtZlxcZF0rKSp8MGJbMDFdKyg/Ol9bMDFdKykqfDBvWzAtN10rKD86X1swLTddKykqfFxcZCsoPzpfXFxkKykqKD86XFwuXFxkKyg/Ol9cXGQrKSopPylcXGIvaSxcbiAgICAgIG9wZXJhdG9yOlxuICAgICAgICAvfnxcXD98WypcXC8lXiE9XT0/fFxcK1s9K10/fC1bPS1dP3xcXHxbPXxdP3wmKD86PXwmfFxcXj0/KT98Pig/Oj49P3w9KT98PCg/Ojw9P3w9fC0pP3w6PXxcXC5cXC5cXC4/LyxcbiAgICAgIGJ1aWx0aW46XG4gICAgICAgIC9cXGIoPzphbnkoPzpfZmxvYXR8X2ludCk/fGJvb2x8Ynl0ZSg/OnB0cik/fGNoYXJwdHJ8Zig/OjMyfDY0KXxpKD86OHwxNnw2NHwxMjh8bnQpfHJ1bmV8c2l6ZV90fHN0cmluZ3x1KD86MTZ8MzJ8NjR8MTI4KXx2b2lkcHRyKVxcYi9cbiAgICB9KVxuICAgIGludGVycG9sYXRpb25FeHByLmluc2lkZSA9IFByaXNtLmxhbmd1YWdlcy52XG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgndicsICdzdHJpbmcnLCB7XG4gICAgICBjaGFyOiB7XG4gICAgICAgIHBhdHRlcm46IC9gKD86XFxcXGB8XFxcXD9bXmBdezEsMn0pYC8sXG4gICAgICAgIC8vIHVzaW5nIHsxLDJ9IGluc3RlYWQgb2YgYHVgIGZsYWcgZm9yIGNvbXBhdGliaWxpdHlcbiAgICAgICAgYWxpYXM6ICdydW5lJ1xuICAgICAgfVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZSgndicsICdvcGVyYXRvcicsIHtcbiAgICAgIGF0dHJpYnV0ZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXltcXHQgXSopXFxbKD86ZGVwcmVjYXRlZHxkaXJlY3RfYXJyYXlfYWNjZXNzfGZsYWd8aW5saW5lfGxpdmV8cmVmX29ubHl8dHlwZWRlZnx1bnNhZmVfZm58d2luZG93c19zdGRjYWxsKVxcXS9tLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBhbGlhczogJ2Fubm90YXRpb24nLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1tcXFtcXF1dLyxcbiAgICAgICAgICBrZXl3b3JkOiAvXFx3Ky9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGdlbmVyaWM6IHtcbiAgICAgICAgcGF0dGVybjogLzxcXHcrPig/PVxccypbXFwpXFx7XSkvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1s8Pl0vLFxuICAgICAgICAgICdjbGFzcy1uYW1lJzogL1xcdysvXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3YnLCAnZnVuY3Rpb24nLCB7XG4gICAgICAnZ2VuZXJpYy1mdW5jdGlvbic6IHtcbiAgICAgICAgLy8gZS5nLiBmb288VD4oIC4uLlxuICAgICAgICBwYXR0ZXJuOiAvXFxiXFx3K1xccyo8XFx3Kz4oPz1cXCgpLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgZnVuY3Rpb246IC9eXFx3Ky8sXG4gICAgICAgICAgZ2VuZXJpYzoge1xuICAgICAgICAgICAgcGF0dGVybjogLzxcXHcrPi8sXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy52LmdlbmVyaWMuaW5zaWRlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yQ2xpa2UiLCJ2IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJyZWdpc3RlciIsImludGVycG9sYXRpb25FeHByIiwicGF0dGVybiIsImluc2lkZSIsImxhbmd1YWdlcyIsImV4dGVuZCIsInN0cmluZyIsImFsaWFzIiwiZ3JlZWR5IiwiaW50ZXJwb2xhdGlvbiIsImxvb2tiZWhpbmQiLCJrZXl3b3JkIiwibnVtYmVyIiwib3BlcmF0b3IiLCJidWlsdGluIiwiaW5zZXJ0QmVmb3JlIiwiY2hhciIsImF0dHJpYnV0ZSIsInB1bmN0dWF0aW9uIiwiZ2VuZXJpYyIsImZ1bmN0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/v.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vala.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vala.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vala)\n/* harmony export */ });\n/* harmony import */ var _clike_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n// @ts-nocheck\n\nvala.displayName = \"vala\";\nvala.aliases = [];\n/** @type {import('../core.js').Syntax} */ function vala(Prism) {\n    Prism.register(_clike_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.vala = Prism.languages.extend(\"clike\", {\n        // Classes copied from prism-csharp\n        \"class-name\": [\n            {\n                // (Foo bar, Bar baz)\n                pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // [Foo]\n                pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // class Foo : Bar\n                pattern: /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            {\n                // class Foo\n                pattern: /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n                lookbehind: true,\n                inside: {\n                    punctuation: /\\./\n                }\n            }\n        ],\n        keyword: /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n        function: /\\b\\w+(?=\\s*\\()/,\n        number: /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n        operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n        punctuation: /[{}[\\];(),.:]/,\n        constant: /\\b[A-Z0-9_]+\\b/\n    });\n    Prism.languages.insertBefore(\"vala\", \"string\", {\n        \"raw-string\": {\n            pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        \"template-string\": {\n            pattern: /@\"[\\s\\S]*?\"/,\n            greedy: true,\n            inside: {\n                interpolation: {\n                    pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n                    inside: {\n                        delimiter: {\n                            pattern: /^\\$\\(?|\\)$/,\n                            alias: \"punctuation\"\n                        },\n                        rest: Prism.languages.vala\n                    }\n                },\n                string: /[\\s\\S]+/\n            }\n        }\n    });\n    Prism.languages.insertBefore(\"vala\", \"keyword\", {\n        regex: {\n            pattern: /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n            greedy: true,\n            inside: {\n                \"regex-source\": {\n                    pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n                    lookbehind: true,\n                    alias: \"language-regex\",\n                    inside: Prism.languages.regex\n                },\n                \"regex-delimiter\": /^\\//,\n                \"regex-flags\": /^[a-z]+$/\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92YWxhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUN5QjtBQUN2Q0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxpREFBY0E7SUFDN0JJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxTQUFTO1FBQ3JELG1DQUFtQztRQUNuQyxjQUFjO1lBQ1o7Z0JBQ0UscUJBQXFCO2dCQUNyQkMsU0FBUztnQkFDVEMsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0E7Z0JBQ0UsUUFBUTtnQkFDUkYsU0FBUztnQkFDVEcsWUFBWTtnQkFDWkYsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0E7Z0JBQ0Usa0JBQWtCO2dCQUNsQkYsU0FDRTtnQkFDRkcsWUFBWTtnQkFDWkYsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1lBQ0E7Z0JBQ0UsWUFBWTtnQkFDWkYsU0FDRTtnQkFDRkcsWUFBWTtnQkFDWkYsUUFBUTtvQkFDTkMsYUFBYTtnQkFDZjtZQUNGO1NBQ0Q7UUFDREUsU0FDRTtRQUNGQyxVQUFVO1FBQ1ZDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGTCxhQUFhO1FBQ2JNLFVBQVU7SUFDWjtJQUNBWixNQUFNRSxTQUFTLENBQUNXLFlBQVksQ0FBQyxRQUFRLFVBQVU7UUFDN0MsY0FBYztZQUNaVCxTQUFTO1lBQ1RVLFFBQVE7WUFDUkMsT0FBTztRQUNUO1FBQ0EsbUJBQW1CO1lBQ2pCWCxTQUFTO1lBQ1RVLFFBQVE7WUFDUlQsUUFBUTtnQkFDTlcsZUFBZTtvQkFDYlosU0FBUztvQkFDVEMsUUFBUTt3QkFDTlksV0FBVzs0QkFDVGIsU0FBUzs0QkFDVFcsT0FBTzt3QkFDVDt3QkFDQUcsTUFBTWxCLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSTtvQkFDNUI7Z0JBQ0Y7Z0JBQ0FzQixRQUFRO1lBQ1Y7UUFDRjtJQUNGO0lBQ0FuQixNQUFNRSxTQUFTLENBQUNXLFlBQVksQ0FBQyxRQUFRLFdBQVc7UUFDOUNPLE9BQU87WUFDTGhCLFNBQ0U7WUFDRlUsUUFBUTtZQUNSVCxRQUFRO2dCQUNOLGdCQUFnQjtvQkFDZEQsU0FBUztvQkFDVEcsWUFBWTtvQkFDWlEsT0FBTztvQkFDUFYsUUFBUUwsTUFBTUUsU0FBUyxDQUFDa0IsS0FBSztnQkFDL0I7Z0JBQ0EsbUJBQW1CO2dCQUNuQixlQUFlO1lBQ2pCO1FBQ0Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3ZhbGEuanM/NWM3NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckNsaWtlIGZyb20gJy4vY2xpa2UuanMnXG52YWxhLmRpc3BsYXlOYW1lID0gJ3ZhbGEnXG52YWxhLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZhbGEoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yQ2xpa2UpXG4gIFByaXNtLmxhbmd1YWdlcy52YWxhID0gUHJpc20ubGFuZ3VhZ2VzLmV4dGVuZCgnY2xpa2UnLCB7XG4gICAgLy8gQ2xhc3NlcyBjb3BpZWQgZnJvbSBwcmlzbS1jc2hhcnBcbiAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gKEZvbyBiYXIsIEJhciBiYXopXG4gICAgICAgIHBhdHRlcm46IC9cXGJbQS1aXVxcdyooPzpcXC5cXHcrKSpcXGIoPz0oPzpcXD9cXHMrfFxcKj9cXHMrXFwqPylcXHcpLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIC8vIFtGb29dXG4gICAgICAgIHBhdHRlcm46IC8oXFxbKVtBLVpdXFx3Kig/OlxcLlxcdyspKlxcYi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBjbGFzcyBGb28gOiBCYXJcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKFxcYig/OmNsYXNzfGludGVyZmFjZSlcXHMrW0EtWl1cXHcqKD86XFwuXFx3KykqXFxzKjpcXHMqKVtBLVpdXFx3Kig/OlxcLlxcdyspKlxcYi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXFwuL1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAvLyBjbGFzcyBGb29cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvKCg/OlxcYig/OmNsYXNzfGVudW18aW50ZXJmYWNlfG5ld3xzdHJ1Y3QpXFxzKyl8KD86Y2F0Y2hcXHMrXFwoKSlbQS1aXVxcdyooPzpcXC5cXHcrKSpcXGIvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjogL1xcLi9cbiAgICAgICAgfVxuICAgICAgfVxuICAgIF0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphYnN0cmFjdHxhc3xhc3NlcnR8YXN5bmN8YmFzZXxib29sfGJyZWFrfGNhc2V8Y2F0Y2h8Y2hhcnxjbGFzc3xjb25zdHxjb25zdHJ1Y3R8Y29udGludWV8ZGVmYXVsdHxkZWxlZ2F0ZXxkZWxldGV8ZG98ZG91YmxlfGR5bmFtaWN8ZWxzZXxlbnN1cmVzfGVudW18ZXJyb3Jkb21haW58ZXh0ZXJufGZpbmFsbHl8ZmxvYXR8Zm9yfGZvcmVhY2h8Z2V0fGlmfGlufGlubGluZXxpbnR8aW50MTZ8aW50MzJ8aW50NjR8aW50OHxpbnRlcmZhY2V8aW50ZXJuYWx8aXN8bG9ja3xsb25nfG5hbWVzcGFjZXxuZXd8bnVsbHxvdXR8b3ZlcnJpZGV8b3duZWR8cGFyYW1zfHByaXZhdGV8cHJvdGVjdGVkfHB1YmxpY3xyZWZ8cmVxdWlyZXN8cmV0dXJufHNldHxzaG9ydHxzaWduYWx8c2l6ZW9mfHNpemVfdHxzc2l6ZV90fHN0YXRpY3xzdHJpbmd8c3RydWN0fHN3aXRjaHx0aGlzfHRocm93fHRocm93c3x0cnl8dHlwZW9mfHVjaGFyfHVpbnR8dWludDE2fHVpbnQzMnx1aW50NjR8dWludDh8dWxvbmd8dW5pY2hhcnx1bm93bmVkfHVzaG9ydHx1c2luZ3x2YWx1ZXx2YXJ8dmlydHVhbHx2b2lkfHZvbGF0aWxlfHdlYWt8d2hpbGV8eWllbGQpXFxiL2ksXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD89XFxzKlxcKCkvLFxuICAgIG51bWJlcjpcbiAgICAgIC8oPzpcXGIweFtcXGRhLWZdK1xcYnwoPzpcXGJcXGQrKD86XFwuXFxkKik/fFxcQlxcLlxcZCspKD86ZVsrLV0/XFxkKyk/KSg/OmZ8dT9sPyk/L2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvXFwrXFwrfC0tfCYmfFxcfFxcfHw8PD0/fD4+PT98PT58LT58fnxbK1xcLSpcXC8lJl58PSE8Pl09P3xcXD9cXD8/fFxcLlxcLlxcLi8sXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS8sXG4gICAgY29uc3RhbnQ6IC9cXGJbQS1aMC05X10rXFxiL1xuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd2YWxhJywgJ3N0cmluZycsIHtcbiAgICAncmF3LXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlwiXCJbXFxzXFxTXSo/XCJcIlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgJ3RlbXBsYXRlLXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46IC9AXCJbXFxzXFxTXSo/XCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGludGVycG9sYXRpb246IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvXFwkKD86XFwoW14pXSpcXCl8W2EtekEtWl1cXHcqKS8sXG4gICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICBkZWxpbWl0ZXI6IHtcbiAgICAgICAgICAgICAgcGF0dGVybjogL15cXCRcXCg/fFxcKSQvLFxuICAgICAgICAgICAgICBhbGlhczogJ3B1bmN0dWF0aW9uJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHJlc3Q6IFByaXNtLmxhbmd1YWdlcy52YWxhXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBzdHJpbmc6IC9bXFxzXFxTXSsvXG4gICAgICB9XG4gICAgfVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd2YWxhJywgJ2tleXdvcmQnLCB7XG4gICAgcmVnZXg6IHtcbiAgICAgIHBhdHRlcm46XG4gICAgICAgIC9cXC8oPzpcXFsoPzpbXlxcXVxcXFxcXHJcXG5dfFxcXFwuKSpcXF18XFxcXC58W14vXFxcXFxcW1xcclxcbl0pK1xcL1tpbXN4XXswLDR9KD89XFxzKig/OiR8W1xcclxcbiwuO30pXFxdXSkpLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICAncmVnZXgtc291cmNlJzoge1xuICAgICAgICAgIHBhdHRlcm46IC9eKFxcLylbXFxzXFxTXSsoPz1cXC9bYS16XSokKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogJ2xhbmd1YWdlLXJlZ2V4JyxcbiAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy5yZWdleFxuICAgICAgICB9LFxuICAgICAgICAncmVnZXgtZGVsaW1pdGVyJzogL15cXC8vLFxuICAgICAgICAncmVnZXgtZmxhZ3MnOiAvXlthLXpdKyQvXG4gICAgICB9XG4gICAgfVxuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckNsaWtlIiwidmFsYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwiaW5zaWRlIiwicHVuY3R1YXRpb24iLCJsb29rYmVoaW5kIiwia2V5d29yZCIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJjb25zdGFudCIsImluc2VydEJlZm9yZSIsImdyZWVkeSIsImFsaWFzIiwiaW50ZXJwb2xhdGlvbiIsImRlbGltaXRlciIsInJlc3QiLCJzdHJpbmciLCJyZWdleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vala.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vbnet.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vbnet.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vbnet)\n/* harmony export */ });\n/* harmony import */ var _basic_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./basic.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/basic.js\");\n// @ts-nocheck\n\nvbnet.displayName = \"vbnet\";\nvbnet.aliases = [];\n/** @type {import('../core.js').Syntax} */ function vbnet(Prism) {\n    Prism.register(_basic_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.vbnet = Prism.languages.extend(\"basic\", {\n        comment: [\n            {\n                pattern: /(?:!|REM\\b).+/i,\n                inside: {\n                    keyword: /^REM/i\n                }\n            },\n            {\n                pattern: /(^|[^\\\\:])'.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n            lookbehind: true,\n            greedy: true\n        },\n        keyword: /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n        punctuation: /[,;:(){}]/\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92Ym5ldC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDeUI7QUFDdkNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHLEVBQUU7QUFFbEIsd0NBQXdDLEdBQ3pCLFNBQVNGLE1BQU1HLEtBQUs7SUFDakNBLE1BQU1DLFFBQVEsQ0FBQ0wsaURBQWNBO0lBQzdCSSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsU0FBUztRQUN0REMsU0FBUztZQUNQO2dCQUNFQyxTQUFTO2dCQUNUQyxRQUFRO29CQUNOQyxTQUFTO2dCQUNYO1lBQ0Y7WUFDQTtnQkFDRUYsU0FBUztnQkFDVEcsWUFBWTtnQkFDWkMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNOTCxTQUFTO1lBQ1RHLFlBQVk7WUFDWkMsUUFBUTtRQUNWO1FBQ0FGLFNBQ0U7UUFDRkksYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmJuZXQuanM/NmViOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xuaW1wb3J0IHJlZnJhY3RvckJhc2ljIGZyb20gJy4vYmFzaWMuanMnXG52Ym5ldC5kaXNwbGF5TmFtZSA9ICd2Ym5ldCdcbnZibmV0LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZibmV0KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3RvckJhc2ljKVxuICBQcmlzbS5sYW5ndWFnZXMudmJuZXQgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdiYXNpYycsIHtcbiAgICBjb21tZW50OiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oPzohfFJFTVxcYikuKy9pLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBrZXl3b3JkOiAvXlJFTS9pXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSknLiovLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogLyhefFteXCJdKVwiKD86XCJcInxbXlwiXSkqXCIoPyFcIikvLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC8oPzpcXGIoPzpBRERIQU5ETEVSfEFERFJFU1NPRnxBTElBU3xBTkR8QU5EQUxTT3xBU3xCRUVQfEJMT0FEfEJPT0xFQU58QlNBVkV8QllSRUZ8QllURXxCWVZBTHxDQUxMKD86IEFCU09MVVRFKT98Q0FTRXxDQVRDSHxDQk9PTHxDQllURXxDQ0hBUnxDREFURXxDREJMfENERUN8Q0hBSU58Q0hBUnxDSERJUnxDSU5UfENMQVNTfENMRUFSfENMTkd8Q0xPU0V8Q0xTfENPQkp8Q09NfENPTU1PTnxDT05TVHxDT05USU5VRXxDU0JZVEV8Q1NIT1JUfENTTkd8Q1NUUnxDVFlQRXxDVUlOVHxDVUxOR3xDVVNIT1JUfERBVEF8REFURXxERUNJTUFMfERFQ0xBUkV8REVGKD86IEZOfCBTRUd8REJMfElOVHxMTkd8U05HfFNUUil8REVGQVVMVHxERUxFR0FURXxESU18RElSRUNUQ0FTVHxET3xET1VCTEV8RUxTRXxFTFNFSUZ8RU5EfEVOVU18RU5WSVJPTnxFUkFTRXxFUlJPUnxFVkVOVHxFWElUfEZBTFNFfEZJRUxEfEZJTEVTfEZJTkFMTFl8Rk9SKD86IEVBQ0gpP3xGUklFTkR8RlVOQ1RJT058R0VUfEdFVFRZUEV8R0VUWE1MTkFNRVNQQUNFfEdMT0JBTHxHT1NVQnxHT1RPfEhBTkRMRVN8SUZ8SU1QTEVNRU5UU3xJTVBPUlRTfElOfElOSEVSSVRTfElOUFVUfElOVEVHRVJ8SU5URVJGQUNFfElPQ1RMfElTfElTTk9UfEtFWXxLSUxMfExFVHxMSUJ8TElLRXxMSU5FIElOUFVUfExPQ0FURXxMT0NLfExPTkd8TE9PUHxMU0VUfE1FfE1LRElSfE1PRHxNT0RVTEV8TVVTVElOSEVSSVR8TVVTVE9WRVJSSURFfE1ZQkFTRXxNWUNMQVNTfE5BTUV8TkFNRVNQQUNFfE5BUlJPV0lOR3xORVd8TkVYVHxOT1R8Tk9USElOR3xOT1RJTkhFUklUQUJMRXxOT1RPVkVSUklEQUJMRXxPQkpFQ1R8T0Z8T0ZGfE9OKD86IENPTXwgRVJST1J8IEtFWXwgVElNRVIpP3xPUEVOfE9QRVJBVE9SfE9QVElPTig/OiBCQVNFKT98T1BUSU9OQUx8T1J8T1JFTFNFfE9VVHxPVkVSTE9BRFN8T1ZFUlJJREFCTEV8T1ZFUlJJREVTfFBBUkFNQVJSQVl8UEFSVElBTHxQT0tFfFBSSVZBVEV8UFJPUEVSVFl8UFJPVEVDVEVEfFBVQkxJQ3xQVVR8UkFJU0VFVkVOVHxSRUFEfFJFQURPTkxZfFJFRElNfFJFTXxSRU1PVkVIQU5ETEVSfFJFU1RPUkV8UkVTVU1FfFJFVFVSTnxSTURJUnxSU0VUfFJVTnxTQllURXxTRUxFQ1QoPzogQ0FTRSk/fFNFVHxTSEFET1dTfFNIQVJFRHxTSEVMTHxTSE9SVHxTSU5HTEV8U0xFRVB8U1RBVElDfFNURVB8U1RPUHxTVFJJTkd8U1RSVUNUVVJFfFNVQnxTV0FQfFNZTkNMT0NLfFNZU1RFTXxUSEVOfFRIUk9XfFRJTUVSfFRPfFRST0ZGfFRST058VFJVRXxUUll8VFJZQ0FTVHxUWVBFfFRZUEVPRnxVSU5URUdFUnxVTE9OR3xVTkxPQ0t8VU5USUx8VVNIT1JUfFVTSU5HfFZJRVcgUFJJTlR8V0FJVHxXRU5EfFdIRU58V0hJTEV8V0lERU5JTkd8V0lUSHxXSVRIRVZFTlRTfFdSSVRFfFdSSVRFT05MWXxYT1IpfFxcQig/OiNDT05TVHwjRUxTRXwjRUxTRUlGfCNFTkR8I0lGKSkoPzpcXCR8XFxiKS9pLFxuICAgIHB1bmN0dWF0aW9uOiAvWyw7Oigpe31dL1xuICB9KVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3RvckJhc2ljIiwidmJuZXQiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwiY29tbWVudCIsInBhdHRlcm4iLCJpbnNpZGUiLCJrZXl3b3JkIiwibG9va2JlaGluZCIsImdyZWVkeSIsInN0cmluZyIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vbnet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/velocity.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/velocity.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ velocity)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nvelocity.displayName = \"velocity\";\nvelocity.aliases = [];\n/** @type {import('../core.js').Syntax} */ function velocity(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.velocity = Prism.languages.extend(\"markup\", {});\n        var velocity = {\n            variable: {\n                pattern: /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n                lookbehind: true,\n                inside: {} // See below\n            },\n            string: {\n                pattern: /\"[^\"]*\"|'[^']*'/,\n                greedy: true\n            },\n            number: /\\b\\d+\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n            punctuation: /[(){}[\\]:,.]/\n        };\n        velocity.variable.inside = {\n            string: velocity[\"string\"],\n            function: {\n                pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n                lookbehind: true\n            },\n            number: velocity[\"number\"],\n            boolean: velocity[\"boolean\"],\n            punctuation: velocity[\"punctuation\"]\n        };\n        Prism.languages.insertBefore(\"velocity\", \"comment\", {\n            unparsed: {\n                pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n                lookbehind: true,\n                greedy: true,\n                inside: {\n                    punctuation: /^#\\[\\[|\\]\\]#$/\n                }\n            },\n            \"velocity-comment\": [\n                {\n                    pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"comment\"\n                },\n                {\n                    pattern: /(^|[^\\\\])##.*/,\n                    lookbehind: true,\n                    greedy: true,\n                    alias: \"comment\"\n                }\n            ],\n            directive: {\n                pattern: /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n                lookbehind: true,\n                inside: {\n                    keyword: {\n                        pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n                        inside: {\n                            punctuation: /[{}]/\n                        }\n                    },\n                    rest: velocity\n                }\n            },\n            variable: velocity[\"variable\"]\n        });\n        Prism.languages.velocity[\"tag\"].inside[\"attr-value\"].inside.rest = Prism.languages.velocity;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92ZWxvY2l0eS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDMkI7QUFDekNDLFNBQVNDLFdBQVcsR0FBRztBQUN2QkQsU0FBU0UsT0FBTyxHQUFHLEVBQUU7QUFFckIsd0NBQXdDLEdBQ3pCLFNBQVNGLFNBQVNHLEtBQUs7SUFDcENBLE1BQU1DLFFBQVEsQ0FBQ0wsa0RBQWVBO0lBQzVCLFVBQVVJLEtBQUs7UUFDZkEsTUFBTUUsU0FBUyxDQUFDTCxRQUFRLEdBQUdHLE1BQU1FLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDLFVBQVUsQ0FBQztRQUM3RCxJQUFJTixXQUFXO1lBQ2JPLFVBQVU7Z0JBQ1JDLFNBQ0U7Z0JBQ0ZDLFlBQVk7Z0JBQ1pDLFFBQVEsQ0FBQyxFQUFFLFlBQVk7WUFDekI7WUFFQUMsUUFBUTtnQkFDTkgsU0FBUztnQkFDVEksUUFBUTtZQUNWO1lBQ0FDLFFBQVE7WUFDUkMsU0FBUztZQUNUQyxVQUNFO1lBQ0ZDLGFBQWE7UUFDZjtRQUNBaEIsU0FBU08sUUFBUSxDQUFDRyxNQUFNLEdBQUc7WUFDekJDLFFBQVFYLFFBQVEsQ0FBQyxTQUFTO1lBQzFCaUIsVUFBVTtnQkFDUlQsU0FBUztnQkFDVEMsWUFBWTtZQUNkO1lBQ0FJLFFBQVFiLFFBQVEsQ0FBQyxTQUFTO1lBQzFCYyxTQUFTZCxRQUFRLENBQUMsVUFBVTtZQUM1QmdCLGFBQWFoQixRQUFRLENBQUMsY0FBYztRQUN0QztRQUNBRyxNQUFNRSxTQUFTLENBQUNhLFlBQVksQ0FBQyxZQUFZLFdBQVc7WUFDbERDLFVBQVU7Z0JBQ1JYLFNBQVM7Z0JBQ1RDLFlBQVk7Z0JBQ1pHLFFBQVE7Z0JBQ1JGLFFBQVE7b0JBQ05NLGFBQWE7Z0JBQ2Y7WUFDRjtZQUNBLG9CQUFvQjtnQkFDbEI7b0JBQ0VSLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pHLFFBQVE7b0JBQ1JRLE9BQU87Z0JBQ1Q7Z0JBQ0E7b0JBQ0VaLFNBQVM7b0JBQ1RDLFlBQVk7b0JBQ1pHLFFBQVE7b0JBQ1JRLE9BQU87Z0JBQ1Q7YUFDRDtZQUNEQyxXQUFXO2dCQUNUYixTQUNFO2dCQUNGQyxZQUFZO2dCQUNaQyxRQUFRO29CQUNOWSxTQUFTO3dCQUNQZCxTQUFTO3dCQUNURSxRQUFROzRCQUNOTSxhQUFhO3dCQUNmO29CQUNGO29CQUNBTyxNQUFNdkI7Z0JBQ1I7WUFDRjtZQUNBTyxVQUFVUCxRQUFRLENBQUMsV0FBVztRQUNoQztRQUNBRyxNQUFNRSxTQUFTLENBQUNMLFFBQVEsQ0FBQyxNQUFNLENBQUNVLE1BQU0sQ0FBQyxhQUFhLENBQUNBLE1BQU0sQ0FBQ2EsSUFBSSxHQUM5RHBCLE1BQU1FLFNBQVMsQ0FBQ0wsUUFBUTtJQUM1QixHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3ZlbG9jaXR5LmpzP2Q5NzYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JNYXJrdXAgZnJvbSAnLi9tYXJrdXAuanMnXG52ZWxvY2l0eS5kaXNwbGF5TmFtZSA9ICd2ZWxvY2l0eSdcbnZlbG9jaXR5LmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZlbG9jaXR5KFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICBQcmlzbS5sYW5ndWFnZXMudmVsb2NpdHkgPSBQcmlzbS5sYW5ndWFnZXMuZXh0ZW5kKCdtYXJrdXAnLCB7fSlcbiAgICB2YXIgdmVsb2NpdHkgPSB7XG4gICAgICB2YXJpYWJsZToge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC8oXnxbXlxcXFxdKD86XFxcXFxcXFwpKilcXCQhPyg/OlthLXpdW1xcdy1dKig/OlxcKFteKV0qXFwpKT8oPzpcXC5bYS16XVtcXHctXSooPzpcXChbXildKlxcKSk/fFxcW1teXFxdXStcXF0pKnxcXHtbXn1dK1xcfSkvaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7fSAvLyBTZWUgYmVsb3dcbiAgICAgIH0sXG5cbiAgICAgIHN0cmluZzoge1xuICAgICAgICBwYXR0ZXJuOiAvXCJbXlwiXSpcInwnW14nXSonLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgbnVtYmVyOiAvXFxiXFxkK1xcYi8sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgb3BlcmF0b3I6XG4gICAgICAgIC9bPSE8Pl09P3xbKyovJS1dfCYmfFxcfFxcfHxcXC5cXC58XFxiKD86ZXF8Z1tldF18bFtldF18big/OmV8b3QpKVxcYi8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9W1xcXTosLl0vXG4gICAgfVxuICAgIHZlbG9jaXR5LnZhcmlhYmxlLmluc2lkZSA9IHtcbiAgICAgIHN0cmluZzogdmVsb2NpdHlbJ3N0cmluZyddLFxuICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgcGF0dGVybjogLyhbXlxcdy1dKVthLXpdW1xcdy1dKig/PVxcKCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICB9LFxuICAgICAgbnVtYmVyOiB2ZWxvY2l0eVsnbnVtYmVyJ10sXG4gICAgICBib29sZWFuOiB2ZWxvY2l0eVsnYm9vbGVhbiddLFxuICAgICAgcHVuY3R1YXRpb246IHZlbG9jaXR5WydwdW5jdHVhdGlvbiddXG4gICAgfVxuICAgIFByaXNtLmxhbmd1YWdlcy5pbnNlcnRCZWZvcmUoJ3ZlbG9jaXR5JywgJ2NvbW1lbnQnLCB7XG4gICAgICB1bnBhcnNlZDoge1xuICAgICAgICBwYXR0ZXJuOiAvKF58W15cXFxcXSkjXFxbXFxbW1xcc1xcU10qP1xcXVxcXSMvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiAvXiNcXFtcXFt8XFxdXFxdIyQvXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAndmVsb2NpdHktY29tbWVudCc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKSNcXCpbXFxzXFxTXSo/XFwqIy8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdjb21tZW50J1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogLyhefFteXFxcXF0pIyMuKi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBncmVlZHk6IHRydWUsXG4gICAgICAgICAgYWxpYXM6ICdjb21tZW50J1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgZGlyZWN0aXZlOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteXFxcXF0oPzpcXFxcXFxcXCkqKSNAPyg/OlthLXpdW1xcdy1dKnxcXHtbYS16XVtcXHctXSpcXH0pKD86XFxzKlxcKCg/OlteKCldfFxcKFteKCldKlxcKSkqXFwpKT8vaSxcbiAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAga2V5d29yZDoge1xuICAgICAgICAgICAgcGF0dGVybjogL14jQD8oPzpbYS16XVtcXHctXSp8XFx7W2Etel1bXFx3LV0qXFx9KXxcXGJpblxcYi8sXG4gICAgICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICAgICAgcHVuY3R1YXRpb246IC9be31dL1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgcmVzdDogdmVsb2NpdHlcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHZhcmlhYmxlOiB2ZWxvY2l0eVsndmFyaWFibGUnXVxuICAgIH0pXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnZlbG9jaXR5Wyd0YWcnXS5pbnNpZGVbJ2F0dHItdmFsdWUnXS5pbnNpZGUucmVzdCA9XG4gICAgICBQcmlzbS5sYW5ndWFnZXMudmVsb2NpdHlcbiAgfSkoUHJpc20pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwIiwidmVsb2NpdHkiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsInJlZ2lzdGVyIiwibGFuZ3VhZ2VzIiwiZXh0ZW5kIiwidmFyaWFibGUiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImluc2lkZSIsInN0cmluZyIsImdyZWVkeSIsIm51bWJlciIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIiwiZnVuY3Rpb24iLCJpbnNlcnRCZWZvcmUiLCJ1bnBhcnNlZCIsImFsaWFzIiwiZGlyZWN0aXZlIiwia2V5d29yZCIsInJlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/velocity.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/verilog.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/verilog.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ verilog)\n/* harmony export */ });\n// @ts-nocheck\nverilog.displayName = \"verilog\";\nverilog.aliases = [];\n/** @type {import('../core.js').Syntax} */ function verilog(Prism) {\n    Prism.languages.verilog = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        \"kernel-function\": {\n            // support for any kernel function (ex: $display())\n            pattern: /\\B\\$\\w+\\b/,\n            alias: \"property\"\n        },\n        // support for user defined constants (ex: `define)\n        constant: /\\B`\\w+\\b/,\n        function: /\\b\\w+(?=\\()/,\n        // support for verilog and system verilog keywords\n        keyword: /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n        // bold highlighting for all verilog and system verilog logic blocks\n        important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n        // support for time ticks, vectors, and real numbers\n        number: /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n        operator: /[-+{}^~%*\\/?=!<>&|]+/,\n        punctuation: /[[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92ZXJpbG9nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHLEVBQUU7QUFFcEIsd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQSxtQkFBbUI7WUFDakIsbURBQW1EO1lBQ25ERCxTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBLG1EQUFtRDtRQUNuREMsVUFBVTtRQUNWQyxVQUFVO1FBQ1Ysa0RBQWtEO1FBQ2xEQyxTQUNFO1FBQ0Ysb0VBQW9FO1FBQ3BFQyxXQUFXO1FBQ1gsb0RBQW9EO1FBQ3BEQyxRQUNFO1FBQ0ZDLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvdmVyaWxvZy5qcz80ZDMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG52ZXJpbG9nLmRpc3BsYXlOYW1lID0gJ3Zlcmlsb2cnXG52ZXJpbG9nLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHZlcmlsb2coUHJpc20pIHtcbiAgUHJpc20ubGFuZ3VhZ2VzLnZlcmlsb2cgPSB7XG4gICAgY29tbWVudDoge1xuICAgICAgcGF0dGVybjogL1xcL1xcLy4qfFxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBzdHJpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9cIig/OlxcXFwoPzpcXHJcXG58W1xcc1xcU10pfFteXCJcXFxcXFxyXFxuXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICAna2VybmVsLWZ1bmN0aW9uJzoge1xuICAgICAgLy8gc3VwcG9ydCBmb3IgYW55IGtlcm5lbCBmdW5jdGlvbiAoZXg6ICRkaXNwbGF5KCkpXG4gICAgICBwYXR0ZXJuOiAvXFxCXFwkXFx3K1xcYi8sXG4gICAgICBhbGlhczogJ3Byb3BlcnR5J1xuICAgIH0sXG4gICAgLy8gc3VwcG9ydCBmb3IgdXNlciBkZWZpbmVkIGNvbnN0YW50cyAoZXg6IGBkZWZpbmUpXG4gICAgY29uc3RhbnQ6IC9cXEJgXFx3K1xcYi8sXG4gICAgZnVuY3Rpb246IC9cXGJcXHcrKD89XFwoKS8sXG4gICAgLy8gc3VwcG9ydCBmb3IgdmVyaWxvZyBhbmQgc3lzdGVtIHZlcmlsb2cga2V5d29yZHNcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OmFsaWFzfGFuZHxhc3NlcnR8YXNzaWdufGFzc3VtZXxhdXRvbWF0aWN8YmVmb3JlfGJlZ2lufGJpbmR8Ymluc3xiaW5zb2Z8Yml0fGJyZWFrfGJ1ZnxidWZpZjB8YnVmaWYxfGJ5dGV8Y2FzZXxjYXNleHxjYXNlenxjZWxsfGNoYW5kbGV8Y2xhc3N8Y2xvY2tpbmd8Y21vc3xjb25maWd8Y29uc3R8Y29uc3RyYWludHxjb250ZXh0fGNvbnRpbnVlfGNvdmVyfGNvdmVyZ3JvdXB8Y292ZXJwb2ludHxjcm9zc3xkZWFzc2lnbnxkZWZhdWx0fGRlZnBhcmFtfGRlc2lnbnxkaXNhYmxlfGRpc3R8ZG98ZWRnZXxlbHNlfGVuZHxlbmRjYXNlfGVuZGNsYXNzfGVuZGNsb2NraW5nfGVuZGNvbmZpZ3xlbmRmdW5jdGlvbnxlbmRnZW5lcmF0ZXxlbmRncm91cHxlbmRpbnRlcmZhY2V8ZW5kbW9kdWxlfGVuZHBhY2thZ2V8ZW5kcHJpbWl0aXZlfGVuZHByb2dyYW18ZW5kcHJvcGVydHl8ZW5kc2VxdWVuY2V8ZW5kc3BlY2lmeXxlbmR0YWJsZXxlbmR0YXNrfGVudW18ZXZlbnR8ZXhwZWN0fGV4cG9ydHxleHRlbmRzfGV4dGVybnxmaW5hbHxmaXJzdF9tYXRjaHxmb3J8Zm9yY2V8Zm9yZWFjaHxmb3JldmVyfGZvcmt8Zm9ya2pvaW58ZnVuY3Rpb258Z2VuZXJhdGV8Z2VudmFyfGhpZ2h6MHxoaWdoejF8aWZ8aWZmfGlmbm9uZXxpZ25vcmVfYmluc3xpbGxlZ2FsX2JpbnN8aW1wb3J0fGluY2RpcnxpbmNsdWRlfGluaXRpYWx8aW5vdXR8aW5wdXR8aW5zaWRlfGluc3RhbmNlfGludHxpbnRlZ2VyfGludGVyZmFjZXxpbnRlcnNlY3R8am9pbnxqb2luX2FueXxqb2luX25vbmV8bGFyZ2V8bGlibGlzdHxsaWJyYXJ5fGxvY2FsfGxvY2FscGFyYW18bG9naWN8bG9uZ2ludHxtYWNyb21vZHVsZXxtYXRjaGVzfG1lZGl1bXxtb2Rwb3J0fG1vZHVsZXxuYW5kfG5lZ2VkZ2V8bmV3fG5tb3N8bm9yfG5vc2hvd2NhbmNlbGxlZHxub3R8bm90aWYwfG5vdGlmMXxudWxsfG9yfG91dHB1dHxwYWNrYWdlfHBhY2tlZHxwYXJhbWV0ZXJ8cG1vc3xwb3NlZGdlfHByaW1pdGl2ZXxwcmlvcml0eXxwcm9ncmFtfHByb3BlcnR5fHByb3RlY3RlZHxwdWxsMHxwdWxsMXxwdWxsZG93bnxwdWxsdXB8cHVsc2VzdHlsZV9vbmRldGVjdHxwdWxzZXN0eWxlX29uZXZlbnR8cHVyZXxyYW5kfHJhbmRjfHJhbmRjYXNlfHJhbmRzZXF1ZW5jZXxyY21vc3xyZWFsfHJlYWx0aW1lfHJlZnxyZWd8cmVsZWFzZXxyZXBlYXR8cmV0dXJufHJubW9zfHJwbW9zfHJ0cmFufHJ0cmFuaWYwfHJ0cmFuaWYxfHNjYWxhcmVkfHNlcXVlbmNlfHNob3J0aW50fHNob3J0cmVhbHxzaG93Y2FuY2VsbGVkfHNpZ25lZHxzbWFsbHxzb2x2ZXxzcGVjaWZ5fHNwZWNwYXJhbXxzdGF0aWN8c3RyaW5nfHN0cm9uZzB8c3Ryb25nMXxzdHJ1Y3R8c3VwZXJ8c3VwcGx5MHxzdXBwbHkxfHRhYmxlfHRhZ2dlZHx0YXNrfHRoaXN8dGhyb3VnaG91dHx0aW1lfHRpbWVwcmVjaXNpb258dGltZXVuaXR8dHJhbnx0cmFuaWYwfHRyYW5pZjF8dHJpfHRyaTB8dHJpMXx0cmlhbmR8dHJpb3J8dHJpcmVnfHR5cGV8dHlwZWRlZnx1bmlvbnx1bmlxdWV8dW5zaWduZWR8dXNlfHV3aXJlfHZhcnx2ZWN0b3JlZHx2aXJ0dWFsfHZvaWR8d2FpdHx3YWl0X29yZGVyfHdhbmR8d2VhazB8d2VhazF8d2hpbGV8d2lsZGNhcmR8d2lyZXx3aXRofHdpdGhpbnx3b3J8eG5vcnx4b3IpXFxiLyxcbiAgICAvLyBib2xkIGhpZ2hsaWdodGluZyBmb3IgYWxsIHZlcmlsb2cgYW5kIHN5c3RlbSB2ZXJpbG9nIGxvZ2ljIGJsb2Nrc1xuICAgIGltcG9ydGFudDogL1xcYig/OmFsd2F5c3xhbHdheXNfY29tYnxhbHdheXNfZmZ8YWx3YXlzX2xhdGNoKVxcYig/OiAqQCk/LyxcbiAgICAvLyBzdXBwb3J0IGZvciB0aW1lIHRpY2tzLCB2ZWN0b3JzLCBhbmQgcmVhbCBudW1iZXJzXG4gICAgbnVtYmVyOlxuICAgICAgL1xcQiMjP1xcZCt8KD86XFxiXFxkKyk/J1tvZGJoXSA/W1xcZGEtZnp4Xz9dK3xcXGIoPzpcXGQqWy5fXSk/XFxkKyg/OmVbLStdP1xcZCspPy9pLFxuICAgIG9wZXJhdG9yOiAvWy0re31efiUqXFwvPz0hPD4mfF0rLyxcbiAgICBwdW5jdHVhdGlvbjogL1tbXFxdOygpLC46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInZlcmlsb2ciLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwiYWxpYXMiLCJjb25zdGFudCIsImZ1bmN0aW9uIiwia2V5d29yZCIsImltcG9ydGFudCIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/verilog.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vhdl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vhdl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vhdl)\n/* harmony export */ });\n// @ts-nocheck\nvhdl.displayName = \"vhdl\";\nvhdl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function vhdl(Prism) {\n    Prism.languages.vhdl = {\n        comment: /--.+/,\n        // support for all logic vectors\n        \"vhdl-vectors\": {\n            pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n            alias: \"number\"\n        },\n        // support for operator overloading included\n        \"quoted-function\": {\n            pattern: /\"\\S+?\"(?=\\()/,\n            alias: \"function\"\n        },\n        string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n        attribute: {\n            pattern: /\\b'\\w+/,\n            alias: \"attr-name\"\n        },\n        // support for predefined attributes included\n        keyword: /\\b(?:access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|private|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|view|wait|when|while|with)\\b/i,\n        boolean: /\\b(?:false|true)\\b/i,\n        function: /\\w+(?=\\()/,\n        // decimal, based, physical, and exponential numbers supported\n        number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n        operator: /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n        punctuation: /[{}[\\];(),.:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92aGRsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1FBQ1QsZ0NBQWdDO1FBQ2hDLGdCQUFnQjtZQUNkQyxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLDRDQUE0QztRQUM1QyxtQkFBbUI7WUFDakJELFNBQVM7WUFDVEMsT0FBTztRQUNUO1FBQ0FDLFFBQVE7UUFDUkMsV0FBVztZQUNUSCxTQUFTO1lBQ1RDLE9BQU87UUFDVDtRQUNBLDZDQUE2QztRQUM3Q0csU0FDRTtRQUNGQyxTQUFTO1FBQ1RDLFVBQVU7UUFDViw4REFBOEQ7UUFDOURDLFFBQVE7UUFDUkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92aGRsLmpzPzQzMjkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnZoZGwuZGlzcGxheU5hbWUgPSAndmhkbCdcbnZoZGwuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmhkbChQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMudmhkbCA9IHtcbiAgICBjb21tZW50OiAvLS0uKy8sXG4gICAgLy8gc3VwcG9ydCBmb3IgYWxsIGxvZ2ljIHZlY3RvcnNcbiAgICAndmhkbC12ZWN0b3JzJzoge1xuICAgICAgcGF0dGVybjogL1xcYltveGJdXCJbXFxkYS1mX10rXCJ8XCJbMDF1eHp3bGgtXStcIi9pLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICAvLyBzdXBwb3J0IGZvciBvcGVyYXRvciBvdmVybG9hZGluZyBpbmNsdWRlZFxuICAgICdxdW90ZWQtZnVuY3Rpb24nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCJcXFMrP1wiKD89XFwoKS8sXG4gICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgIH0sXG4gICAgc3RyaW5nOiAvXCIoPzpbXlxcXFxcIlxcclxcbl18XFxcXCg/OlxcclxcbnxbXFxzXFxTXSkpKlwiLyxcbiAgICBhdHRyaWJ1dGU6IHtcbiAgICAgIHBhdHRlcm46IC9cXGInXFx3Ky8sXG4gICAgICBhbGlhczogJ2F0dHItbmFtZSdcbiAgICB9LFxuICAgIC8vIHN1cHBvcnQgZm9yIHByZWRlZmluZWQgYXR0cmlidXRlcyBpbmNsdWRlZFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86YWNjZXNzfGFmdGVyfGFsaWFzfGFsbHxhcmNoaXRlY3R1cmV8YXJyYXl8YXNzZXJ0fGF0dHJpYnV0ZXxiZWdpbnxibG9ja3xib2R5fGJ1ZmZlcnxidXN8Y2FzZXxjb21wb25lbnR8Y29uZmlndXJhdGlvbnxjb25zdGFudHxkaXNjb25uZWN0fGRvd250b3xlbHNlfGVsc2lmfGVuZHxlbnRpdHl8ZXhpdHxmaWxlfGZvcnxmdW5jdGlvbnxnZW5lcmF0ZXxnZW5lcmljfGdyb3VwfGd1YXJkZWR8aWZ8aW1wdXJlfGlufGluZXJ0aWFsfGlub3V0fGlzfGxhYmVsfGxpYnJhcnl8bGlua2FnZXxsaXRlcmFsfGxvb3B8bWFwfG5ld3xuZXh0fG51bGx8b2Z8b258b3BlbnxvdGhlcnN8b3V0fHBhY2thZ2V8cG9ydHxwb3N0cG9uZWR8cHJpdmF0ZXxwcm9jZWR1cmV8cHJvY2Vzc3xwdXJlfHJhbmdlfHJlY29yZHxyZWdpc3RlcnxyZWplY3R8cmVwb3J0fHJldHVybnxzZWxlY3R8c2V2ZXJpdHl8c2hhcmVkfHNpZ25hbHxzdWJ0eXBlfHRoZW58dG98dHJhbnNwb3J0fHR5cGV8dW5hZmZlY3RlZHx1bml0c3x1bnRpbHx1c2V8dmFyaWFibGV8dmlld3x3YWl0fHdoZW58d2hpbGV8d2l0aClcXGIvaSxcbiAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvaSxcbiAgICBmdW5jdGlvbjogL1xcdysoPz1cXCgpLyxcbiAgICAvLyBkZWNpbWFsLCBiYXNlZCwgcGh5c2ljYWwsIGFuZCBleHBvbmVudGlhbCBudW1iZXJzIHN1cHBvcnRlZFxuICAgIG51bWJlcjogLydbMDF1eHp3bGgtXSd8XFxiKD86XFxkKyNbXFxkYS1mXy5dKyN8XFxkW1xcZF8uXSopKD86ZVstK10/XFxkKyk/L2ksXG4gICAgb3BlcmF0b3I6XG4gICAgICAvWzw+XT0/fDo9fFstKyovJj1dfFxcYig/OmFic3xhbmR8bW9kfG5hbmR8bm9yfG5vdHxvcnxyZW18cm9sfHJvcnxzbGF8c2xsfHNyYXxzcmx8eG5vcnx4b3IpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9be31bXFxdOygpLC46XS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInZoZGwiLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiYWxpYXMiLCJzdHJpbmciLCJhdHRyaWJ1dGUiLCJrZXl3b3JkIiwiYm9vbGVhbiIsImZ1bmN0aW9uIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vhdl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vim.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vim.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ vim)\n/* harmony export */ });\n// @ts-nocheck\nvim.displayName = \"vim\";\nvim.aliases = [];\n/** @type {import('../core.js').Syntax} */ function vim(Prism) {\n    Prism.languages.vim = {\n        string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n        comment: /\".*/,\n        function: /\\b\\w+(?=\\()/,\n        keyword: /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n        builtin: /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n        number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n        operator: /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n        punctuation: /[{}[\\](),;:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vim.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/visual-basic.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/visual-basic.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ visualBasic)\n/* harmony export */ });\n// @ts-nocheck\nvisualBasic.displayName = \"visual-basic\";\nvisualBasic.aliases = [\n    \"vb\",\n    \"vba\"\n];\n/** @type {import('../core.js').Syntax} */ function visualBasic(Prism) {\n    Prism.languages[\"visual-basic\"] = {\n        comment: {\n            pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n            inside: {\n                keyword: /^REM/i\n            }\n        },\n        directive: {\n            pattern: /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n            alias: \"property\",\n            greedy: true\n        },\n        string: {\n            pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n            greedy: true\n        },\n        date: {\n            pattern: /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n            alias: \"number\"\n        },\n        number: /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n        boolean: /\\b(?:False|Nothing|True)\\b/i,\n        keyword: /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n        operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n        punctuation: /[{}().,:?]/\n    };\n    Prism.languages.vb = Prism.languages[\"visual-basic\"];\n    Prism.languages.vba = Prism.languages[\"visual-basic\"];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92aXN1YWwtYmFzaWMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGNBQWM7QUFDZEEsWUFBWUMsV0FBVyxHQUFHO0FBQzFCRCxZQUFZRSxPQUFPLEdBQUc7SUFBQztJQUFNO0NBQU07QUFFbkMsd0NBQXdDLEdBQ3pCLFNBQVNGLFlBQVlHLEtBQUs7SUFDdkNBLE1BQU1DLFNBQVMsQ0FBQyxlQUFlLEdBQUc7UUFDaENDLFNBQVM7WUFDUEMsU0FBUztZQUNUQyxRQUFRO2dCQUNOQyxTQUFTO1lBQ1g7UUFDRjtRQUNBQyxXQUFXO1lBQ1RILFNBQ0U7WUFDRkksT0FBTztZQUNQQyxRQUFRO1FBQ1Y7UUFDQUMsUUFBUTtZQUNOTixTQUFTO1lBQ1RLLFFBQVE7UUFDVjtRQUNBRSxNQUFNO1lBQ0pQLFNBQ0U7WUFDRkksT0FBTztRQUNUO1FBQ0FJLFFBQ0U7UUFDRkMsU0FBUztRQUNUUCxTQUNFO1FBQ0ZRLFVBQVU7UUFDVkMsYUFBYTtJQUNmO0lBQ0FkLE1BQU1DLFNBQVMsQ0FBQ2MsRUFBRSxHQUFHZixNQUFNQyxTQUFTLENBQUMsZUFBZTtJQUNwREQsTUFBTUMsU0FBUyxDQUFDZSxHQUFHLEdBQUdoQixNQUFNQyxTQUFTLENBQUMsZUFBZTtBQUN2RCIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy92aXN1YWwtYmFzaWMuanM/NmFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xudmlzdWFsQmFzaWMuZGlzcGxheU5hbWUgPSAndmlzdWFsLWJhc2ljJ1xudmlzdWFsQmFzaWMuYWxpYXNlcyA9IFsndmInLCAndmJhJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB2aXN1YWxCYXNpYyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXNbJ3Zpc3VhbC1iYXNpYyddID0ge1xuICAgIGNvbW1lbnQ6IHtcbiAgICAgIHBhdHRlcm46IC8oPzpbJ+KAmOKAmV18UkVNXFxiKSg/OlteXFxyXFxuX118Xyg/Olxcclxcbj98XFxuKT8pKi9pLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgIGtleXdvcmQ6IC9eUkVNL2lcbiAgICAgIH1cbiAgICB9LFxuICAgIGRpcmVjdGl2ZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyMoPzpDb25zdHxFbHNlfEVsc2VJZnxFbmR8RXh0ZXJuYWxDaGVja3N1bXxFeHRlcm5hbFNvdXJjZXxJZnxSZWdpb24pKD86XFxiX1sgXFx0XSooPzpcXHJcXG4/fFxcbil8LikrL2ksXG4gICAgICBhbGlhczogJ3Byb3BlcnR5JyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwkP1tcIuKAnOKAnV0oPzpbXCLigJzigJ1dezJ9fFteXCLigJzigJ1dKSpbXCLigJzigJ1dQz8vaSxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAgZGF0ZToge1xuICAgICAgcGF0dGVybjpcbiAgICAgICAgLyNbIFxcdF0qKD86XFxkKyhbLy1dKVxcZCtcXDFcXGQrKD86WyBcXHRdKyg/OlxcZCtbIFxcdF0qKD86QU18UE0pfFxcZCs6XFxkKyg/OjpcXGQrKT8oPzpbIFxcdF0qKD86QU18UE0pKT8pKT98XFxkK1sgXFx0XSooPzpBTXxQTSl8XFxkKzpcXGQrKD86OlxcZCspPyg/OlsgXFx0XSooPzpBTXxQTSkpPylbIFxcdF0qIy9pLFxuICAgICAgYWxpYXM6ICdudW1iZXInXG4gICAgfSxcbiAgICBudW1iZXI6XG4gICAgICAvKD86KD86XFxiXFxkKyg/OlxcLlxcZCspP3xcXC5cXGQrKSg/OkVbKy1dP1xcZCspP3wmW0hPXVtcXGRBLUZdKykoPzpbRlJEXXxVP1tJTFNdKT8vaSxcbiAgICBib29sZWFuOiAvXFxiKD86RmFsc2V8Tm90aGluZ3xUcnVlKVxcYi9pLFxuICAgIGtleXdvcmQ6XG4gICAgICAvXFxiKD86QWRkSGFuZGxlcnxBZGRyZXNzT2Z8QWxpYXN8QW5kKD86QWxzbyk/fEFzfEJvb2xlYW58QnlSZWZ8Qnl0ZXxCeVZhbHxDYWxsfENhc2V8Q2F0Y2h8Qyg/OkJvb2x8Qnl0ZXxDaGFyfERhdGV8RGJsfERlY3xJbnR8TG5nfE9ianxTQnl0ZXxTaG9ydHxTbmd8U3RyfFR5cGV8VUludHxVTG5nfFVTaG9ydCl8Q2hhcnxDbGFzc3xDb25zdHxDb250aW51ZXxDdXJyZW5jeXxEYXRlfERlY2ltYWx8RGVjbGFyZXxEZWZhdWx0fERlbGVnYXRlfERpbXxEaXJlY3RDYXN0fERvfERvdWJsZXxFYWNofEVsc2UoPzpJZik/fEVuZCg/OklmKT98RW51bXxFcmFzZXxFcnJvcnxFdmVudHxFeGl0fEZpbmFsbHl8Rm9yfEZyaWVuZHxGdW5jdGlvbnxHZXQoPzpUeXBlfFhNTE5hbWVzcGFjZSk/fEdsb2JhbHxHb1N1YnxHb1RvfEhhbmRsZXN8SWZ8SW1wbGVtZW50c3xJbXBvcnRzfElufEluaGVyaXRzfEludGVnZXJ8SW50ZXJmYWNlfElzfElzTm90fExldHxMaWJ8TGlrZXxMb25nfExvb3B8TWV8TW9kfE1vZHVsZXxNdXN0KD86SW5oZXJpdHxPdmVycmlkZSl8TXkoPzpCYXNlfENsYXNzKXxOYW1lc3BhY2V8TmFycm93aW5nfE5ld3xOZXh0fE5vdCg/OkluaGVyaXRhYmxlfE92ZXJyaWRhYmxlKT98T2JqZWN0fE9mfE9ufE9wZXJhdG9yfE9wdGlvbig/OmFsKT98T3IoPzpFbHNlKT98T3V0fE92ZXJsb2Fkc3xPdmVycmlkYWJsZXxPdmVycmlkZXN8UGFyYW1BcnJheXxQYXJ0aWFsfFByaXZhdGV8UHJvcGVydHl8UHJvdGVjdGVkfFB1YmxpY3xSYWlzZUV2ZW50fFJlYWRPbmx5fFJlRGltfFJlbW92ZUhhbmRsZXJ8UmVzdW1lfFJldHVybnxTQnl0ZXxTZWxlY3R8U2V0fFNoYWRvd3N8U2hhcmVkfHNob3J0fFNpbmdsZXxTdGF0aWN8U3RlcHxTdG9wfFN0cmluZ3xTdHJ1Y3R1cmV8U3VifFN5bmNMb2NrfFRoZW58VGhyb3d8VG98VHJ5fFRyeUNhc3R8VHlwZXxUeXBlT2Z8VSg/OkludGVnZXJ8TG9uZ3xTaG9ydCl8VW50aWx8VXNpbmd8VmFyaWFudHxXZW5kfFdoZW58V2hpbGV8V2lkZW5pbmd8V2l0aCg/OkV2ZW50cyk/fFdyaXRlT25seXxYb3IpXFxiL2ksXG4gICAgb3BlcmF0b3I6IC9bK1xcLSovXFxcXF48PT4mI0AkJSFdfFxcYl8oPz1bIFxcdF0qW1xcclxcbl0pLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fSgpLiw6P10vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLnZiID0gUHJpc20ubGFuZ3VhZ2VzWyd2aXN1YWwtYmFzaWMnXVxuICBQcmlzbS5sYW5ndWFnZXMudmJhID0gUHJpc20ubGFuZ3VhZ2VzWyd2aXN1YWwtYmFzaWMnXVxufVxuIl0sIm5hbWVzIjpbInZpc3VhbEJhc2ljIiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50IiwicGF0dGVybiIsImluc2lkZSIsImtleXdvcmQiLCJkaXJlY3RpdmUiLCJhbGlhcyIsImdyZWVkeSIsInN0cmluZyIsImRhdGUiLCJudW1iZXIiLCJib29sZWFuIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsInZiIiwidmJhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/visual-basic.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/warpscript.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/warpscript.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ warpscript)\n/* harmony export */ });\n// @ts-nocheck\nwarpscript.displayName = \"warpscript\";\nwarpscript.aliases = [];\n/** @type {import('../core.js').Syntax} */ function warpscript(Prism) {\n    Prism.languages.warpscript = {\n        comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        string: {\n            pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n            greedy: true\n        },\n        variable: /\\$\\S+/,\n        macro: {\n            pattern: /@\\S+/,\n            alias: \"property\"\n        },\n        // WarpScript doesn't have any keywords, these are all functions under the control category\n        // https://www.warp10.io/tags/control\n        keyword: /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n        number: /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n        boolean: /\\b(?:F|T|false|true)\\b/,\n        punctuation: /<%|%>|[{}[\\]()]/,\n        // Some operators from the \"operators\" category\n        // https://www.warp10.io/tags/operators\n        operator: /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93YXJwc2NyaXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFdBQVdDLFdBQVcsR0FBRztBQUN6QkQsV0FBV0UsT0FBTyxHQUFHLEVBQUU7QUFFdkIsd0NBQXdDLEdBQ3pCLFNBQVNGLFdBQVdHLEtBQUs7SUFDdENBLE1BQU1DLFNBQVMsQ0FBQ0osVUFBVSxHQUFHO1FBQzNCSyxTQUFTO1FBQ1RDLFFBQVE7WUFDTkMsU0FDRTtZQUNGQyxRQUFRO1FBQ1Y7UUFDQUMsVUFBVTtRQUNWQyxPQUFPO1lBQ0xILFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0EsMkZBQTJGO1FBQzNGLHFDQUFxQztRQUNyQ0MsU0FDRTtRQUNGQyxRQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsYUFBYTtRQUNiLCtDQUErQztRQUMvQyx1Q0FBdUM7UUFDdkNDLFVBQ0U7SUFDSjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dhcnBzY3JpcHQuanM/NDQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xud2FycHNjcmlwdC5kaXNwbGF5TmFtZSA9ICd3YXJwc2NyaXB0J1xud2FycHNjcmlwdC5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3YXJwc2NyaXB0KFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy53YXJwc2NyaXB0ID0ge1xuICAgIGNvbW1lbnQ6IC8jLip8XFwvXFwvLip8XFwvXFwqW1xcc1xcU10qP1xcKlxcLy8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOlxuICAgICAgICAvXCIoPzpbXlwiXFxcXFxcclxcbl18XFxcXC4pKlwifCcoPzpbXidcXFxcXFxyXFxuXXxcXFxcLikqJ3w8Jyg/OlteXFxcXCddfCcoPyE+KXxcXFxcLikqJz4vLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICB2YXJpYWJsZTogL1xcJFxcUysvLFxuICAgIG1hY3JvOiB7XG4gICAgICBwYXR0ZXJuOiAvQFxcUysvLFxuICAgICAgYWxpYXM6ICdwcm9wZXJ0eSdcbiAgICB9LFxuICAgIC8vIFdhcnBTY3JpcHQgZG9lc24ndCBoYXZlIGFueSBrZXl3b3JkcywgdGhlc2UgYXJlIGFsbCBmdW5jdGlvbnMgdW5kZXIgdGhlIGNvbnRyb2wgY2F0ZWdvcnlcbiAgICAvLyBodHRwczovL3d3dy53YXJwMTAuaW8vdGFncy9jb250cm9sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpCUkVBS3xDSEVDS01BQ1JPfENPTlRJTlVFfENVREZ8REVGSU5FRHxERUZJTkVETUFDUk98RVZBTHxGQUlMfEZPUnxGT1JFQUNIfEZPUlNURVB8SUZUfElGVEV8TVNHRkFJTHxOUkVUVVJOfFJFVEhST1d8UkVUVVJOfFNXSVRDSHxUUll8VURGfFVOVElMfFdISUxFKVxcYi8sXG4gICAgbnVtYmVyOlxuICAgICAgL1srLV0/XFxiKD86TmFOfEluZmluaXR5fFxcZCsoPzpcXC5cXGQqKT8oPzpbRWVdWystXT9cXGQrKT98MHhbXFxkYS1mQS1GXSt8MGJbMDFdKylcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpGfFR8ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvPCV8JT58W3t9W1xcXSgpXS8sXG4gICAgLy8gU29tZSBvcGVyYXRvcnMgZnJvbSB0aGUgXCJvcGVyYXRvcnNcIiBjYXRlZ29yeVxuICAgIC8vIGh0dHBzOi8vd3d3LndhcnAxMC5pby90YWdzL29wZXJhdG9yc1xuICAgIG9wZXJhdG9yOlxuICAgICAgLz09fCYmP3xcXHxcXHw/fFxcKlxcKj98Pj4+P3w8PHxbPD4hfl09P3xbLS8lXl18XFwrIT98XFxiKD86QU5EfE5PVHxPUilcXGIvXG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJ3YXJwc2NyaXB0IiwiZGlzcGxheU5hbWUiLCJhbGlhc2VzIiwiUHJpc20iLCJsYW5ndWFnZXMiLCJjb21tZW50Iiwic3RyaW5nIiwicGF0dGVybiIsImdyZWVkeSIsInZhcmlhYmxlIiwibWFjcm8iLCJhbGlhcyIsImtleXdvcmQiLCJudW1iZXIiLCJib29sZWFuIiwicHVuY3R1YXRpb24iLCJvcGVyYXRvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/warpscript.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wasm.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wasm.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wasm)\n/* harmony export */ });\n// @ts-nocheck\nwasm.displayName = \"wasm\";\nwasm.aliases = [];\n/** @type {import('../core.js').Syntax} */ function wasm(Prism) {\n    Prism.languages.wasm = {\n        comment: [\n            /\\(;[\\s\\S]*?;\\)/,\n            {\n                pattern: /;;.*/,\n                greedy: true\n            }\n        ],\n        string: {\n            pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n            greedy: true\n        },\n        keyword: [\n            {\n                pattern: /\\b(?:align|offset)=/,\n                inside: {\n                    operator: /=/\n                }\n            },\n            {\n                pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n                inside: {\n                    punctuation: /\\./\n                }\n            },\n            /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n        ],\n        variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n        number: /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n        punctuation: /[()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93YXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1A7WUFDQTtnQkFDRUMsU0FBUztnQkFDVEMsUUFBUTtZQUNWO1NBQ0Q7UUFDREMsUUFBUTtZQUNORixTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBRSxTQUFTO1lBQ1A7Z0JBQ0VILFNBQVM7Z0JBQ1RJLFFBQVE7b0JBQ05DLFVBQVU7Z0JBQ1o7WUFDRjtZQUNBO2dCQUNFTCxTQUNFO2dCQUNGSSxRQUFRO29CQUNORSxhQUFhO2dCQUNmO1lBQ0Y7WUFDQTtTQUNEO1FBQ0RDLFVBQVU7UUFDVkMsUUFDRTtRQUNGRixhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93YXNtLmpzP2ExNTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbndhc20uZGlzcGxheU5hbWUgPSAnd2FzbSdcbndhc20uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2FzbShQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMud2FzbSA9IHtcbiAgICBjb21tZW50OiBbXG4gICAgICAvXFwoO1tcXHNcXFNdKj87XFwpLyxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjogLzs7LiovLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XFxcXFtcXHNcXFNdfFteXCJcXFxcXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiBbXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC9cXGIoPzphbGlnbnxvZmZzZXQpPS8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIG9wZXJhdG9yOiAvPS9cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXFxiKD86KD86ZjMyfGY2NHxpMzJ8aTY0KSg/OlxcLig/OmFic3xhZGR8YW5kfGNlaWx8Y2x6fGNvbnN0fGNvbnZlcnRfW3N1XVxcL2koPzozMnw2NCl8Y29weXNpZ258Y3R6fGRlbW90ZVxcL2Y2NHxkaXYoPzpfW3N1XSk/fGVxej98ZXh0ZW5kX1tzdV1cXC9pMzJ8Zmxvb3J8Z2UoPzpfW3N1XSk/fGd0KD86X1tzdV0pP3xsZSg/Ol9bc3VdKT98bG9hZCg/Oig/Ojh8MTZ8MzIpX1tzdV0pP3xsdCg/Ol9bc3VdKT98bWF4fG1pbnxtdWx8bmVnP3xuZWFyZXN0fG9yfHBvcGNudHxwcm9tb3RlXFwvZjMyfHJlaW50ZXJwcmV0XFwvW2ZpXSg/OjMyfDY0KXxyZW1fW3N1XXxyb3RbbHJdfHNobHxzaHJfW3N1XXxzcXJ0fHN0b3JlKD86OHwxNnwzMik/fHN1Ynx0cnVuYyg/Ol9bc3VdXFwvZig/OjMyfDY0KSk/fHdyYXBcXC9pNjR8eG9yKSk/fG1lbW9yeVxcLig/Omdyb3d8c2l6ZSkpXFxiLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IC9cXC4vXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvXFxiKD86YW55ZnVuY3xibG9ja3xicig/Ol9pZnxfdGFibGUpP3xjYWxsKD86X2luZGlyZWN0KT98ZGF0YXxkcm9wfGVsZW18ZWxzZXxlbmR8ZXhwb3J0fGZ1bmN8Z2V0Xyg/Omdsb2JhbHxsb2NhbCl8Z2xvYmFsfGlmfGltcG9ydHxsb2NhbHxsb29wfG1lbW9yeXxtb2R1bGV8bXV0fG5vcHxvZmZzZXR8cGFyYW18cmVzdWx0fHJldHVybnxzZWxlY3R8c2V0Xyg/Omdsb2JhbHxsb2NhbCl8c3RhcnR8dGFibGV8dGVlX2xvY2FsfHRoZW58dHlwZXx1bnJlYWNoYWJsZSlcXGIvXG4gICAgXSxcbiAgICB2YXJpYWJsZTogL1xcJFtcXHchIyQlJicqK1xcLS4vOjw9Pj9AXFxcXF5gfH5dKy8sXG4gICAgbnVtYmVyOlxuICAgICAgL1srLV0/XFxiKD86XFxkKD86Xz9cXGQpKig/OlxcLlxcZCg/Ol8/XFxkKSopPyg/OltlRV1bKy1dP1xcZCg/Ol8/XFxkKSopP3wweFtcXGRhLWZBLUZdKD86Xz9bXFxkYS1mQS1GXSkqKD86XFwuW1xcZGEtZkEtRl0oPzpfP1tcXGRhLWZBLURdKSopPyg/OltwUF1bKy1dP1xcZCg/Ol8/XFxkKSopPylcXGJ8XFxiaW5mXFxifFxcYm5hbig/OjoweFtcXGRhLWZBLUZdKD86Xz9bXFxkYS1mQS1EXSkqKT9cXGIvLFxuICAgIHB1bmN0dWF0aW9uOiAvWygpXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbIndhc20iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwia2V5d29yZCIsImluc2lkZSIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJ2YXJpYWJsZSIsIm51bWJlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wasm.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/web-idl.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/web-idl.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ webIdl)\n/* harmony export */ });\n// @ts-nocheck\nwebIdl.displayName = \"web-idl\";\nwebIdl.aliases = [\n    \"webidl\"\n];\n/** @type {import('../core.js').Syntax} */ function webIdl(Prism) {\n    ;\n    (function(Prism) {\n        var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source;\n        var type = \"(?:\" + /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source + \"|\" + /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source + \"|\" + /(?!(?:unrestricted|unsigned)\\b)/.source + id + /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source + \")\" + /(?:\\s*\\?)?/.source;\n        var typeInside = {};\n        Prism.languages[\"web-idl\"] = {\n            comment: {\n                pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n                greedy: true\n            },\n            string: {\n                pattern: /\"[^\"]*\"/,\n                greedy: true\n            },\n            namespace: {\n                pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n                lookbehind: true\n            },\n            \"class-name\": [\n                {\n                    pattern: /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    pattern: RegExp(/(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source + type),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // callback return type\n                    pattern: RegExp(\"(\" + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + \")\" + type),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    // typedef\n                    pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n                    lookbehind: true,\n                    inside: typeInside\n                },\n                {\n                    pattern: RegExp(/(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/.source + id),\n                    lookbehind: true\n                },\n                {\n                    // inheritance\n                    pattern: RegExp(/(:\\s*)/.source + id),\n                    lookbehind: true\n                },\n                // includes and implements\n                RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n                {\n                    pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n                    lookbehind: true\n                },\n                {\n                    // function return type, parameter types, and dictionary members\n                    pattern: RegExp(type + \"(?=\" + /\\s*(?:\\.{3}\\s*)?/.source + id + /\\s*[(),;=]/.source + \")\"),\n                    inside: typeInside\n                }\n            ],\n            builtin: /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n            keyword: [\n                /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/,\n                // type keywords\n                /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n            ],\n            boolean: /\\b(?:false|true)\\b/,\n            number: {\n                pattern: /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n                lookbehind: true\n            },\n            operator: /\\.{3}|[=:?<>-]/,\n            punctuation: /[(){}[\\].,;]/\n        };\n        for(var key in Prism.languages[\"web-idl\"]){\n            if (key !== \"class-name\") {\n                typeInside[key] = Prism.languages[\"web-idl\"][key];\n            }\n        }\n        Prism.languages[\"webidl\"] = Prism.languages[\"web-idl\"];\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93ZWItaWRsLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLE9BQU9DLFdBQVcsR0FBRztBQUNyQkQsT0FBT0UsT0FBTyxHQUFHO0lBQUM7Q0FBUztBQUUzQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSzs7SUFDaEMsVUFBVUEsS0FBSztRQUNmLElBQUlDLEtBQUssd0NBQXdDQyxNQUFNO1FBQ3ZELElBQUlDLE9BQ0YsUUFDQSx5Q0FBeUNELE1BQU0sR0FDL0MsTUFDQSxnREFBZ0RBLE1BQU0sR0FDdEQsTUFDQSxrQ0FBa0NBLE1BQU0sR0FDeENELEtBQ0EsZ0NBQWdDQyxNQUFNLEdBQ3RDLE1BQ0EsYUFBYUEsTUFBTTtRQUNyQixJQUFJRSxhQUFhLENBQUM7UUFDbEJKLE1BQU1LLFNBQVMsQ0FBQyxVQUFVLEdBQUc7WUFDM0JDLFNBQVM7Z0JBQ1BDLFNBQVM7Z0JBQ1RDLFFBQVE7WUFDVjtZQUNBQyxRQUFRO2dCQUNORixTQUFTO2dCQUNUQyxRQUFRO1lBQ1Y7WUFDQUUsV0FBVztnQkFDVEgsU0FBU0ksT0FBTyxtQkFBbUJULE1BQU0sR0FBR0Q7Z0JBQzVDVyxZQUFZO1lBQ2Q7WUFDQSxjQUFjO2dCQUNaO29CQUNFTCxTQUNFO29CQUNGSyxZQUFZO29CQUNaQyxRQUFRVDtnQkFDVjtnQkFDQTtvQkFDRUcsU0FBU0ksT0FDUCw0REFBNERULE1BQU0sR0FDaEVDO29CQUVKUyxZQUFZO29CQUNaQyxRQUFRVDtnQkFDVjtnQkFDQTtvQkFDRSx1QkFBdUI7b0JBQ3ZCRyxTQUFTSSxPQUNQLE1BQU0sZ0JBQWdCVCxNQUFNLEdBQUdELEtBQUssVUFBVUMsTUFBTSxHQUFHLE1BQU1DO29CQUUvRFMsWUFBWTtvQkFDWkMsUUFBUVQ7Z0JBQ1Y7Z0JBQ0E7b0JBQ0UsVUFBVTtvQkFDVkcsU0FBU0ksT0FBTyxtQkFBbUJULE1BQU0sR0FBR0M7b0JBQzVDUyxZQUFZO29CQUNaQyxRQUFRVDtnQkFDVjtnQkFDQTtvQkFDRUcsU0FBU0ksT0FDUCxzRkFDR1QsTUFBTSxHQUFHRDtvQkFFZFcsWUFBWTtnQkFDZDtnQkFDQTtvQkFDRSxjQUFjO29CQUNkTCxTQUFTSSxPQUFPLFNBQVNULE1BQU0sR0FBR0Q7b0JBQ2xDVyxZQUFZO2dCQUNkO2dCQUNBLDBCQUEwQjtnQkFDMUJELE9BQU9WLEtBQUssbUNBQW1DQyxNQUFNO2dCQUNyRDtvQkFDRUssU0FBU0ksT0FBTyxpQ0FBaUNULE1BQU0sR0FBR0Q7b0JBQzFEVyxZQUFZO2dCQUNkO2dCQUNBO29CQUNFLGdFQUFnRTtvQkFDaEVMLFNBQVNJLE9BQ1BSLE9BQ0UsUUFDQSxtQkFBbUJELE1BQU0sR0FDekJELEtBQ0EsYUFBYUMsTUFBTSxHQUNuQjtvQkFFSlcsUUFBUVQ7Z0JBQ1Y7YUFDRDtZQUNEVSxTQUNFO1lBQ0ZDLFNBQVM7Z0JBQ1A7Z0JBQ0EsZ0JBQWdCO2dCQUNoQjthQUNEO1lBQ0RDLFNBQVM7WUFDVEMsUUFBUTtnQkFDTlYsU0FDRTtnQkFDRkssWUFBWTtZQUNkO1lBQ0FNLFVBQVU7WUFDVkMsYUFBYTtRQUNmO1FBQ0EsSUFBSyxJQUFJQyxPQUFPcEIsTUFBTUssU0FBUyxDQUFDLFVBQVUsQ0FBRTtZQUMxQyxJQUFJZSxRQUFRLGNBQWM7Z0JBQ3hCaEIsVUFBVSxDQUFDZ0IsSUFBSSxHQUFHcEIsTUFBTUssU0FBUyxDQUFDLFVBQVUsQ0FBQ2UsSUFBSTtZQUNuRDtRQUNGO1FBQ0FwQixNQUFNSyxTQUFTLENBQUMsU0FBUyxHQUFHTCxNQUFNSyxTQUFTLENBQUMsVUFBVTtJQUN4RCxHQUFHTDtBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dlYi1pZGwuanM/NmZmNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xud2ViSWRsLmRpc3BsYXlOYW1lID0gJ3dlYi1pZGwnXG53ZWJJZGwuYWxpYXNlcyA9IFsnd2ViaWRsJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3ZWJJZGwoUHJpc20pIHtcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICB2YXIgaWQgPSAvKD86XFxCLXxcXGJffFxcYilbQS1aYS16XVtcXHctXSooPyFbXFx3LV0pLy5zb3VyY2VcbiAgICB2YXIgdHlwZSA9XG4gICAgICAnKD86JyArXG4gICAgICAvXFxiKD86dW5zaWduZWRcXHMrKT9sb25nXFxzK2xvbmcoPyFbXFx3LV0pLy5zb3VyY2UgK1xuICAgICAgJ3wnICtcbiAgICAgIC9cXGIoPzp1bnJlc3RyaWN0ZWR8dW5zaWduZWQpXFxzK1thLXpdKyg/IVtcXHctXSkvLnNvdXJjZSArXG4gICAgICAnfCcgK1xuICAgICAgLyg/ISg/OnVucmVzdHJpY3RlZHx1bnNpZ25lZClcXGIpLy5zb3VyY2UgK1xuICAgICAgaWQgK1xuICAgICAgLyg/Olxccyo8KD86W148Pl18PFtePD5dKj4pKj4pPy8uc291cmNlICtcbiAgICAgICcpJyArXG4gICAgICAvKD86XFxzKlxcPyk/Ly5zb3VyY2VcbiAgICB2YXIgdHlwZUluc2lkZSA9IHt9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWyd3ZWItaWRsJ10gPSB7XG4gICAgICBjb21tZW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXC9cXC8uKnxcXC9cXCpbXFxzXFxTXSo/XFwqXFwvLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgc3RyaW5nOiB7XG4gICAgICAgIHBhdHRlcm46IC9cIlteXCJdKlwiLyxcbiAgICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgICB9LFxuICAgICAgbmFtZXNwYWNlOiB7XG4gICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKFxcYm5hbWVzcGFjZVxccyspLy5zb3VyY2UgKyBpZCksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAnY2xhc3MtbmFtZSc6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgICAvKF58W15cXHctXSkoPzppdGVyYWJsZXxtYXBsaWtlfHNldGxpa2UpXFxzKjwoPzpbXjw+XXw8W148Pl0qPikqPi8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oXFxiKD86YXR0cmlidXRlfGNvbnN0fGRlbGV0ZXJ8Z2V0dGVyfG9wdGlvbmFsfHNldHRlcilcXHMrKS8uc291cmNlICtcbiAgICAgICAgICAgICAgdHlwZVxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGNhbGxiYWNrIHJldHVybiB0eXBlXG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKFxuICAgICAgICAgICAgJygnICsgL1xcYmNhbGxiYWNrXFxzKy8uc291cmNlICsgaWQgKyAvXFxzKj1cXHMqLy5zb3VyY2UgKyAnKScgKyB0eXBlXG4gICAgICAgICAgKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICAgIGluc2lkZTogdHlwZUluc2lkZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gdHlwZWRlZlxuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cCgvKFxcYnR5cGVkZWZcXGJcXHMqKS8uc291cmNlICsgdHlwZSksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBpbnNpZGU6IHR5cGVJbnNpZGVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdHRlcm46IFJlZ0V4cChcbiAgICAgICAgICAgIC8oXFxiKD86Y2FsbGJhY2t8ZGljdGlvbmFyeXxlbnVtfGludGVyZmFjZSg/OlxccyttaXhpbik/KVxccyspKD8hKD86aW50ZXJmYWNlfG1peGluKVxcYikvXG4gICAgICAgICAgICAgIC5zb3VyY2UgKyBpZFxuICAgICAgICAgICksXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgLy8gaW5oZXJpdGFuY2VcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoLyg6XFxzKikvLnNvdXJjZSArIGlkKSxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIC8vIGluY2x1ZGVzIGFuZCBpbXBsZW1lbnRzXG4gICAgICAgIFJlZ0V4cChpZCArIC8oPz1cXHMrKD86aW1wbGVtZW50c3xpbmNsdWRlcylcXGIpLy5zb3VyY2UpLFxuICAgICAgICB7XG4gICAgICAgICAgcGF0dGVybjogUmVnRXhwKC8oXFxiKD86aW1wbGVtZW50c3xpbmNsdWRlcylcXHMrKS8uc291cmNlICsgaWQpLFxuICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIC8vIGZ1bmN0aW9uIHJldHVybiB0eXBlLCBwYXJhbWV0ZXIgdHlwZXMsIGFuZCBkaWN0aW9uYXJ5IG1lbWJlcnNcbiAgICAgICAgICBwYXR0ZXJuOiBSZWdFeHAoXG4gICAgICAgICAgICB0eXBlICtcbiAgICAgICAgICAgICAgJyg/PScgK1xuICAgICAgICAgICAgICAvXFxzKig/OlxcLnszfVxccyopPy8uc291cmNlICtcbiAgICAgICAgICAgICAgaWQgK1xuICAgICAgICAgICAgICAvXFxzKlsoKSw7PV0vLnNvdXJjZSArXG4gICAgICAgICAgICAgICcpJ1xuICAgICAgICAgICksXG4gICAgICAgICAgaW5zaWRlOiB0eXBlSW5zaWRlXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBidWlsdGluOlxuICAgICAgICAvXFxiKD86QXJyYXlCdWZmZXJ8QmlnSW50NjRBcnJheXxCaWdVaW50NjRBcnJheXxCeXRlU3RyaW5nfERPTVN0cmluZ3xEYXRhVmlld3xGbG9hdDMyQXJyYXl8RmxvYXQ2NEFycmF5fEZyb3plbkFycmF5fEludDE2QXJyYXl8SW50MzJBcnJheXxJbnQ4QXJyYXl8T2JzZXJ2YWJsZUFycmF5fFByb21pc2V8VVNWU3RyaW5nfFVpbnQxNkFycmF5fFVpbnQzMkFycmF5fFVpbnQ4QXJyYXl8VWludDhDbGFtcGVkQXJyYXkpXFxiLyxcbiAgICAgIGtleXdvcmQ6IFtcbiAgICAgICAgL1xcYig/OmFzeW5jfGF0dHJpYnV0ZXxjYWxsYmFja3xjb25zdHxjb25zdHJ1Y3RvcnxkZWxldGVyfGRpY3Rpb25hcnl8ZW51bXxnZXR0ZXJ8aW1wbGVtZW50c3xpbmNsdWRlc3xpbmhlcml0fGludGVyZmFjZXxtaXhpbnxuYW1lc3BhY2V8bnVsbHxvcHRpb25hbHxvcnxwYXJ0aWFsfHJlYWRvbmx5fHJlcXVpcmVkfHNldHRlcnxzdGF0aWN8c3RyaW5naWZpZXJ8dHlwZWRlZnx1bnJlc3RyaWN0ZWQpXFxiLyxcbiAgICAgICAgLy8gdHlwZSBrZXl3b3Jkc1xuICAgICAgICAvXFxiKD86YW55fGJpZ2ludHxib29sZWFufGJ5dGV8ZG91YmxlfGZsb2F0fGl0ZXJhYmxlfGxvbmd8bWFwbGlrZXxvYmplY3R8b2N0ZXR8cmVjb3JkfHNlcXVlbmNlfHNldGxpa2V8c2hvcnR8c3ltYm9sfHVuZGVmaW5lZHx1bnNpZ25lZHx2b2lkKVxcYi9cbiAgICAgIF0sXG4gICAgICBib29sZWFuOiAvXFxiKD86ZmFsc2V8dHJ1ZSlcXGIvLFxuICAgICAgbnVtYmVyOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLyhefFteXFx3LV0pLT8oPzoweFswLTlhLWZdK3woPzpcXGQrKD86XFwuXFxkKik/fFxcLlxcZCspKD86ZVsrLV0/XFxkKyk/fE5hTnxJbmZpbml0eSkoPyFbXFx3LV0pL2ksXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICBvcGVyYXRvcjogL1xcLnszfXxbPTo/PD4tXS8sXG4gICAgICBwdW5jdHVhdGlvbjogL1soKXt9W1xcXS4sO10vXG4gICAgfVxuICAgIGZvciAodmFyIGtleSBpbiBQcmlzbS5sYW5ndWFnZXNbJ3dlYi1pZGwnXSkge1xuICAgICAgaWYgKGtleSAhPT0gJ2NsYXNzLW5hbWUnKSB7XG4gICAgICAgIHR5cGVJbnNpZGVba2V5XSA9IFByaXNtLmxhbmd1YWdlc1snd2ViLWlkbCddW2tleV1cbiAgICAgIH1cbiAgICB9XG4gICAgUHJpc20ubGFuZ3VhZ2VzWyd3ZWJpZGwnXSA9IFByaXNtLmxhbmd1YWdlc1snd2ViLWlkbCddXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbIndlYklkbCIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwiaWQiLCJzb3VyY2UiLCJ0eXBlIiwidHlwZUluc2lkZSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwibmFtZXNwYWNlIiwiUmVnRXhwIiwibG9va2JlaGluZCIsImluc2lkZSIsImJ1aWx0aW4iLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsIm9wZXJhdG9yIiwicHVuY3R1YXRpb24iLCJrZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/web-idl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wgsl.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wgsl.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wgsl)\n/* harmony export */ });\n// @ts-nocheck\nwgsl.displayName = \"wgsl\";\nwgsl.aliases = [];\n/** @type {import('../core.js').Syntax} */ function wgsl(Prism) {\n    Prism.languages.wgsl = {\n        comment: {\n            pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n            greedy: true\n        },\n        \"builtin-attribute\": {\n            pattern: /(@)builtin\\(.*?\\)/,\n            lookbehind: true,\n            inside: {\n                attribute: {\n                    pattern: /^builtin/,\n                    alias: \"attr-name\"\n                },\n                punctuation: /[(),]/,\n                \"built-in-values\": {\n                    pattern: /\\b(?:frag_depth|front_facing|global_invocation_id|instance_index|local_invocation_id|local_invocation_index|num_workgroups|position|sample_index|sample_mask|vertex_index|workgroup_id)\\b/,\n                    alias: \"attr-value\"\n                }\n            }\n        },\n        attributes: {\n            pattern: /(@)(?:align|binding|compute|const|fragment|group|id|interpolate|invariant|location|size|vertex|workgroup_size)/i,\n            lookbehind: true,\n            alias: \"attr-name\"\n        },\n        functions: {\n            pattern: /\\b(fn\\s+)[_a-zA-Z]\\w*(?=[(<])/,\n            lookbehind: true,\n            alias: \"function\"\n        },\n        keyword: /\\b(?:bitcast|break|case|const|continue|continuing|default|discard|else|enable|fallthrough|fn|for|function|if|let|loop|private|return|storage|struct|switch|type|uniform|var|while|workgroup)\\b/,\n        builtin: /\\b(?:abs|acos|acosh|all|any|array|asin|asinh|atan|atan2|atanh|atomic|atomicAdd|atomicAnd|atomicCompareExchangeWeak|atomicExchange|atomicLoad|atomicMax|atomicMin|atomicOr|atomicStore|atomicSub|atomicXor|bool|ceil|clamp|cos|cosh|countLeadingZeros|countOneBits|countTrailingZeros|cross|degrees|determinant|distance|dot|dpdx|dpdxCoarse|dpdxFine|dpdy|dpdyCoarse|dpdyFine|exp|exp2|extractBits|f32|f64|faceForward|firstLeadingBit|floor|fma|fract|frexp|fwidth|fwidthCoarse|fwidthFine|i32|i64|insertBits|inverseSqrt|ldexp|length|log|log2|mat[2-4]x[2-4]|max|min|mix|modf|normalize|override|pack2x16float|pack2x16snorm|pack2x16unorm|pack4x8snorm|pack4x8unorm|pow|ptr|quantizeToF16|radians|reflect|refract|reverseBits|round|sampler|sampler_comparison|select|shiftLeft|shiftRight|sign|sin|sinh|smoothstep|sqrt|staticAssert|step|storageBarrier|tan|tanh|textureDimensions|textureGather|textureGatherCompare|textureLoad|textureNumLayers|textureNumLevels|textureNumSamples|textureSample|textureSampleBias|textureSampleCompare|textureSampleCompareLevel|textureSampleGrad|textureSampleLevel|textureStore|texture_1d|texture_2d|texture_2d_array|texture_3d|texture_cube|texture_cube_array|texture_depth_2d|texture_depth_2d_array|texture_depth_cube|texture_depth_cube_array|texture_depth_multisampled_2d|texture_multisampled_2d|texture_storage_1d|texture_storage_2d|texture_storage_2d_array|texture_storage_3d|transpose|trunc|u32|u64|unpack2x16float|unpack2x16snorm|unpack2x16unorm|unpack4x8snorm|unpack4x8unorm|vec[2-4]|workgroupBarrier)\\b/,\n        \"function-calls\": {\n            pattern: /\\b[_a-z]\\w*(?=\\()/i,\n            alias: \"function\"\n        },\n        \"class-name\": /\\b(?:[A-Z][A-Za-z0-9]*)\\b/,\n        \"bool-literal\": {\n            pattern: /\\b(?:false|true)\\b/,\n            alias: \"boolean\"\n        },\n        \"hex-int-literal\": {\n            pattern: /\\b0[xX][0-9a-fA-F]+[iu]?\\b(?![.pP])/,\n            alias: \"number\"\n        },\n        \"hex-float-literal\": {\n            pattern: /\\b0[xX][0-9a-fA-F]*(?:\\.[0-9a-fA-F]*)?(?:[pP][+-]?\\d+[fh]?)?/,\n            alias: \"number\"\n        },\n        \"decimal-float-literal\": [\n            {\n                pattern: /\\d*\\.\\d+(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n                alias: \"number\"\n            },\n            {\n                pattern: /\\d+\\.\\d*(?:[eE](?:\\+|-)?\\d+)?[fh]?/,\n                alias: \"number\"\n            },\n            {\n                pattern: /\\d+[eE](?:\\+|-)?\\d+[fh]?/,\n                alias: \"number\"\n            },\n            {\n                pattern: /\\b\\d+[fh]\\b/,\n                alias: \"number\"\n            }\n        ],\n        \"int-literal\": {\n            pattern: /\\b\\d+[iu]?\\b/,\n            alias: \"number\"\n        },\n        operator: [\n            {\n                pattern: /(?:\\^|~|\\|(?!\\|)|\\|\\||&&|<<|>>|!)(?!=)/\n            },\n            {\n                pattern: /&(?![&=])/\n            },\n            {\n                pattern: /(?:\\+=|-=|\\*=|\\/=|%=|\\^=|&=|\\|=|<<=|>>=)/\n            },\n            {\n                pattern: /(^|[^<>=!])=(?![=>])/,\n                lookbehind: true\n            },\n            {\n                pattern: /(?:==|!=|<=|\\+\\+|--|(^|[^=])>=)/,\n                lookbehind: true\n            },\n            {\n                pattern: /(?:(?:[+%]|(?:\\*(?!\\w)))(?!=))|(?:-(?!>))|(?:\\/(?!\\/))/\n            },\n            {\n                pattern: /->/\n            }\n        ],\n        punctuation: /[@(){}[\\],;<>:.]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wgsl.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wiki.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wiki.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wiki)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nwiki.displayName = \"wiki\";\nwiki.aliases = [];\n/** @type {import('../core.js').Syntax} */ function wiki(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    Prism.languages.wiki = Prism.languages.extend(\"markup\", {\n        \"block-comment\": {\n            pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n            lookbehind: true,\n            alias: \"comment\"\n        },\n        heading: {\n            pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n            inside: {\n                punctuation: /^=+|=+$/,\n                important: /.+/\n            }\n        },\n        emphasis: {\n            // TODO Multi-line\n            pattern: /('{2,5}).+?\\1/,\n            inside: {\n                \"bold-italic\": {\n                    pattern: /(''''').+?(?=\\1)/,\n                    lookbehind: true,\n                    alias: [\n                        \"bold\",\n                        \"italic\"\n                    ]\n                },\n                bold: {\n                    pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n                    lookbehind: true\n                },\n                italic: {\n                    pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n                    lookbehind: true\n                },\n                punctuation: /^''+|''+$/\n            }\n        },\n        hr: {\n            pattern: /^-{4,}/m,\n            alias: \"punctuation\"\n        },\n        url: [\n            /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n            /\\[\\[.+?\\]\\]|\\[.+?\\]/\n        ],\n        variable: [\n            /__[A-Z]+__/,\n            // FIXME Nested structures should be handled\n            // {{formatnum:{{#expr:{{{3}}}}}}}\n            /\\{{3}.+?\\}{3}/,\n            /\\{\\{.+?\\}\\}/\n        ],\n        symbol: [\n            /^#redirect/im,\n            /~{3,5}/\n        ],\n        // Handle table attrs:\n        // {|\n        // ! style=\"text-align:left;\"| Item\n        // |}\n        \"table-tag\": {\n            pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n            lookbehind: true,\n            inside: {\n                \"table-bar\": {\n                    pattern: /\\|$/,\n                    alias: \"punctuation\"\n                },\n                rest: Prism.languages.markup[\"tag\"].inside\n            }\n        },\n        punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n    });\n    Prism.languages.insertBefore(\"wiki\", \"tag\", {\n        // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n        nowiki: {\n            pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n            inside: {\n                tag: {\n                    pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n                    inside: Prism.languages.markup[\"tag\"].inside\n                }\n            }\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93aWtpLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUMyQjtBQUN6Q0MsS0FBS0MsV0FBVyxHQUFHO0FBQ25CRCxLQUFLRSxPQUFPLEdBQUcsRUFBRTtBQUVqQix3Q0FBd0MsR0FDekIsU0FBU0YsS0FBS0csS0FBSztJQUNoQ0EsTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDOUJJLE1BQU1FLFNBQVMsQ0FBQ0wsSUFBSSxHQUFHRyxNQUFNRSxTQUFTLENBQUNDLE1BQU0sQ0FBQyxVQUFVO1FBQ3RELGlCQUFpQjtZQUNmQyxTQUFTO1lBQ1RDLFlBQVk7WUFDWkMsT0FBTztRQUNUO1FBQ0FDLFNBQVM7WUFDUEgsU0FBUztZQUNUSSxRQUFRO2dCQUNOQyxhQUFhO2dCQUNiQyxXQUFXO1lBQ2I7UUFDRjtRQUNBQyxVQUFVO1lBQ1Isa0JBQWtCO1lBQ2xCUCxTQUFTO1lBQ1RJLFFBQVE7Z0JBQ04sZUFBZTtvQkFDYkosU0FBUztvQkFDVEMsWUFBWTtvQkFDWkMsT0FBTzt3QkFBQzt3QkFBUTtxQkFBUztnQkFDM0I7Z0JBQ0FNLE1BQU07b0JBQ0pSLFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0FRLFFBQVE7b0JBQ05ULFNBQVM7b0JBQ1RDLFlBQVk7Z0JBQ2Q7Z0JBQ0FJLGFBQWE7WUFDZjtRQUNGO1FBQ0FLLElBQUk7WUFDRlYsU0FBUztZQUNURSxPQUFPO1FBQ1Q7UUFDQVMsS0FBSztZQUNIO1lBQ0E7U0FDRDtRQUNEQyxVQUFVO1lBQ1I7WUFDQSw0Q0FBNEM7WUFDNUMsa0NBQWtDO1lBQ2xDO1lBQ0E7U0FDRDtRQUNEQyxRQUFRO1lBQUM7WUFBZ0I7U0FBUztRQUNsQyxzQkFBc0I7UUFDdEIsS0FBSztRQUNMLG1DQUFtQztRQUNuQyxLQUFLO1FBQ0wsYUFBYTtZQUNYYixTQUFTO1lBQ1RDLFlBQVk7WUFDWkcsUUFBUTtnQkFDTixhQUFhO29CQUNYSixTQUFTO29CQUNURSxPQUFPO2dCQUNUO2dCQUNBWSxNQUFNbEIsTUFBTUUsU0FBUyxDQUFDaUIsTUFBTSxDQUFDLE1BQU0sQ0FBQ1gsTUFBTTtZQUM1QztRQUNGO1FBQ0FDLGFBQWE7SUFDZjtJQUNBVCxNQUFNRSxTQUFTLENBQUNrQixZQUFZLENBQUMsUUFBUSxPQUFPO1FBQzFDLGdFQUFnRTtRQUNoRUMsUUFBUTtZQUNOakIsU0FBUztZQUNUSSxRQUFRO2dCQUNOYyxLQUFLO29CQUNIbEIsU0FBUztvQkFDVEksUUFBUVIsTUFBTUUsU0FBUyxDQUFDaUIsTUFBTSxDQUFDLE1BQU0sQ0FBQ1gsTUFBTTtnQkFDOUM7WUFDRjtRQUNGO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93aWtpLmpzPzUyNGIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JNYXJrdXAgZnJvbSAnLi9tYXJrdXAuanMnXG53aWtpLmRpc3BsYXlOYW1lID0gJ3dpa2knXG53aWtpLmFsaWFzZXMgPSBbXVxuXG4vKiogQHR5cGUge2ltcG9ydCgnLi4vY29yZS5qcycpLlN5bnRheH0gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHdpa2koUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwKVxuICBQcmlzbS5sYW5ndWFnZXMud2lraSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ21hcmt1cCcsIHtcbiAgICAnYmxvY2stY29tbWVudCc6IHtcbiAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFxdKVxcL1xcKltcXHNcXFNdKj9cXCpcXC8vLFxuICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnY29tbWVudCdcbiAgICB9LFxuICAgIGhlYWRpbmc6IHtcbiAgICAgIHBhdHRlcm46IC9eKD0rKVtePVxcclxcbl0uKj9cXDEvbSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICBwdW5jdHVhdGlvbjogL149K3w9KyQvLFxuICAgICAgICBpbXBvcnRhbnQ6IC8uKy9cbiAgICAgIH1cbiAgICB9LFxuICAgIGVtcGhhc2lzOiB7XG4gICAgICAvLyBUT0RPIE11bHRpLWxpbmVcbiAgICAgIHBhdHRlcm46IC8oJ3syLDV9KS4rP1xcMS8sXG4gICAgICBpbnNpZGU6IHtcbiAgICAgICAgJ2JvbGQtaXRhbGljJzoge1xuICAgICAgICAgIHBhdHRlcm46IC8oJycnJycpLis/KD89XFwxKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICAgICAgICBhbGlhczogWydib2xkJywgJ2l0YWxpYyddXG4gICAgICAgIH0sXG4gICAgICAgIGJvbGQ6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCcnJylbXiddKD86Lio/W14nXSk/KD89XFwxKS8sXG4gICAgICAgICAgbG9va2JlaGluZDogdHJ1ZVxuICAgICAgICB9LFxuICAgICAgICBpdGFsaWM6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvKCcnKVteJ10oPzouKj9bXiddKT8oPz1cXDEpLyxcbiAgICAgICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHB1bmN0dWF0aW9uOiAvXicnK3wnJyskL1xuICAgICAgfVxuICAgIH0sXG4gICAgaHI6IHtcbiAgICAgIHBhdHRlcm46IC9eLXs0LH0vbSxcbiAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgfSxcbiAgICB1cmw6IFtcbiAgICAgIC9JU0JOICsoPzo5N1s4OV1bIC1dPyk/KD86XFxkWyAtXT8pezl9W1xcZHhdXFxifCg/OlBNSUR8UkZDKSArXFxkKy9pLFxuICAgICAgL1xcW1xcWy4rP1xcXVxcXXxcXFsuKz9cXF0vXG4gICAgXSxcbiAgICB2YXJpYWJsZTogW1xuICAgICAgL19fW0EtWl0rX18vLFxuICAgICAgLy8gRklYTUUgTmVzdGVkIHN0cnVjdHVyZXMgc2hvdWxkIGJlIGhhbmRsZWRcbiAgICAgIC8vIHt7Zm9ybWF0bnVtOnt7I2V4cHI6e3t7M319fX19fX1cbiAgICAgIC9cXHt7M30uKz9cXH17M30vLFxuICAgICAgL1xce1xcey4rP1xcfVxcfS9cbiAgICBdLFxuICAgIHN5bWJvbDogWy9eI3JlZGlyZWN0L2ltLCAvfnszLDV9L10sXG4gICAgLy8gSGFuZGxlIHRhYmxlIGF0dHJzOlxuICAgIC8vIHt8XG4gICAgLy8gISBzdHlsZT1cInRleHQtYWxpZ246bGVmdDtcInwgSXRlbVxuICAgIC8vIHx9XG4gICAgJ3RhYmxlLXRhZyc6IHtcbiAgICAgIHBhdHRlcm46IC8oKD86XnxbfCFdKVt8IV0pW158XFxyXFxuXStcXHwoPyFcXHwpL20sXG4gICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgaW5zaWRlOiB7XG4gICAgICAgICd0YWJsZS1iYXInOiB7XG4gICAgICAgICAgcGF0dGVybjogL1xcfCQvLFxuICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3Q6IFByaXNtLmxhbmd1YWdlcy5tYXJrdXBbJ3RhZyddLmluc2lkZVxuICAgICAgfVxuICAgIH0sXG4gICAgcHVuY3R1YXRpb246IC9eKD86XFx7XFx8fFxcfFxcfXxcXHwtfFsqIzo7IXxdKXxcXHxcXHx8ISEvbVxuICB9KVxuICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKCd3aWtpJywgJ3RhZycsIHtcbiAgICAvLyBQcmV2ZW50IGhpZ2hsaWdodGluZyBpbnNpZGUgPG5vd2lraT4sIDxzb3VyY2U+IGFuZCA8cHJlPiB0YWdzXG4gICAgbm93aWtpOiB7XG4gICAgICBwYXR0ZXJuOiAvPChub3dpa2l8cHJlfHNvdXJjZSlcXGJbXj5dKj5bXFxzXFxTXSo/PFxcL1xcMT4vaSxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHtcbiAgICAgICAgICBwYXR0ZXJuOiAvPCg/Om5vd2lraXxwcmV8c291cmNlKVxcYltePl0qPnw8XFwvKD86bm93aWtpfHByZXxzb3VyY2UpPi9pLFxuICAgICAgICAgIGluc2lkZTogUHJpc20ubGFuZ3VhZ2VzLm1hcmt1cFsndGFnJ10uaW5zaWRlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG59XG4iXSwibmFtZXMiOlsicmVmcmFjdG9yTWFya3VwIiwid2lraSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJwYXR0ZXJuIiwibG9va2JlaGluZCIsImFsaWFzIiwiaGVhZGluZyIsImluc2lkZSIsInB1bmN0dWF0aW9uIiwiaW1wb3J0YW50IiwiZW1waGFzaXMiLCJib2xkIiwiaXRhbGljIiwiaHIiLCJ1cmwiLCJ2YXJpYWJsZSIsInN5bWJvbCIsInJlc3QiLCJtYXJrdXAiLCJpbnNlcnRCZWZvcmUiLCJub3dpa2kiLCJ0YWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wiki.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wolfram.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wolfram.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wolfram)\n/* harmony export */ });\n// @ts-nocheck\nwolfram.displayName = \"wolfram\";\nwolfram.aliases = [\n    \"mathematica\",\n    \"nb\",\n    \"wl\"\n];\n/** @type {import('../core.js').Syntax} */ function wolfram(Prism) {\n    Prism.languages.wolfram = {\n        comment: // Allow one level of nesting - note: regex taken from applescipt\n        /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n        string: {\n            pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n            greedy: true\n        },\n        keyword: /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n        context: {\n            pattern: /\\b\\w+`+\\w*/,\n            alias: \"class-name\"\n        },\n        blank: {\n            pattern: /\\b\\w+_\\b/,\n            alias: \"regex\"\n        },\n        \"global-variable\": {\n            pattern: /\\$\\w+/,\n            alias: \"variable\"\n        },\n        boolean: /\\b(?:False|True)\\b/,\n        number: /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n        operator: /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n        punctuation: /[{}[\\];(),.:]/\n    };\n    Prism.languages.mathematica = Prism.languages.wolfram;\n    Prism.languages.wl = Prism.languages.wolfram;\n    Prism.languages.nb = Prism.languages.wolfram;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93b2xmcmFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLFFBQVFDLFdBQVcsR0FBRztBQUN0QkQsUUFBUUUsT0FBTyxHQUFHO0lBQUM7SUFBZTtJQUFNO0NBQUs7QUFFN0Msd0NBQXdDLEdBQ3pCLFNBQVNGLFFBQVFHLEtBQUs7SUFDbkNBLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTyxHQUFHO1FBQ3hCSyxTQUNFLGlFQUFpRTtRQUNqRTtRQUNGQyxRQUFRO1lBQ05DLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFNBQ0U7UUFDRkMsU0FBUztZQUNQSCxTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBQyxPQUFPO1lBQ0xMLFNBQVM7WUFDVEksT0FBTztRQUNUO1FBQ0EsbUJBQW1CO1lBQ2pCSixTQUFTO1lBQ1RJLE9BQU87UUFDVDtRQUNBRSxTQUFTO1FBQ1RDLFFBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7SUFDQWIsTUFBTUMsU0FBUyxDQUFDYSxXQUFXLEdBQUdkLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTztJQUNyREcsTUFBTUMsU0FBUyxDQUFDYyxFQUFFLEdBQUdmLE1BQU1DLFNBQVMsQ0FBQ0osT0FBTztJQUM1Q0csTUFBTUMsU0FBUyxDQUFDZSxFQUFFLEdBQUdoQixNQUFNQyxTQUFTLENBQUNKLE9BQU87QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcvd29sZnJhbS5qcz9iNDIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG53b2xmcmFtLmRpc3BsYXlOYW1lID0gJ3dvbGZyYW0nXG53b2xmcmFtLmFsaWFzZXMgPSBbJ21hdGhlbWF0aWNhJywgJ25iJywgJ3dsJ11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3b2xmcmFtKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy53b2xmcmFtID0ge1xuICAgIGNvbW1lbnQ6XG4gICAgICAvLyBBbGxvdyBvbmUgbGV2ZWwgb2YgbmVzdGluZyAtIG5vdGU6IHJlZ2V4IHRha2VuIGZyb20gYXBwbGVzY2lwdFxuICAgICAgL1xcKFxcKig/OlxcKFxcKig/OlteKl18XFwqKD8hXFwpKSkqXFwqXFwpfCg/IVxcKFxcKilbXFxzXFxTXSkqP1xcKlxcKS8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpcXFxcLnxbXlwiXFxcXFxcclxcbl0pKlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZVxuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzpBYnN8QWJzQXJnfEFjY3VyYWN5fEJsb2NrfERvfEZvcnxGdW5jdGlvbnxJZnxNYW5pcHVsYXRlfE1vZHVsZXxOZXN0fE5lc3RMaXN0fE5vbmV8UmV0dXJufFN3aXRjaHxUYWJsZXxXaGljaHxXaGlsZSlcXGIvLFxuICAgIGNvbnRleHQ6IHtcbiAgICAgIHBhdHRlcm46IC9cXGJcXHcrYCtcXHcqLyxcbiAgICAgIGFsaWFzOiAnY2xhc3MtbmFtZSdcbiAgICB9LFxuICAgIGJsYW5rOiB7XG4gICAgICBwYXR0ZXJuOiAvXFxiXFx3K19cXGIvLFxuICAgICAgYWxpYXM6ICdyZWdleCdcbiAgICB9LFxuICAgICdnbG9iYWwtdmFyaWFibGUnOiB7XG4gICAgICBwYXR0ZXJuOiAvXFwkXFx3Ky8sXG4gICAgICBhbGlhczogJ3ZhcmlhYmxlJ1xuICAgIH0sXG4gICAgYm9vbGVhbjogL1xcYig/OkZhbHNlfFRydWUpXFxiLyxcbiAgICBudW1iZXI6XG4gICAgICAvKD86XFxiKD89XFxkKXxcXEIoPz1cXC4pKSg/OjBbYm9dKT8oPzooPzpcXGR8MHhbXFxkYS1mXSlbXFxkYS1mXSooPzpcXC5cXGQqKT98XFwuXFxkKykoPzplWystXT9cXGQrKT9qP1xcYi9pLFxuICAgIG9wZXJhdG9yOlxuICAgICAgL1xcL1xcLnw7fD1cXC58XFxePXxcXF46PXw6PXw8PHw+Pnw8XFx8fFxcfD58Oj58XFx8LT58LT58PC18QEBAfEBAfEB8XFwvQHw9IT18PT09fD09fD18XFwrfC18XFxbXFwvLSslPVxcXT0/fCE9fFxcKlxcKj89P3xcXC9cXC8/PT98PFs8PT5dP3w+Wz0+XT98WyZ8Xn5dLyxcbiAgICBwdW5jdHVhdGlvbjogL1t7fVtcXF07KCksLjpdL1xuICB9XG4gIFByaXNtLmxhbmd1YWdlcy5tYXRoZW1hdGljYSA9IFByaXNtLmxhbmd1YWdlcy53b2xmcmFtXG4gIFByaXNtLmxhbmd1YWdlcy53bCA9IFByaXNtLmxhbmd1YWdlcy53b2xmcmFtXG4gIFByaXNtLmxhbmd1YWdlcy5uYiA9IFByaXNtLmxhbmd1YWdlcy53b2xmcmFtXG59XG4iXSwibmFtZXMiOlsid29sZnJhbSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwiY29udGV4dCIsImFsaWFzIiwiYmxhbmsiLCJib29sZWFuIiwibnVtYmVyIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsIm1hdGhlbWF0aWNhIiwid2wiLCJuYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wolfram.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wren.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wren.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ wren)\n/* harmony export */ });\n// @ts-nocheck\nwren.displayName = \"wren\";\nwren.aliases = [];\n/** @type {import('../core.js').Syntax} */ function wren(Prism) {\n    // https://wren.io/\n    Prism.languages.wren = {\n        // Multiline comments in Wren can have nested multiline comments\n        // Comments: // and /* */\n        comment: [\n            {\n                // support 3 levels of nesting\n                // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n                pattern: /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n                greedy: true\n            },\n            {\n                pattern: /(^|[^\\\\:])\\/\\/.*/,\n                lookbehind: true,\n                greedy: true\n            }\n        ],\n        // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n        // Based on prism-python.js\n        \"triple-quoted-string\": {\n            pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n            greedy: true,\n            alias: \"string\"\n        },\n        // see below\n        \"string-literal\": null,\n        // #!/usr/bin/env wren on the first line\n        hashbang: {\n            pattern: /^#!\\/.+/,\n            greedy: true,\n            alias: \"comment\"\n        },\n        // Attributes are special keywords to add meta data to classes\n        attribute: {\n            // #! attributes are stored in class properties\n            // #!myvar = true\n            // #attributes are not stored and dismissed at compilation\n            pattern: /#!?[ \\t\\u3000]*\\w+/,\n            alias: \"keyword\"\n        },\n        \"class-name\": [\n            {\n                // class definition\n                // class Meta {}\n                pattern: /(\\bclass\\s+)\\w+/,\n                lookbehind: true\n            },\n            // A class must always start with an uppercase.\n            // File.read\n            /\\b[A-Z][a-z\\d_]*\\b/\n        ],\n        // A constant can be a variable, class, property or method. Just named in all uppercase letters\n        constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n        null: {\n            pattern: /\\bnull\\b/,\n            alias: \"keyword\"\n        },\n        keyword: /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n        // Functions can be Class.method()\n        function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n        operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n        punctuation: /[\\[\\](){}.,;]/\n    };\n    Prism.languages.wren[\"string-literal\"] = {\n        // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n        pattern: /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n            interpolation: {\n                // \"%(interpolation)\"\n                pattern: /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n                lookbehind: true,\n                inside: {\n                    expression: {\n                        pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n                        lookbehind: true,\n                        inside: Prism.languages.wren\n                    },\n                    \"interpolation-punctuation\": {\n                        pattern: /^%\\(|\\)$/,\n                        alias: \"punctuation\"\n                    }\n                }\n            },\n            string: /[\\s\\S]+/\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy93cmVuLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaEMsbUJBQW1CO0lBRW5CQSxNQUFNQyxTQUFTLENBQUNKLElBQUksR0FBRztRQUNyQixnRUFBZ0U7UUFDaEUseUJBQXlCO1FBQ3pCSyxTQUFTO1lBQ1A7Z0JBQ0UsOEJBQThCO2dCQUM5QixxREFBcUQ7Z0JBQ3JEQyxTQUNFO2dCQUNGQyxRQUFRO1lBQ1Y7WUFDQTtnQkFDRUQsU0FBUztnQkFDVEUsWUFBWTtnQkFDWkQsUUFBUTtZQUNWO1NBQ0Q7UUFDRCxrRkFBa0Y7UUFDbEYsMkJBQTJCO1FBQzNCLHdCQUF3QjtZQUN0QkQsU0FBUztZQUNUQyxRQUFRO1lBQ1JFLE9BQU87UUFDVDtRQUNBLFlBQVk7UUFDWixrQkFBa0I7UUFDbEIsd0NBQXdDO1FBQ3hDQyxVQUFVO1lBQ1JKLFNBQVM7WUFDVEMsUUFBUTtZQUNSRSxPQUFPO1FBQ1Q7UUFDQSw4REFBOEQ7UUFDOURFLFdBQVc7WUFDVCwrQ0FBK0M7WUFDL0MsaUJBQWlCO1lBQ2pCLDBEQUEwRDtZQUMxREwsU0FBUztZQUNURyxPQUFPO1FBQ1Q7UUFDQSxjQUFjO1lBQ1o7Z0JBQ0UsbUJBQW1CO2dCQUNuQixnQkFBZ0I7Z0JBQ2hCSCxTQUFTO2dCQUNURSxZQUFZO1lBQ2Q7WUFDQSwrQ0FBK0M7WUFDL0MsWUFBWTtZQUNaO1NBQ0Q7UUFDRCwrRkFBK0Y7UUFDL0ZJLFVBQVU7UUFDVkMsTUFBTTtZQUNKUCxTQUFTO1lBQ1RHLE9BQU87UUFDVDtRQUNBSyxTQUNFO1FBQ0ZDLFNBQVM7UUFDVEMsUUFBUTtRQUNSLGtDQUFrQztRQUNsQ0MsVUFBVTtRQUNWQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtJQUNBaEIsTUFBTUMsU0FBUyxDQUFDSixJQUFJLENBQUMsaUJBQWlCLEdBQUc7UUFDdkMsNkZBQTZGO1FBQzdGTSxTQUNFO1FBQ0ZFLFlBQVk7UUFDWkQsUUFBUTtRQUNSYSxRQUFRO1lBQ05DLGVBQWU7Z0JBQ2IscUJBQXFCO2dCQUNyQmYsU0FDRTtnQkFDRkUsWUFBWTtnQkFDWlksUUFBUTtvQkFDTkUsWUFBWTt3QkFDVmhCLFNBQVM7d0JBQ1RFLFlBQVk7d0JBQ1pZLFFBQVFqQixNQUFNQyxTQUFTLENBQUNKLElBQUk7b0JBQzlCO29CQUNBLDZCQUE2Qjt3QkFDM0JNLFNBQVM7d0JBQ1RHLE9BQU87b0JBQ1Q7Z0JBQ0Y7WUFDRjtZQUNBYyxRQUFRO1FBQ1Y7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3dyZW4uanM/ZGJkNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xud3Jlbi5kaXNwbGF5TmFtZSA9ICd3cmVuJ1xud3Jlbi5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB3cmVuKFByaXNtKSB7XG4gIC8vIGh0dHBzOi8vd3Jlbi5pby9cblxuICBQcmlzbS5sYW5ndWFnZXMud3JlbiA9IHtcbiAgICAvLyBNdWx0aWxpbmUgY29tbWVudHMgaW4gV3JlbiBjYW4gaGF2ZSBuZXN0ZWQgbXVsdGlsaW5lIGNvbW1lbnRzXG4gICAgLy8gQ29tbWVudHM6IC8vIGFuZCAvKiAqL1xuICAgIGNvbW1lbnQ6IFtcbiAgICAgIHtcbiAgICAgICAgLy8gc3VwcG9ydCAzIGxldmVscyBvZiBuZXN0aW5nXG4gICAgICAgIC8vIHJlZ2V4OiBcXC9cXCooPzpbXiovXXxcXCooPyFcXC8pfFxcLyg/IVxcKil8PHNlbGY+KSpcXCpcXC9cbiAgICAgICAgcGF0dGVybjpcbiAgICAgICAgICAvXFwvXFwqKD86W14qL118XFwqKD8hXFwvKXxcXC8oPyFcXCopfFxcL1xcKig/OlteKi9dfFxcKig/IVxcLyl8XFwvKD8hXFwqKXxcXC9cXCooPzpbXiovXXxcXCooPyFcXC8pfFxcLyg/IVxcKikpKlxcKlxcLykqXFwqXFwvKSpcXCpcXC8vLFxuICAgICAgICBncmVlZHk6IHRydWVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIHBhdHRlcm46IC8oXnxbXlxcXFw6XSlcXC9cXC8uKi8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgIGdyZWVkeTogdHJ1ZVxuICAgICAgfVxuICAgIF0sXG4gICAgLy8gVHJpcGxlIHF1b3RlZCBzdHJpbmdzIGFyZSBtdWx0aWxpbmUgYnV0IGNhbm5vdCBoYXZlIGludGVycG9sYXRpb24gKHJhdyBzdHJpbmdzKVxuICAgIC8vIEJhc2VkIG9uIHByaXNtLXB5dGhvbi5qc1xuICAgICd0cmlwbGUtcXVvdGVkLXN0cmluZyc6IHtcbiAgICAgIHBhdHRlcm46IC9cIlwiXCJbXFxzXFxTXSo/XCJcIlwiLyxcbiAgICAgIGdyZWVkeTogdHJ1ZSxcbiAgICAgIGFsaWFzOiAnc3RyaW5nJ1xuICAgIH0sXG4gICAgLy8gc2VlIGJlbG93XG4gICAgJ3N0cmluZy1saXRlcmFsJzogbnVsbCxcbiAgICAvLyAjIS91c3IvYmluL2VudiB3cmVuIG9uIHRoZSBmaXJzdCBsaW5lXG4gICAgaGFzaGJhbmc6IHtcbiAgICAgIHBhdHRlcm46IC9eIyFcXC8uKy8sXG4gICAgICBncmVlZHk6IHRydWUsXG4gICAgICBhbGlhczogJ2NvbW1lbnQnXG4gICAgfSxcbiAgICAvLyBBdHRyaWJ1dGVzIGFyZSBzcGVjaWFsIGtleXdvcmRzIHRvIGFkZCBtZXRhIGRhdGEgdG8gY2xhc3Nlc1xuICAgIGF0dHJpYnV0ZToge1xuICAgICAgLy8gIyEgYXR0cmlidXRlcyBhcmUgc3RvcmVkIGluIGNsYXNzIHByb3BlcnRpZXNcbiAgICAgIC8vICMhbXl2YXIgPSB0cnVlXG4gICAgICAvLyAjYXR0cmlidXRlcyBhcmUgbm90IHN0b3JlZCBhbmQgZGlzbWlzc2VkIGF0IGNvbXBpbGF0aW9uXG4gICAgICBwYXR0ZXJuOiAvIyE/WyBcXHRcXHUzMDAwXSpcXHcrLyxcbiAgICAgIGFsaWFzOiAna2V5d29yZCdcbiAgICB9LFxuICAgICdjbGFzcy1uYW1lJzogW1xuICAgICAge1xuICAgICAgICAvLyBjbGFzcyBkZWZpbml0aW9uXG4gICAgICAgIC8vIGNsYXNzIE1ldGEge31cbiAgICAgICAgcGF0dGVybjogLyhcXGJjbGFzc1xccyspXFx3Ky8sXG4gICAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICAgIH0sXG4gICAgICAvLyBBIGNsYXNzIG11c3QgYWx3YXlzIHN0YXJ0IHdpdGggYW4gdXBwZXJjYXNlLlxuICAgICAgLy8gRmlsZS5yZWFkXG4gICAgICAvXFxiW0EtWl1bYS16XFxkX10qXFxiL1xuICAgIF0sXG4gICAgLy8gQSBjb25zdGFudCBjYW4gYmUgYSB2YXJpYWJsZSwgY2xhc3MsIHByb3BlcnR5IG9yIG1ldGhvZC4gSnVzdCBuYW1lZCBpbiBhbGwgdXBwZXJjYXNlIGxldHRlcnNcbiAgICBjb25zdGFudDogL1xcYltBLVpdW0EtWlxcZF9dKlxcYi8sXG4gICAgbnVsbDoge1xuICAgICAgcGF0dGVybjogL1xcYm51bGxcXGIvLFxuICAgICAgYWxpYXM6ICdrZXl3b3JkJ1xuICAgIH0sXG4gICAga2V5d29yZDpcbiAgICAgIC9cXGIoPzphc3xicmVha3xjbGFzc3xjb25zdHJ1Y3R8Y29udGludWV8ZWxzZXxmb3J8Zm9yZWlnbnxpZnxpbXBvcnR8aW58aXN8cmV0dXJufHN0YXRpY3xzdXBlcnx0aGlzfHZhcnx3aGlsZSlcXGIvLFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgbnVtYmVyOiAvXFxiKD86MHhbXFxkYS1mXSt8XFxkKyg/OlxcLlxcZCspPyg/OmVbKy1dP1xcZCspPylcXGIvaSxcbiAgICAvLyBGdW5jdGlvbnMgY2FuIGJlIENsYXNzLm1ldGhvZCgpXG4gICAgZnVuY3Rpb246IC9cXGJbYS16X11cXHcqKD89XFxzKlsoe10pL2ksXG4gICAgb3BlcmF0b3I6IC88PHw+PnxbPSE8Pl09P3wmJnxcXHxcXHx8Wy0rKi8lfl4mfD86XXxcXC57MiwzfS8sXG4gICAgcHVuY3R1YXRpb246IC9bXFxbXFxdKCl7fS4sO10vXG4gIH1cbiAgUHJpc20ubGFuZ3VhZ2VzLndyZW5bJ3N0cmluZy1saXRlcmFsJ10gPSB7XG4gICAgLy8gQSBzaW5nbGUgcXVvdGUgc3RyaW5nIGlzIG11bHRpbGluZSBhbmQgY2FuIGhhdmUgaW50ZXJwb2xhdGlvbiAoc2ltaWxhciB0byBKUyBiYWNrdGlja3MgYGApXG4gICAgcGF0dGVybjpcbiAgICAgIC8oXnxbXlxcXFxcIl0pXCIoPzpbXlxcXFxcIiVdfFxcXFxbXFxzXFxTXXwlKD8hXFwoKXwlXFwoKD86W14oKV18XFwoKD86W14oKV18XFwoW14pXSpcXCkpKlxcKSkqXFwpKSpcIi8sXG4gICAgbG9va2JlaGluZDogdHJ1ZSxcbiAgICBncmVlZHk6IHRydWUsXG4gICAgaW5zaWRlOiB7XG4gICAgICBpbnRlcnBvbGF0aW9uOiB7XG4gICAgICAgIC8vIFwiJShpbnRlcnBvbGF0aW9uKVwiXG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgLygoPzpefFteXFxcXF0pKD86XFxcXHsyfSkqKSVcXCgoPzpbXigpXXxcXCgoPzpbXigpXXxcXChbXildKlxcKSkqXFwpKSpcXCkvLFxuICAgICAgICBsb29rYmVoaW5kOiB0cnVlLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBleHByZXNzaW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXiglXFwoKVtcXHNcXFNdKyg/PVxcKSQpLyxcbiAgICAgICAgICAgIGxvb2tiZWhpbmQ6IHRydWUsXG4gICAgICAgICAgICBpbnNpZGU6IFByaXNtLmxhbmd1YWdlcy53cmVuXG4gICAgICAgICAgfSxcbiAgICAgICAgICAnaW50ZXJwb2xhdGlvbi1wdW5jdHVhdGlvbic6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9eJVxcKHxcXCkkLyxcbiAgICAgICAgICAgIGFsaWFzOiAncHVuY3R1YXRpb24nXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgc3RyaW5nOiAvW1xcc1xcU10rL1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbIndyZW4iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwibG9va2JlaGluZCIsImFsaWFzIiwiaGFzaGJhbmciLCJhdHRyaWJ1dGUiLCJjb25zdGFudCIsIm51bGwiLCJrZXl3b3JkIiwiYm9vbGVhbiIsIm51bWJlciIsImZ1bmN0aW9uIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiIsImluc2lkZSIsImludGVycG9sYXRpb24iLCJleHByZXNzaW9uIiwic3RyaW5nIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wren.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xeora.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xeora.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ xeora)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nxeora.displayName = \"xeora\";\nxeora.aliases = [\n    \"xeoracube\"\n];\n/** @type {import('../core.js').Syntax} */ function xeora(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.xeora = Prism.languages.extend(\"markup\", {\n            constant: {\n                pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /\\$/\n                    }\n                }\n            },\n            variable: {\n                pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /[$.]/\n                    },\n                    operator: {\n                        pattern: /#+|[-+*~=^@]/\n                    }\n                }\n            },\n            \"function-inline\": {\n                pattern: /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n                inside: {\n                    variable: {\n                        pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n                        inside: {\n                            punctuation: {\n                                pattern: /[,.|]/\n                            },\n                            operator: {\n                                pattern: /#+|[-+*~=^@]/\n                            }\n                        }\n                    },\n                    punctuation: {\n                        pattern: /\\$\\w:|[$:?.,|]/\n                    }\n                },\n                alias: \"function\"\n            },\n            \"function-block\": {\n                pattern: /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /[$:{}?.,|]/\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-inline\": {\n                pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n                        inside: {\n                            tag: {\n                                pattern: /#\\d/\n                            }\n                        }\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-block-open\": {\n                pattern: /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n                inside: {\n                    punctuation: {\n                        pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n                        inside: {\n                            tag: {\n                                pattern: /#\\d/\n                            }\n                        }\n                    },\n                    attribute: {\n                        pattern: /![A-Z]+$/,\n                        inside: {\n                            punctuation: {\n                                pattern: /!/\n                            }\n                        },\n                        alias: \"keyword\"\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-block-separator\": {\n                pattern: /\\}:[-\\w.]+:\\{/,\n                inside: {\n                    punctuation: {\n                        pattern: /[:{}]/\n                    }\n                },\n                alias: \"function\"\n            },\n            \"directive-block-close\": {\n                pattern: /\\}:[-\\w.]+\\$/,\n                inside: {\n                    punctuation: {\n                        pattern: /[:{}$]/\n                    }\n                },\n                alias: \"function\"\n            }\n        });\n        Prism.languages.insertBefore(\"inside\", \"punctuation\", {\n            variable: Prism.languages.xeora[\"function-inline\"].inside[\"variable\"]\n        }, Prism.languages.xeora[\"function-block\"]);\n        Prism.languages.xeoracube = Prism.languages.xeora;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy94ZW9yYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGNBQWM7QUFDMkI7QUFDekNDLE1BQU1DLFdBQVcsR0FBRztBQUNwQkQsTUFBTUUsT0FBTyxHQUFHO0lBQUM7Q0FBWTtBQUU3Qix3Q0FBd0MsR0FDekIsU0FBU0YsTUFBTUcsS0FBSztJQUNqQ0EsTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDNUIsVUFBVUksS0FBSztRQUNmQSxNQUFNRSxTQUFTLENBQUNMLEtBQUssR0FBR0csTUFBTUUsU0FBUyxDQUFDQyxNQUFNLENBQUMsVUFBVTtZQUN2REMsVUFBVTtnQkFDUkMsU0FBUztnQkFDVEMsUUFBUTtvQkFDTkMsYUFBYTt3QkFDWEYsU0FBUztvQkFDWDtnQkFDRjtZQUNGO1lBQ0FHLFVBQVU7Z0JBQ1JILFNBQVM7Z0JBQ1RDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7b0JBQ1g7b0JBQ0FJLFVBQVU7d0JBQ1JKLFNBQVM7b0JBQ1g7Z0JBQ0Y7WUFDRjtZQUNBLG1CQUFtQjtnQkFDakJBLFNBQ0U7Z0JBQ0ZDLFFBQVE7b0JBQ05FLFVBQVU7d0JBQ1JILFNBQVM7d0JBQ1RDLFFBQVE7NEJBQ05DLGFBQWE7Z0NBQ1hGLFNBQVM7NEJBQ1g7NEJBQ0FJLFVBQVU7Z0NBQ1JKLFNBQVM7NEJBQ1g7d0JBQ0Y7b0JBQ0Y7b0JBQ0FFLGFBQWE7d0JBQ1hGLFNBQVM7b0JBQ1g7Z0JBQ0Y7Z0JBQ0FLLE9BQU87WUFDVDtZQUNBLGtCQUFrQjtnQkFDaEJMLFNBQ0U7Z0JBQ0ZDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7b0JBQ1g7Z0JBQ0Y7Z0JBQ0FLLE9BQU87WUFDVDtZQUNBLG9CQUFvQjtnQkFDbEJMLFNBQVM7Z0JBQ1RDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7d0JBQ1RDLFFBQVE7NEJBQ05LLEtBQUs7Z0NBQ0hOLFNBQVM7NEJBQ1g7d0JBQ0Y7b0JBQ0Y7Z0JBQ0Y7Z0JBQ0FLLE9BQU87WUFDVDtZQUNBLHdCQUF3QjtnQkFDdEJMLFNBQ0U7Z0JBQ0ZDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7d0JBQ1RDLFFBQVE7NEJBQ05LLEtBQUs7Z0NBQ0hOLFNBQVM7NEJBQ1g7d0JBQ0Y7b0JBQ0Y7b0JBQ0FPLFdBQVc7d0JBQ1RQLFNBQVM7d0JBQ1RDLFFBQVE7NEJBQ05DLGFBQWE7Z0NBQ1hGLFNBQVM7NEJBQ1g7d0JBQ0Y7d0JBQ0FLLE9BQU87b0JBQ1Q7Z0JBQ0Y7Z0JBQ0FBLE9BQU87WUFDVDtZQUNBLDZCQUE2QjtnQkFDM0JMLFNBQVM7Z0JBQ1RDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7b0JBQ1g7Z0JBQ0Y7Z0JBQ0FLLE9BQU87WUFDVDtZQUNBLHlCQUF5QjtnQkFDdkJMLFNBQVM7Z0JBQ1RDLFFBQVE7b0JBQ05DLGFBQWE7d0JBQ1hGLFNBQVM7b0JBQ1g7Z0JBQ0Y7Z0JBQ0FLLE9BQU87WUFDVDtRQUNGO1FBQ0FWLE1BQU1FLFNBQVMsQ0FBQ1csWUFBWSxDQUMxQixVQUNBLGVBQ0E7WUFDRUwsVUFBVVIsTUFBTUUsU0FBUyxDQUFDTCxLQUFLLENBQUMsa0JBQWtCLENBQUNTLE1BQU0sQ0FBQyxXQUFXO1FBQ3ZFLEdBQ0FOLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSyxDQUFDLGlCQUFpQjtRQUV6Q0csTUFBTUUsU0FBUyxDQUFDWSxTQUFTLEdBQUdkLE1BQU1FLFNBQVMsQ0FBQ0wsS0FBSztJQUNuRCxHQUFHRztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3hlb3JhLmpzP2FiNDkiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbmltcG9ydCByZWZyYWN0b3JNYXJrdXAgZnJvbSAnLi9tYXJrdXAuanMnXG54ZW9yYS5kaXNwbGF5TmFtZSA9ICd4ZW9yYSdcbnhlb3JhLmFsaWFzZXMgPSBbJ3hlb3JhY3ViZSddXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24geGVvcmEoUHJpc20pIHtcbiAgUHJpc20ucmVnaXN0ZXIocmVmcmFjdG9yTWFya3VwKVxuICA7KGZ1bmN0aW9uIChQcmlzbSkge1xuICAgIFByaXNtLmxhbmd1YWdlcy54ZW9yYSA9IFByaXNtLmxhbmd1YWdlcy5leHRlbmQoJ21hcmt1cCcsIHtcbiAgICAgIGNvbnN0YW50OiB7XG4gICAgICAgIHBhdHRlcm46IC9cXCQoPzpEb21haW5Db250ZW50c3xQYWdlUmVuZGVyRHVyYXRpb24pXFwkLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgcHVuY3R1YXRpb246IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC9cXCQvXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgcGF0dGVybjogL1xcJEA/KD86Iyt8Wy0rKn49Xl0pP1tcXHcuXStcXCQvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1skLl0vXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvcGVyYXRvcjoge1xuICAgICAgICAgICAgcGF0dGVybjogLyMrfFstKyp+PV5AXS9cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAnZnVuY3Rpb24taW5saW5lJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXCRGOlstXFx3Ll0rXFw/Wy1cXHcuXSsoPzosKD86KD86QFstI10qXFx3K1xcLltcXHcrLl1cXC4qKSpcXHwpKig/Oig/OltcXHcrXXxbLSMqLn5eXStbXFx3K118PVxcUykoPzpbXiQ9XXw9K1tePV0pKj0qfCg/OkBbLSNdKlxcdytcXC5bXFx3Ky5dXFwuKikrKD86KD86W1xcdytdfFstIyp+Xl1bLSMqLn5eXSpbXFx3K118PVxcUykoPzpbXiQ9XXw9K1tePV0pKj0qKT8pPyk/XFwkLyxcbiAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICAgIHBhdHRlcm46IC8oPzpbLHxdKUA/KD86Iyt8Wy0rKn49Xl0pP1tcXHcuXSsvLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogL1ssLnxdL1xuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBvcGVyYXRvcjoge1xuICAgICAgICAgICAgICAgIHBhdHRlcm46IC8jK3xbLSsqfj1eQF0vXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvXFwkXFx3OnxbJDo/Lix8XS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgJ2Z1bmN0aW9uLWJsb2NrJzoge1xuICAgICAgICBwYXR0ZXJuOlxuICAgICAgICAgIC9cXCRYRjpcXHtbLVxcdy5dK1xcP1stXFx3Ll0rKD86LCg/Oig/OkBbLSNdKlxcdytcXC5bXFx3Ky5dXFwuKikqXFx8KSooPzooPzpbXFx3K118Wy0jKi5+Xl0rW1xcdytdfD1cXFMpKD86W14kPV18PStbXj1dKSo9KnwoPzpAWy0jXSpcXHcrXFwuW1xcdysuXVxcLiopKyg/Oig/OltcXHcrXXxbLSMqfl5dWy0jKi5+Xl0qW1xcdytdfD1cXFMpKD86W14kPV18PStbXj1dKSo9Kik/KT8pP1xcfTpYRlxcJC8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvWyQ6e30/Lix8XS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9LFxuICAgICAgJ2RpcmVjdGl2ZS1pbmxpbmUnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXCRcXHcoPzojXFxkK1xcKz8pPyg/OlxcW1stXFx3Ll0rXFxdKT86Wy1cXC9cXHcuXStcXCQvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/Olxcdzp8Qyg/OlxcW3wjXFxkKSk/fFs6e1tcXF1dLyxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICB0YWc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xcZC9cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYWxpYXM6ICdmdW5jdGlvbidcbiAgICAgIH0sXG4gICAgICAnZGlyZWN0aXZlLWJsb2NrLW9wZW4nOiB7XG4gICAgICAgIHBhdHRlcm46XG4gICAgICAgICAgL1xcJFxcdys6XFx7fFxcJFxcdyg/OiNcXGQrXFwrPyk/KD86XFxbWy1cXHcuXStcXF0pPzpbLVxcdy5dKzpcXHsoPzohW0EtWl0rKT8vLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1xcJCg/Olxcdzp8Qyg/OlxcW3wjXFxkKSk/fFs6e1tcXF1dLyxcbiAgICAgICAgICAgIGluc2lkZToge1xuICAgICAgICAgICAgICB0YWc6IHtcbiAgICAgICAgICAgICAgICBwYXR0ZXJuOiAvI1xcZC9cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgYXR0cmlidXRlOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvIVtBLVpdKyQvLFxuICAgICAgICAgICAgaW5zaWRlOiB7XG4gICAgICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICAgICAgcGF0dGVybjogLyEvXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhbGlhczogJ2tleXdvcmQnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgICdkaXJlY3RpdmUtYmxvY2stc2VwYXJhdG9yJzoge1xuICAgICAgICBwYXR0ZXJuOiAvXFx9OlstXFx3Ll0rOlxcey8sXG4gICAgICAgIGluc2lkZToge1xuICAgICAgICAgIHB1bmN0dWF0aW9uOiB7XG4gICAgICAgICAgICBwYXR0ZXJuOiAvWzp7fV0vXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhbGlhczogJ2Z1bmN0aW9uJ1xuICAgICAgfSxcbiAgICAgICdkaXJlY3RpdmUtYmxvY2stY2xvc2UnOiB7XG4gICAgICAgIHBhdHRlcm46IC9cXH06Wy1cXHcuXStcXCQvLFxuICAgICAgICBpbnNpZGU6IHtcbiAgICAgICAgICBwdW5jdHVhdGlvbjoge1xuICAgICAgICAgICAgcGF0dGVybjogL1s6e30kXS9cbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFsaWFzOiAnZnVuY3Rpb24nXG4gICAgICB9XG4gICAgfSlcbiAgICBQcmlzbS5sYW5ndWFnZXMuaW5zZXJ0QmVmb3JlKFxuICAgICAgJ2luc2lkZScsXG4gICAgICAncHVuY3R1YXRpb24nLFxuICAgICAge1xuICAgICAgICB2YXJpYWJsZTogUHJpc20ubGFuZ3VhZ2VzLnhlb3JhWydmdW5jdGlvbi1pbmxpbmUnXS5pbnNpZGVbJ3ZhcmlhYmxlJ11cbiAgICAgIH0sXG4gICAgICBQcmlzbS5sYW5ndWFnZXMueGVvcmFbJ2Z1bmN0aW9uLWJsb2NrJ11cbiAgICApXG4gICAgUHJpc20ubGFuZ3VhZ2VzLnhlb3JhY3ViZSA9IFByaXNtLmxhbmd1YWdlcy54ZW9yYVxuICB9KShQcmlzbSlcbn1cbiJdLCJuYW1lcyI6WyJyZWZyYWN0b3JNYXJrdXAiLCJ4ZW9yYSIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJsYW5ndWFnZXMiLCJleHRlbmQiLCJjb25zdGFudCIsInBhdHRlcm4iLCJpbnNpZGUiLCJwdW5jdHVhdGlvbiIsInZhcmlhYmxlIiwib3BlcmF0b3IiLCJhbGlhcyIsInRhZyIsImF0dHJpYnV0ZSIsImluc2VydEJlZm9yZSIsInhlb3JhY3ViZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xeora.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xml-doc.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xml-doc.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ xmlDoc)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nxmlDoc.displayName = \"xml-doc\";\nxmlDoc.aliases = [];\n/** @type {import('../core.js').Syntax} */ function xmlDoc(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */ function insertDocComment(lang, docComment) {\n            if (Prism.languages[lang]) {\n                Prism.languages.insertBefore(lang, \"comment\", {\n                    \"doc-comment\": docComment\n                });\n            }\n        }\n        var tag = Prism.languages.markup.tag;\n        var slashDocComment = {\n            pattern: /\\/\\/\\/.*/,\n            greedy: true,\n            alias: \"comment\",\n            inside: {\n                tag: tag\n            }\n        };\n        var tickDocComment = {\n            pattern: /'''.*/,\n            greedy: true,\n            alias: \"comment\",\n            inside: {\n                tag: tag\n            }\n        };\n        insertDocComment(\"csharp\", slashDocComment);\n        insertDocComment(\"fsharp\", slashDocComment);\n        insertDocComment(\"vbnet\", tickDocComment);\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy94bWwtZG9jLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsY0FBYztBQUMyQjtBQUN6Q0MsT0FBT0MsV0FBVyxHQUFHO0FBQ3JCRCxPQUFPRSxPQUFPLEdBQUcsRUFBRTtBQUVuQix3Q0FBd0MsR0FDekIsU0FBU0YsT0FBT0csS0FBSztJQUNsQ0EsTUFBTUMsUUFBUSxDQUFDTCxrREFBZUE7SUFDNUIsVUFBVUksS0FBSztRQUNmOzs7OztLQUtDLEdBQ0QsU0FBU0UsaUJBQWlCQyxJQUFJLEVBQUVDLFVBQVU7WUFDeEMsSUFBSUosTUFBTUssU0FBUyxDQUFDRixLQUFLLEVBQUU7Z0JBQ3pCSCxNQUFNSyxTQUFTLENBQUNDLFlBQVksQ0FBQ0gsTUFBTSxXQUFXO29CQUM1QyxlQUFlQztnQkFDakI7WUFDRjtRQUNGO1FBQ0EsSUFBSUcsTUFBTVAsTUFBTUssU0FBUyxDQUFDRyxNQUFNLENBQUNELEdBQUc7UUFDcEMsSUFBSUUsa0JBQWtCO1lBQ3BCQyxTQUFTO1lBQ1RDLFFBQVE7WUFDUkMsT0FBTztZQUNQQyxRQUFRO2dCQUNOTixLQUFLQTtZQUNQO1FBQ0Y7UUFDQSxJQUFJTyxpQkFBaUI7WUFDbkJKLFNBQVM7WUFDVEMsUUFBUTtZQUNSQyxPQUFPO1lBQ1BDLFFBQVE7Z0JBQ05OLEtBQUtBO1lBQ1A7UUFDRjtRQUNBTCxpQkFBaUIsVUFBVU87UUFDM0JQLGlCQUFpQixVQUFVTztRQUMzQlAsaUJBQWlCLFNBQVNZO0lBQzVCLEdBQUdkO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xhbmcveG1sLWRvYy5qcz84ZGMwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEB0cy1ub2NoZWNrXG5pbXBvcnQgcmVmcmFjdG9yTWFya3VwIGZyb20gJy4vbWFya3VwLmpzJ1xueG1sRG9jLmRpc3BsYXlOYW1lID0gJ3htbC1kb2MnXG54bWxEb2MuYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24geG1sRG9jKFByaXNtKSB7XG4gIFByaXNtLnJlZ2lzdGVyKHJlZnJhY3Rvck1hcmt1cClcbiAgOyhmdW5jdGlvbiAoUHJpc20pIHtcbiAgICAvKipcbiAgICAgKiBJZiB0aGUgZ2l2ZW4gbGFuZ3VhZ2UgaXMgcHJlc2VudCwgaXQgd2lsbCBpbnNlcnQgdGhlIGdpdmVuIGRvYyBjb21tZW50IGdyYW1tYXIgdG9rZW4gaW50byBpdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsYW5nXG4gICAgICogQHBhcmFtIHthbnl9IGRvY0NvbW1lbnRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbnNlcnREb2NDb21tZW50KGxhbmcsIGRvY0NvbW1lbnQpIHtcbiAgICAgIGlmIChQcmlzbS5sYW5ndWFnZXNbbGFuZ10pIHtcbiAgICAgICAgUHJpc20ubGFuZ3VhZ2VzLmluc2VydEJlZm9yZShsYW5nLCAnY29tbWVudCcsIHtcbiAgICAgICAgICAnZG9jLWNvbW1lbnQnOiBkb2NDb21tZW50XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIHZhciB0YWcgPSBQcmlzbS5sYW5ndWFnZXMubWFya3VwLnRhZ1xuICAgIHZhciBzbGFzaERvY0NvbW1lbnQgPSB7XG4gICAgICBwYXR0ZXJuOiAvXFwvXFwvXFwvLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjb21tZW50JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHRhZ1xuICAgICAgfVxuICAgIH1cbiAgICB2YXIgdGlja0RvY0NvbW1lbnQgPSB7XG4gICAgICBwYXR0ZXJuOiAvJycnLiovLFxuICAgICAgZ3JlZWR5OiB0cnVlLFxuICAgICAgYWxpYXM6ICdjb21tZW50JyxcbiAgICAgIGluc2lkZToge1xuICAgICAgICB0YWc6IHRhZ1xuICAgICAgfVxuICAgIH1cbiAgICBpbnNlcnREb2NDb21tZW50KCdjc2hhcnAnLCBzbGFzaERvY0NvbW1lbnQpXG4gICAgaW5zZXJ0RG9jQ29tbWVudCgnZnNoYXJwJywgc2xhc2hEb2NDb21tZW50KVxuICAgIGluc2VydERvY0NvbW1lbnQoJ3ZibmV0JywgdGlja0RvY0NvbW1lbnQpXG4gIH0pKFByaXNtKVxufVxuIl0sIm5hbWVzIjpbInJlZnJhY3Rvck1hcmt1cCIsInhtbERvYyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwicmVnaXN0ZXIiLCJpbnNlcnREb2NDb21tZW50IiwibGFuZyIsImRvY0NvbW1lbnQiLCJsYW5ndWFnZXMiLCJpbnNlcnRCZWZvcmUiLCJ0YWciLCJtYXJrdXAiLCJzbGFzaERvY0NvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5IiwiYWxpYXMiLCJpbnNpZGUiLCJ0aWNrRG9jQ29tbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xml-doc.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xojo.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xojo.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ xojo)\n/* harmony export */ });\n// @ts-nocheck\nxojo.displayName = \"xojo\";\nxojo.aliases = [];\n/** @type {import('../core.js').Syntax} */ function xojo(Prism) {\n    Prism.languages.xojo = {\n        comment: {\n            pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n            greedy: true\n        },\n        string: {\n            pattern: /\"(?:\"\"|[^\"])*\"/,\n            greedy: true\n        },\n        number: [\n            /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n            /&[bchou][a-z\\d]+/i\n        ],\n        directive: {\n            pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n            alias: \"property\"\n        },\n        keyword: /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n        operator: /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n        punctuation: /[.,;:()]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy94b2pvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCSyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsUUFBUTtRQUNWO1FBQ0FDLFFBQVE7WUFDTkYsU0FBUztZQUNUQyxRQUFRO1FBQ1Y7UUFDQUUsUUFBUTtZQUFDO1lBQThDO1NBQW9CO1FBQzNFQyxXQUFXO1lBQ1RKLFNBQVM7WUFDVEssT0FBTztRQUNUO1FBQ0FDLFNBQ0U7UUFDRkMsVUFDRTtRQUNGQyxhQUFhO0lBQ2Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL21hcmtkb3duLWJsb2cvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy94b2pvLmpzPzhmOTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQHRzLW5vY2hlY2tcbnhvam8uZGlzcGxheU5hbWUgPSAneG9qbydcbnhvam8uYWxpYXNlcyA9IFtdXG5cbi8qKiBAdHlwZSB7aW1wb3J0KCcuLi9jb3JlLmpzJykuU3ludGF4fSAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24geG9qbyhQcmlzbSkge1xuICBQcmlzbS5sYW5ndWFnZXMueG9qbyA9IHtcbiAgICBjb21tZW50OiB7XG4gICAgICBwYXR0ZXJuOiAvKD86J3xcXC9cXC98UmVtXFxiKS4rL2ksXG4gICAgICBncmVlZHk6IHRydWVcbiAgICB9LFxuICAgIHN0cmluZzoge1xuICAgICAgcGF0dGVybjogL1wiKD86XCJcInxbXlwiXSkqXCIvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBudW1iZXI6IFsvKD86XFxiXFxkKyg/OlxcLlxcZCopP3xcXEJcXC5cXGQrKSg/OkVbKy1dP1xcZCspPy9pLCAvJltiY2hvdV1bYS16XFxkXSsvaV0sXG4gICAgZGlyZWN0aXZlOiB7XG4gICAgICBwYXR0ZXJuOiAvIyg/OkVsc2V8RWxzZUlmfEVuZGlmfElmfFByYWdtYSlcXGIvaSxcbiAgICAgIGFsaWFzOiAncHJvcGVydHknXG4gICAgfSxcbiAgICBrZXl3b3JkOlxuICAgICAgL1xcYig/OkFkZEhhbmRsZXJ8QXBwfEFycmF5fEFzKD86c2lnbnMpP3xBdXRvfEJvb2xlYW58QnJlYWt8QnkoPzpSZWZ8VmFsKXxCeXRlfENhbGx8Q2FzZXxDYXRjaHxDRlN0cmluZ1JlZnxDR0Zsb2F0fENsYXNzfENvbG9yfENvbnN0fENvbnRpbnVlfENTdHJpbmd8Q3VycmVuY3l8Q3VycmVudE1ldGhvZE5hbWV8RGVjbGFyZXxEZWxlZ2F0ZXxEaW18RG8oPzp1YmxlfHduVG8pP3xFYWNofEVsc2UoPzpJZik/fEVuZHxFbnVtZXJhdGlvbnxFdmVudHxFeGNlcHRpb258RXhpdHxFeHRlbmRzfEZhbHNlfEZpbmFsbHl8Rm9yfEZ1bmN0aW9ufEdldHxHZXRUeXBlSW5mb3xHbG9iYWx8R09UT3xJZnxJbXBsZW1lbnRzfElufEluaGVyaXRzfEludCg/Ojh8MTZ8MzJ8NjR8ZWdlcnxlcmZhY2UpP3xMaWJ8TG9vcHxNZXxNb2R1bGV8TmV4dHxOaWx8T2JqZWN0fE9wdGlvbmFsfE9TVHlwZXxQYXJhbUFycmF5fFByaXZhdGV8UHJvcGVydHl8UHJvdGVjdGVkfFBTdHJpbmd8UHRyfFJhaXNlKD86RXZlbnQpP3xSZURpbXxSZW1vdmVIYW5kbGVyfFJldHVybnxTZWxlY3QoPzpvcik/fFNlbGZ8U2V0fFNoYXJlZHxTaG9ydHxTaW5nbGV8U29mdHxTdGF0aWN8U3RlcHxTdHJpbmd8U3VifFN1cGVyfFRleHR8VGhlbnxUb3xUcnVlfFRyeXxVYm91bmR8VUludCg/Ojh8MTZ8MzJ8NjR8ZWdlcik/fFVudGlsfFVzaW5nfFZhcig/OmlhbnQpP3xXZW5kfFdoaWxlfFdpbmRvd1B0cnxXU3RyaW5nKVxcYi9pLFxuICAgIG9wZXJhdG9yOlxuICAgICAgLzxbPT5dP3w+PT98WytcXC0qXFwvXFxcXF49XXxcXGIoPzpBZGRyZXNzT2Z8QW5kfEN0eXBlfElzQT98TW9kfE5ld3xOb3R8T3J8V2Vha0FkZHJlc3NPZnxYb3IpXFxiL2ksXG4gICAgcHVuY3R1YXRpb246IC9bLiw7OigpXS9cbiAgfVxufVxuIl0sIm5hbWVzIjpbInhvam8iLCJkaXNwbGF5TmFtZSIsImFsaWFzZXMiLCJQcmlzbSIsImxhbmd1YWdlcyIsImNvbW1lbnQiLCJwYXR0ZXJuIiwiZ3JlZWR5Iiwic3RyaW5nIiwibnVtYmVyIiwiZGlyZWN0aXZlIiwiYWxpYXMiLCJrZXl3b3JkIiwib3BlcmF0b3IiLCJwdW5jdHVhdGlvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xojo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xquery.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xquery.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ xquery)\n/* harmony export */ });\n/* harmony import */ var _markup_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n// @ts-nocheck\n\nxquery.displayName = \"xquery\";\nxquery.aliases = [];\n/** @type {import('../core.js').Syntax} */ function xquery(Prism) {\n    Prism.register(_markup_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    (function(Prism) {\n        Prism.languages.xquery = Prism.languages.extend(\"markup\", {\n            \"xquery-comment\": {\n                pattern: /\\(:[\\s\\S]*?:\\)/,\n                greedy: true,\n                alias: \"comment\"\n            },\n            string: {\n                pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n                greedy: true\n            },\n            extension: {\n                pattern: /\\(#.+?#\\)/,\n                alias: \"symbol\"\n            },\n            variable: /\\$[-\\w:]+/,\n            axis: {\n                pattern: /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            \"keyword-operator\": {\n                pattern: /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n                lookbehind: true,\n                alias: \"operator\"\n            },\n            keyword: {\n                pattern: /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n                lookbehind: true\n            },\n            function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n            \"xquery-element\": {\n                pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n                lookbehind: true,\n                alias: \"tag\"\n            },\n            \"xquery-attribute\": {\n                pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n                lookbehind: true,\n                alias: \"attr-name\"\n            },\n            builtin: {\n                pattern: /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n                lookbehind: true\n            },\n            number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n            operator: [\n                /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n                {\n                    pattern: /(\\s)-(?=\\s)/,\n                    lookbehind: true\n                }\n            ],\n            punctuation: /[[\\](){},;:/]/\n        });\n        Prism.languages.xquery.tag.pattern = /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/;\n        Prism.languages.xquery[\"tag\"].inside[\"attr-value\"].pattern = /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/;\n        Prism.languages.xquery[\"tag\"].inside[\"attr-value\"].inside[\"punctuation\"] = /^=\"|\"$/;\n        Prism.languages.xquery[\"tag\"].inside[\"attr-value\"].inside[\"expression\"] = {\n            // Allow for two levels of nesting\n            pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n            inside: Prism.languages.xquery,\n            alias: \"language-xquery\"\n        };\n        // The following will handle plain text inside tags\n        var stringifyToken = function(token) {\n            if (typeof token === \"string\") {\n                return token;\n            }\n            if (typeof token.content === \"string\") {\n                return token.content;\n            }\n            return token.content.map(stringifyToken).join(\"\");\n        };\n        var walkTokens = function(tokens) {\n            var openedTags = [];\n            for(var i = 0; i < tokens.length; i++){\n                var token = tokens[i];\n                var notTagNorBrace = false;\n                if (typeof token !== \"string\") {\n                    if (token.type === \"tag\" && token.content[0] && token.content[0].type === \"tag\") {\n                        // We found a tag, now find its kind\n                        if (token.content[0].content[0].content === \"</\") {\n                            // Closing tag\n                            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n                                // Pop matching opening tag\n                                openedTags.pop();\n                            }\n                        } else {\n                            if (token.content[token.content.length - 1].content === \"/>\") {\n                            // Autoclosed tag, ignore\n                            } else {\n                                // Opening tag\n                                openedTags.push({\n                                    tagName: stringifyToken(token.content[0].content[1]),\n                                    openedBraces: 0\n                                });\n                            }\n                        }\n                    } else if (openedTags.length > 0 && token.type === \"punctuation\" && token.content === \"{\" && // Ignore `{{`\n                    (!tokens[i + 1] || tokens[i + 1].type !== \"punctuation\" || tokens[i + 1].content !== \"{\") && (!tokens[i - 1] || tokens[i - 1].type !== \"plain-text\" || tokens[i - 1].content !== \"{\")) {\n                        // Here we might have entered an XQuery expression inside a tag\n                        openedTags[openedTags.length - 1].openedBraces++;\n                    } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === \"punctuation\" && token.content === \"}\") {\n                        // Here we might have left an XQuery expression inside a tag\n                        openedTags[openedTags.length - 1].openedBraces--;\n                    } else if (token.type !== \"comment\") {\n                        notTagNorBrace = true;\n                    }\n                }\n                if (notTagNorBrace || typeof token === \"string\") {\n                    if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n                        // Here we are inside a tag, and not inside an XQuery expression.\n                        // That's plain text: drop any tokens matched.\n                        var plainText = stringifyToken(token);\n                        // And merge text with adjacent text\n                        if (i < tokens.length - 1 && (typeof tokens[i + 1] === \"string\" || tokens[i + 1].type === \"plain-text\")) {\n                            plainText += stringifyToken(tokens[i + 1]);\n                            tokens.splice(i + 1, 1);\n                        }\n                        if (i > 0 && (typeof tokens[i - 1] === \"string\" || tokens[i - 1].type === \"plain-text\")) {\n                            plainText = stringifyToken(tokens[i - 1]) + plainText;\n                            tokens.splice(i - 1, 1);\n                            i--;\n                        }\n                        if (/^\\s+$/.test(plainText)) {\n                            tokens[i] = plainText;\n                        } else {\n                            tokens[i] = new Prism.Token(\"plain-text\", plainText, null, plainText);\n                        }\n                    }\n                }\n                if (token.content && typeof token.content !== \"string\") {\n                    walkTokens(token.content);\n                }\n            }\n        };\n        Prism.hooks.add(\"after-tokenize\", function(env) {\n            if (env.language !== \"xquery\") {\n                return;\n            }\n            walkTokens(env.tokens);\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xquery.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yaml.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yaml.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ yaml)\n/* harmony export */ });\n// @ts-nocheck\nyaml.displayName = \"yaml\";\nyaml.aliases = [\n    \"yml\"\n];\n/** @type {import('../core.js').Syntax} */ function yaml(Prism) {\n    ;\n    (function(Prism) {\n        // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n        // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n        var anchorOrAlias = /[*&][^\\s[\\]{},]+/;\n        // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n        var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/;\n        // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n        var properties = \"(?:\" + tag.source + \"(?:[ \t]+\" + anchorOrAlias.source + \")?|\" + anchorOrAlias.source + \"(?:[ \t]+\" + tag.source + \")?)\";\n        // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n        // This is a simplified version that doesn't support \"#\" and multiline keys\n        // All these long scarry character classes are simplified versions of YAML's characters\n        var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function() {\n            return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n        });\n        var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n        /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */ function createValuePattern(value, flags) {\n            flags = (flags || \"\").replace(/m/g, \"\") + \"m\" // add m flag\n            ;\n            var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function() {\n                return properties;\n            }).replace(/<<value>>/g, function() {\n                return value;\n            });\n            return RegExp(pattern, flags);\n        }\n        Prism.languages.yaml = {\n            scalar: {\n                pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function() {\n                    return properties;\n                })),\n                lookbehind: true,\n                alias: \"string\"\n            },\n            comment: /#.*/,\n            key: {\n                pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function() {\n                    return properties;\n                }).replace(/<<key>>/g, function() {\n                    return \"(?:\" + plainKey + \"|\" + string + \")\";\n                })),\n                lookbehind: true,\n                greedy: true,\n                alias: \"atrule\"\n            },\n            directive: {\n                pattern: /(^[ \\t]*)%.+/m,\n                lookbehind: true,\n                alias: \"important\"\n            },\n            datetime: {\n                pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n                lookbehind: true,\n                alias: \"number\"\n            },\n            boolean: {\n                pattern: createValuePattern(/false|true/.source, \"i\"),\n                lookbehind: true,\n                alias: \"important\"\n            },\n            null: {\n                pattern: createValuePattern(/null|~/.source, \"i\"),\n                lookbehind: true,\n                alias: \"important\"\n            },\n            string: {\n                pattern: createValuePattern(string),\n                lookbehind: true,\n                greedy: true\n            },\n            number: {\n                pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, \"i\"),\n                lookbehind: true\n            },\n            tag: tag,\n            important: anchorOrAlias,\n            punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n        };\n        Prism.languages.yml = Prism.languages.yaml;\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yaml.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yang.js":
/*!********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yang.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ yang)\n/* harmony export */ });\n// @ts-nocheck\nyang.displayName = \"yang\";\nyang.aliases = [];\n/** @type {import('../core.js').Syntax} */ function yang(Prism) {\n    Prism.languages.yang = {\n        // https://tools.ietf.org/html/rfc6020#page-34\n        // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n        comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n        string: {\n            pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n            greedy: true\n        },\n        keyword: {\n            pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n            lookbehind: true\n        },\n        namespace: {\n            pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n            lookbehind: true\n        },\n        boolean: /\\b(?:false|true)\\b/,\n        operator: /\\+/,\n        punctuation: /[{};:]/\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGFuZy95YW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxjQUFjO0FBQ2RBLEtBQUtDLFdBQVcsR0FBRztBQUNuQkQsS0FBS0UsT0FBTyxHQUFHLEVBQUU7QUFFakIsd0NBQXdDLEdBQ3pCLFNBQVNGLEtBQUtHLEtBQUs7SUFDaENBLE1BQU1DLFNBQVMsQ0FBQ0osSUFBSSxHQUFHO1FBQ3JCLDhDQUE4QztRQUM5QywrREFBK0Q7UUFDL0RLLFNBQVM7UUFDVEMsUUFBUTtZQUNOQyxTQUFTO1lBQ1RDLFFBQVE7UUFDVjtRQUNBQyxTQUFTO1lBQ1BGLFNBQVM7WUFDVEcsWUFBWTtRQUNkO1FBQ0FDLFdBQVc7WUFDVEosU0FBUztZQUNURyxZQUFZO1FBQ2Q7UUFDQUUsU0FBUztRQUNUQyxVQUFVO1FBQ1ZDLGFBQWE7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWFya2Rvd24tYmxvZy8uL25vZGVfbW9kdWxlcy8ucG5wbS9yZWZyYWN0b3JANC44LjEvbm9kZV9tb2R1bGVzL3JlZnJhY3Rvci9sYW5nL3lhbmcuanM/ZmYzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBAdHMtbm9jaGVja1xueWFuZy5kaXNwbGF5TmFtZSA9ICd5YW5nJ1xueWFuZy5hbGlhc2VzID0gW11cblxuLyoqIEB0eXBlIHtpbXBvcnQoJy4uL2NvcmUuanMnKS5TeW50YXh9ICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB5YW5nKFByaXNtKSB7XG4gIFByaXNtLmxhbmd1YWdlcy55YW5nID0ge1xuICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MDIwI3BhZ2UtMzRcbiAgICAvLyBodHRwOi8vd3d3LnlhbmctY2VudHJhbC5vcmcvdHdpa2kvYmluL3ZpZXcvTWFpbi9ZYW5nRXhhbXBsZXNcbiAgICBjb21tZW50OiAvXFwvXFwqW1xcc1xcU10qP1xcKlxcL3xcXC9cXC8uKi8sXG4gICAgc3RyaW5nOiB7XG4gICAgICBwYXR0ZXJuOiAvXCIoPzpbXlxcXFxcIl18XFxcXC4pKlwifCdbXiddKicvLFxuICAgICAgZ3JlZWR5OiB0cnVlXG4gICAgfSxcbiAgICBrZXl3b3JkOiB7XG4gICAgICBwYXR0ZXJuOiAvKF58W3t9O1xcclxcbl1bIFxcdF0qKVthLXpfXVtcXHcuLV0qL2ksXG4gICAgICBsb29rYmVoaW5kOiB0cnVlXG4gICAgfSxcbiAgICBuYW1lc3BhY2U6IHtcbiAgICAgIHBhdHRlcm46IC8oXFxzKVthLXpfXVtcXHcuLV0qKD89OikvaSxcbiAgICAgIGxvb2tiZWhpbmQ6IHRydWVcbiAgICB9LFxuICAgIGJvb2xlYW46IC9cXGIoPzpmYWxzZXx0cnVlKVxcYi8sXG4gICAgb3BlcmF0b3I6IC9cXCsvLFxuICAgIHB1bmN0dWF0aW9uOiAvW3t9OzpdL1xuICB9XG59XG4iXSwibmFtZXMiOlsieWFuZyIsImRpc3BsYXlOYW1lIiwiYWxpYXNlcyIsIlByaXNtIiwibGFuZ3VhZ2VzIiwiY29tbWVudCIsInN0cmluZyIsInBhdHRlcm4iLCJncmVlZHkiLCJrZXl3b3JkIiwibG9va2JlaGluZCIsIm5hbWVzcGFjZSIsImJvb2xlYW4iLCJvcGVyYXRvciIsInB1bmN0dWF0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yang.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/zig.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/zig.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ zig)\n/* harmony export */ });\n// @ts-nocheck\nzig.displayName = \"zig\";\nzig.aliases = [];\n/** @type {import('../core.js').Syntax} */ function zig(Prism) {\n    ;\n    (function(Prism) {\n        function literal(str) {\n            return function() {\n                return str;\n            };\n        }\n        var keyword = /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/;\n        var IDENTIFIER = \"\\\\b(?!\" + keyword.source + \")(?!\\\\d)\\\\w+\\\\b\";\n        var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n        var PREFIX_TYPE_OP = /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(/<ALIGN>/g, literal(ALIGN));\n        var SUFFIX_EXPR = /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(/<ID>/g, literal(IDENTIFIER));\n        var TYPE = \"(?!\\\\s)(?:!?\\\\s*(?:\" + PREFIX_TYPE_OP + \"\\\\s*)*\" + SUFFIX_EXPR + \")+\";\n        /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */ Prism.languages.zig = {\n            comment: [\n                {\n                    pattern: /\\/\\/[/!].*/,\n                    alias: \"doc-comment\"\n                },\n                /\\/{2}.*/\n            ],\n            string: [\n                {\n                    // \"string\" and c\"string\"\n                    pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n                    lookbehind: true,\n                    greedy: true\n                },\n                {\n                    // multiline strings and c-strings\n                    pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n                    lookbehind: true,\n                    greedy: true\n                }\n            ],\n            char: {\n                // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n                pattern: /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n                lookbehind: true,\n                greedy: true\n            },\n            builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n            label: {\n                pattern: /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n                lookbehind: true\n            },\n            \"class-name\": [\n                // const Foo = struct {};\n                /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n                {\n                    // const x: i32 = 9;\n                    // var x: Bar;\n                    // fn foo(x: bool, y: f32) void {}\n                    pattern: RegExp(/(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),\n                    lookbehind: true,\n                    inside: null // see below\n                },\n                {\n                    // extern fn foo(x: f64) f64; (optional alignment)\n                    pattern: RegExp(/(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source.replace(/<TYPE>/g, literal(TYPE)).replace(/<ALIGN>/g, literal(ALIGN))),\n                    lookbehind: true,\n                    inside: null // see below\n                }\n            ],\n            \"builtin-type\": {\n                pattern: /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n                alias: \"keyword\"\n            },\n            keyword: keyword,\n            function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n            number: /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n            boolean: /\\b(?:false|true)\\b/,\n            operator: /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n            punctuation: /[.:,;(){}[\\]]/\n        };\n        Prism.languages.zig[\"class-name\"].forEach(function(obj) {\n            if (obj.inside === null) {\n                obj.inside = Prism.languages.zig;\n            }\n        });\n    })(Prism);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/zig.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/all.js":
/*!******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/all.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   refractor: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_0__.refractor)\n/* harmony export */ });\n/* harmony import */ var _lang_markup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lang/markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n/* harmony import */ var _lang_css_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lang/css.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\");\n/* harmony import */ var _lang_clike_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lang/clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n/* harmony import */ var _lang_regex_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lang/regex.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/regex.js\");\n/* harmony import */ var _lang_javascript_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lang/javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n/* harmony import */ var _lang_abap_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lang/abap.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abap.js\");\n/* harmony import */ var _lang_abnf_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lang/abnf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/abnf.js\");\n/* harmony import */ var _lang_actionscript_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../lang/actionscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/actionscript.js\");\n/* harmony import */ var _lang_ada_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../lang/ada.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ada.js\");\n/* harmony import */ var _lang_agda_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../lang/agda.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/agda.js\");\n/* harmony import */ var _lang_al_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../lang/al.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/al.js\");\n/* harmony import */ var _lang_antlr4_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../lang/antlr4.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/antlr4.js\");\n/* harmony import */ var _lang_apacheconf_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../lang/apacheconf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apacheconf.js\");\n/* harmony import */ var _lang_sql_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lang/sql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js\");\n/* harmony import */ var _lang_apex_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../lang/apex.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apex.js\");\n/* harmony import */ var _lang_apl_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../lang/apl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/apl.js\");\n/* harmony import */ var _lang_applescript_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../lang/applescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/applescript.js\");\n/* harmony import */ var _lang_aql_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../lang/aql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aql.js\");\n/* harmony import */ var _lang_c_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../lang/c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n/* harmony import */ var _lang_cpp_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../lang/cpp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js\");\n/* harmony import */ var _lang_arduino_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../lang/arduino.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arduino.js\");\n/* harmony import */ var _lang_arff_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../lang/arff.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arff.js\");\n/* harmony import */ var _lang_armasm_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../lang/armasm.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/armasm.js\");\n/* harmony import */ var _lang_bash_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../lang/bash.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bash.js\");\n/* harmony import */ var _lang_yaml_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../lang/yaml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yaml.js\");\n/* harmony import */ var _lang_markdown_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../lang/markdown.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markdown.js\");\n/* harmony import */ var _lang_arturo_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../lang/arturo.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arturo.js\");\n/* harmony import */ var _lang_asciidoc_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../lang/asciidoc.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asciidoc.js\");\n/* harmony import */ var _lang_csharp_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../lang/csharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js\");\n/* harmony import */ var _lang_aspnet_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../lang/aspnet.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/aspnet.js\");\n/* harmony import */ var _lang_asm6502_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../lang/asm6502.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asm6502.js\");\n/* harmony import */ var _lang_asmatmel_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../lang/asmatmel.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/asmatmel.js\");\n/* harmony import */ var _lang_autohotkey_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../lang/autohotkey.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autohotkey.js\");\n/* harmony import */ var _lang_autoit_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../lang/autoit.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/autoit.js\");\n/* harmony import */ var _lang_avisynth_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../lang/avisynth.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avisynth.js\");\n/* harmony import */ var _lang_avro_idl_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../lang/avro-idl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/avro-idl.js\");\n/* harmony import */ var _lang_awk_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../lang/awk.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/awk.js\");\n/* harmony import */ var _lang_basic_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../lang/basic.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/basic.js\");\n/* harmony import */ var _lang_batch_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../lang/batch.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/batch.js\");\n/* harmony import */ var _lang_bbcode_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../lang/bbcode.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbcode.js\");\n/* harmony import */ var _lang_bbj_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../lang/bbj.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bbj.js\");\n/* harmony import */ var _lang_bicep_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../lang/bicep.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bicep.js\");\n/* harmony import */ var _lang_birb_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../lang/birb.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/birb.js\");\n/* harmony import */ var _lang_bison_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../lang/bison.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bison.js\");\n/* harmony import */ var _lang_bnf_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../lang/bnf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bnf.js\");\n/* harmony import */ var _lang_bqn_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../lang/bqn.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bqn.js\");\n/* harmony import */ var _lang_brainfuck_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../lang/brainfuck.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brainfuck.js\");\n/* harmony import */ var _lang_brightscript_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ../lang/brightscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/brightscript.js\");\n/* harmony import */ var _lang_bro_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ../lang/bro.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bro.js\");\n/* harmony import */ var _lang_bsl_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ../lang/bsl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bsl.js\");\n/* harmony import */ var _lang_cfscript_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ../lang/cfscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cfscript.js\");\n/* harmony import */ var _lang_chaiscript_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ../lang/chaiscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/chaiscript.js\");\n/* harmony import */ var _lang_cil_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ../lang/cil.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cil.js\");\n/* harmony import */ var _lang_cilkc_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ../lang/cilkc.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkc.js\");\n/* harmony import */ var _lang_cilkcpp_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ../lang/cilkcpp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cilkcpp.js\");\n/* harmony import */ var _lang_clojure_js__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ../lang/clojure.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clojure.js\");\n/* harmony import */ var _lang_cmake_js__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ../lang/cmake.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cmake.js\");\n/* harmony import */ var _lang_cobol_js__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ../lang/cobol.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cobol.js\");\n/* harmony import */ var _lang_coffeescript_js__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ../lang/coffeescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coffeescript.js\");\n/* harmony import */ var _lang_concurnas_js__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ../lang/concurnas.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/concurnas.js\");\n/* harmony import */ var _lang_csp_js__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ../lang/csp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csp.js\");\n/* harmony import */ var _lang_cooklang_js__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ../lang/cooklang.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cooklang.js\");\n/* harmony import */ var _lang_coq_js__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ../lang/coq.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/coq.js\");\n/* harmony import */ var _lang_ruby_js__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ../lang/ruby.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js\");\n/* harmony import */ var _lang_crystal_js__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ../lang/crystal.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/crystal.js\");\n/* harmony import */ var _lang_css_extras_js__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ../lang/css-extras.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css-extras.js\");\n/* harmony import */ var _lang_csv_js__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ../lang/csv.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csv.js\");\n/* harmony import */ var _lang_cue_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ../lang/cue.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cue.js\");\n/* harmony import */ var _lang_cypher_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ../lang/cypher.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cypher.js\");\n/* harmony import */ var _lang_d_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ../lang/d.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/d.js\");\n/* harmony import */ var _lang_dart_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ../lang/dart.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dart.js\");\n/* harmony import */ var _lang_dataweave_js__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ../lang/dataweave.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dataweave.js\");\n/* harmony import */ var _lang_dax_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ../lang/dax.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dax.js\");\n/* harmony import */ var _lang_dhall_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ../lang/dhall.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dhall.js\");\n/* harmony import */ var _lang_diff_js__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ../lang/diff.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/diff.js\");\n/* harmony import */ var _lang_markup_templating_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ../lang/markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n/* harmony import */ var _lang_django_js__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ../lang/django.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/django.js\");\n/* harmony import */ var _lang_dns_zone_file_js__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ../lang/dns-zone-file.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dns-zone-file.js\");\n/* harmony import */ var _lang_docker_js__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ../lang/docker.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/docker.js\");\n/* harmony import */ var _lang_dot_js__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ../lang/dot.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/dot.js\");\n/* harmony import */ var _lang_ebnf_js__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ../lang/ebnf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ebnf.js\");\n/* harmony import */ var _lang_editorconfig_js__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ../lang/editorconfig.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/editorconfig.js\");\n/* harmony import */ var _lang_eiffel_js__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ../lang/eiffel.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/eiffel.js\");\n/* harmony import */ var _lang_ejs_js__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ../lang/ejs.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ejs.js\");\n/* harmony import */ var _lang_elixir_js__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ../lang/elixir.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elixir.js\");\n/* harmony import */ var _lang_elm_js__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ../lang/elm.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/elm.js\");\n/* harmony import */ var _lang_lua_js__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ../lang/lua.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lua.js\");\n/* harmony import */ var _lang_etlua_js__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ../lang/etlua.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/etlua.js\");\n/* harmony import */ var _lang_erb_js__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ../lang/erb.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erb.js\");\n/* harmony import */ var _lang_erlang_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ../lang/erlang.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/erlang.js\");\n/* harmony import */ var _lang_excel_formula_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ../lang/excel-formula.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/excel-formula.js\");\n/* harmony import */ var _lang_fsharp_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ../lang/fsharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fsharp.js\");\n/* harmony import */ var _lang_factor_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ../lang/factor.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/factor.js\");\n/* harmony import */ var _lang_false_js__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ../lang/false.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/false.js\");\n/* harmony import */ var _lang_firestore_security_rules_js__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ../lang/firestore-security-rules.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/firestore-security-rules.js\");\n/* harmony import */ var _lang_flow_js__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ../lang/flow.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/flow.js\");\n/* harmony import */ var _lang_fortran_js__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ../lang/fortran.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/fortran.js\");\n/* harmony import */ var _lang_ftl_js__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ../lang/ftl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ftl.js\");\n/* harmony import */ var _lang_gml_js__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ../lang/gml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gml.js\");\n/* harmony import */ var _lang_gap_js__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ../lang/gap.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gap.js\");\n/* harmony import */ var _lang_gcode_js__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ../lang/gcode.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gcode.js\");\n/* harmony import */ var _lang_gdscript_js__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ../lang/gdscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gdscript.js\");\n/* harmony import */ var _lang_gedcom_js__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ../lang/gedcom.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gedcom.js\");\n/* harmony import */ var _lang_gettext_js__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! ../lang/gettext.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gettext.js\");\n/* harmony import */ var _lang_gherkin_js__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! ../lang/gherkin.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gherkin.js\");\n/* harmony import */ var _lang_git_js__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! ../lang/git.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/git.js\");\n/* harmony import */ var _lang_glsl_js__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! ../lang/glsl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/glsl.js\");\n/* harmony import */ var _lang_gn_js__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! ../lang/gn.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gn.js\");\n/* harmony import */ var _lang_linker_script_js__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! ../lang/linker-script.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/linker-script.js\");\n/* harmony import */ var _lang_go_js__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! ../lang/go.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go.js\");\n/* harmony import */ var _lang_go_module_js__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! ../lang/go-module.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go-module.js\");\n/* harmony import */ var _lang_gradle_js__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! ../lang/gradle.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/gradle.js\");\n/* harmony import */ var _lang_graphql_js__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! ../lang/graphql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/graphql.js\");\n/* harmony import */ var _lang_groovy_js__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! ../lang/groovy.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/groovy.js\");\n/* harmony import */ var _lang_less_js__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! ../lang/less.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/less.js\");\n/* harmony import */ var _lang_scss_js__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! ../lang/scss.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scss.js\");\n/* harmony import */ var _lang_textile_js__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! ../lang/textile.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/textile.js\");\n/* harmony import */ var _lang_haml_js__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! ../lang/haml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haml.js\");\n/* harmony import */ var _lang_handlebars_js__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! ../lang/handlebars.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/handlebars.js\");\n/* harmony import */ var _lang_haskell_js__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! ../lang/haskell.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haskell.js\");\n/* harmony import */ var _lang_haxe_js__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! ../lang/haxe.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/haxe.js\");\n/* harmony import */ var _lang_hcl_js__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! ../lang/hcl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hcl.js\");\n/* harmony import */ var _lang_hlsl_js__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! ../lang/hlsl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hlsl.js\");\n/* harmony import */ var _lang_hoon_js__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! ../lang/hoon.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hoon.js\");\n/* harmony import */ var _lang_hpkp_js__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! ../lang/hpkp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hpkp.js\");\n/* harmony import */ var _lang_hsts_js__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! ../lang/hsts.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/hsts.js\");\n/* harmony import */ var _lang_json_js__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! ../lang/json.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js\");\n/* harmony import */ var _lang_uri_js__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! ../lang/uri.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uri.js\");\n/* harmony import */ var _lang_http_js__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! ../lang/http.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/http.js\");\n/* harmony import */ var _lang_ichigojam_js__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! ../lang/ichigojam.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ichigojam.js\");\n/* harmony import */ var _lang_icon_js__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! ../lang/icon.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icon.js\");\n/* harmony import */ var _lang_icu_message_format_js__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! ../lang/icu-message-format.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/icu-message-format.js\");\n/* harmony import */ var _lang_idris_js__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! ../lang/idris.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/idris.js\");\n/* harmony import */ var _lang_ignore_js__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! ../lang/ignore.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ignore.js\");\n/* harmony import */ var _lang_inform7_js__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! ../lang/inform7.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/inform7.js\");\n/* harmony import */ var _lang_ini_js__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! ../lang/ini.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ini.js\");\n/* harmony import */ var _lang_io_js__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! ../lang/io.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/io.js\");\n/* harmony import */ var _lang_j_js__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! ../lang/j.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/j.js\");\n/* harmony import */ var _lang_java_js__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! ../lang/java.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js\");\n/* harmony import */ var _lang_php_js__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! ../lang/php.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js\");\n/* harmony import */ var _lang_javadoclike_js__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! ../lang/javadoclike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoclike.js\");\n/* harmony import */ var _lang_scala_js__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! ../lang/scala.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scala.js\");\n/* harmony import */ var _lang_javadoc_js__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! ../lang/javadoc.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javadoc.js\");\n/* harmony import */ var _lang_javastacktrace_js__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! ../lang/javastacktrace.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javastacktrace.js\");\n/* harmony import */ var _lang_jexl_js__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! ../lang/jexl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jexl.js\");\n/* harmony import */ var _lang_jolie_js__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! ../lang/jolie.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jolie.js\");\n/* harmony import */ var _lang_jq_js__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! ../lang/jq.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jq.js\");\n/* harmony import */ var _lang_js_templates_js__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! ../lang/js-templates.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-templates.js\");\n/* harmony import */ var _lang_typescript_js__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! ../lang/typescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js\");\n/* harmony import */ var _lang_jsdoc_js__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! ../lang/jsdoc.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsdoc.js\");\n/* harmony import */ var _lang_n4js_js__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! ../lang/n4js.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n4js.js\");\n/* harmony import */ var _lang_js_extras_js__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! ../lang/js-extras.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/js-extras.js\");\n/* harmony import */ var _lang_json5_js__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! ../lang/json5.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json5.js\");\n/* harmony import */ var _lang_jsonp_js__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! ../lang/jsonp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsonp.js\");\n/* harmony import */ var _lang_jsstacktrace_js__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! ../lang/jsstacktrace.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsstacktrace.js\");\n/* harmony import */ var _lang_julia_js__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! ../lang/julia.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/julia.js\");\n/* harmony import */ var _lang_keepalived_js__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! ../lang/keepalived.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keepalived.js\");\n/* harmony import */ var _lang_keyman_js__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! ../lang/keyman.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/keyman.js\");\n/* harmony import */ var _lang_kotlin_js__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! ../lang/kotlin.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kotlin.js\");\n/* harmony import */ var _lang_kumir_js__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(/*! ../lang/kumir.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kumir.js\");\n/* harmony import */ var _lang_kusto_js__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(/*! ../lang/kusto.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kusto.js\");\n/* harmony import */ var _lang_latex_js__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(/*! ../lang/latex.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latex.js\");\n/* harmony import */ var _lang_latte_js__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(/*! ../lang/latte.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/latte.js\");\n/* harmony import */ var _lang_scheme_js__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(/*! ../lang/scheme.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scheme.js\");\n/* harmony import */ var _lang_lilypond_js__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(/*! ../lang/lilypond.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lilypond.js\");\n/* harmony import */ var _lang_liquid_js__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(/*! ../lang/liquid.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/liquid.js\");\n/* harmony import */ var _lang_lisp_js__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(/*! ../lang/lisp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lisp.js\");\n/* harmony import */ var _lang_livescript_js__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(/*! ../lang/livescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/livescript.js\");\n/* harmony import */ var _lang_llvm_js__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(/*! ../lang/llvm.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/llvm.js\");\n/* harmony import */ var _lang_log_js__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(/*! ../lang/log.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/log.js\");\n/* harmony import */ var _lang_lolcode_js__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(/*! ../lang/lolcode.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lolcode.js\");\n/* harmony import */ var _lang_magma_js__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(/*! ../lang/magma.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/magma.js\");\n/* harmony import */ var _lang_makefile_js__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(/*! ../lang/makefile.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/makefile.js\");\n/* harmony import */ var _lang_mata_js__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(/*! ../lang/mata.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mata.js\");\n/* harmony import */ var _lang_matlab_js__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(/*! ../lang/matlab.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/matlab.js\");\n/* harmony import */ var _lang_maxscript_js__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(/*! ../lang/maxscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/maxscript.js\");\n/* harmony import */ var _lang_mel_js__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(/*! ../lang/mel.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mel.js\");\n/* harmony import */ var _lang_mermaid_js__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(/*! ../lang/mermaid.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mermaid.js\");\n/* harmony import */ var _lang_metafont_js__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(/*! ../lang/metafont.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/metafont.js\");\n/* harmony import */ var _lang_mizar_js__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(/*! ../lang/mizar.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mizar.js\");\n/* harmony import */ var _lang_mongodb_js__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(/*! ../lang/mongodb.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/mongodb.js\");\n/* harmony import */ var _lang_monkey_js__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(/*! ../lang/monkey.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/monkey.js\");\n/* harmony import */ var _lang_moonscript_js__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(/*! ../lang/moonscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/moonscript.js\");\n/* harmony import */ var _lang_n1ql_js__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(/*! ../lang/n1ql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/n1ql.js\");\n/* harmony import */ var _lang_nand2tetris_hdl_js__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(/*! ../lang/nand2tetris-hdl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nand2tetris-hdl.js\");\n/* harmony import */ var _lang_naniscript_js__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(/*! ../lang/naniscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/naniscript.js\");\n/* harmony import */ var _lang_nasm_js__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(/*! ../lang/nasm.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nasm.js\");\n/* harmony import */ var _lang_neon_js__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(/*! ../lang/neon.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/neon.js\");\n/* harmony import */ var _lang_nevod_js__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(/*! ../lang/nevod.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nevod.js\");\n/* harmony import */ var _lang_nginx_js__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(/*! ../lang/nginx.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nginx.js\");\n/* harmony import */ var _lang_nim_js__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(/*! ../lang/nim.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nim.js\");\n/* harmony import */ var _lang_nix_js__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(/*! ../lang/nix.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nix.js\");\n/* harmony import */ var _lang_nsis_js__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(/*! ../lang/nsis.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/nsis.js\");\n/* harmony import */ var _lang_objectivec_js__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(/*! ../lang/objectivec.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/objectivec.js\");\n/* harmony import */ var _lang_ocaml_js__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(/*! ../lang/ocaml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ocaml.js\");\n/* harmony import */ var _lang_odin_js__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(/*! ../lang/odin.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/odin.js\");\n/* harmony import */ var _lang_opencl_js__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(/*! ../lang/opencl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/opencl.js\");\n/* harmony import */ var _lang_openqasm_js__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(/*! ../lang/openqasm.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/openqasm.js\");\n/* harmony import */ var _lang_oz_js__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(/*! ../lang/oz.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/oz.js\");\n/* harmony import */ var _lang_parigp_js__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(/*! ../lang/parigp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parigp.js\");\n/* harmony import */ var _lang_parser_js__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(/*! ../lang/parser.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/parser.js\");\n/* harmony import */ var _lang_pascal_js__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(/*! ../lang/pascal.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascal.js\");\n/* harmony import */ var _lang_pascaligo_js__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(/*! ../lang/pascaligo.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pascaligo.js\");\n/* harmony import */ var _lang_psl_js__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(/*! ../lang/psl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/psl.js\");\n/* harmony import */ var _lang_pcaxis_js__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(/*! ../lang/pcaxis.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pcaxis.js\");\n/* harmony import */ var _lang_peoplecode_js__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(/*! ../lang/peoplecode.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/peoplecode.js\");\n/* harmony import */ var _lang_perl_js__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(/*! ../lang/perl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/perl.js\");\n/* harmony import */ var _lang_phpdoc_js__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(/*! ../lang/phpdoc.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/phpdoc.js\");\n/* harmony import */ var _lang_php_extras_js__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(/*! ../lang/php-extras.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php-extras.js\");\n/* harmony import */ var _lang_plant_uml_js__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(/*! ../lang/plant-uml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plant-uml.js\");\n/* harmony import */ var _lang_plsql_js__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(/*! ../lang/plsql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/plsql.js\");\n/* harmony import */ var _lang_powerquery_js__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(/*! ../lang/powerquery.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powerquery.js\");\n/* harmony import */ var _lang_powershell_js__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(/*! ../lang/powershell.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/powershell.js\");\n/* harmony import */ var _lang_processing_js__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(/*! ../lang/processing.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/processing.js\");\n/* harmony import */ var _lang_prolog_js__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(/*! ../lang/prolog.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/prolog.js\");\n/* harmony import */ var _lang_promql_js__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(/*! ../lang/promql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/promql.js\");\n/* harmony import */ var _lang_properties_js__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(/*! ../lang/properties.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/properties.js\");\n/* harmony import */ var _lang_protobuf_js__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(/*! ../lang/protobuf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/protobuf.js\");\n/* harmony import */ var _lang_stylus_js__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(/*! ../lang/stylus.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stylus.js\");\n/* harmony import */ var _lang_twig_js__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(/*! ../lang/twig.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/twig.js\");\n/* harmony import */ var _lang_pug_js__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(/*! ../lang/pug.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pug.js\");\n/* harmony import */ var _lang_puppet_js__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(/*! ../lang/puppet.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/puppet.js\");\n/* harmony import */ var _lang_pure_js__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(/*! ../lang/pure.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/pure.js\");\n/* harmony import */ var _lang_purebasic_js__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(/*! ../lang/purebasic.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purebasic.js\");\n/* harmony import */ var _lang_purescript_js__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(/*! ../lang/purescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/purescript.js\");\n/* harmony import */ var _lang_python_js__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(/*! ../lang/python.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/python.js\");\n/* harmony import */ var _lang_qsharp_js__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(/*! ../lang/qsharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qsharp.js\");\n/* harmony import */ var _lang_q_js__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(/*! ../lang/q.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/q.js\");\n/* harmony import */ var _lang_qml_js__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(/*! ../lang/qml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qml.js\");\n/* harmony import */ var _lang_qore_js__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(/*! ../lang/qore.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/qore.js\");\n/* harmony import */ var _lang_r_js__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(/*! ../lang/r.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/r.js\");\n/* harmony import */ var _lang_racket_js__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(/*! ../lang/racket.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/racket.js\");\n/* harmony import */ var _lang_cshtml_js__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(/*! ../lang/cshtml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cshtml.js\");\n/* harmony import */ var _lang_jsx_js__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(/*! ../lang/jsx.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/jsx.js\");\n/* harmony import */ var _lang_tsx_js__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(/*! ../lang/tsx.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tsx.js\");\n/* harmony import */ var _lang_reason_js__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(/*! ../lang/reason.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/reason.js\");\n/* harmony import */ var _lang_rego_js__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(/*! ../lang/rego.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rego.js\");\n/* harmony import */ var _lang_renpy_js__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(/*! ../lang/renpy.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/renpy.js\");\n/* harmony import */ var _lang_rescript_js__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(/*! ../lang/rescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rescript.js\");\n/* harmony import */ var _lang_rest_js__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(/*! ../lang/rest.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rest.js\");\n/* harmony import */ var _lang_rip_js__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(/*! ../lang/rip.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rip.js\");\n/* harmony import */ var _lang_roboconf_js__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(/*! ../lang/roboconf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/roboconf.js\");\n/* harmony import */ var _lang_robotframework_js__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(/*! ../lang/robotframework.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/robotframework.js\");\n/* harmony import */ var _lang_rust_js__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(/*! ../lang/rust.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rust.js\");\n/* harmony import */ var _lang_sas_js__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(/*! ../lang/sas.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sas.js\");\n/* harmony import */ var _lang_sass_js__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(/*! ../lang/sass.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sass.js\");\n/* harmony import */ var _lang_shell_session_js__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(/*! ../lang/shell-session.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/shell-session.js\");\n/* harmony import */ var _lang_smali_js__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(/*! ../lang/smali.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smali.js\");\n/* harmony import */ var _lang_smalltalk_js__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(/*! ../lang/smalltalk.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smalltalk.js\");\n/* harmony import */ var _lang_smarty_js__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(/*! ../lang/smarty.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/smarty.js\");\n/* harmony import */ var _lang_sml_js__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(/*! ../lang/sml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sml.js\");\n/* harmony import */ var _lang_solidity_js__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(/*! ../lang/solidity.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solidity.js\");\n/* harmony import */ var _lang_solution_file_js__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(/*! ../lang/solution-file.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/solution-file.js\");\n/* harmony import */ var _lang_soy_js__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(/*! ../lang/soy.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/soy.js\");\n/* harmony import */ var _lang_turtle_js__WEBPACK_IMPORTED_MODULE_255__ = __webpack_require__(/*! ../lang/turtle.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/turtle.js\");\n/* harmony import */ var _lang_sparql_js__WEBPACK_IMPORTED_MODULE_256__ = __webpack_require__(/*! ../lang/sparql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sparql.js\");\n/* harmony import */ var _lang_splunk_spl_js__WEBPACK_IMPORTED_MODULE_257__ = __webpack_require__(/*! ../lang/splunk-spl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/splunk-spl.js\");\n/* harmony import */ var _lang_sqf_js__WEBPACK_IMPORTED_MODULE_258__ = __webpack_require__(/*! ../lang/sqf.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sqf.js\");\n/* harmony import */ var _lang_squirrel_js__WEBPACK_IMPORTED_MODULE_259__ = __webpack_require__(/*! ../lang/squirrel.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/squirrel.js\");\n/* harmony import */ var _lang_stan_js__WEBPACK_IMPORTED_MODULE_260__ = __webpack_require__(/*! ../lang/stan.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stan.js\");\n/* harmony import */ var _lang_stata_js__WEBPACK_IMPORTED_MODULE_261__ = __webpack_require__(/*! ../lang/stata.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/stata.js\");\n/* harmony import */ var _lang_iecst_js__WEBPACK_IMPORTED_MODULE_262__ = __webpack_require__(/*! ../lang/iecst.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/iecst.js\");\n/* harmony import */ var _lang_supercollider_js__WEBPACK_IMPORTED_MODULE_263__ = __webpack_require__(/*! ../lang/supercollider.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/supercollider.js\");\n/* harmony import */ var _lang_swift_js__WEBPACK_IMPORTED_MODULE_264__ = __webpack_require__(/*! ../lang/swift.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/swift.js\");\n/* harmony import */ var _lang_systemd_js__WEBPACK_IMPORTED_MODULE_265__ = __webpack_require__(/*! ../lang/systemd.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/systemd.js\");\n/* harmony import */ var _lang_t4_templating_js__WEBPACK_IMPORTED_MODULE_266__ = __webpack_require__(/*! ../lang/t4-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-templating.js\");\n/* harmony import */ var _lang_t4_cs_js__WEBPACK_IMPORTED_MODULE_267__ = __webpack_require__(/*! ../lang/t4-cs.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-cs.js\");\n/* harmony import */ var _lang_vbnet_js__WEBPACK_IMPORTED_MODULE_268__ = __webpack_require__(/*! ../lang/vbnet.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vbnet.js\");\n/* harmony import */ var _lang_t4_vb_js__WEBPACK_IMPORTED_MODULE_269__ = __webpack_require__(/*! ../lang/t4-vb.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/t4-vb.js\");\n/* harmony import */ var _lang_tap_js__WEBPACK_IMPORTED_MODULE_270__ = __webpack_require__(/*! ../lang/tap.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tap.js\");\n/* harmony import */ var _lang_tcl_js__WEBPACK_IMPORTED_MODULE_271__ = __webpack_require__(/*! ../lang/tcl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tcl.js\");\n/* harmony import */ var _lang_tt2_js__WEBPACK_IMPORTED_MODULE_272__ = __webpack_require__(/*! ../lang/tt2.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tt2.js\");\n/* harmony import */ var _lang_toml_js__WEBPACK_IMPORTED_MODULE_273__ = __webpack_require__(/*! ../lang/toml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/toml.js\");\n/* harmony import */ var _lang_tremor_js__WEBPACK_IMPORTED_MODULE_274__ = __webpack_require__(/*! ../lang/tremor.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/tremor.js\");\n/* harmony import */ var _lang_typoscript_js__WEBPACK_IMPORTED_MODULE_275__ = __webpack_require__(/*! ../lang/typoscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typoscript.js\");\n/* harmony import */ var _lang_unrealscript_js__WEBPACK_IMPORTED_MODULE_276__ = __webpack_require__(/*! ../lang/unrealscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/unrealscript.js\");\n/* harmony import */ var _lang_uorazor_js__WEBPACK_IMPORTED_MODULE_277__ = __webpack_require__(/*! ../lang/uorazor.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/uorazor.js\");\n/* harmony import */ var _lang_v_js__WEBPACK_IMPORTED_MODULE_278__ = __webpack_require__(/*! ../lang/v.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/v.js\");\n/* harmony import */ var _lang_vala_js__WEBPACK_IMPORTED_MODULE_279__ = __webpack_require__(/*! ../lang/vala.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vala.js\");\n/* harmony import */ var _lang_velocity_js__WEBPACK_IMPORTED_MODULE_280__ = __webpack_require__(/*! ../lang/velocity.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/velocity.js\");\n/* harmony import */ var _lang_verilog_js__WEBPACK_IMPORTED_MODULE_281__ = __webpack_require__(/*! ../lang/verilog.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/verilog.js\");\n/* harmony import */ var _lang_vhdl_js__WEBPACK_IMPORTED_MODULE_282__ = __webpack_require__(/*! ../lang/vhdl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vhdl.js\");\n/* harmony import */ var _lang_vim_js__WEBPACK_IMPORTED_MODULE_283__ = __webpack_require__(/*! ../lang/vim.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vim.js\");\n/* harmony import */ var _lang_visual_basic_js__WEBPACK_IMPORTED_MODULE_284__ = __webpack_require__(/*! ../lang/visual-basic.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/visual-basic.js\");\n/* harmony import */ var _lang_warpscript_js__WEBPACK_IMPORTED_MODULE_285__ = __webpack_require__(/*! ../lang/warpscript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/warpscript.js\");\n/* harmony import */ var _lang_wasm_js__WEBPACK_IMPORTED_MODULE_286__ = __webpack_require__(/*! ../lang/wasm.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wasm.js\");\n/* harmony import */ var _lang_web_idl_js__WEBPACK_IMPORTED_MODULE_287__ = __webpack_require__(/*! ../lang/web-idl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/web-idl.js\");\n/* harmony import */ var _lang_wgsl_js__WEBPACK_IMPORTED_MODULE_288__ = __webpack_require__(/*! ../lang/wgsl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wgsl.js\");\n/* harmony import */ var _lang_wiki_js__WEBPACK_IMPORTED_MODULE_289__ = __webpack_require__(/*! ../lang/wiki.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wiki.js\");\n/* harmony import */ var _lang_wolfram_js__WEBPACK_IMPORTED_MODULE_290__ = __webpack_require__(/*! ../lang/wolfram.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wolfram.js\");\n/* harmony import */ var _lang_wren_js__WEBPACK_IMPORTED_MODULE_291__ = __webpack_require__(/*! ../lang/wren.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/wren.js\");\n/* harmony import */ var _lang_xeora_js__WEBPACK_IMPORTED_MODULE_292__ = __webpack_require__(/*! ../lang/xeora.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xeora.js\");\n/* harmony import */ var _lang_xml_doc_js__WEBPACK_IMPORTED_MODULE_293__ = __webpack_require__(/*! ../lang/xml-doc.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xml-doc.js\");\n/* harmony import */ var _lang_xojo_js__WEBPACK_IMPORTED_MODULE_294__ = __webpack_require__(/*! ../lang/xojo.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xojo.js\");\n/* harmony import */ var _lang_xquery_js__WEBPACK_IMPORTED_MODULE_295__ = __webpack_require__(/*! ../lang/xquery.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/xquery.js\");\n/* harmony import */ var _lang_yang_js__WEBPACK_IMPORTED_MODULE_296__ = __webpack_require__(/*! ../lang/yang.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yang.js\");\n/* harmony import */ var _lang_zig_js__WEBPACK_IMPORTED_MODULE_297__ = __webpack_require__(/*! ../lang/zig.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/zig.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/core.js\");\n/**\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\n * @typedef {import('./core.js').RefractorElement} RefractorElement\n * @typedef {import('./core.js').Text} Text\n * @typedef {import('./core.js').Grammar} Grammar\n * @typedef {import('./core.js').Syntax} Syntax\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_markup_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_css_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_clike_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_regex_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_javascript_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_abap_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_abnf_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_actionscript_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ada_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_agda_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_al_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_antlr4_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_apacheconf_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sql_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_apex_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_apl_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_applescript_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_aql_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_c_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cpp_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_arduino_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_arff_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_armasm_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bash_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_yaml_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_markdown_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_arturo_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_asciidoc_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_csharp_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_aspnet_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_asm6502_js__WEBPACK_IMPORTED_MODULE_31__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_asmatmel_js__WEBPACK_IMPORTED_MODULE_32__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_autohotkey_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_autoit_js__WEBPACK_IMPORTED_MODULE_34__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_avisynth_js__WEBPACK_IMPORTED_MODULE_35__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_avro_idl_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_awk_js__WEBPACK_IMPORTED_MODULE_37__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_basic_js__WEBPACK_IMPORTED_MODULE_38__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_batch_js__WEBPACK_IMPORTED_MODULE_39__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bbcode_js__WEBPACK_IMPORTED_MODULE_40__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bbj_js__WEBPACK_IMPORTED_MODULE_41__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bicep_js__WEBPACK_IMPORTED_MODULE_42__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_birb_js__WEBPACK_IMPORTED_MODULE_43__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bison_js__WEBPACK_IMPORTED_MODULE_44__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bnf_js__WEBPACK_IMPORTED_MODULE_45__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bqn_js__WEBPACK_IMPORTED_MODULE_46__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_brainfuck_js__WEBPACK_IMPORTED_MODULE_47__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_brightscript_js__WEBPACK_IMPORTED_MODULE_48__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bro_js__WEBPACK_IMPORTED_MODULE_49__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bsl_js__WEBPACK_IMPORTED_MODULE_50__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cfscript_js__WEBPACK_IMPORTED_MODULE_51__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_chaiscript_js__WEBPACK_IMPORTED_MODULE_52__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cil_js__WEBPACK_IMPORTED_MODULE_53__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cilkc_js__WEBPACK_IMPORTED_MODULE_54__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cilkcpp_js__WEBPACK_IMPORTED_MODULE_55__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_clojure_js__WEBPACK_IMPORTED_MODULE_56__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cmake_js__WEBPACK_IMPORTED_MODULE_57__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cobol_js__WEBPACK_IMPORTED_MODULE_58__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_coffeescript_js__WEBPACK_IMPORTED_MODULE_59__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_concurnas_js__WEBPACK_IMPORTED_MODULE_60__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_csp_js__WEBPACK_IMPORTED_MODULE_61__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cooklang_js__WEBPACK_IMPORTED_MODULE_62__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_coq_js__WEBPACK_IMPORTED_MODULE_63__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ruby_js__WEBPACK_IMPORTED_MODULE_64__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_crystal_js__WEBPACK_IMPORTED_MODULE_65__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_css_extras_js__WEBPACK_IMPORTED_MODULE_66__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_csv_js__WEBPACK_IMPORTED_MODULE_67__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cue_js__WEBPACK_IMPORTED_MODULE_68__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cypher_js__WEBPACK_IMPORTED_MODULE_69__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_d_js__WEBPACK_IMPORTED_MODULE_70__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_dart_js__WEBPACK_IMPORTED_MODULE_71__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_dataweave_js__WEBPACK_IMPORTED_MODULE_72__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_dax_js__WEBPACK_IMPORTED_MODULE_73__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_dhall_js__WEBPACK_IMPORTED_MODULE_74__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_diff_js__WEBPACK_IMPORTED_MODULE_75__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_markup_templating_js__WEBPACK_IMPORTED_MODULE_76__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_django_js__WEBPACK_IMPORTED_MODULE_77__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_dns_zone_file_js__WEBPACK_IMPORTED_MODULE_78__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_docker_js__WEBPACK_IMPORTED_MODULE_79__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_dot_js__WEBPACK_IMPORTED_MODULE_80__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ebnf_js__WEBPACK_IMPORTED_MODULE_81__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_editorconfig_js__WEBPACK_IMPORTED_MODULE_82__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_eiffel_js__WEBPACK_IMPORTED_MODULE_83__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ejs_js__WEBPACK_IMPORTED_MODULE_84__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_elixir_js__WEBPACK_IMPORTED_MODULE_85__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_elm_js__WEBPACK_IMPORTED_MODULE_86__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_lua_js__WEBPACK_IMPORTED_MODULE_87__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_etlua_js__WEBPACK_IMPORTED_MODULE_88__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_erb_js__WEBPACK_IMPORTED_MODULE_89__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_erlang_js__WEBPACK_IMPORTED_MODULE_90__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_excel_formula_js__WEBPACK_IMPORTED_MODULE_91__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_fsharp_js__WEBPACK_IMPORTED_MODULE_92__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_factor_js__WEBPACK_IMPORTED_MODULE_93__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_false_js__WEBPACK_IMPORTED_MODULE_94__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_firestore_security_rules_js__WEBPACK_IMPORTED_MODULE_95__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_flow_js__WEBPACK_IMPORTED_MODULE_96__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_fortran_js__WEBPACK_IMPORTED_MODULE_97__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ftl_js__WEBPACK_IMPORTED_MODULE_98__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gml_js__WEBPACK_IMPORTED_MODULE_99__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gap_js__WEBPACK_IMPORTED_MODULE_100__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gcode_js__WEBPACK_IMPORTED_MODULE_101__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gdscript_js__WEBPACK_IMPORTED_MODULE_102__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gedcom_js__WEBPACK_IMPORTED_MODULE_103__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gettext_js__WEBPACK_IMPORTED_MODULE_104__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gherkin_js__WEBPACK_IMPORTED_MODULE_105__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_git_js__WEBPACK_IMPORTED_MODULE_106__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_glsl_js__WEBPACK_IMPORTED_MODULE_107__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gn_js__WEBPACK_IMPORTED_MODULE_108__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_linker_script_js__WEBPACK_IMPORTED_MODULE_109__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_go_js__WEBPACK_IMPORTED_MODULE_110__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_go_module_js__WEBPACK_IMPORTED_MODULE_111__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_gradle_js__WEBPACK_IMPORTED_MODULE_112__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_graphql_js__WEBPACK_IMPORTED_MODULE_113__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_groovy_js__WEBPACK_IMPORTED_MODULE_114__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_less_js__WEBPACK_IMPORTED_MODULE_115__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_scss_js__WEBPACK_IMPORTED_MODULE_116__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_textile_js__WEBPACK_IMPORTED_MODULE_117__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_haml_js__WEBPACK_IMPORTED_MODULE_118__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_handlebars_js__WEBPACK_IMPORTED_MODULE_119__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_haskell_js__WEBPACK_IMPORTED_MODULE_120__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_haxe_js__WEBPACK_IMPORTED_MODULE_121__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_hcl_js__WEBPACK_IMPORTED_MODULE_122__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_hlsl_js__WEBPACK_IMPORTED_MODULE_123__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_hoon_js__WEBPACK_IMPORTED_MODULE_124__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_hpkp_js__WEBPACK_IMPORTED_MODULE_125__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_hsts_js__WEBPACK_IMPORTED_MODULE_126__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_json_js__WEBPACK_IMPORTED_MODULE_127__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_uri_js__WEBPACK_IMPORTED_MODULE_128__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_http_js__WEBPACK_IMPORTED_MODULE_129__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ichigojam_js__WEBPACK_IMPORTED_MODULE_130__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_icon_js__WEBPACK_IMPORTED_MODULE_131__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_icu_message_format_js__WEBPACK_IMPORTED_MODULE_132__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_idris_js__WEBPACK_IMPORTED_MODULE_133__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ignore_js__WEBPACK_IMPORTED_MODULE_134__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_inform7_js__WEBPACK_IMPORTED_MODULE_135__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ini_js__WEBPACK_IMPORTED_MODULE_136__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_io_js__WEBPACK_IMPORTED_MODULE_137__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_j_js__WEBPACK_IMPORTED_MODULE_138__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_java_js__WEBPACK_IMPORTED_MODULE_139__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_php_js__WEBPACK_IMPORTED_MODULE_140__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_javadoclike_js__WEBPACK_IMPORTED_MODULE_141__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_scala_js__WEBPACK_IMPORTED_MODULE_142__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_javadoc_js__WEBPACK_IMPORTED_MODULE_143__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_javastacktrace_js__WEBPACK_IMPORTED_MODULE_144__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jexl_js__WEBPACK_IMPORTED_MODULE_145__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jolie_js__WEBPACK_IMPORTED_MODULE_146__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jq_js__WEBPACK_IMPORTED_MODULE_147__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_js_templates_js__WEBPACK_IMPORTED_MODULE_148__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_typescript_js__WEBPACK_IMPORTED_MODULE_149__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jsdoc_js__WEBPACK_IMPORTED_MODULE_150__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_n4js_js__WEBPACK_IMPORTED_MODULE_151__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_js_extras_js__WEBPACK_IMPORTED_MODULE_152__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_json5_js__WEBPACK_IMPORTED_MODULE_153__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jsonp_js__WEBPACK_IMPORTED_MODULE_154__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jsstacktrace_js__WEBPACK_IMPORTED_MODULE_155__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_julia_js__WEBPACK_IMPORTED_MODULE_156__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_keepalived_js__WEBPACK_IMPORTED_MODULE_157__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_keyman_js__WEBPACK_IMPORTED_MODULE_158__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_kotlin_js__WEBPACK_IMPORTED_MODULE_159__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_kumir_js__WEBPACK_IMPORTED_MODULE_160__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_kusto_js__WEBPACK_IMPORTED_MODULE_161__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_latex_js__WEBPACK_IMPORTED_MODULE_162__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_latte_js__WEBPACK_IMPORTED_MODULE_163__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_scheme_js__WEBPACK_IMPORTED_MODULE_164__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_lilypond_js__WEBPACK_IMPORTED_MODULE_165__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_liquid_js__WEBPACK_IMPORTED_MODULE_166__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_lisp_js__WEBPACK_IMPORTED_MODULE_167__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_livescript_js__WEBPACK_IMPORTED_MODULE_168__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_llvm_js__WEBPACK_IMPORTED_MODULE_169__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_log_js__WEBPACK_IMPORTED_MODULE_170__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_lolcode_js__WEBPACK_IMPORTED_MODULE_171__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_magma_js__WEBPACK_IMPORTED_MODULE_172__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_makefile_js__WEBPACK_IMPORTED_MODULE_173__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_mata_js__WEBPACK_IMPORTED_MODULE_174__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_matlab_js__WEBPACK_IMPORTED_MODULE_175__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_maxscript_js__WEBPACK_IMPORTED_MODULE_176__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_mel_js__WEBPACK_IMPORTED_MODULE_177__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_mermaid_js__WEBPACK_IMPORTED_MODULE_178__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_metafont_js__WEBPACK_IMPORTED_MODULE_179__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_mizar_js__WEBPACK_IMPORTED_MODULE_180__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_mongodb_js__WEBPACK_IMPORTED_MODULE_181__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_monkey_js__WEBPACK_IMPORTED_MODULE_182__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_moonscript_js__WEBPACK_IMPORTED_MODULE_183__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_n1ql_js__WEBPACK_IMPORTED_MODULE_184__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nand2tetris_hdl_js__WEBPACK_IMPORTED_MODULE_185__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_naniscript_js__WEBPACK_IMPORTED_MODULE_186__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nasm_js__WEBPACK_IMPORTED_MODULE_187__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_neon_js__WEBPACK_IMPORTED_MODULE_188__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nevod_js__WEBPACK_IMPORTED_MODULE_189__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nginx_js__WEBPACK_IMPORTED_MODULE_190__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nim_js__WEBPACK_IMPORTED_MODULE_191__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nix_js__WEBPACK_IMPORTED_MODULE_192__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_nsis_js__WEBPACK_IMPORTED_MODULE_193__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_objectivec_js__WEBPACK_IMPORTED_MODULE_194__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ocaml_js__WEBPACK_IMPORTED_MODULE_195__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_odin_js__WEBPACK_IMPORTED_MODULE_196__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_opencl_js__WEBPACK_IMPORTED_MODULE_197__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_openqasm_js__WEBPACK_IMPORTED_MODULE_198__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_oz_js__WEBPACK_IMPORTED_MODULE_199__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_parigp_js__WEBPACK_IMPORTED_MODULE_200__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_parser_js__WEBPACK_IMPORTED_MODULE_201__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_pascal_js__WEBPACK_IMPORTED_MODULE_202__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_pascaligo_js__WEBPACK_IMPORTED_MODULE_203__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_psl_js__WEBPACK_IMPORTED_MODULE_204__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_pcaxis_js__WEBPACK_IMPORTED_MODULE_205__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_peoplecode_js__WEBPACK_IMPORTED_MODULE_206__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_perl_js__WEBPACK_IMPORTED_MODULE_207__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_phpdoc_js__WEBPACK_IMPORTED_MODULE_208__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_php_extras_js__WEBPACK_IMPORTED_MODULE_209__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_plant_uml_js__WEBPACK_IMPORTED_MODULE_210__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_plsql_js__WEBPACK_IMPORTED_MODULE_211__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_powerquery_js__WEBPACK_IMPORTED_MODULE_212__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_powershell_js__WEBPACK_IMPORTED_MODULE_213__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_processing_js__WEBPACK_IMPORTED_MODULE_214__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_prolog_js__WEBPACK_IMPORTED_MODULE_215__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_promql_js__WEBPACK_IMPORTED_MODULE_216__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_properties_js__WEBPACK_IMPORTED_MODULE_217__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_protobuf_js__WEBPACK_IMPORTED_MODULE_218__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_stylus_js__WEBPACK_IMPORTED_MODULE_219__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_twig_js__WEBPACK_IMPORTED_MODULE_220__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_pug_js__WEBPACK_IMPORTED_MODULE_221__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_puppet_js__WEBPACK_IMPORTED_MODULE_222__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_pure_js__WEBPACK_IMPORTED_MODULE_223__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_purebasic_js__WEBPACK_IMPORTED_MODULE_224__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_purescript_js__WEBPACK_IMPORTED_MODULE_225__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_python_js__WEBPACK_IMPORTED_MODULE_226__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_qsharp_js__WEBPACK_IMPORTED_MODULE_227__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_q_js__WEBPACK_IMPORTED_MODULE_228__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_qml_js__WEBPACK_IMPORTED_MODULE_229__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_qore_js__WEBPACK_IMPORTED_MODULE_230__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_r_js__WEBPACK_IMPORTED_MODULE_231__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_racket_js__WEBPACK_IMPORTED_MODULE_232__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cshtml_js__WEBPACK_IMPORTED_MODULE_233__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_jsx_js__WEBPACK_IMPORTED_MODULE_234__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_tsx_js__WEBPACK_IMPORTED_MODULE_235__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_reason_js__WEBPACK_IMPORTED_MODULE_236__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_rego_js__WEBPACK_IMPORTED_MODULE_237__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_renpy_js__WEBPACK_IMPORTED_MODULE_238__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_rescript_js__WEBPACK_IMPORTED_MODULE_239__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_rest_js__WEBPACK_IMPORTED_MODULE_240__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_rip_js__WEBPACK_IMPORTED_MODULE_241__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_roboconf_js__WEBPACK_IMPORTED_MODULE_242__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_robotframework_js__WEBPACK_IMPORTED_MODULE_243__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_rust_js__WEBPACK_IMPORTED_MODULE_244__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sas_js__WEBPACK_IMPORTED_MODULE_245__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sass_js__WEBPACK_IMPORTED_MODULE_246__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_shell_session_js__WEBPACK_IMPORTED_MODULE_247__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_smali_js__WEBPACK_IMPORTED_MODULE_248__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_smalltalk_js__WEBPACK_IMPORTED_MODULE_249__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_smarty_js__WEBPACK_IMPORTED_MODULE_250__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sml_js__WEBPACK_IMPORTED_MODULE_251__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_solidity_js__WEBPACK_IMPORTED_MODULE_252__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_solution_file_js__WEBPACK_IMPORTED_MODULE_253__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_soy_js__WEBPACK_IMPORTED_MODULE_254__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_turtle_js__WEBPACK_IMPORTED_MODULE_255__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sparql_js__WEBPACK_IMPORTED_MODULE_256__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_splunk_spl_js__WEBPACK_IMPORTED_MODULE_257__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sqf_js__WEBPACK_IMPORTED_MODULE_258__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_squirrel_js__WEBPACK_IMPORTED_MODULE_259__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_stan_js__WEBPACK_IMPORTED_MODULE_260__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_stata_js__WEBPACK_IMPORTED_MODULE_261__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_iecst_js__WEBPACK_IMPORTED_MODULE_262__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_supercollider_js__WEBPACK_IMPORTED_MODULE_263__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_swift_js__WEBPACK_IMPORTED_MODULE_264__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_systemd_js__WEBPACK_IMPORTED_MODULE_265__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_t4_templating_js__WEBPACK_IMPORTED_MODULE_266__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_t4_cs_js__WEBPACK_IMPORTED_MODULE_267__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_vbnet_js__WEBPACK_IMPORTED_MODULE_268__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_t4_vb_js__WEBPACK_IMPORTED_MODULE_269__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_tap_js__WEBPACK_IMPORTED_MODULE_270__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_tcl_js__WEBPACK_IMPORTED_MODULE_271__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_tt2_js__WEBPACK_IMPORTED_MODULE_272__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_toml_js__WEBPACK_IMPORTED_MODULE_273__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_tremor_js__WEBPACK_IMPORTED_MODULE_274__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_typoscript_js__WEBPACK_IMPORTED_MODULE_275__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_unrealscript_js__WEBPACK_IMPORTED_MODULE_276__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_uorazor_js__WEBPACK_IMPORTED_MODULE_277__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_v_js__WEBPACK_IMPORTED_MODULE_278__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_vala_js__WEBPACK_IMPORTED_MODULE_279__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_velocity_js__WEBPACK_IMPORTED_MODULE_280__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_verilog_js__WEBPACK_IMPORTED_MODULE_281__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_vhdl_js__WEBPACK_IMPORTED_MODULE_282__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_vim_js__WEBPACK_IMPORTED_MODULE_283__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_visual_basic_js__WEBPACK_IMPORTED_MODULE_284__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_warpscript_js__WEBPACK_IMPORTED_MODULE_285__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_wasm_js__WEBPACK_IMPORTED_MODULE_286__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_web_idl_js__WEBPACK_IMPORTED_MODULE_287__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_wgsl_js__WEBPACK_IMPORTED_MODULE_288__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_wiki_js__WEBPACK_IMPORTED_MODULE_289__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_wolfram_js__WEBPACK_IMPORTED_MODULE_290__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_wren_js__WEBPACK_IMPORTED_MODULE_291__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_xeora_js__WEBPACK_IMPORTED_MODULE_292__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_xml_doc_js__WEBPACK_IMPORTED_MODULE_293__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_xojo_js__WEBPACK_IMPORTED_MODULE_294__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_xquery_js__WEBPACK_IMPORTED_MODULE_295__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_yang_js__WEBPACK_IMPORTED_MODULE_296__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_zig_js__WEBPACK_IMPORTED_MODULE_297__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/all.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/common.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/common.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   refractor: () => (/* reexport safe */ _core_js__WEBPACK_IMPORTED_MODULE_0__.refractor)\n/* harmony export */ });\n/* harmony import */ var _lang_clike_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lang/clike.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/clike.js\");\n/* harmony import */ var _lang_c_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lang/c.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/c.js\");\n/* harmony import */ var _lang_cpp_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lang/cpp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/cpp.js\");\n/* harmony import */ var _lang_arduino_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lang/arduino.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/arduino.js\");\n/* harmony import */ var _lang_bash_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lang/bash.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/bash.js\");\n/* harmony import */ var _lang_csharp_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lang/csharp.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/csharp.js\");\n/* harmony import */ var _lang_markup_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lang/markup.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup.js\");\n/* harmony import */ var _lang_css_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../lang/css.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/css.js\");\n/* harmony import */ var _lang_diff_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../lang/diff.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/diff.js\");\n/* harmony import */ var _lang_go_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../lang/go.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/go.js\");\n/* harmony import */ var _lang_ini_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../lang/ini.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ini.js\");\n/* harmony import */ var _lang_java_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../lang/java.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/java.js\");\n/* harmony import */ var _lang_regex_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../lang/regex.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/regex.js\");\n/* harmony import */ var _lang_javascript_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lang/javascript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/javascript.js\");\n/* harmony import */ var _lang_json_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../lang/json.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/json.js\");\n/* harmony import */ var _lang_kotlin_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../lang/kotlin.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/kotlin.js\");\n/* harmony import */ var _lang_less_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../lang/less.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/less.js\");\n/* harmony import */ var _lang_lua_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../lang/lua.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/lua.js\");\n/* harmony import */ var _lang_makefile_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../lang/makefile.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/makefile.js\");\n/* harmony import */ var _lang_yaml_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../lang/yaml.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/yaml.js\");\n/* harmony import */ var _lang_markdown_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../lang/markdown.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markdown.js\");\n/* harmony import */ var _lang_objectivec_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../lang/objectivec.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/objectivec.js\");\n/* harmony import */ var _lang_perl_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../lang/perl.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/perl.js\");\n/* harmony import */ var _lang_markup_templating_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../lang/markup-templating.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/markup-templating.js\");\n/* harmony import */ var _lang_php_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../lang/php.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/php.js\");\n/* harmony import */ var _lang_python_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../lang/python.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/python.js\");\n/* harmony import */ var _lang_r_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../lang/r.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/r.js\");\n/* harmony import */ var _lang_ruby_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../lang/ruby.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/ruby.js\");\n/* harmony import */ var _lang_rust_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../lang/rust.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/rust.js\");\n/* harmony import */ var _lang_sass_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../lang/sass.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sass.js\");\n/* harmony import */ var _lang_scss_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../lang/scss.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/scss.js\");\n/* harmony import */ var _lang_sql_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../lang/sql.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/sql.js\");\n/* harmony import */ var _lang_swift_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../lang/swift.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/swift.js\");\n/* harmony import */ var _lang_typescript_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../lang/typescript.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/typescript.js\");\n/* harmony import */ var _lang_basic_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../lang/basic.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/basic.js\");\n/* harmony import */ var _lang_vbnet_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../lang/vbnet.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lang/vbnet.js\");\n/* harmony import */ var _core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./core.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/core.js\");\n/**\n * @typedef {import('./core.js').RefractorRoot} RefractorRoot\n * @typedef {import('./core.js').RefractorElement} RefractorElement\n * @typedef {import('./core.js').Text} Text\n * @typedef {import('./core.js').Grammar} Grammar\n * @typedef {import('./core.js').Syntax} Syntax\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_clike_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_c_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_cpp_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_arduino_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_bash_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_csharp_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_markup_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_css_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_diff_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_go_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ini_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_java_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_regex_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_javascript_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_json_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_kotlin_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_less_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_lua_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_makefile_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_yaml_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_markdown_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_objectivec_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_perl_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_markup_templating_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_php_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_python_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_r_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_ruby_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_rust_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sass_js__WEBPACK_IMPORTED_MODULE_30__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_scss_js__WEBPACK_IMPORTED_MODULE_31__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_sql_js__WEBPACK_IMPORTED_MODULE_32__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_swift_js__WEBPACK_IMPORTED_MODULE_33__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_typescript_js__WEBPACK_IMPORTED_MODULE_34__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_basic_js__WEBPACK_IMPORTED_MODULE_35__[\"default\"]);\n_core_js__WEBPACK_IMPORTED_MODULE_0__.refractor.register(_lang_vbnet_js__WEBPACK_IMPORTED_MODULE_36__[\"default\"]);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vcmVmcmFjdG9yQDQuOC4xL25vZGVfbW9kdWxlcy9yZWZyYWN0b3IvbGliL2NvbW1vbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7Ozs7Q0FNQyxHQUNtQztBQUNSO0FBQ0k7QUFDUTtBQUNOO0FBQ0k7QUFDQTtBQUNOO0FBQ0U7QUFDSjtBQUNFO0FBQ0U7QUFDRTtBQUNVO0FBQ1o7QUFDSTtBQUNKO0FBQ0Y7QUFDVTtBQUNSO0FBQ1E7QUFDSTtBQUNaO0FBQ3lCO0FBQzNCO0FBQ007QUFDVjtBQUNNO0FBQ0E7QUFDQTtBQUNBO0FBQ0Y7QUFDSTtBQUNVO0FBQ1Y7QUFDQTtBQUNEO0FBRW5Db0MsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ3JDLHNEQUFLQTtBQUN4Qm9DLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNwQyxrREFBQ0E7QUFDcEJtQywrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDbkMsb0RBQUdBO0FBQ3RCa0MsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ2xDLHdEQUFPQTtBQUMxQmlDLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNqQyxxREFBSUE7QUFDdkJnQywrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDaEMsdURBQU1BO0FBQ3pCK0IsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQy9CLHVEQUFNQTtBQUN6QjhCLCtDQUFTQSxDQUFDQyxRQUFRLENBQUM5QixvREFBR0E7QUFDdEI2QiwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDN0IscURBQUlBO0FBQ3ZCNEIsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQzVCLG9EQUFFQTtBQUNyQjJCLCtDQUFTQSxDQUFDQyxRQUFRLENBQUMzQixxREFBR0E7QUFDdEIwQiwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDMUIsc0RBQUlBO0FBQ3ZCeUIsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ3pCLHVEQUFLQTtBQUN4QndCLCtDQUFTQSxDQUFDQyxRQUFRLENBQUN4Qiw0REFBVUE7QUFDN0J1QiwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDdkIsc0RBQUlBO0FBQ3ZCc0IsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ3RCLHdEQUFNQTtBQUN6QnFCLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNyQixzREFBSUE7QUFDdkJvQiwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDcEIscURBQUdBO0FBQ3RCbUIsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ25CLDBEQUFRQTtBQUMzQmtCLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNsQixzREFBSUE7QUFDdkJpQiwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDakIsMERBQVFBO0FBQzNCZ0IsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ2hCLDREQUFVQTtBQUM3QmUsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ2Ysc0RBQUlBO0FBQ3ZCYywrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDZCxtRUFBZ0JBO0FBQ25DYSwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDYixxREFBR0E7QUFDdEJZLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNaLHdEQUFNQTtBQUN6QlcsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ1gsbURBQUNBO0FBQ3BCVSwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDVixzREFBSUE7QUFDdkJTLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNULHNEQUFJQTtBQUN2QlEsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ1Isc0RBQUlBO0FBQ3ZCTywrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDUCxzREFBSUE7QUFDdkJNLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNOLHFEQUFHQTtBQUN0QkssK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ0wsdURBQUtBO0FBQ3hCSSwrQ0FBU0EsQ0FBQ0MsUUFBUSxDQUFDSiw0REFBVUE7QUFDN0JHLCtDQUFTQSxDQUFDQyxRQUFRLENBQUNILHVEQUFLQTtBQUN4QkUsK0NBQVNBLENBQUNDLFFBQVEsQ0FBQ0YsdURBQUtBO0FBRVciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tYXJrZG93bi1ibG9nLy4vbm9kZV9tb2R1bGVzLy5wbnBtL3JlZnJhY3RvckA0LjguMS9ub2RlX21vZHVsZXMvcmVmcmFjdG9yL2xpYi9jb21tb24uanM/NjBkNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29yZS5qcycpLlJlZnJhY3RvclJvb3R9IFJlZnJhY3RvclJvb3RcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29yZS5qcycpLlJlZnJhY3RvckVsZW1lbnR9IFJlZnJhY3RvckVsZW1lbnRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29yZS5qcycpLlRleHR9IFRleHRcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29yZS5qcycpLkdyYW1tYXJ9IEdyYW1tYXJcbiAqIEB0eXBlZGVmIHtpbXBvcnQoJy4vY29yZS5qcycpLlN5bnRheH0gU3ludGF4XG4gKi9cbmltcG9ydCBjbGlrZSBmcm9tICcuLi9sYW5nL2NsaWtlLmpzJ1xuaW1wb3J0IGMgZnJvbSAnLi4vbGFuZy9jLmpzJ1xuaW1wb3J0IGNwcCBmcm9tICcuLi9sYW5nL2NwcC5qcydcbmltcG9ydCBhcmR1aW5vIGZyb20gJy4uL2xhbmcvYXJkdWluby5qcydcbmltcG9ydCBiYXNoIGZyb20gJy4uL2xhbmcvYmFzaC5qcydcbmltcG9ydCBjc2hhcnAgZnJvbSAnLi4vbGFuZy9jc2hhcnAuanMnXG5pbXBvcnQgbWFya3VwIGZyb20gJy4uL2xhbmcvbWFya3VwLmpzJ1xuaW1wb3J0IGNzcyBmcm9tICcuLi9sYW5nL2Nzcy5qcydcbmltcG9ydCBkaWZmIGZyb20gJy4uL2xhbmcvZGlmZi5qcydcbmltcG9ydCBnbyBmcm9tICcuLi9sYW5nL2dvLmpzJ1xuaW1wb3J0IGluaSBmcm9tICcuLi9sYW5nL2luaS5qcydcbmltcG9ydCBqYXZhIGZyb20gJy4uL2xhbmcvamF2YS5qcydcbmltcG9ydCByZWdleCBmcm9tICcuLi9sYW5nL3JlZ2V4LmpzJ1xuaW1wb3J0IGphdmFzY3JpcHQgZnJvbSAnLi4vbGFuZy9qYXZhc2NyaXB0LmpzJ1xuaW1wb3J0IGpzb24gZnJvbSAnLi4vbGFuZy9qc29uLmpzJ1xuaW1wb3J0IGtvdGxpbiBmcm9tICcuLi9sYW5nL2tvdGxpbi5qcydcbmltcG9ydCBsZXNzIGZyb20gJy4uL2xhbmcvbGVzcy5qcydcbmltcG9ydCBsdWEgZnJvbSAnLi4vbGFuZy9sdWEuanMnXG5pbXBvcnQgbWFrZWZpbGUgZnJvbSAnLi4vbGFuZy9tYWtlZmlsZS5qcydcbmltcG9ydCB5YW1sIGZyb20gJy4uL2xhbmcveWFtbC5qcydcbmltcG9ydCBtYXJrZG93biBmcm9tICcuLi9sYW5nL21hcmtkb3duLmpzJ1xuaW1wb3J0IG9iamVjdGl2ZWMgZnJvbSAnLi4vbGFuZy9vYmplY3RpdmVjLmpzJ1xuaW1wb3J0IHBlcmwgZnJvbSAnLi4vbGFuZy9wZXJsLmpzJ1xuaW1wb3J0IG1hcmt1cFRlbXBsYXRpbmcgZnJvbSAnLi4vbGFuZy9tYXJrdXAtdGVtcGxhdGluZy5qcydcbmltcG9ydCBwaHAgZnJvbSAnLi4vbGFuZy9waHAuanMnXG5pbXBvcnQgcHl0aG9uIGZyb20gJy4uL2xhbmcvcHl0aG9uLmpzJ1xuaW1wb3J0IHIgZnJvbSAnLi4vbGFuZy9yLmpzJ1xuaW1wb3J0IHJ1YnkgZnJvbSAnLi4vbGFuZy9ydWJ5LmpzJ1xuaW1wb3J0IHJ1c3QgZnJvbSAnLi4vbGFuZy9ydXN0LmpzJ1xuaW1wb3J0IHNhc3MgZnJvbSAnLi4vbGFuZy9zYXNzLmpzJ1xuaW1wb3J0IHNjc3MgZnJvbSAnLi4vbGFuZy9zY3NzLmpzJ1xuaW1wb3J0IHNxbCBmcm9tICcuLi9sYW5nL3NxbC5qcydcbmltcG9ydCBzd2lmdCBmcm9tICcuLi9sYW5nL3N3aWZ0LmpzJ1xuaW1wb3J0IHR5cGVzY3JpcHQgZnJvbSAnLi4vbGFuZy90eXBlc2NyaXB0LmpzJ1xuaW1wb3J0IGJhc2ljIGZyb20gJy4uL2xhbmcvYmFzaWMuanMnXG5pbXBvcnQgdmJuZXQgZnJvbSAnLi4vbGFuZy92Ym5ldC5qcydcbmltcG9ydCB7cmVmcmFjdG9yfSBmcm9tICcuL2NvcmUuanMnXG5cbnJlZnJhY3Rvci5yZWdpc3RlcihjbGlrZSlcbnJlZnJhY3Rvci5yZWdpc3RlcihjKVxucmVmcmFjdG9yLnJlZ2lzdGVyKGNwcClcbnJlZnJhY3Rvci5yZWdpc3RlcihhcmR1aW5vKVxucmVmcmFjdG9yLnJlZ2lzdGVyKGJhc2gpXG5yZWZyYWN0b3IucmVnaXN0ZXIoY3NoYXJwKVxucmVmcmFjdG9yLnJlZ2lzdGVyKG1hcmt1cClcbnJlZnJhY3Rvci5yZWdpc3Rlcihjc3MpXG5yZWZyYWN0b3IucmVnaXN0ZXIoZGlmZilcbnJlZnJhY3Rvci5yZWdpc3RlcihnbylcbnJlZnJhY3Rvci5yZWdpc3RlcihpbmkpXG5yZWZyYWN0b3IucmVnaXN0ZXIoamF2YSlcbnJlZnJhY3Rvci5yZWdpc3RlcihyZWdleClcbnJlZnJhY3Rvci5yZWdpc3RlcihqYXZhc2NyaXB0KVxucmVmcmFjdG9yLnJlZ2lzdGVyKGpzb24pXG5yZWZyYWN0b3IucmVnaXN0ZXIoa290bGluKVxucmVmcmFjdG9yLnJlZ2lzdGVyKGxlc3MpXG5yZWZyYWN0b3IucmVnaXN0ZXIobHVhKVxucmVmcmFjdG9yLnJlZ2lzdGVyKG1ha2VmaWxlKVxucmVmcmFjdG9yLnJlZ2lzdGVyKHlhbWwpXG5yZWZyYWN0b3IucmVnaXN0ZXIobWFya2Rvd24pXG5yZWZyYWN0b3IucmVnaXN0ZXIob2JqZWN0aXZlYylcbnJlZnJhY3Rvci5yZWdpc3RlcihwZXJsKVxucmVmcmFjdG9yLnJlZ2lzdGVyKG1hcmt1cFRlbXBsYXRpbmcpXG5yZWZyYWN0b3IucmVnaXN0ZXIocGhwKVxucmVmcmFjdG9yLnJlZ2lzdGVyKHB5dGhvbilcbnJlZnJhY3Rvci5yZWdpc3RlcihyKVxucmVmcmFjdG9yLnJlZ2lzdGVyKHJ1YnkpXG5yZWZyYWN0b3IucmVnaXN0ZXIocnVzdClcbnJlZnJhY3Rvci5yZWdpc3RlcihzYXNzKVxucmVmcmFjdG9yLnJlZ2lzdGVyKHNjc3MpXG5yZWZyYWN0b3IucmVnaXN0ZXIoc3FsKVxucmVmcmFjdG9yLnJlZ2lzdGVyKHN3aWZ0KVxucmVmcmFjdG9yLnJlZ2lzdGVyKHR5cGVzY3JpcHQpXG5yZWZyYWN0b3IucmVnaXN0ZXIoYmFzaWMpXG5yZWZyYWN0b3IucmVnaXN0ZXIodmJuZXQpXG5cbmV4cG9ydCB7cmVmcmFjdG9yfSBmcm9tICcuL2NvcmUuanMnXG4iXSwibmFtZXMiOlsiY2xpa2UiLCJjIiwiY3BwIiwiYXJkdWlubyIsImJhc2giLCJjc2hhcnAiLCJtYXJrdXAiLCJjc3MiLCJkaWZmIiwiZ28iLCJpbmkiLCJqYXZhIiwicmVnZXgiLCJqYXZhc2NyaXB0IiwianNvbiIsImtvdGxpbiIsImxlc3MiLCJsdWEiLCJtYWtlZmlsZSIsInlhbWwiLCJtYXJrZG93biIsIm9iamVjdGl2ZWMiLCJwZXJsIiwibWFya3VwVGVtcGxhdGluZyIsInBocCIsInB5dGhvbiIsInIiLCJydWJ5IiwicnVzdCIsInNhc3MiLCJzY3NzIiwic3FsIiwic3dpZnQiLCJ0eXBlc2NyaXB0IiwiYmFzaWMiLCJ2Ym5ldCIsInJlZnJhY3RvciIsInJlZ2lzdGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/common.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/core.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/core.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   refractor: () => (/* binding */ refractor)\n/* harmony export */ });\n/* harmony import */ var hastscript__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! hastscript */ \"(rsc)/./node_modules/.pnpm/hastscript@7.2.0/node_modules/hastscript/lib/html.js\");\n/* harmony import */ var parse_entities__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! parse-entities */ \"(rsc)/./node_modules/.pnpm/parse-entities@4.0.1/node_modules/parse-entities/lib/index.js\");\n/* harmony import */ var _prism_core_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prism-core.js */ \"(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/prism-core.js\");\n/**\n * @typedef _Token A hidden Prism token\n * @property {string} type\n * @property {string} content\n * @property {string} alias\n * @property {number} length\n *\n * @typedef _Env A hidden Prism environment\n * @property {string} type\n * @property {string} tag\n * @property {Text|RefractorElement|Array<Text|RefractorElement>} content\n * @property {Array<string>} classes\n * @property {Record<string, string>} attributes\n * @property {string} language\n *\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {Omit<Element, 'children'> & {children: Array<RefractorElement|Text>}} RefractorElement\n * @typedef {Omit<Root, 'children'> & {children: Array<RefractorElement|Text>}} RefractorRoot\n *\n * @typedef {import('prismjs').Languages} Languages\n * @typedef {import('prismjs').Grammar} Grammar Whatever this is, Prism handles it.\n * @typedef {((prism: unknown) => void) & {displayName: string, aliases?: Array<string>}} Syntax A refractor syntax function\n *\n * @typedef Refractor Virtual syntax highlighting\n * @property {highlight} highlight\n * @property {alias} alias\n * @property {register} register\n * @property {registered} registered\n * @property {listLanguages} listLanguages\n * @property {Languages} languages\n */ // Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\n\n\n\nconst own = {}.hasOwnProperty;\n// Inherit.\nfunction Refractor() {}\nRefractor.prototype = _prism_core_js__WEBPACK_IMPORTED_MODULE_0__.Prism;\n/** @type {Refractor} */ // @ts-expect-error: TS is wrong.\nconst refractor = new Refractor();\n// Create.\nrefractor.highlight = highlight;\nrefractor.register = register;\nrefractor.alias = alias;\nrefractor.registered = registered;\nrefractor.listLanguages = listLanguages;\n// @ts-expect-error Overwrite Prism.\nrefractor.util.encode = encode;\n// @ts-expect-error Overwrite Prism.\nrefractor.Token.stringify = stringify;\n/**\n * Highlight `value` (code) as `language` (programming language).\n *\n * @param {string} value\n *   Code to highlight.\n * @param {string|Grammar} language\n *   Programming language name, alias, or grammar.\n * @returns {RefractorRoot}\n *   Node representing highlighted code.\n */ function highlight(value, language) {\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"Expected `string` for `value`, got `\" + value + \"`\");\n    }\n    /** @type {Grammar} */ let grammar;\n    /** @type {string|undefined} */ let name;\n    // `name` is a grammar object.\n    // This was called internally by Prism.js before 1.28.0.\n    /* c8 ignore next 2 */ if (language && typeof language === \"object\") {\n        grammar = language;\n    } else {\n        name = language;\n        if (typeof name !== \"string\") {\n            throw new TypeError(\"Expected `string` for `name`, got `\" + name + \"`\");\n        }\n        if (own.call(refractor.languages, name)) {\n            grammar = refractor.languages[name];\n        } else {\n            throw new Error(\"Unknown language: `\" + name + \"` is not registered\");\n        }\n    }\n    return {\n        type: \"root\",\n        // @ts-expect-error: we hacked Prism to accept and return the things we want.\n        children: _prism_core_js__WEBPACK_IMPORTED_MODULE_0__.Prism.highlight.call(refractor, value, grammar, name)\n    };\n}\n/**\n * Register a syntax.\n *\n * @param {Syntax} syntax\n *   Language function made for refractor, as in, the files in\n *   `refractor/lang/*.js`.\n * @returns {void}\n */ function register(syntax) {\n    if (typeof syntax !== \"function\" || !syntax.displayName) {\n        throw new Error(\"Expected `function` for `syntax`, got `\" + syntax + \"`\");\n    }\n    // Do not duplicate registrations.\n    if (!own.call(refractor.languages, syntax.displayName)) {\n        syntax(refractor);\n    }\n}\n/**\n * Register aliases for already registered languages.\n *\n * @param {Record<string, string|Array<string>>|string} language\n * @param {string|Array<string>} [alias]\n * @returns {void}\n */ function alias(language, alias) {\n    const languages = refractor.languages;\n    /** @type {Record<string, string|Array<string>>} */ let map = {};\n    if (typeof language === \"string\") {\n        if (alias) {\n            map[language] = alias;\n        }\n    } else {\n        map = language;\n    }\n    /** @type {string} */ let key;\n    for(key in map){\n        if (own.call(map, key)) {\n            const value = map[key];\n            const list = typeof value === \"string\" ? [\n                value\n            ] : value;\n            let index = -1;\n            while(++index < list.length){\n                languages[list[index]] = languages[key];\n            }\n        }\n    }\n}\n/**\n * Check whether an `alias` or `language` is registered.\n *\n * @param {string} aliasOrLanguage\n * @returns {boolean}\n */ function registered(aliasOrLanguage) {\n    if (typeof aliasOrLanguage !== \"string\") {\n        throw new TypeError(\"Expected `string` for `aliasOrLanguage`, got `\" + aliasOrLanguage + \"`\");\n    }\n    return own.call(refractor.languages, aliasOrLanguage);\n}\n/**\n * List all registered languages (names and aliases).\n *\n * @returns {Array<string>}\n */ function listLanguages() {\n    const languages = refractor.languages;\n    /** @type {Array<string>} */ const list = [];\n    /** @type {string} */ let language;\n    for(language in languages){\n        if (own.call(languages, language) && typeof languages[language] === \"object\") {\n            list.push(language);\n        }\n    }\n    return list;\n}\n/**\n * @param {string|_Token|Array<string|_Token>} value\n * @param {string} language\n * @returns {Text|RefractorElement|Array<Text|RefractorElement>}\n */ function stringify(value, language) {\n    if (typeof value === \"string\") {\n        return {\n            type: \"text\",\n            value\n        };\n    }\n    if (Array.isArray(value)) {\n        /** @type {Array<Text|RefractorElement>} */ const result = [];\n        let index = -1;\n        while(++index < value.length){\n            if (value[index] !== \"\" && value[index] !== null && value[index] !== undefined) {\n                // @ts-expect-error Assume no sub-arrays.\n                result.push(stringify(value[index], language));\n            }\n        }\n        return result;\n    }\n    /** @type {_Env} */ const env = {\n        type: value.type,\n        content: stringify(value.content, language),\n        tag: \"span\",\n        classes: [\n            \"token\",\n            value.type\n        ],\n        attributes: {},\n        language\n    };\n    if (value.alias) {\n        env.classes.push(...typeof value.alias === \"string\" ? [\n            value.alias\n        ] : value.alias);\n    }\n    // @ts-expect-error Prism.\n    refractor.hooks.run(\"wrap\", env);\n    // @ts-expect-error Hush, it’s fine.\n    return (0,hastscript__WEBPACK_IMPORTED_MODULE_1__.h)(env.tag + \".\" + env.classes.join(\".\"), attributes(env.attributes), env.content);\n}\n/**\n * @template {unknown} T\n * @param {T} tokens\n * @returns {T}\n */ function encode(tokens) {\n    return tokens;\n}\n/**\n * @param {Record<string, string>} attrs\n * @returns {Record<string, string>}\n */ function attributes(attrs) {\n    /** @type {string} */ let key;\n    for(key in attrs){\n        if (own.call(attrs, key)) {\n            attrs[key] = (0,parse_entities__WEBPACK_IMPORTED_MODULE_2__.parseEntities)(attrs[key]);\n        }\n    }\n    return attrs;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/core.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/prism-core.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/prism-core.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Prism: () => (/* binding */ Prism)\n/* harmony export */ });\n// @ts-nocheck\n// This is a slimmed down version of `prism-core.js`, to remove globals,\n// document, workers, `util.encode`, `Token.stringify`\n// Private helper vars\nvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\nvar uniqueId = 0;\n// The grammar object for plaintext\nvar plainTextGrammar = {};\nvar _ = {\n    /**\n   * A namespace for utility methods.\n   *\n   * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n   * change or disappear at any time.\n   *\n   * @namespace\n   * @memberof Prism\n   */ util: {\n        /**\n     * Returns the name of the type of the given value.\n     *\n     * @param {any} o\n     * @returns {string}\n     * @example\n     * type(null)      === 'Null'\n     * type(undefined) === 'Undefined'\n     * type(123)       === 'Number'\n     * type('foo')     === 'String'\n     * type(true)      === 'Boolean'\n     * type([1, 2])    === 'Array'\n     * type({})        === 'Object'\n     * type(String)    === 'Function'\n     * type(/abc+/)    === 'RegExp'\n     */ type: function(o) {\n            return Object.prototype.toString.call(o).slice(8, -1);\n        },\n        /**\n     * Returns a unique number for the given object. Later calls will still return the same number.\n     *\n     * @param {Object} obj\n     * @returns {number}\n     */ objId: function(obj) {\n            if (!obj[\"__id\"]) {\n                Object.defineProperty(obj, \"__id\", {\n                    value: ++uniqueId\n                });\n            }\n            return obj[\"__id\"];\n        },\n        /**\n     * Creates a deep clone of the given object.\n     *\n     * The main intended use of this function is to clone language definitions.\n     *\n     * @param {T} o\n     * @param {Record<number, any>} [visited]\n     * @returns {T}\n     * @template T\n     */ clone: function deepClone(o, visited) {\n            visited = visited || {};\n            var clone;\n            var id;\n            switch(_.util.type(o)){\n                case \"Object\":\n                    id = _.util.objId(o);\n                    if (visited[id]) {\n                        return visited[id];\n                    }\n                    clone = /** @type {Record<string, any>} */ {};\n                    visited[id] = clone;\n                    for(var key in o){\n                        if (o.hasOwnProperty(key)) {\n                            clone[key] = deepClone(o[key], visited);\n                        }\n                    }\n                    return /** @type {any} */ clone;\n                case \"Array\":\n                    id = _.util.objId(o);\n                    if (visited[id]) {\n                        return visited[id];\n                    }\n                    clone = [];\n                    visited[id] = clone;\n                    o.forEach(function(v, i) {\n                        clone[i] = deepClone(v, visited);\n                    });\n                    return /** @type {any} */ clone;\n                default:\n                    return o;\n            }\n        }\n    },\n    /**\n   * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n   *\n   * @namespace\n   * @memberof Prism\n   * @public\n   */ languages: {\n        /**\n     * The grammar for plain, unformatted text.\n     */ plain: plainTextGrammar,\n        plaintext: plainTextGrammar,\n        text: plainTextGrammar,\n        txt: plainTextGrammar,\n        /**\n     * Creates a deep copy of the language with the given id and appends the given tokens.\n     *\n     * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n     * will be overwritten at its original position.\n     *\n     * ## Best practices\n     *\n     * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n     * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n     * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n     *\n     * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n     * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n     *\n     * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n     * @param {Grammar} redef The new tokens to append.\n     * @returns {Grammar} The new language created.\n     * @public\n     * @example\n     * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n     *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n     *     // at its original position\n     *     'comment': { ... },\n     *     // CSS doesn't have a 'color' token, so this token will be appended\n     *     'color': /\\b(?:red|green|blue)\\b/\n     * });\n     */ extend: function(id, redef) {\n            var lang = _.util.clone(_.languages[id]);\n            for(var key in redef){\n                lang[key] = redef[key];\n            }\n            return lang;\n        },\n        /**\n     * Inserts tokens _before_ another token in a language definition or any other grammar.\n     *\n     * ## Usage\n     *\n     * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n     * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n     * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n     * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n     * this:\n     *\n     * ```js\n     * Prism.languages.markup.style = {\n     *     // token\n     * };\n     * ```\n     *\n     * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n     * before existing tokens. For the CSS example above, you would use it like this:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'cdata', {\n     *     'style': {\n     *         // token\n     *     }\n     * });\n     * ```\n     *\n     * ## Special cases\n     *\n     * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n     * will be ignored.\n     *\n     * This behavior can be used to insert tokens after `before`:\n     *\n     * ```js\n     * Prism.languages.insertBefore('markup', 'comment', {\n     *     'comment': Prism.languages.markup.comment,\n     *     // tokens after 'comment'\n     * });\n     * ```\n     *\n     * ## Limitations\n     *\n     * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n     * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n     * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n     * deleting properties which is necessary to insert at arbitrary positions.\n     *\n     * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n     * Instead, it will create a new object and replace all references to the target object with the new one. This\n     * can be done without temporarily deleting properties, so the iteration order is well-defined.\n     *\n     * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n     * you hold the target object in a variable, then the value of the variable will not change.\n     *\n     * ```js\n     * var oldMarkup = Prism.languages.markup;\n     * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n     *\n     * assert(oldMarkup !== Prism.languages.markup);\n     * assert(newMarkup === Prism.languages.markup);\n     * ```\n     *\n     * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n     * object to be modified.\n     * @param {string} before The key to insert before.\n     * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n     * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n     * object to be modified.\n     *\n     * Defaults to `Prism.languages`.\n     * @returns {Grammar} The new grammar object.\n     * @public\n     */ insertBefore: function(inside, before, insert, root) {\n            root = root || /** @type {any} */ _.languages;\n            var grammar = root[inside];\n            /** @type {Grammar} */ var ret = {};\n            for(var token in grammar){\n                if (grammar.hasOwnProperty(token)) {\n                    if (token == before) {\n                        for(var newToken in insert){\n                            if (insert.hasOwnProperty(newToken)) {\n                                ret[newToken] = insert[newToken];\n                            }\n                        }\n                    }\n                    // Do not insert token which also occur in insert. See #1525\n                    if (!insert.hasOwnProperty(token)) {\n                        ret[token] = grammar[token];\n                    }\n                }\n            }\n            var old = root[inside];\n            root[inside] = ret;\n            // Update references in other language definitions\n            _.languages.DFS(_.languages, function(key, value) {\n                if (value === old && key != inside) {\n                    this[key] = ret;\n                }\n            });\n            return ret;\n        },\n        // Traverse a language definition with Depth First Search\n        DFS: function DFS(o, callback, type, visited) {\n            visited = visited || {};\n            var objId = _.util.objId;\n            for(var i in o){\n                if (o.hasOwnProperty(i)) {\n                    callback.call(o, i, o[i], type || i);\n                    var property = o[i];\n                    var propertyType = _.util.type(property);\n                    if (propertyType === \"Object\" && !visited[objId(property)]) {\n                        visited[objId(property)] = true;\n                        DFS(property, callback, null, visited);\n                    } else if (propertyType === \"Array\" && !visited[objId(property)]) {\n                        visited[objId(property)] = true;\n                        DFS(property, callback, i, visited);\n                    }\n                }\n            }\n        }\n    },\n    plugins: {},\n    /**\n   * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n   * and the language definitions to use, and returns a string with the HTML produced.\n   *\n   * The following hooks will be run:\n   * 1. `before-tokenize`\n   * 2. `after-tokenize`\n   * 3. `wrap`: On each {@link Token}.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @param {string} language The name of the language definition passed to `grammar`.\n   * @returns {string} The highlighted HTML.\n   * @memberof Prism\n   * @public\n   * @example\n   * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n   */ highlight: function(text, grammar, language) {\n        var env = {\n            code: text,\n            grammar: grammar,\n            language: language\n        };\n        _.hooks.run(\"before-tokenize\", env);\n        if (!env.grammar) {\n            throw new Error('The language \"' + env.language + '\" has no grammar.');\n        }\n        env.tokens = _.tokenize(env.code, env.grammar);\n        _.hooks.run(\"after-tokenize\", env);\n        return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n    /**\n   * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n   * and the language definitions to use, and returns an array with the tokenized code.\n   *\n   * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n   *\n   * This method could be useful in other contexts as well, as a very crude parser.\n   *\n   * @param {string} text A string with the code to be highlighted.\n   * @param {Grammar} grammar An object containing the tokens to use.\n   *\n   * Usually a language definition like `Prism.languages.markup`.\n   * @returns {TokenStream} An array of strings and tokens, a token stream.\n   * @memberof Prism\n   * @public\n   * @example\n   * let code = `var foo = 0;`;\n   * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n   * tokens.forEach(token => {\n   *     if (token instanceof Prism.Token && token.type === 'number') {\n   *         console.log(`Found numeric literal: ${token.content}`);\n   *     }\n   * });\n   */ tokenize: function(text, grammar) {\n        var rest = grammar.rest;\n        if (rest) {\n            for(var token in rest){\n                grammar[token] = rest[token];\n            }\n            delete grammar.rest;\n        }\n        var tokenList = new LinkedList();\n        addAfter(tokenList, tokenList.head, text);\n        matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n        return toArray(tokenList);\n    },\n    /**\n   * @namespace\n   * @memberof Prism\n   * @public\n   */ hooks: {\n        all: {},\n        /**\n     * Adds the given callback to the list of callbacks for the given hook.\n     *\n     * The callback will be invoked when the hook it is registered for is run.\n     * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n     *\n     * One callback function can be registered to multiple hooks and the same hook multiple times.\n     *\n     * @param {string} name The name of the hook.\n     * @param {HookCallback} callback The callback function which is given environment variables.\n     * @public\n     */ add: function(name, callback) {\n            var hooks = _.hooks.all;\n            hooks[name] = hooks[name] || [];\n            hooks[name].push(callback);\n        },\n        /**\n     * Runs a hook invoking all registered callbacks with the given environment variables.\n     *\n     * Callbacks will be invoked synchronously and in the order in which they were registered.\n     *\n     * @param {string} name The name of the hook.\n     * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n     * @public\n     */ run: function(name, env) {\n            var callbacks = _.hooks.all[name];\n            if (!callbacks || !callbacks.length) {\n                return;\n            }\n            for(var i = 0, callback; callback = callbacks[i++];){\n                callback(env);\n            }\n        }\n    },\n    Token: Token\n};\n// Typescript note:\n// The following can be used to import the Token type in JSDoc:\n//\n//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n/**\n * Creates a new token.\n *\n * @param {string} type See {@link Token#type type}\n * @param {string | TokenStream} content See {@link Token#content content}\n * @param {string|string[]} [alias] The alias(es) of the token.\n * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n * @class\n * @global\n * @public\n */ function Token(type, content, alias, matchedStr) {\n    /**\n   * The type of the token.\n   *\n   * This is usually the key of a pattern in a {@link Grammar}.\n   *\n   * @type {string}\n   * @see GrammarToken\n   * @public\n   */ this.type = type;\n    /**\n   * The strings or tokens contained by this token.\n   *\n   * This will be a token stream if the pattern matched also defined an `inside` grammar.\n   *\n   * @type {string | TokenStream}\n   * @public\n   */ this.content = content;\n    /**\n   * The alias(es) of the token.\n   *\n   * @type {string|string[]}\n   * @see GrammarToken\n   * @public\n   */ this.alias = alias;\n    // Copy of the full string this token was created from\n    this.length = (matchedStr || \"\").length | 0;\n}\n/**\n * A token stream is an array of strings and {@link Token Token} objects.\n *\n * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n * them.\n *\n * 1. No adjacent strings.\n * 2. No empty strings.\n *\n *    The only exception here is the token stream that only contains the empty string and nothing else.\n *\n * @typedef {Array<string | Token>} TokenStream\n * @global\n * @public\n */ /**\n * @param {RegExp} pattern\n * @param {number} pos\n * @param {string} text\n * @param {boolean} lookbehind\n * @returns {RegExpExecArray | null}\n */ function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n    if (match && lookbehind && match[1]) {\n        // change the match to remove the text matched by the Prism lookbehind group\n        var lookbehindLength = match[1].length;\n        match.index += lookbehindLength;\n        match[0] = match[0].slice(lookbehindLength);\n    }\n    return match;\n}\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {RematchOptions} [rematch]\n * @returns {void}\n * @private\n *\n * @typedef RematchOptions\n * @property {string} cause\n * @property {number} reach\n */ function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for(var token in grammar){\n        if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n            continue;\n        }\n        var patterns = grammar[token];\n        patterns = Array.isArray(patterns) ? patterns : [\n            patterns\n        ];\n        for(var j = 0; j < patterns.length; ++j){\n            if (rematch && rematch.cause == token + \",\" + j) {\n                return;\n            }\n            var patternObj = patterns[j];\n            var inside = patternObj.inside;\n            var lookbehind = !!patternObj.lookbehind;\n            var greedy = !!patternObj.greedy;\n            var alias = patternObj.alias;\n            if (greedy && !patternObj.pattern.global) {\n                // Without the global flag, lastIndex won't work\n                var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n                patternObj.pattern = RegExp(patternObj.pattern.source, flags + \"g\");\n            }\n            /** @type {RegExp} */ var pattern = patternObj.pattern || patternObj;\n            for(// iterate the token list and keep track of the current token/string position\n            var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next){\n                if (rematch && pos >= rematch.reach) {\n                    break;\n                }\n                var str = currentNode.value;\n                if (tokenList.length > text.length) {\n                    // Something went terribly wrong, ABORT, ABORT!\n                    return;\n                }\n                if (str instanceof Token) {\n                    continue;\n                }\n                var removeCount = 1 // this is the to parameter of removeBetween\n                ;\n                var match;\n                if (greedy) {\n                    match = matchPattern(pattern, pos, text, lookbehind);\n                    if (!match || match.index >= text.length) {\n                        break;\n                    }\n                    var from = match.index;\n                    var to = match.index + match[0].length;\n                    var p = pos;\n                    // find the node that contains the match\n                    p += currentNode.value.length;\n                    while(from >= p){\n                        currentNode = currentNode.next;\n                        p += currentNode.value.length;\n                    }\n                    // adjust pos (and p)\n                    p -= currentNode.value.length;\n                    pos = p;\n                    // the current node is a Token, then the match starts inside another Token, which is invalid\n                    if (currentNode.value instanceof Token) {\n                        continue;\n                    }\n                    // find the last node which is affected by this match\n                    for(var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === \"string\"); k = k.next){\n                        removeCount++;\n                        p += k.value.length;\n                    }\n                    removeCount--;\n                    // replace with the new match\n                    str = text.slice(pos, p);\n                    match.index -= pos;\n                } else {\n                    match = matchPattern(pattern, 0, str, lookbehind);\n                    if (!match) {\n                        continue;\n                    }\n                }\n                // eslint-disable-next-line no-redeclare\n                var from = match.index;\n                var matchStr = match[0];\n                var before = str.slice(0, from);\n                var after = str.slice(from + matchStr.length);\n                var reach = pos + str.length;\n                if (rematch && reach > rematch.reach) {\n                    rematch.reach = reach;\n                }\n                var removeFrom = currentNode.prev;\n                if (before) {\n                    removeFrom = addAfter(tokenList, removeFrom, before);\n                    pos += before.length;\n                }\n                removeRange(tokenList, removeFrom, removeCount);\n                var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n                currentNode = addAfter(tokenList, removeFrom, wrapped);\n                if (after) {\n                    addAfter(tokenList, currentNode, after);\n                }\n                if (removeCount > 1) {\n                    // at least one Token object was removed, so we have to do some rematching\n                    // this can only happen if the current pattern is greedy\n                    /** @type {RematchOptions} */ var nestedRematch = {\n                        cause: token + \",\" + j,\n                        reach: reach\n                    };\n                    matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n                    // the reach might have been extended because of the rematching\n                    if (rematch && nestedRematch.reach > rematch.reach) {\n                        rematch.reach = nestedRematch.reach;\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n * @private\n */ /**\n * @template T\n * @private\n */ function LinkedList() {\n    /** @type {LinkedListNode<T>} */ var head = {\n        value: null,\n        prev: null,\n        next: null\n    };\n    /** @type {LinkedListNode<T>} */ var tail = {\n        value: null,\n        prev: head,\n        next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */ this.head = head;\n    /** @type {LinkedListNode<T>} */ this.tail = tail;\n    this.length = 0;\n}\n/**\n * Adds a new node with the given value to the list.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */ function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n        value: value,\n        prev: node,\n        next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n *\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */ function removeRange(list, node, count) {\n    var next = node.next;\n    for(var i = 0; i < count && next !== list.tail; i++){\n        next = next.next;\n    }\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */ function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n    while(node !== list.tail){\n        array.push(node.value);\n        node = node.next;\n    }\n    return array;\n}\nconst Prism = _ // some additional documentation/types\n /**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */  /**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */  /**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */  /**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/refractor@4.8.1/node_modules/refractor/lib/prism-core.js\n");

/***/ })

};
;