2:I[2928,["204","static/chunks/204-6be84f9ed6e44a04.js","42","static/chunks/app/%5Bslug%5D/page-b1221287d6846ac8.js"],""]
3:I[1949,[],""]
5:I[881,[],""]
6:I[1954,["204","static/chunks/204-6be84f9ed6e44a04.js","723","static/chunks/723-29cda012a8f06e68.js","185","static/chunks/app/layout-b54b7e85e7a69c03.js"],""]
7:I[3729,["204","static/chunks/204-6be84f9ed6e44a04.js","42","static/chunks/app/%5Bslug%5D/page-b1221287d6846ac8.js"],"Image"]
8:I[7723,["204","static/chunks/204-6be84f9ed6e44a04.js","723","static/chunks/723-29cda012a8f06e68.js","185","static/chunks/app/layout-b54b7e85e7a69c03.js"],""]
4:["slug","2023-11-03-typescript-interface","d"]
0:["4PgnwJg7oYP4BV6kkIZkz",[[["",{"children":[["slug","2023-11-03-typescript-interface","d"],{"children":["__PAGE__?{\"slug\":\"2023-11-03-typescript-interface\"}",{}]}]},"$undefined","$undefined",true],["",{"children":[["slug","2023-11-03-typescript-interface","d"],{"children":["__PAGE__",{},["$L1",["$","div",null,{"className":"page_wrap__yUaJd","children":[["$","div",null,{"className":"page_title__dQNig","children":"[ TS ] 타입스크립트에서 타이핑 하기 귀찮은데요 (Typescript as 키워드)"}],["$","div",null,{"className":"page_date__vicWW","children":"Nov 3, 2023"}],["$","div",null,{"className":"page_line__eKNIX"}],["$","div",null,{"className":"page_markdown__bhSC7","children":[["$","h2","h2-0",{"children":"주의사항"}],"\n",["$","p","p-0",{"children":"본 문서는 Bing AI로 작성되었으며, 작성자 참고용으로 제작된 문서입니다. 향후 저작권 이슈가 있을 경우 바로 내릴 수 있도록 하겠습니다."}],"\n",["$","h2","h2-1",{"children":"본문"}],"\n",["$","p","p-1",{"children":"TypeScript에서 as 키워드는 타입 단언(type assertion)을 사용하기 위한 것입니다. 타입 단언은 컴파일러에게 변수나 속성의 타입을 우리가 지정해주는 것이며, 컴파일러가 스스로 추론하는 것을 방지합니다. 타입 단언은 any 타입을 특정 타입으로 다루는 데 자주 사용됩니다. 예를 들어, 다음과 같은 코드가 있습니다."}],"\n",["$","pre","pre-0",{"className":"language-typescript","children":["$","code","code-0",{"className":"language-typescript code-highlight","children":[["$","span","span-0",{"className":"code-line","children":[["$","span","span-0",{"className":"token keyword","children":"let"}]," x",["$","span","span-1",{"className":"token operator","children":":"}]," ",["$","span","span-2",{"className":"token builtin","children":"any"}]," ",["$","span","span-3",{"className":"token operator","children":"="}]," ",["$","span","span-4",{"className":"token string","children":"\"Hello\""}],["$","span","span-5",{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span","span-1",{"className":"code-line","children":["",["$","span","span-0",{"className":"token keyword","children":"let"}]," y ",["$","span","span-1",{"className":"token operator","children":"="}]," x ",["$","span","span-2",{"className":"token keyword","children":"as"}]," ",["$","span","span-3",{"className":"token builtin","children":"string"}],["$","span","span-4",{"className":"token punctuation","children":";"}],"\n"]}]]}]}],"\n",["$","p","p-2",{"children":["여기서 ",["$","code","code-0",{"children":"x"}],"는 any 타입이므로, 컴파일러는 ",["$","code","code-1",{"children":"x"}],"가 가지고 있는 메서드나 속성에 대해 알 수 없습니다. 그래서 ",["$","code","code-2",{"children":"x.length"}],"나 ",["$","code","code-3",{"children":"x.toUpperCase()"}],"와 같은 코드는 오류를 발생시킬 수 있습니다. 하지만 ",["$","code","code-4",{"children":"y"}],"는 ",["$","code","code-5",{"children":"x"}],"를 string 타입으로 단언한 것이므로, 컴파일러는 ",["$","code","code-6",{"children":"y"}],"가 string 타입이라고 인식하고, string 타입의 메서드나 속성을 사용할 수 있습니다."]}],"\n",["$","p","p-3",{"children":"타입 단언은 변환(conversion)이 아닙니다. 즉, as 키워드로 변수의 값을 바꾸거나 새로운 값을 만들지 않습니다. 단지 컴파일러에게 변수의 타입을 알려주는 것뿐입니다. 런타임에는 as 키워드가 아무런 영향을 주지 않습니다¹."}],"\n",["$","p","p-4",{"children":"타입 단언은 다음과 같은 두 가지 방식으로 사용할 수 있습니다."}],"\n",["$","pre","pre-1",{"className":"language-typescript","children":["$","code","code-0",{"className":"language-typescript code-highlight","children":[["$","span","span-0",{"className":"code-line","children":[["$","span","span-0",{"className":"token comment","children":"// 꺽쇠 괄호(<>)를 사용하는 방식"}],"\r\n"]}],["$","span","span-1",{"className":"code-line","children":["",["$","span","span-0",{"className":"token keyword","children":"let"}]," a ",["$","span","span-1",{"className":"token operator","children":"="}]," ",["$","span","span-2",{"className":"token operator","children":"<"}],["$","span","span-3",{"className":"token builtin","children":"string"}],["$","span","span-4",{"className":"token operator","children":">"}]," x",["$","span","span-5",{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span","span-2",{"className":"code-line","children":"\r\n"}],["$","span","span-3",{"className":"code-line","children":["",["$","span","span-0",{"className":"token comment","children":"// as 키워드를 사용하는 방식"}],"\r\n"]}],["$","span","span-4",{"className":"code-line","children":["",["$","span","span-0",{"className":"token keyword","children":"let"}]," b ",["$","span","span-1",{"className":"token operator","children":"="}]," x ",["$","span","span-2",{"className":"token keyword","children":"as"}]," ",["$","span","span-3",{"className":"token builtin","children":"string"}],["$","span","span-4",{"className":"token punctuation","children":";"}],"\n"]}]]}]}],"\n",["$","p","p-5",{"children":"두 방식은 동일한 기능을 하지만, JSX와 함께 사용할 때는 as 키워드를 사용해야 합니다². JSX는 XML과 비슷한 문법으로, React와 같은 프레임워크에서 UI 컴포넌트를 만들 때 사용합니다³."}],"\n",["$","h2","h2-2",{"children":"타입에러 방지"}],"\n",["$","p","p-6",{"children":"타입 에러를 방지하기 위해서는 as 키워드를 사용하는 것이 좋지 않은 방법이라고 할 수 있습니다. as 키워드는 컴파일러에게 타입을 강제로 지정하는 것이므로, 실제로 값이 다른 타입일 경우 런타임에 에러가 발생할 수 있습니다. 예를 들어, 다음과 같은 코드가 있습니다."}],"\n",["$","pre","pre-2",{"className":"language-typescript","children":["$","code","code-0",{"className":"language-typescript code-highlight","children":[["$","span","span-0",{"className":"code-line","children":[["$","span","span-0",{"className":"token keyword","children":"let"}]," x",["$","span","span-1",{"className":"token operator","children":":"}]," ",["$","span","span-2",{"className":"token builtin","children":"any"}]," ",["$","span","span-3",{"className":"token operator","children":"="}]," ",["$","span","span-4",{"className":"token number","children":"123"}],["$","span","span-5",{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span","span-1",{"className":"code-line","children":["",["$","span","span-0",{"className":"token keyword","children":"let"}]," y ",["$","span","span-1",{"className":"token operator","children":"="}]," x ",["$","span","span-2",{"className":"token keyword","children":"as"}]," ",["$","span","span-3",{"className":"token builtin","children":"string"}],["$","span","span-4",{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span","span-2",{"className":"code-line","children":["",["$","span","span-0",{"className":"token builtin","children":"console"}],["$","span","span-1",{"className":"token punctuation","children":"."}],["$","span","span-2",{"className":"token function","children":"log"}],["$","span","span-3",{"className":"token punctuation","children":"("}],"y",["$","span","span-4",{"className":"token punctuation","children":"."}],"length",["$","span","span-5",{"className":"token punctuation","children":")"}],["$","span","span-6",{"className":"token punctuation","children":";"}]," ",["$","span","span-7",{"className":"token comment","children":"// 런타임 에러"}],"\n"]}]]}]}],"\n",["$","p","p-7",{"children":["여기서 ",["$","code","code-0",{"children":"x"}],"는 any 타입이므로, ",["$","code","code-1",{"children":"y"}],"에 string 타입으로 단언하였습니다. 하지만 ",["$","code","code-2",{"children":"x"}],"의 값은 실제로 숫자이므로, ",["$","code","code-3",{"children":"y.length"}],"를 실행하면 런타임에 에러가 발생합니다. 이런 경우를 방지하기 위해서는 as 키워드를 사용하지 않고, 타입 가드(type guard)라는 기능을 사용하는 것이 좋습니다¹. 타입 가드는 특정 조건문을 통해 변수의 타입을 좁혀주는 것입니다. 예를 들어, 다음과 같은 코드가 있습니다."]}],"\n",["$","pre","pre-3",{"className":"language-typescript","children":["$","code","code-0",{"className":"language-typescript code-highlight","children":[["$","span","span-0",{"className":"code-line","children":[["$","span","span-0",{"className":"token keyword","children":"let"}]," x",["$","span","span-1",{"className":"token operator","children":":"}]," ",["$","span","span-2",{"className":"token builtin","children":"any"}]," ",["$","span","span-3",{"className":"token operator","children":"="}]," ",["$","span","span-4",{"className":"token number","children":"123"}],["$","span","span-5",{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span","span-1",{"className":"code-line","children":["",["$","span","span-0",{"className":"token comment","children":"// string이 타입이 아닌 문자열임에 주의하세요. (코멘트 직접 작성)"}],"\r\n"]}],["$","span","span-2",{"className":"code-line","children":["",["$","span","span-0",{"className":"token keyword","children":"if"}]," ",["$","span","span-1",{"className":"token punctuation","children":"("}],["$","span","span-2",{"className":"token keyword","children":"typeof"}]," x ",["$","span","span-3",{"className":"token operator","children":"==="}]," ",["$","span","span-4",{"className":"token string","children":"\"string\""}],["$","span","span-5",{"className":"token punctuation","children":")"}]," ",["$","span","span-6",{"className":"token punctuation","children":"{"}],"\r\n"]}],["$","span","span-3",{"className":"code-line","children":["  ",["$","span","span-0",{"className":"token builtin","children":"console"}],["$","span","span-1",{"className":"token punctuation","children":"."}],["$","span","span-2",{"className":"token function","children":"log"}],["$","span","span-3",{"className":"token punctuation","children":"("}],"x",["$","span","span-4",{"className":"token punctuation","children":"."}],"length",["$","span","span-5",{"className":"token punctuation","children":")"}],["$","span","span-6",{"className":"token punctuation","children":";"}]," ",["$","span","span-7",{"className":"token comment","children":"// 안전하게 실행"}],"\r\n"]}],["$","span","span-4",{"className":"code-line","children":["",["$","span","span-0",{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],"\n",["$","p","p-8",{"children":["여기서 ",["$","code","code-0",{"children":"typeof x === \"string\""}],"이라는 조건문은 ",["$","code","code-1",{"children":"x"}],"가 string 타입일 때만 참이 되므로, 컴파일러는 이 조건문 안에서 ",["$","code","code-2",{"children":"x"}],"의 타입을 string으로 인식합니다. 따라서 ",["$","code","code-3",{"children":"x.length"}],"를 안전하게 실행할 수 있습니다."]}],"\n",["$","blockquote","blockquote-0",{"children":["\n",["$","p","p-0",{"children":["보다 자세한 설명이 필요하신가요? ",["$","code","code-0",{"children":"giscus"}],"로 댓글을 남겨주시면 언제든지 토론이 가능합니다!"]}],"\n"]}]]}],["$","$L2",null,{}]]}],null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/markdown-blog/_next/static/css/0d05e87d9621b1ae.css","precedence":"next","crossOrigin":""}]]}]]},[null,["$","html",null,{"lang":"en","suppressHydrationWarning":false,"children":[["$","head",null,{"children":["$","script",null,{"type":"text/javascript","dangerouslySetInnerHTML":{"__html":"\n    const localTheme = localStorage.getItem(\"theme\");\n    if(!localTheme) {\n      localTheme = window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n      localStorage.setItem(\"theme\", localTheme);\n    }\n    \n    if(localTheme == \"dark\") {\n      const html = document.querySelector(\"html\");\n      html.dataset.theme = \"dark\";\n      console.log(\"set to dark from script tag\");\n    }\n  "}}]}],["$","body",null,{"className":"__className_e3dc15 layout_layout__dCqca","children":["$","div",null,{"id":"layout_layout__dCqca","children":[["$","div",null,{"className":"SideMenu_wrap__S7Kks","children":[["$","$L6",null,{"className":"SideMenu_logoLink__h5lXm","href":"/","children":["$","span",null,{"className":"SideMenu_logoCharacter___HzC9","children":"Chayhan."}]}],["$","$L7",null,{"className":"SideMenu_pfp__Hne0u","width":130,"height":130,"src":"https://avatars.githubusercontent.com/u/65532873?v=4","alt":"profile-picture-error"}],["$","div",null,{"className":"SideMenu_title__9PGW3","children":"Chayhan’s blog"}],["$","div",null,{"className":"SideMenu_desc__hXAjA","children":"이 녀석에게 친추 줘서 무료로 훈수 주기"}],["$","div",null,{"className":"SideMenu_links__tV5ui","children":[["$","div",null,{"children":["$","$L6",null,{"href":"https://github.com/chayhan","children":"Github"}]}],["$","div",null,{"children":["$","$L6",null,{"href":"https://discord.gg/w8xnMDgcxA","children":"Discord"}]}],["$","div",null,{"children":["$","$L6",null,{"href":"https://solved.ac/profile/blu3fishez","children":"Solved.ac"}]}]]}]]}],["$","div",null,{"id":"layout_contentWrap__twyu_","children":[["$","div",null,{"id":"layout_content__jhh_K","children":[["$","div",null,{"id":"layout_article__X_X3Z","children":[["$","div",null,{"className":"nav-container","children":["$","$L8",null,{}]}],["$","div",null,{"id":"$undefined","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],["$","div",null,{"className":"Toc_wrap__P1Agf","children":[["$","div",null,{"children":"최근 읽은 글"}],["$","hr",null,{}],["$","ul",null,{"children":["$","li",null,{"children":"현재 기능 개발 중"}]}]]}]]}],["$","footer",null,{"className":"Footer_footer__Gowxd undefined","children":["$","div",null,{"className":"Footer_footerWrap__EVpy3","children":[["$","p",null,{"className":"Footer_supportLog__zX5GZ","children":["Support me by following on",["$","a",null,{"href":"https://github.com/chayhan","children":[["$","$L7",null,{"className":"Footer_githubLogo__v_D4v","src":"https://raw.githubusercontent.com/chayhan/markdown-blog/main/public/github-icon.png","alt":"favicon","width":23,"height":23}],["$","span",null,{"style":{"textDecorationLine":"underline"},"children":"github"}]]}]]}],["$","p",null,{"className":"Footer_copyright__G_vwC","children":"© 2023 chayhan, Powered by github.io"}]]}]}]]}]]}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/markdown-blog/_next/static/css/1d5397ff1d0b753b.css","precedence":"next","crossOrigin":""}],["$","link","1",{"rel":"stylesheet","href":"/markdown-blog/_next/static/css/46d21540be063c04.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"[ TS ] 타입스크립트에서 타이핑 하기 귀찮은데요 (Typescript as 키워드) :: chayhan's Blog --"}],["$","meta","3",{"name":"description","content":"개발자 chayhan 의 블로그 입니다."}],["$","meta","4",{"property":"og:title","content":"[ TS ] 타입스크립트에서 타이핑 하기 귀찮은데요 (Typescript as 키워드)"}],["$","meta","5",{"property":"og:description","content":"TypeScript에서 as 키워드는 타입 단언(type assertion)을 사용하기 위한 것입니다."}],["$","meta","6",{"property":"og:site_name","content":"chayhan's blog"}],["$","meta","7",{"property":"og:image","content":"https://raw.githubusercontent.com/chayhan/markdown-blog/main/public/ogimage.png"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"[ TS ] 타입스크립트에서 타이핑 하기 귀찮은데요 (Typescript as 키워드)"}],["$","meta","10",{"name":"twitter:description","content":"TypeScript에서 as 키워드는 타입 단언(type assertion)을 사용하기 위한 것입니다."}],["$","meta","11",{"name":"twitter:image","content":"https://raw.githubusercontent.com/chayhan/markdown-blog/main/public/ogimage.png"}],["$","link","12",{"rel":"icon","href":"/markdown-blog/favicon.ico","type":"image/x-icon","sizes":"48x48"}]]
1:null
